


<!DOCTYPE html>
<html lang="en" class=" is-copy-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=1020">
    
    
    <title>code.angularjs.org/angular-1.0.0rc6.js at master Â· angular/code.angularjs.org</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="angular/code.angularjs.org" name="twitter:title" /><meta content="code.angularjs.org" name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/139426?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/139426?v=3&amp;s=400" property="og:image" /><meta content="angular/code.angularjs.org" property="og:title" /><meta content="https://github.com/angular/code.angularjs.org" property="og:url" /><meta content="code.angularjs.org" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/NjkxODQxMTo1Njk1NGVkZWZmOGJjZjgwZmE5YWI1ZmQzNTkxYjlkMjpjNDhkYjIxYTU0Mjg4YjQxZGVkZjdjNDcwMmFmNDJmNDUzOTk0MDNmNzBlZjE2ODllNDgxNTg3MzY2YzNiOGQ0--2c6a10ad16e9f7ca4f00d1498b6224551792d4ab">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

        <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="BD67C03A:0555:92B5AC7:55A51F2D" name="octolytics-dimension-request_id" /><meta content="6918411" name="octolytics-actor-id" /><meta content="luismoro" name="octolytics-actor-login" /><meta content="a619a09b9e0ea64b2157d5cbc030d1e968fb944717d5159439fcf4ca68cf9896" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" data-pjax-transient="true" name="analytics-event" />
    <meta class="js-ga-set" name="dimension1" content="Logged In">
    <meta name="is-dotcom" content="true">
      <meta name="hostname" content="github.com">
    <meta name="user-login" content="luismoro">

      <link rel="icon" sizes="any" mask href="https://assets-cdn.github.com/pinned-octocat.svg">
      <meta name="theme-color" content="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="uf+v2IYOShXDfgE0i5c8UJSGzh5EjF4tSdFvIKslLut4a9z0HGOUStUU8yJ3ST3qfg3nrTH7bB4m6Tcbf54mOw==" name="csrf-token" />

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github/index-8824a5ef57ac4ae0b5ca429778b9660b1c66d09deea2ff11681de18d86a4bbb1.css" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github2/index-f0d033a37796c27f6b5b24aa8dc21af9c206a51ed2fe782d660dc20267c17d2b.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="3f58d2288e653bc3998db56bf3ad89c7">

      
  <meta name="description" content="code.angularjs.org">
  <meta name="go-import" content="github.com/angular/code.angularjs.org git https://github.com/angular/code.angularjs.org.git">

  <meta content="139426" name="octolytics-dimension-user_id" /><meta content="angular" name="octolytics-dimension-user_login" /><meta content="5598310" name="octolytics-dimension-repository_id" /><meta content="angular/code.angularjs.org" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="5598310" name="octolytics-dimension-repository_network_root_id" /><meta content="angular/code.angularjs.org" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/angular/code.angularjs.org/commits/master.atom" rel="alternate" title="Recent Commits to code.angularjs.org:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      



        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/angular/code.angularjs.org/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/angular/code.angularjs.org/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <label class="js-chromeless-input-container form-control">
    <div class="scope-badge">This repository</div>
    <input type="text"
      class="js-site-search-focus js-site-search-field is-clearable chromeless-input"
      data-hotkey="s"
      name="q"
      placeholder="Search"
      data-global-scope-placeholder="Search GitHub"
      data-repo-scope-placeholder="Search"
      tabindex="1"
      autocapitalize="off">
  </label>
</form>
      </div>

      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item">
      <span class="js-socket-channel js-updatable-content"
        data-channel="notification-changed:luismoro"
        data-url="/notifications/header">
      <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
          <span class="mail-status all-read"></span>
          <span class="octicon octicon-inbox"></span>
</a>  </span>

  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create new..."
       data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus left"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>


  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="angular/code.angularjs.org">This repository</span>
  </div>
    <a class="dropdown-item" href="/angular/code.angularjs.org/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-s js-menu-target" href="/luismoro"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@luismoro" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/6918411?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">luismoro</strong>
        </div>
        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/luismoro" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>
        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="kGao5t0A+RnQRS47myHFzHIbhWAT//lLOBZpJC3iMcaqEi0NJeVRvitRK+np1cUhTrKdPLKZQ7YlBSmo44NoVQ==" /></div>
          <button class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    
  </div>
</div>

        

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">

        
<ul class="pagehead-actions">

  <li>
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8NfQ7Z0jk9unv37URMBbi9pGwUfG/M3HYuozgq4Hx/6JHCPpj0PfJN109aVbfoktqceGw1WGQ6GIQ2Zi/wJ4nQ==" /></div>    <input id="repository_id" name="repository_id" type="hidden" value="5598310" />

      <div class="select-menu js-menu-container js-select-menu">
        <a href="/angular/code.angularjs.org/subscription"
          class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
          data-ga-click="Repository, click Watch settings, action:blob#show">
          <span class="js-select-button">
            <span class="octicon octicon-eye"></span>
            Watch
          </span>
        </a>
        <a class="social-count js-social-count" href="/angular/code.angularjs.org/watchers">
          40
        </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header">
              <span class="select-menu-title">Notifications</span>
              <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
            </div>

            <div class="select-menu-list js-navigation-container" role="menu">

              <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                  <span class="select-menu-item-heading">Not watching</span>
                  <span class="description">Be notified when participating or @mentioned.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Watch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                  <span class="select-menu-item-heading">Watching</span>
                  <span class="description">Be notified of all conversations.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Unwatch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_ignore" name="do" type="radio" value="ignore" />
                  <span class="select-menu-item-heading">Ignoring</span>
                  <span class="description">Never be notified.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-mute"></span>
                    Stop ignoring
                  </span>
                </div>
              </div>

            </div>

          </div>
        </div>
      </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/angular/code.angularjs.org/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="qfDbgG7fxiu6uuA1d2f8EGbSi8IWhGe71l2hJpTcw8NL4XdwFD1bgrQDhGMu4A3PTo7dpHIcjpf/vxtOBjdsEQ==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar angular/code.angularjs.org"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/angular/code.angularjs.org/stargazers">
          77
        </a>
</form>
    <form accept-charset="UTF-8" action="/angular/code.angularjs.org/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="knd1IdRsAY+Y2DAaJfMFN9Lg+GRPRgzznlEnmAwJCI78wt/ni9a8UyK32UICTrLmBxy5rDO8iEnHKktrLUSeGQ==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star angular/code.angularjs.org"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/angular/code.angularjs.org/stargazers">
          77
        </a>
</form>  </div>

  </li>

        <li>
          <form accept-charset="UTF-8" action="/angular/code.angularjs.org/fork" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="D2F0UVhQE++VKc2W/Xs2CXcIPAq0lRDVdkfLT7Wx7+2UU0yAVNLO54kLyeiy+UsKZ/9shc/8K1yMDvWqCBB6TA==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of angular/code.angularjs.org to your account"
                aria-label="Fork your own copy of angular/code.angularjs.org to your account">
              <span class="octicon octicon-repo-forked"></span>
              Fork
            </button>
            <a href="/angular/code.angularjs.org/network" class="social-count">390</a>
</form>        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/angular" class="url fn" itemprop="url" rel="author"><span itemprop="title">angular</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/angular/code.angularjs.org" data-pjax="#js-repo-pjax-container">code.angularjs.org</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/angular/code.angularjs.org/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/angular/code.angularjs.org" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /angular/code.angularjs.org">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/angular/code.angularjs.org/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /angular/code.angularjs.org/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull requests">
      <a href="/angular/code.angularjs.org/pulls" aria-label="Pull requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /angular/code.angularjs.org/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Wiki">
        <a href="/angular/code.angularjs.org/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /angular/code.angularjs.org/wiki">
          <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/angular/code.angularjs.org/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /angular/code.angularjs.org/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/angular/code.angularjs.org/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /angular/code.angularjs.org/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                  
<div class="js-clone-url clone-url open"
  data-protocol-type="http">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/angular/code.angularjs.org.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="js-clone-url clone-url "
  data-protocol-type="ssh">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:angular/code.angularjs.org.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="js-clone-url clone-url "
  data-protocol-type="subversion">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/angular/code.angularjs.org" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<div class="clone-options">You can clone with
  <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="XbskOwTWpfi2Im3F4Y9nvEKBEkI9VqjV+7z0aepfKh2CtcYmw3DwS7J7kGm2EWM3xZVvWWGr7ViUhxEfQ2zRew==" /></div><button class="btn-link js-clone-selector" data-protocol="http" type="submit">HTTPS</button></form>, <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="CfohBUkQLo47TYDJdhEBpc3PPG2nRSB9cZPb87EBbOLke6+uTehLsCbMZ92dkuuoS1uanTYvqAcN7xFgE57/pQ==" /></div><button class="btn-link js-clone-selector" data-protocol="ssh" type="submit">SSH</button></form>, or <form accept-charset="UTF-8" action="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone" class="inline-form js-clone-selector-form is-enabled" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="eu7eCWDoiM+u38T7zNM5zbgmtZTaeHeUcE/WWoFSn+RUPR736kygUgx0SMJJgNcu2aG464U/eqhL2aIR/P6gcQ==" /></div><button class="btn-link js-clone-selector" data-protocol="subversion" type="submit">Subversion</button></form>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</div>


  <a href="github-windows://openRepo/https://github.com/angular/code.angularjs.org" class="btn btn-sm sidebar-button" title="Save angular/code.angularjs.org to your computer and use it in GitHub Desktop." aria-label="Save angular/code.angularjs.org to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/angular/code.angularjs.org/archive/master.zip"
                   class="btn btn-sm sidebar-button"
                   aria-label="Download the contents of angular/code.angularjs.org as a zip file"
                   title="Download the contents of angular/code.angularjs.org as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>

          

<a href="/angular/code.angularjs.org/blob/265dd7ecaf23eb0a819312223a69f37049d5ce3a/1.0.0rc6/angular-1.0.0rc6.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:d25d4fa21fc0cc9ac03d001fe821a1ac -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/angular/code.angularjs.org/blob/master/1.0.0rc6/angular-1.0.0rc6.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/angular/code.angularjs.org/blob/readme/1.0.0rc6/angular-1.0.0rc6.js"
               data-name="readme"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="readme">
                readme
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="btn-group right">
    <a href="/angular/code.angularjs.org/find/master"
          class="js-show-file-finder btn btn-sm empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/code.angularjs.org" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">code.angularjs.org</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular/code.angularjs.org/tree/master/1.0.0rc6" class="" data-branch="master" data-pjax="true" itemscope="url"><span itemprop="title">1.0.0rc6</span></a></span><span class="separator">/</span><strong class="final-path">angular-1.0.0rc6.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="@IgorMinar" class="avatar" height="24" src="https://avatars1.githubusercontent.com/u/216296?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/IgorMinar" rel="contributor">IgorMinar</a></span>
        <time datetime="2012-08-29T09:18:29Z" is="relative-time">Aug 29, 2012</time>
        <div class="commit-title">
            <a href="/angular/code.angularjs.org/commit/2ce112700cca8908b208e7e8d09dce0a9789dd96" class="message" data-pjax="true" title="initial commit with version 0.9.0 -&gt; 1.0.1">initial commit with version 0.9.0 -&gt; 1.0.1</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="@IgorMinar" height="24" src="https://avatars1.githubusercontent.com/u/216296?v=3&amp;s=48" width="24" />
            <a href="/IgorMinar">IgorMinar</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
    <div class="file-actions">

      <div class="btn-group">
        <a href="/angular/code.angularjs.org/raw/master/1.0.0rc6/angular-1.0.0rc6.js" class="btn btn-sm " id="raw-url">Raw</a>
          <a href="/angular/code.angularjs.org/blame/master/1.0.0rc6/angular-1.0.0rc6.js" class="btn btn-sm js-update-url-with-hash">Blame</a>
        <a href="/angular/code.angularjs.org/commits/master/1.0.0rc6/angular-1.0.0rc6.js" class="btn btn-sm " rel="nofollow">History</a>
      </div>

        <a class="octicon-btn tooltipped tooltipped-nw"
           href="github-windows://openRepo/https://github.com/angular/code.angularjs.org?branch=master&amp;filepath=1.0.0rc6%2Fangular-1.0.0rc6.js"
           aria-label="Open this file in GitHub for Windows"
           data-ga-click="Repository, open with desktop, type:windows">
            <span class="octicon octicon-device-desktop"></span>
        </a>

            <form accept-charset="UTF-8" action="/angular/code.angularjs.org/edit/master/1.0.0rc6/angular-1.0.0rc6.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="YlLqpv+/U4WoXcPCKdXJ9nY1AoJbW9TahStM3zoh15TOIYt+RBibsvsf7che3jQTwJ8GDBuQx8mOCQB6AOTZSA==" /></div>
              <button class="octicon-btn tooltipped tooltipped-n" type="submit" aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
                <span class="octicon octicon-pencil"></span>
              </button>
</form>
          <form accept-charset="UTF-8" action="/angular/code.angularjs.org/delete/master/1.0.0rc6/angular-1.0.0rc6.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="RFoG9oij2AH3I8ewqre4hgpelex7jdOOnI7uhR6W2ypp92pPRNOP/SKqRFubsttg4ivCABynHwOXjQjeVik8eg==" /></div>
            <button class="octicon-btn octicon-btn-danger tooltipped tooltipped-n" type="submit" aria-label="Fork this project and delete this file" data-disable-with>
              <span class="octicon octicon-trashcan"></span>
            </button>
</form>    </div>

    <div class="file-info">
        13556 lines (12251 sloc)
        <span class="file-info-divider"></span>
      455.92 kB
    </div>
  </div>
  

  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@license</span> AngularJS v1.0.0rc6</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (c) 2010-2012 Google, Inc. http://angularjs.org</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * License: MIT</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">window</span>, <span class="pl-smi">document</span>, <span class="pl-smi">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&#39;</span>use strict<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.lowercase</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span> Converts the specified string to lowercase.</span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} string String to be converted to lowercase.</span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Lowercased string.</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">lowercase</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>){<span class="pl-k">return</span> isString(string) <span class="pl-k">?</span> string.<span class="pl-c1">toLowerCase</span>() <span class="pl-k">:</span> string;};</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.uppercase</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span> Converts the specified string to uppercase.</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} string String to be converted to uppercase.</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Uppercased string.</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">uppercase</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">string</span>){<span class="pl-k">return</span> isString(string) <span class="pl-k">?</span> string.<span class="pl-c1">toUpperCase</span>() <span class="pl-k">:</span> string;};</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">manualLowercase</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> isString(s)</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> s.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span><span class="pl-pds">/</span>g</span>, <span class="pl-k">function</span>(<span class="pl-smi">ch</span>) {<span class="pl-k">return</span> <span class="pl-c1">fromCharCode</span>(ch.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>) | <span class="pl-c1">32</span>);})</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">manualUppercase</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">s</span>) {</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> isString(s)</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> s.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-pds">/</span>g</span>, <span class="pl-k">function</span>(<span class="pl-smi">ch</span>) {<span class="pl-k">return</span> <span class="pl-c1">fromCharCode</span>(ch.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">&amp;</span> <span class="pl-k">~</span><span class="pl-c1">32</span>);})</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> s;</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// String#toLowerCase and String#toUpperCase don&#39;t produce correct results in browsers with Turkish</span></td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// locale, for this reason we need to detect this case and redefine lowercase/uppercase methods</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// with correct but slower alternatives.</span></td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>i<span class="pl-pds">&#39;</span></span> <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>I<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">toLowerCase</span>()) {</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">  lowercase <span class="pl-k">=</span> manualLowercase;</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">  uppercase <span class="pl-k">=</span> manualUppercase;</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">fromCharCode</span>(<span class="pl-smi">code</span>) {<span class="pl-k">return</span> <span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(code);}</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> Error             <span class="pl-k">=</span> <span class="pl-c1">window</span>.Error,</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/** holds major version number for IE or NaN for real browsers */</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">    msie              <span class="pl-k">=</span> int((<span class="pl-sr"><span class="pl-pds">/</span>msie (<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(lowercase(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>)) <span class="pl-k">||</span> [])[<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">    jqLite,           <span class="pl-c">// delay binding since jQuery could be loaded after us.</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">    jQuery,           <span class="pl-c">// delay binding</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">    slice             <span class="pl-k">=</span> [].slice,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">    push              <span class="pl-k">=</span> [].push,</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">    toString          <span class="pl-k">=</span> <span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.toString,</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/** <span class="pl-k">@name</span> angular */</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">    angular           <span class="pl-k">=</span> <span class="pl-c1">window</span>.angular <span class="pl-k">||</span> (<span class="pl-c1">window</span>.angular <span class="pl-k">=</span> {}),</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">    angularModule,</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/** <span class="pl-k">@name</span> angular.module.ng */</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">    nodeName_,</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line">    uid               <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.forEach</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Invokes the `iterator` function once for each item in `obj` collection, which can be either an</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * object or an array. The `iterator` function is invoked with `iterator(value, key)`, where `value`</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * is the value of an object property or an array element and `key` is the object property key or</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * array element index. Specifying a `context` for the function is optional.</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: this function was previously known as `angular.foreach`.</span></td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     var values = {name: &#39;misko&#39;, gender: &#39;male&#39;};</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     var log = [];</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     angular.forEach(values, function(value, key){</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       this.push(key + &#39;: &#39; + value);</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     }, log);</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     expect(log).toEqual([&#39;name: misko&#39;, &#39;gender:male&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object|Array} obj Object to iterate over.</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Function} iterator Iterator function.</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object=} context Object to become context (`this`) for the iterator function.</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object|Array} Reference to `obj`.</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">forEach</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">iterator</span>, <span class="pl-smi">context</span>) {</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> key;</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (obj) {</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isFunction(obj)){</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (key <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (key <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>prototype<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> key <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>length<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> key <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> obj.hasOwnProperty(key)) {</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">          iterator.<span class="pl-c1">call</span>(context, obj[key], key);</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (obj.forEach <span class="pl-k">&amp;&amp;</span> obj.forEach <span class="pl-k">!==</span> forEach) {</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">      obj.forEach(iterator, context);</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (isObject(obj) <span class="pl-k">&amp;&amp;</span> isNumber(obj.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (key <span class="pl-k">=</span> <span class="pl-c1">0</span>; key <span class="pl-k">&lt;</span> obj.<span class="pl-c1">length</span>; key<span class="pl-k">++</span>)</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line">        iterator.<span class="pl-c1">call</span>(context, obj[key], key);</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (key <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (obj.hasOwnProperty(key)) {</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">          iterator.<span class="pl-c1">call</span>(context, obj[key], key);</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">sortedKeys</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> keys <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (obj.hasOwnProperty(key)) {</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">      keys.<span class="pl-c1">push</span>(key);</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> keys.<span class="pl-c1">sort</span>();</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">forEachSorted</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">iterator</span>, <span class="pl-smi">context</span>) {</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> keys <span class="pl-k">=</span> sortedKeys(obj);</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> keys.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line">    iterator.<span class="pl-c1">call</span>(context, obj[keys[i]], keys[i]);</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> keys;</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * when using forEach the params are value, key, but it is often useful to have key, value.</span></td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(string, *)} iteratorFn</span></td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {function(*, string)}</span></td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">reverseParams</span>(<span class="pl-smi">iteratorFn</span>) {</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) { iteratorFn(key, value) };</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A consistent way of creating unique IDs in angular. The ID is a sequence of alpha numeric</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * characters such as &#39;012ABC&#39;. The reason why we are not using simply a number counter is that</span></td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the number string gets longer over time, and it can also overflow, where as the the nextId</span></td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * will grow much slower, it is a string, and it will never overflow.</span></td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> an unique alpha-numeric string</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">nextUid</span>() {</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> index <span class="pl-k">=</span> uid.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> digit;</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>(index) {</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line">    index<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line">    digit <span class="pl-k">=</span> uid[index].<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (digit <span class="pl-k">==</span> <span class="pl-c1">57</span> <span class="pl-c">/*&#39;9&#39;*/</span>) {</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">      uid[index] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> uid.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (digit <span class="pl-k">==</span> <span class="pl-c1">90</span>  <span class="pl-c">/*&#39;Z&#39;*/</span>) {</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">      uid[index] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line">      uid[index] <span class="pl-k">=</span> <span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(digit <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> uid.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line">  uid.<span class="pl-c1">unshift</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> uid.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.extend</span></td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Extends the destination object `dst` by copying all of the properties from the `src` object(s)</span></td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * to `dst`. You can specify multiple `src` objects.</span></td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object} dst Destination object.</span></td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {...Object} src Source object(s).</span></td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">extend</span>(<span class="pl-smi">dst</span>) {</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">  forEach(arguments, <span class="pl-k">function</span>(<span class="pl-smi">obj</span>){</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (obj <span class="pl-k">!==</span> dst) {</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">      forEach(obj, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>){</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">        dst[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> dst;</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">int</span>(<span class="pl-smi">str</span>) {</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">parseInt</span>(str, <span class="pl-c1">10</span>);</td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">inherit</span>(<span class="pl-smi">parent</span>, <span class="pl-smi">extra</span>) {</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> extend(<span class="pl-k">new</span> (extend(<span class="pl-k">function</span>() {}, {prototype<span class="pl-k">:</span>parent}))(), extra);</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.noop</span></td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A function that performs no operations. This function can be useful when writing code in the</span></td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * functional style.</span></td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     function foo(callback) {</span></td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       var result = calculateResult();</span></td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       (callback || angular.noop)(result);</span></td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     }</span></td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">noop</span>() {}</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">noop.$inject <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.identity</span></td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A function that returns its first argument. This function is useful when writing code in the</span></td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * functional style.</span></td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     function transformer(transformationFn, value) {</span></td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       return (transformationFn || identity)(value);</span></td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     };</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">identity</span>(<span class="pl-smi">$</span>) {<span class="pl-k">return</span> $;}</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line">identity.$inject <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">valueFn</span>(<span class="pl-smi">value</span>) {<span class="pl-k">return</span> <span class="pl-k">function</span>() {<span class="pl-k">return</span> value;};}</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isUndefined</span></td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is undefined.</span></td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is undefined.</span></td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isUndefined</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isDefined</span></td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is defined.</span></td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is defined.</span></td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isDefined</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isObject</span></td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is an `Object`. Unlike `typeof` in JavaScript, `null`s are not</span></td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * considered to be objects.</span></td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is an `Object` but not `null`.</span></td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isObject</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> value <span class="pl-k">!=</span> <span class="pl-c1">null</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isString</span></td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is a `String`.</span></td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is a `String`.</span></td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isString</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isNumber</span></td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is a `Number`.</span></td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is a `Number`.</span></td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isNumber</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isDate</span></td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a value is a date.</span></td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L337" class="blob-num js-line-number" data-line-number="337"></td>
        <td id="LC337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is a `Date`.</span></td>
      </tr>
      <tr>
        <td id="L338" class="blob-num js-line-number" data-line-number="338"></td>
        <td id="LC338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L339" class="blob-num js-line-number" data-line-number="339"></td>
        <td id="LC339" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isDate</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L340" class="blob-num js-line-number" data-line-number="340"></td>
        <td id="LC340" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> toString.<span class="pl-c1">apply</span>(value) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[object Date]<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L341" class="blob-num js-line-number" data-line-number="341"></td>
        <td id="LC341" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L342" class="blob-num js-line-number" data-line-number="342"></td>
        <td id="LC342" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L343" class="blob-num js-line-number" data-line-number="343"></td>
        <td id="LC343" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L344" class="blob-num js-line-number" data-line-number="344"></td>
        <td id="LC344" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L345" class="blob-num js-line-number" data-line-number="345"></td>
        <td id="LC345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L346" class="blob-num js-line-number" data-line-number="346"></td>
        <td id="LC346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isArray</span></td>
      </tr>
      <tr>
        <td id="L347" class="blob-num js-line-number" data-line-number="347"></td>
        <td id="LC347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L348" class="blob-num js-line-number" data-line-number="348"></td>
        <td id="LC348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L349" class="blob-num js-line-number" data-line-number="349"></td>
        <td id="LC349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L350" class="blob-num js-line-number" data-line-number="350"></td>
        <td id="LC350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is an `Array`.</span></td>
      </tr>
      <tr>
        <td id="L351" class="blob-num js-line-number" data-line-number="351"></td>
        <td id="LC351" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L352" class="blob-num js-line-number" data-line-number="352"></td>
        <td id="LC352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L353" class="blob-num js-line-number" data-line-number="353"></td>
        <td id="LC353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is an `Array`.</span></td>
      </tr>
      <tr>
        <td id="L354" class="blob-num js-line-number" data-line-number="354"></td>
        <td id="LC354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L355" class="blob-num js-line-number" data-line-number="355"></td>
        <td id="LC355" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isArray</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L356" class="blob-num js-line-number" data-line-number="356"></td>
        <td id="LC356" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> toString.<span class="pl-c1">apply</span>(value) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[object Array]<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L357" class="blob-num js-line-number" data-line-number="357"></td>
        <td id="LC357" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L358" class="blob-num js-line-number" data-line-number="358"></td>
        <td id="LC358" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L359" class="blob-num js-line-number" data-line-number="359"></td>
        <td id="LC359" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L360" class="blob-num js-line-number" data-line-number="360"></td>
        <td id="LC360" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L361" class="blob-num js-line-number" data-line-number="361"></td>
        <td id="LC361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L362" class="blob-num js-line-number" data-line-number="362"></td>
        <td id="LC362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isFunction</span></td>
      </tr>
      <tr>
        <td id="L363" class="blob-num js-line-number" data-line-number="363"></td>
        <td id="LC363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L364" class="blob-num js-line-number" data-line-number="364"></td>
        <td id="LC364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L365" class="blob-num js-line-number" data-line-number="365"></td>
        <td id="LC365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L366" class="blob-num js-line-number" data-line-number="366"></td>
        <td id="LC366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is a `Function`.</span></td>
      </tr>
      <tr>
        <td id="L367" class="blob-num js-line-number" data-line-number="367"></td>
        <td id="LC367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L368" class="blob-num js-line-number" data-line-number="368"></td>
        <td id="LC368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L369" class="blob-num js-line-number" data-line-number="369"></td>
        <td id="LC369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is a `Function`.</span></td>
      </tr>
      <tr>
        <td id="L370" class="blob-num js-line-number" data-line-number="370"></td>
        <td id="LC370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L371" class="blob-num js-line-number" data-line-number="371"></td>
        <td id="LC371" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isFunction</span>(<span class="pl-smi">value</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span>;}</td>
      </tr>
      <tr>
        <td id="L372" class="blob-num js-line-number" data-line-number="372"></td>
        <td id="LC372" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L373" class="blob-num js-line-number" data-line-number="373"></td>
        <td id="LC373" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L374" class="blob-num js-line-number" data-line-number="374"></td>
        <td id="LC374" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L375" class="blob-num js-line-number" data-line-number="375"></td>
        <td id="LC375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Checks if `obj` is a window object.</span></td>
      </tr>
      <tr>
        <td id="L376" class="blob-num js-line-number" data-line-number="376"></td>
        <td id="LC376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L377" class="blob-num js-line-number" data-line-number="377"></td>
        <td id="LC377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L378" class="blob-num js-line-number" data-line-number="378"></td>
        <td id="LC378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} obj Object to check</span></td>
      </tr>
      <tr>
        <td id="L379" class="blob-num js-line-number" data-line-number="379"></td>
        <td id="LC379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `obj` is a window obj.</span></td>
      </tr>
      <tr>
        <td id="L380" class="blob-num js-line-number" data-line-number="380"></td>
        <td id="LC380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L381" class="blob-num js-line-number" data-line-number="381"></td>
        <td id="LC381" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isWindow</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L382" class="blob-num js-line-number" data-line-number="382"></td>
        <td id="LC382" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj <span class="pl-k">&amp;&amp;</span> obj.<span class="pl-c1">document</span> <span class="pl-k">&amp;&amp;</span> obj.<span class="pl-c1">location</span> <span class="pl-k">&amp;&amp;</span> obj.alert <span class="pl-k">&amp;&amp;</span> obj.setInterval;</td>
      </tr>
      <tr>
        <td id="L383" class="blob-num js-line-number" data-line-number="383"></td>
        <td id="LC383" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L384" class="blob-num js-line-number" data-line-number="384"></td>
        <td id="LC384" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L385" class="blob-num js-line-number" data-line-number="385"></td>
        <td id="LC385" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L386" class="blob-num js-line-number" data-line-number="386"></td>
        <td id="LC386" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isScope</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L387" class="blob-num js-line-number" data-line-number="387"></td>
        <td id="LC387" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj <span class="pl-k">&amp;&amp;</span> obj.$evalAsync <span class="pl-k">&amp;&amp;</span> obj.$watch;</td>
      </tr>
      <tr>
        <td id="L388" class="blob-num js-line-number" data-line-number="388"></td>
        <td id="LC388" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L389" class="blob-num js-line-number" data-line-number="389"></td>
        <td id="LC389" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L390" class="blob-num js-line-number" data-line-number="390"></td>
        <td id="LC390" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L391" class="blob-num js-line-number" data-line-number="391"></td>
        <td id="LC391" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isFile</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L392" class="blob-num js-line-number" data-line-number="392"></td>
        <td id="LC392" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> toString.<span class="pl-c1">apply</span>(obj) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[object File]<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L393" class="blob-num js-line-number" data-line-number="393"></td>
        <td id="LC393" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L394" class="blob-num js-line-number" data-line-number="394"></td>
        <td id="LC394" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L395" class="blob-num js-line-number" data-line-number="395"></td>
        <td id="LC395" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L396" class="blob-num js-line-number" data-line-number="396"></td>
        <td id="LC396" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isBoolean</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L397" class="blob-num js-line-number" data-line-number="397"></td>
        <td id="LC397" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>boolean<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L398" class="blob-num js-line-number" data-line-number="398"></td>
        <td id="LC398" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L399" class="blob-num js-line-number" data-line-number="399"></td>
        <td id="LC399" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L400" class="blob-num js-line-number" data-line-number="400"></td>
        <td id="LC400" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L401" class="blob-num js-line-number" data-line-number="401"></td>
        <td id="LC401" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">trim</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L402" class="blob-num js-line-number" data-line-number="402"></td>
        <td id="LC402" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> isString(value) <span class="pl-k">?</span> value.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L403" class="blob-num js-line-number" data-line-number="403"></td>
        <td id="LC403" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L404" class="blob-num js-line-number" data-line-number="404"></td>
        <td id="LC404" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L405" class="blob-num js-line-number" data-line-number="405"></td>
        <td id="LC405" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L406" class="blob-num js-line-number" data-line-number="406"></td>
        <td id="LC406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L407" class="blob-num js-line-number" data-line-number="407"></td>
        <td id="LC407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.isElement</span></td>
      </tr>
      <tr>
        <td id="L408" class="blob-num js-line-number" data-line-number="408"></td>
        <td id="LC408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L409" class="blob-num js-line-number" data-line-number="409"></td>
        <td id="LC409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L410" class="blob-num js-line-number" data-line-number="410"></td>
        <td id="LC410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L411" class="blob-num js-line-number" data-line-number="411"></td>
        <td id="LC411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if a reference is a DOM element (or wrapped jQuery element).</span></td>
      </tr>
      <tr>
        <td id="L412" class="blob-num js-line-number" data-line-number="412"></td>
        <td id="LC412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L413" class="blob-num js-line-number" data-line-number="413"></td>
        <td id="LC413" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value Reference to check.</span></td>
      </tr>
      <tr>
        <td id="L414" class="blob-num js-line-number" data-line-number="414"></td>
        <td id="LC414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if `value` is a DOM element (or wrapped jQuery element).</span></td>
      </tr>
      <tr>
        <td id="L415" class="blob-num js-line-number" data-line-number="415"></td>
        <td id="LC415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L416" class="blob-num js-line-number" data-line-number="416"></td>
        <td id="LC416" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isElement</span>(<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L417" class="blob-num js-line-number" data-line-number="417"></td>
        <td id="LC417" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> node <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L418" class="blob-num js-line-number" data-line-number="418"></td>
        <td id="LC418" class="blob-code blob-code-inner js-file-line">    (node.<span class="pl-c1">nodeName</span>  <span class="pl-c">// we are a direct element</span></td>
      </tr>
      <tr>
        <td id="L419" class="blob-num js-line-number" data-line-number="419"></td>
        <td id="LC419" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">||</span> (node.bind <span class="pl-k">&amp;&amp;</span> node.find));  <span class="pl-c">// we have a bind and find method part of jQuery API</span></td>
      </tr>
      <tr>
        <td id="L420" class="blob-num js-line-number" data-line-number="420"></td>
        <td id="LC420" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L421" class="blob-num js-line-number" data-line-number="421"></td>
        <td id="LC421" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L422" class="blob-num js-line-number" data-line-number="422"></td>
        <td id="LC422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L423" class="blob-num js-line-number" data-line-number="423"></td>
        <td id="LC423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> str &#39;key1,key2,...&#39;</span></td>
      </tr>
      <tr>
        <td id="L424" class="blob-num js-line-number" data-line-number="424"></td>
        <td id="LC424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {object} in the form of {key1:true, key2:true, ...}</span></td>
      </tr>
      <tr>
        <td id="L425" class="blob-num js-line-number" data-line-number="425"></td>
        <td id="LC425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L426" class="blob-num js-line-number" data-line-number="426"></td>
        <td id="LC426" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">makeMap</span>(<span class="pl-smi">str</span>){</td>
      </tr>
      <tr>
        <td id="L427" class="blob-num js-line-number" data-line-number="427"></td>
        <td id="LC427" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> obj <span class="pl-k">=</span> {}, items <span class="pl-k">=</span> str.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>), i;</td>
      </tr>
      <tr>
        <td id="L428" class="blob-num js-line-number" data-line-number="428"></td>
        <td id="LC428" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> ( i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> items.<span class="pl-c1">length</span>; i<span class="pl-k">++</span> )</td>
      </tr>
      <tr>
        <td id="L429" class="blob-num js-line-number" data-line-number="429"></td>
        <td id="LC429" class="blob-code blob-code-inner js-file-line">    obj[ items[i] ] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L430" class="blob-num js-line-number" data-line-number="430"></td>
        <td id="LC430" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L431" class="blob-num js-line-number" data-line-number="431"></td>
        <td id="LC431" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L432" class="blob-num js-line-number" data-line-number="432"></td>
        <td id="LC432" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L433" class="blob-num js-line-number" data-line-number="433"></td>
        <td id="LC433" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L434" class="blob-num js-line-number" data-line-number="434"></td>
        <td id="LC434" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span> (msie <span class="pl-k">&lt;</span> <span class="pl-c1">9</span>) {</td>
      </tr>
      <tr>
        <td id="L435" class="blob-num js-line-number" data-line-number="435"></td>
        <td id="LC435" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">nodeName_</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L436" class="blob-num js-line-number" data-line-number="436"></td>
        <td id="LC436" class="blob-code blob-code-inner js-file-line">    element <span class="pl-k">=</span> element.<span class="pl-c1">nodeName</span> <span class="pl-k">?</span> element <span class="pl-k">:</span> element[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L437" class="blob-num js-line-number" data-line-number="437"></td>
        <td id="LC437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (element.scopeName <span class="pl-k">&amp;&amp;</span> element.scopeName <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>HTML<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L438" class="blob-num js-line-number" data-line-number="438"></td>
        <td id="LC438" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> uppercase(element.scopeName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> element.<span class="pl-c1">nodeName</span>) <span class="pl-k">:</span> element.<span class="pl-c1">nodeName</span>;</td>
      </tr>
      <tr>
        <td id="L439" class="blob-num js-line-number" data-line-number="439"></td>
        <td id="LC439" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L440" class="blob-num js-line-number" data-line-number="440"></td>
        <td id="LC440" class="blob-code blob-code-inner js-file-line">} <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L441" class="blob-num js-line-number" data-line-number="441"></td>
        <td id="LC441" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">nodeName_</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L442" class="blob-num js-line-number" data-line-number="442"></td>
        <td id="LC442" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> element.<span class="pl-c1">nodeName</span> <span class="pl-k">?</span> element.<span class="pl-c1">nodeName</span> <span class="pl-k">:</span> element[<span class="pl-c1">0</span>].<span class="pl-c1">nodeName</span>;</td>
      </tr>
      <tr>
        <td id="L443" class="blob-num js-line-number" data-line-number="443"></td>
        <td id="LC443" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L444" class="blob-num js-line-number" data-line-number="444"></td>
        <td id="LC444" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L445" class="blob-num js-line-number" data-line-number="445"></td>
        <td id="LC445" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L446" class="blob-num js-line-number" data-line-number="446"></td>
        <td id="LC446" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L447" class="blob-num js-line-number" data-line-number="447"></td>
        <td id="LC447" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">map</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">iterator</span>, <span class="pl-smi">context</span>) {</td>
      </tr>
      <tr>
        <td id="L448" class="blob-num js-line-number" data-line-number="448"></td>
        <td id="LC448" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> results <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L449" class="blob-num js-line-number" data-line-number="449"></td>
        <td id="LC449" class="blob-code blob-code-inner js-file-line">  forEach(obj, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">index</span>, <span class="pl-smi">list</span>) {</td>
      </tr>
      <tr>
        <td id="L450" class="blob-num js-line-number" data-line-number="450"></td>
        <td id="LC450" class="blob-code blob-code-inner js-file-line">    results.<span class="pl-c1">push</span>(iterator.<span class="pl-c1">call</span>(context, value, index, list));</td>
      </tr>
      <tr>
        <td id="L451" class="blob-num js-line-number" data-line-number="451"></td>
        <td id="LC451" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L452" class="blob-num js-line-number" data-line-number="452"></td>
        <td id="LC452" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> results;</td>
      </tr>
      <tr>
        <td id="L453" class="blob-num js-line-number" data-line-number="453"></td>
        <td id="LC453" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L454" class="blob-num js-line-number" data-line-number="454"></td>
        <td id="LC454" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L455" class="blob-num js-line-number" data-line-number="455"></td>
        <td id="LC455" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L456" class="blob-num js-line-number" data-line-number="456"></td>
        <td id="LC456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L457" class="blob-num js-line-number" data-line-number="457"></td>
        <td id="LC457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L458" class="blob-num js-line-number" data-line-number="458"></td>
        <td id="LC458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines the number of elements in an array, the number of properties an object has, or</span></td>
      </tr>
      <tr>
        <td id="L459" class="blob-num js-line-number" data-line-number="459"></td>
        <td id="LC459" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the length of a string.</span></td>
      </tr>
      <tr>
        <td id="L460" class="blob-num js-line-number" data-line-number="460"></td>
        <td id="LC460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L461" class="blob-num js-line-number" data-line-number="461"></td>
        <td id="LC461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: This function is used to augment the Object type in Angular expressions. See</span></td>
      </tr>
      <tr>
        <td id="L462" class="blob-num js-line-number" data-line-number="462"></td>
        <td id="LC462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.Object} for more information about Angular arrays.</span></td>
      </tr>
      <tr>
        <td id="L463" class="blob-num js-line-number" data-line-number="463"></td>
        <td id="LC463" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L464" class="blob-num js-line-number" data-line-number="464"></td>
        <td id="LC464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object|Array|string} obj Object, array, or string to inspect.</span></td>
      </tr>
      <tr>
        <td id="L465" class="blob-num js-line-number" data-line-number="465"></td>
        <td id="LC465" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {boolean} [ownPropsOnly=false] Count only &quot;own&quot; properties in an object</span></td>
      </tr>
      <tr>
        <td id="L466" class="blob-num js-line-number" data-line-number="466"></td>
        <td id="LC466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {number} The size of `obj` or `0` if `obj` is neither an object nor an array.</span></td>
      </tr>
      <tr>
        <td id="L467" class="blob-num js-line-number" data-line-number="467"></td>
        <td id="LC467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L468" class="blob-num js-line-number" data-line-number="468"></td>
        <td id="LC468" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">size</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">ownPropsOnly</span>) {</td>
      </tr>
      <tr>
        <td id="L469" class="blob-num js-line-number" data-line-number="469"></td>
        <td id="LC469" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> size <span class="pl-k">=</span> <span class="pl-c1">0</span>, key;</td>
      </tr>
      <tr>
        <td id="L470" class="blob-num js-line-number" data-line-number="470"></td>
        <td id="LC470" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L471" class="blob-num js-line-number" data-line-number="471"></td>
        <td id="LC471" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isArray(obj) <span class="pl-k">||</span> isString(obj)) {</td>
      </tr>
      <tr>
        <td id="L472" class="blob-num js-line-number" data-line-number="472"></td>
        <td id="LC472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> obj.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L473" class="blob-num js-line-number" data-line-number="473"></td>
        <td id="LC473" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (isObject(obj)){</td>
      </tr>
      <tr>
        <td id="L474" class="blob-num js-line-number" data-line-number="474"></td>
        <td id="LC474" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (key <span class="pl-k">in</span> obj)</td>
      </tr>
      <tr>
        <td id="L475" class="blob-num js-line-number" data-line-number="475"></td>
        <td id="LC475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>ownPropsOnly <span class="pl-k">||</span> obj.hasOwnProperty(key))</td>
      </tr>
      <tr>
        <td id="L476" class="blob-num js-line-number" data-line-number="476"></td>
        <td id="LC476" class="blob-code blob-code-inner js-file-line">        size<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L477" class="blob-num js-line-number" data-line-number="477"></td>
        <td id="LC477" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L478" class="blob-num js-line-number" data-line-number="478"></td>
        <td id="LC478" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L479" class="blob-num js-line-number" data-line-number="479"></td>
        <td id="LC479" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> size;</td>
      </tr>
      <tr>
        <td id="L480" class="blob-num js-line-number" data-line-number="480"></td>
        <td id="LC480" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L481" class="blob-num js-line-number" data-line-number="481"></td>
        <td id="LC481" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L482" class="blob-num js-line-number" data-line-number="482"></td>
        <td id="LC482" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L483" class="blob-num js-line-number" data-line-number="483"></td>
        <td id="LC483" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">includes</span>(<span class="pl-smi">array</span>, <span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L484" class="blob-num js-line-number" data-line-number="484"></td>
        <td id="LC484" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">indexOf</span>(array, obj) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L485" class="blob-num js-line-number" data-line-number="485"></td>
        <td id="LC485" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L486" class="blob-num js-line-number" data-line-number="486"></td>
        <td id="LC486" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L487" class="blob-num js-line-number" data-line-number="487"></td>
        <td id="LC487" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">indexOf</span>(<span class="pl-smi">array</span>, <span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L488" class="blob-num js-line-number" data-line-number="488"></td>
        <td id="LC488" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (array.indexOf) <span class="pl-k">return</span> array.<span class="pl-c1">indexOf</span>(obj);</td>
      </tr>
      <tr>
        <td id="L489" class="blob-num js-line-number" data-line-number="489"></td>
        <td id="LC489" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L490" class="blob-num js-line-number" data-line-number="490"></td>
        <td id="LC490" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> array.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L491" class="blob-num js-line-number" data-line-number="491"></td>
        <td id="LC491" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (obj <span class="pl-k">===</span> array[i]) <span class="pl-k">return</span> i;</td>
      </tr>
      <tr>
        <td id="L492" class="blob-num js-line-number" data-line-number="492"></td>
        <td id="LC492" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L493" class="blob-num js-line-number" data-line-number="493"></td>
        <td id="LC493" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L494" class="blob-num js-line-number" data-line-number="494"></td>
        <td id="LC494" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L495" class="blob-num js-line-number" data-line-number="495"></td>
        <td id="LC495" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L496" class="blob-num js-line-number" data-line-number="496"></td>
        <td id="LC496" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">arrayRemove</span>(<span class="pl-smi">array</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L497" class="blob-num js-line-number" data-line-number="497"></td>
        <td id="LC497" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> index <span class="pl-k">=</span> <span class="pl-c1">indexOf</span>(array, value);</td>
      </tr>
      <tr>
        <td id="L498" class="blob-num js-line-number" data-line-number="498"></td>
        <td id="LC498" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (index <span class="pl-k">&gt;=</span><span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L499" class="blob-num js-line-number" data-line-number="499"></td>
        <td id="LC499" class="blob-code blob-code-inner js-file-line">    array.<span class="pl-c1">splice</span>(index, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L500" class="blob-num js-line-number" data-line-number="500"></td>
        <td id="LC500" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L501" class="blob-num js-line-number" data-line-number="501"></td>
        <td id="LC501" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L502" class="blob-num js-line-number" data-line-number="502"></td>
        <td id="LC502" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L503" class="blob-num js-line-number" data-line-number="503"></td>
        <td id="LC503" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isLeafNode</span> (<span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L504" class="blob-num js-line-number" data-line-number="504"></td>
        <td id="LC504" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (node) {</td>
      </tr>
      <tr>
        <td id="L505" class="blob-num js-line-number" data-line-number="505"></td>
        <td id="LC505" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">switch</span> (node.<span class="pl-c1">nodeName</span>) {</td>
      </tr>
      <tr>
        <td id="L506" class="blob-num js-line-number" data-line-number="506"></td>
        <td id="LC506" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>OPTION<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L507" class="blob-num js-line-number" data-line-number="507"></td>
        <td id="LC507" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>PRE<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L508" class="blob-num js-line-number" data-line-number="508"></td>
        <td id="LC508" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>TITLE<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L509" class="blob-num js-line-number" data-line-number="509"></td>
        <td id="LC509" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L510" class="blob-num js-line-number" data-line-number="510"></td>
        <td id="LC510" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L511" class="blob-num js-line-number" data-line-number="511"></td>
        <td id="LC511" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L512" class="blob-num js-line-number" data-line-number="512"></td>
        <td id="LC512" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L513" class="blob-num js-line-number" data-line-number="513"></td>
        <td id="LC513" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L514" class="blob-num js-line-number" data-line-number="514"></td>
        <td id="LC514" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L515" class="blob-num js-line-number" data-line-number="515"></td>
        <td id="LC515" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L516" class="blob-num js-line-number" data-line-number="516"></td>
        <td id="LC516" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L517" class="blob-num js-line-number" data-line-number="517"></td>
        <td id="LC517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.copy</span></td>
      </tr>
      <tr>
        <td id="L518" class="blob-num js-line-number" data-line-number="518"></td>
        <td id="LC518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L519" class="blob-num js-line-number" data-line-number="519"></td>
        <td id="LC519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L520" class="blob-num js-line-number" data-line-number="520"></td>
        <td id="LC520" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L521" class="blob-num js-line-number" data-line-number="521"></td>
        <td id="LC521" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Creates a deep copy of `source`, which should be an object or an array.</span></td>
      </tr>
      <tr>
        <td id="L522" class="blob-num js-line-number" data-line-number="522"></td>
        <td id="LC522" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L523" class="blob-num js-line-number" data-line-number="523"></td>
        <td id="LC523" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * If no destination is supplied, a copy of the object or array is created.</span></td>
      </tr>
      <tr>
        <td id="L524" class="blob-num js-line-number" data-line-number="524"></td>
        <td id="LC524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * If a destination is provided, all of its elements (for array) or properties (for objects)</span></td>
      </tr>
      <tr>
        <td id="L525" class="blob-num js-line-number" data-line-number="525"></td>
        <td id="LC525" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   are deleted and then all elements/properties from the source are copied to it.</span></td>
      </tr>
      <tr>
        <td id="L526" class="blob-num js-line-number" data-line-number="526"></td>
        <td id="LC526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * If  `source` is not an object or array, `source` is returned.</span></td>
      </tr>
      <tr>
        <td id="L527" class="blob-num js-line-number" data-line-number="527"></td>
        <td id="LC527" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L528" class="blob-num js-line-number" data-line-number="528"></td>
        <td id="LC528" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: this function is used to augment the Object type in Angular expressions. See</span></td>
      </tr>
      <tr>
        <td id="L529" class="blob-num js-line-number" data-line-number="529"></td>
        <td id="LC529" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$filter} for more information about Angular arrays.</span></td>
      </tr>
      <tr>
        <td id="L530" class="blob-num js-line-number" data-line-number="530"></td>
        <td id="LC530" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L531" class="blob-num js-line-number" data-line-number="531"></td>
        <td id="LC531" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} source The source that will be used to make a copy.</span></td>
      </tr>
      <tr>
        <td id="L532" class="blob-num js-line-number" data-line-number="532"></td>
        <td id="LC532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                   Can be any type, including primitives, `null`, and `undefined`.</span></td>
      </tr>
      <tr>
        <td id="L533" class="blob-num js-line-number" data-line-number="533"></td>
        <td id="LC533" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(Object|Array)=} destination Destination into which the source is copied. If</span></td>
      </tr>
      <tr>
        <td id="L534" class="blob-num js-line-number" data-line-number="534"></td>
        <td id="LC534" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     provided, must be of the same type as `source`.</span></td>
      </tr>
      <tr>
        <td id="L535" class="blob-num js-line-number" data-line-number="535"></td>
        <td id="LC535" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {*} The copy or updated `destination`, if `destination` was specified.</span></td>
      </tr>
      <tr>
        <td id="L536" class="blob-num js-line-number" data-line-number="536"></td>
        <td id="LC536" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L537" class="blob-num js-line-number" data-line-number="537"></td>
        <td id="LC537" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">copy</span>(<span class="pl-smi">source</span>, <span class="pl-smi">destination</span>){</td>
      </tr>
      <tr>
        <td id="L538" class="blob-num js-line-number" data-line-number="538"></td>
        <td id="LC538" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isWindow(source) <span class="pl-k">||</span> isScope(source)) <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t copy Window or Scope<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L539" class="blob-num js-line-number" data-line-number="539"></td>
        <td id="LC539" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>destination) {</td>
      </tr>
      <tr>
        <td id="L540" class="blob-num js-line-number" data-line-number="540"></td>
        <td id="LC540" class="blob-code blob-code-inner js-file-line">    destination <span class="pl-k">=</span> source;</td>
      </tr>
      <tr>
        <td id="L541" class="blob-num js-line-number" data-line-number="541"></td>
        <td id="LC541" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (source) {</td>
      </tr>
      <tr>
        <td id="L542" class="blob-num js-line-number" data-line-number="542"></td>
        <td id="LC542" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isArray(source)) {</td>
      </tr>
      <tr>
        <td id="L543" class="blob-num js-line-number" data-line-number="543"></td>
        <td id="LC543" class="blob-code blob-code-inner js-file-line">        destination <span class="pl-k">=</span> copy(source, []);</td>
      </tr>
      <tr>
        <td id="L544" class="blob-num js-line-number" data-line-number="544"></td>
        <td id="LC544" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (isDate(source)) {</td>
      </tr>
      <tr>
        <td id="L545" class="blob-num js-line-number" data-line-number="545"></td>
        <td id="LC545" class="blob-code blob-code-inner js-file-line">        destination <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(source.<span class="pl-c1">getTime</span>());</td>
      </tr>
      <tr>
        <td id="L546" class="blob-num js-line-number" data-line-number="546"></td>
        <td id="LC546" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (isObject(source)) {</td>
      </tr>
      <tr>
        <td id="L547" class="blob-num js-line-number" data-line-number="547"></td>
        <td id="LC547" class="blob-code blob-code-inner js-file-line">        destination <span class="pl-k">=</span> copy(source, {});</td>
      </tr>
      <tr>
        <td id="L548" class="blob-num js-line-number" data-line-number="548"></td>
        <td id="LC548" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L549" class="blob-num js-line-number" data-line-number="549"></td>
        <td id="LC549" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L550" class="blob-num js-line-number" data-line-number="550"></td>
        <td id="LC550" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L551" class="blob-num js-line-number" data-line-number="551"></td>
        <td id="LC551" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (source <span class="pl-k">===</span> destination) <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t copy equivalent objects or arrays<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L552" class="blob-num js-line-number" data-line-number="552"></td>
        <td id="LC552" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isArray(source)) {</td>
      </tr>
      <tr>
        <td id="L553" class="blob-num js-line-number" data-line-number="553"></td>
        <td id="LC553" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span>(destination.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L554" class="blob-num js-line-number" data-line-number="554"></td>
        <td id="LC554" class="blob-code blob-code-inner js-file-line">        destination.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L555" class="blob-num js-line-number" data-line-number="555"></td>
        <td id="LC555" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L556" class="blob-num js-line-number" data-line-number="556"></td>
        <td id="LC556" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> source.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L557" class="blob-num js-line-number" data-line-number="557"></td>
        <td id="LC557" class="blob-code blob-code-inner js-file-line">        destination.<span class="pl-c1">push</span>(copy(source[i]));</td>
      </tr>
      <tr>
        <td id="L558" class="blob-num js-line-number" data-line-number="558"></td>
        <td id="LC558" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L559" class="blob-num js-line-number" data-line-number="559"></td>
        <td id="LC559" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L560" class="blob-num js-line-number" data-line-number="560"></td>
        <td id="LC560" class="blob-code blob-code-inner js-file-line">      forEach(destination, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>){</td>
      </tr>
      <tr>
        <td id="L561" class="blob-num js-line-number" data-line-number="561"></td>
        <td id="LC561" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> destination[key];</td>
      </tr>
      <tr>
        <td id="L562" class="blob-num js-line-number" data-line-number="562"></td>
        <td id="LC562" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L563" class="blob-num js-line-number" data-line-number="563"></td>
        <td id="LC563" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> key <span class="pl-k">in</span> source) {</td>
      </tr>
      <tr>
        <td id="L564" class="blob-num js-line-number" data-line-number="564"></td>
        <td id="LC564" class="blob-code blob-code-inner js-file-line">        destination[key] <span class="pl-k">=</span> copy(source[key]);</td>
      </tr>
      <tr>
        <td id="L565" class="blob-num js-line-number" data-line-number="565"></td>
        <td id="LC565" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L566" class="blob-num js-line-number" data-line-number="566"></td>
        <td id="LC566" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L567" class="blob-num js-line-number" data-line-number="567"></td>
        <td id="LC567" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L568" class="blob-num js-line-number" data-line-number="568"></td>
        <td id="LC568" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> destination;</td>
      </tr>
      <tr>
        <td id="L569" class="blob-num js-line-number" data-line-number="569"></td>
        <td id="LC569" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L570" class="blob-num js-line-number" data-line-number="570"></td>
        <td id="LC570" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L571" class="blob-num js-line-number" data-line-number="571"></td>
        <td id="LC571" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L572" class="blob-num js-line-number" data-line-number="572"></td>
        <td id="LC572" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Create a shallow copy of an object</span></td>
      </tr>
      <tr>
        <td id="L573" class="blob-num js-line-number" data-line-number="573"></td>
        <td id="LC573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L574" class="blob-num js-line-number" data-line-number="574"></td>
        <td id="LC574" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">shallowCopy</span>(<span class="pl-smi">src</span>, <span class="pl-smi">dst</span>) {</td>
      </tr>
      <tr>
        <td id="L575" class="blob-num js-line-number" data-line-number="575"></td>
        <td id="LC575" class="blob-code blob-code-inner js-file-line">  dst <span class="pl-k">=</span> dst <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L576" class="blob-num js-line-number" data-line-number="576"></td>
        <td id="LC576" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L577" class="blob-num js-line-number" data-line-number="577"></td>
        <td id="LC577" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span>(<span class="pl-k">var</span> key <span class="pl-k">in</span> src) {</td>
      </tr>
      <tr>
        <td id="L578" class="blob-num js-line-number" data-line-number="578"></td>
        <td id="LC578" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (src.hasOwnProperty(key) <span class="pl-k">&amp;&amp;</span> key.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, <span class="pl-c1">2</span>) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$$<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L579" class="blob-num js-line-number" data-line-number="579"></td>
        <td id="LC579" class="blob-code blob-code-inner js-file-line">      dst[key] <span class="pl-k">=</span> src[key];</td>
      </tr>
      <tr>
        <td id="L580" class="blob-num js-line-number" data-line-number="580"></td>
        <td id="LC580" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L581" class="blob-num js-line-number" data-line-number="581"></td>
        <td id="LC581" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L582" class="blob-num js-line-number" data-line-number="582"></td>
        <td id="LC582" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L583" class="blob-num js-line-number" data-line-number="583"></td>
        <td id="LC583" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> dst;</td>
      </tr>
      <tr>
        <td id="L584" class="blob-num js-line-number" data-line-number="584"></td>
        <td id="LC584" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L585" class="blob-num js-line-number" data-line-number="585"></td>
        <td id="LC585" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L586" class="blob-num js-line-number" data-line-number="586"></td>
        <td id="LC586" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L587" class="blob-num js-line-number" data-line-number="587"></td>
        <td id="LC587" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L588" class="blob-num js-line-number" data-line-number="588"></td>
        <td id="LC588" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L589" class="blob-num js-line-number" data-line-number="589"></td>
        <td id="LC589" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.equals</span></td>
      </tr>
      <tr>
        <td id="L590" class="blob-num js-line-number" data-line-number="590"></td>
        <td id="LC590" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L591" class="blob-num js-line-number" data-line-number="591"></td>
        <td id="LC591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L592" class="blob-num js-line-number" data-line-number="592"></td>
        <td id="LC592" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L593" class="blob-num js-line-number" data-line-number="593"></td>
        <td id="LC593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Determines if two objects or two values are equivalent. Supports value types, arrays and</span></td>
      </tr>
      <tr>
        <td id="L594" class="blob-num js-line-number" data-line-number="594"></td>
        <td id="LC594" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * objects.</span></td>
      </tr>
      <tr>
        <td id="L595" class="blob-num js-line-number" data-line-number="595"></td>
        <td id="LC595" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L596" class="blob-num js-line-number" data-line-number="596"></td>
        <td id="LC596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Two objects or values are considered equivalent if at least one of the following is true:</span></td>
      </tr>
      <tr>
        <td id="L597" class="blob-num js-line-number" data-line-number="597"></td>
        <td id="LC597" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L598" class="blob-num js-line-number" data-line-number="598"></td>
        <td id="LC598" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * Both objects or values pass `===` comparison.</span></td>
      </tr>
      <tr>
        <td id="L599" class="blob-num js-line-number" data-line-number="599"></td>
        <td id="LC599" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * Both objects or values are of the same type and all of their properties pass `===` comparison.</span></td>
      </tr>
      <tr>
        <td id="L600" class="blob-num js-line-number" data-line-number="600"></td>
        <td id="LC600" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * Both values are NaN. (In JavasScript, NaN == NaN =&gt; false. But we consider two NaN as equal)</span></td>
      </tr>
      <tr>
        <td id="L601" class="blob-num js-line-number" data-line-number="601"></td>
        <td id="LC601" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L602" class="blob-num js-line-number" data-line-number="602"></td>
        <td id="LC602" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * During a property comparision, properties of `function` type and properties with names</span></td>
      </tr>
      <tr>
        <td id="L603" class="blob-num js-line-number" data-line-number="603"></td>
        <td id="LC603" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * that begin with `$` are ignored.</span></td>
      </tr>
      <tr>
        <td id="L604" class="blob-num js-line-number" data-line-number="604"></td>
        <td id="LC604" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L605" class="blob-num js-line-number" data-line-number="605"></td>
        <td id="LC605" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Scope and DOMWindow objects are being compared only be identify (`===`).</span></td>
      </tr>
      <tr>
        <td id="L606" class="blob-num js-line-number" data-line-number="606"></td>
        <td id="LC606" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L607" class="blob-num js-line-number" data-line-number="607"></td>
        <td id="LC607" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} o1 Object or value to compare.</span></td>
      </tr>
      <tr>
        <td id="L608" class="blob-num js-line-number" data-line-number="608"></td>
        <td id="LC608" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} o2 Object or value to compare.</span></td>
      </tr>
      <tr>
        <td id="L609" class="blob-num js-line-number" data-line-number="609"></td>
        <td id="LC609" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} True if arguments are equal.</span></td>
      </tr>
      <tr>
        <td id="L610" class="blob-num js-line-number" data-line-number="610"></td>
        <td id="LC610" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L611" class="blob-num js-line-number" data-line-number="611"></td>
        <td id="LC611" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">equals</span>(<span class="pl-smi">o1</span>, <span class="pl-smi">o2</span>) {</td>
      </tr>
      <tr>
        <td id="L612" class="blob-num js-line-number" data-line-number="612"></td>
        <td id="LC612" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (o1 <span class="pl-k">===</span> o2) <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L613" class="blob-num js-line-number" data-line-number="613"></td>
        <td id="LC613" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (o1 <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> o2 <span class="pl-k">===</span> <span class="pl-c1">null</span>) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L614" class="blob-num js-line-number" data-line-number="614"></td>
        <td id="LC614" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (o1 <span class="pl-k">!==</span> o1 <span class="pl-k">&amp;&amp;</span> o2 <span class="pl-k">!==</span> o2) <span class="pl-k">return</span> <span class="pl-c1">true</span>; <span class="pl-c">// NaN === NaN</span></td>
      </tr>
      <tr>
        <td id="L615" class="blob-num js-line-number" data-line-number="615"></td>
        <td id="LC615" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> t1 <span class="pl-k">=</span> <span class="pl-k">typeof</span> o1, t2 <span class="pl-k">=</span> <span class="pl-k">typeof</span> o2, length, key, keySet;</td>
      </tr>
      <tr>
        <td id="L616" class="blob-num js-line-number" data-line-number="616"></td>
        <td id="LC616" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (t1 <span class="pl-k">==</span> t2) {</td>
      </tr>
      <tr>
        <td id="L617" class="blob-num js-line-number" data-line-number="617"></td>
        <td id="LC617" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (t1 <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L618" class="blob-num js-line-number" data-line-number="618"></td>
        <td id="LC618" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isArray(o1)) {</td>
      </tr>
      <tr>
        <td id="L619" class="blob-num js-line-number" data-line-number="619"></td>
        <td id="LC619" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((length <span class="pl-k">=</span> o1.<span class="pl-c1">length</span>) <span class="pl-k">==</span> o2.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L620" class="blob-num js-line-number" data-line-number="620"></td>
        <td id="LC620" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span>(key<span class="pl-k">=</span><span class="pl-c1">0</span>; key<span class="pl-k">&lt;</span>length; key<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L621" class="blob-num js-line-number" data-line-number="621"></td>
        <td id="LC621" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>equals(o1[key], o2[key])) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L622" class="blob-num js-line-number" data-line-number="622"></td>
        <td id="LC622" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L623" class="blob-num js-line-number" data-line-number="623"></td>
        <td id="LC623" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L624" class="blob-num js-line-number" data-line-number="624"></td>
        <td id="LC624" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L625" class="blob-num js-line-number" data-line-number="625"></td>
        <td id="LC625" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (isDate(o1)) {</td>
      </tr>
      <tr>
        <td id="L626" class="blob-num js-line-number" data-line-number="626"></td>
        <td id="LC626" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> isDate(o2) <span class="pl-k">&amp;&amp;</span> o1.<span class="pl-c1">getTime</span>() <span class="pl-k">==</span> o2.<span class="pl-c1">getTime</span>();</td>
      </tr>
      <tr>
        <td id="L627" class="blob-num js-line-number" data-line-number="627"></td>
        <td id="LC627" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L628" class="blob-num js-line-number" data-line-number="628"></td>
        <td id="LC628" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isScope(o1) <span class="pl-k">||</span> isScope(o2) <span class="pl-k">||</span> isWindow(o1) <span class="pl-k">||</span> isWindow(o2)) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L629" class="blob-num js-line-number" data-line-number="629"></td>
        <td id="LC629" class="blob-code blob-code-inner js-file-line">        keySet <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L630" class="blob-num js-line-number" data-line-number="630"></td>
        <td id="LC630" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(key <span class="pl-k">in</span> o1) {</td>
      </tr>
      <tr>
        <td id="L631" class="blob-num js-line-number" data-line-number="631"></td>
        <td id="LC631" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (key.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isFunction(o1[key]) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>equals(o1[key], o2[key])) {</td>
      </tr>
      <tr>
        <td id="L632" class="blob-num js-line-number" data-line-number="632"></td>
        <td id="LC632" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L633" class="blob-num js-line-number" data-line-number="633"></td>
        <td id="LC633" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L634" class="blob-num js-line-number" data-line-number="634"></td>
        <td id="LC634" class="blob-code blob-code-inner js-file-line">          keySet[key] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L635" class="blob-num js-line-number" data-line-number="635"></td>
        <td id="LC635" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L636" class="blob-num js-line-number" data-line-number="636"></td>
        <td id="LC636" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(key <span class="pl-k">in</span> o2) {</td>
      </tr>
      <tr>
        <td id="L637" class="blob-num js-line-number" data-line-number="637"></td>
        <td id="LC637" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>keySet[key] <span class="pl-k">&amp;&amp;</span> key.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isFunction(o2[key])) <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L638" class="blob-num js-line-number" data-line-number="638"></td>
        <td id="LC638" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L639" class="blob-num js-line-number" data-line-number="639"></td>
        <td id="LC639" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L640" class="blob-num js-line-number" data-line-number="640"></td>
        <td id="LC640" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L641" class="blob-num js-line-number" data-line-number="641"></td>
        <td id="LC641" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L642" class="blob-num js-line-number" data-line-number="642"></td>
        <td id="LC642" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L643" class="blob-num js-line-number" data-line-number="643"></td>
        <td id="LC643" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L644" class="blob-num js-line-number" data-line-number="644"></td>
        <td id="LC644" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L645" class="blob-num js-line-number" data-line-number="645"></td>
        <td id="LC645" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L646" class="blob-num js-line-number" data-line-number="646"></td>
        <td id="LC646" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L647" class="blob-num js-line-number" data-line-number="647"></td>
        <td id="LC647" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">concat</span>(<span class="pl-smi">array1</span>, <span class="pl-smi">array2</span>, <span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L648" class="blob-num js-line-number" data-line-number="648"></td>
        <td id="LC648" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> array1.<span class="pl-c1">concat</span>(slice.<span class="pl-c1">call</span>(array2, index));</td>
      </tr>
      <tr>
        <td id="L649" class="blob-num js-line-number" data-line-number="649"></td>
        <td id="LC649" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L650" class="blob-num js-line-number" data-line-number="650"></td>
        <td id="LC650" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L651" class="blob-num js-line-number" data-line-number="651"></td>
        <td id="LC651" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">sliceArgs</span>(<span class="pl-smi">args</span>, <span class="pl-smi">startIndex</span>) {</td>
      </tr>
      <tr>
        <td id="L652" class="blob-num js-line-number" data-line-number="652"></td>
        <td id="LC652" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> slice.<span class="pl-c1">call</span>(args, startIndex <span class="pl-k">||</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L653" class="blob-num js-line-number" data-line-number="653"></td>
        <td id="LC653" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L654" class="blob-num js-line-number" data-line-number="654"></td>
        <td id="LC654" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L655" class="blob-num js-line-number" data-line-number="655"></td>
        <td id="LC655" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L656" class="blob-num js-line-number" data-line-number="656"></td>
        <td id="LC656" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L657" class="blob-num js-line-number" data-line-number="657"></td>
        <td id="LC657" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L658" class="blob-num js-line-number" data-line-number="658"></td>
        <td id="LC658" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.bind</span></td>
      </tr>
      <tr>
        <td id="L659" class="blob-num js-line-number" data-line-number="659"></td>
        <td id="LC659" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L660" class="blob-num js-line-number" data-line-number="660"></td>
        <td id="LC660" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L661" class="blob-num js-line-number" data-line-number="661"></td>
        <td id="LC661" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L662" class="blob-num js-line-number" data-line-number="662"></td>
        <td id="LC662" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Returns a function which calls function `fn` bound to `self` (`self` becomes the `this` for</span></td>
      </tr>
      <tr>
        <td id="L663" class="blob-num js-line-number" data-line-number="663"></td>
        <td id="LC663" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `fn`). You can supply optional `args` that are are prebound to the function. This feature is also</span></td>
      </tr>
      <tr>
        <td id="L664" class="blob-num js-line-number" data-line-number="664"></td>
        <td id="LC664" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * known as [function currying](http://en.wikipedia.org/wiki/Currying).</span></td>
      </tr>
      <tr>
        <td id="L665" class="blob-num js-line-number" data-line-number="665"></td>
        <td id="LC665" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L666" class="blob-num js-line-number" data-line-number="666"></td>
        <td id="LC666" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object} self Context which `fn` should be evaluated in.</span></td>
      </tr>
      <tr>
        <td id="L667" class="blob-num js-line-number" data-line-number="667"></td>
        <td id="LC667" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function()} fn Function to be bound.</span></td>
      </tr>
      <tr>
        <td id="L668" class="blob-num js-line-number" data-line-number="668"></td>
        <td id="LC668" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {...*} args Optional arguments to be prebound to the `fn` function call.</span></td>
      </tr>
      <tr>
        <td id="L669" class="blob-num js-line-number" data-line-number="669"></td>
        <td id="LC669" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {function()} Function that wraps the `fn` with all the specified bindings.</span></td>
      </tr>
      <tr>
        <td id="L670" class="blob-num js-line-number" data-line-number="670"></td>
        <td id="LC670" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L671" class="blob-num js-line-number" data-line-number="671"></td>
        <td id="LC671" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">bind</span>(<span class="pl-smi">self</span>, <span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L672" class="blob-num js-line-number" data-line-number="672"></td>
        <td id="LC672" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> curryArgs <span class="pl-k">=</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">2</span> <span class="pl-k">?</span> sliceArgs(arguments, <span class="pl-c1">2</span>) <span class="pl-k">:</span> [];</td>
      </tr>
      <tr>
        <td id="L673" class="blob-num js-line-number" data-line-number="673"></td>
        <td id="LC673" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isFunction(fn) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(fn <span class="pl-k">instanceof</span> <span class="pl-c1">RegExp</span>)) {</td>
      </tr>
      <tr>
        <td id="L674" class="blob-num js-line-number" data-line-number="674"></td>
        <td id="LC674" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> curryArgs.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L675" class="blob-num js-line-number" data-line-number="675"></td>
        <td id="LC675" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L676" class="blob-num js-line-number" data-line-number="676"></td>
        <td id="LC676" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L677" class="blob-num js-line-number" data-line-number="677"></td>
        <td id="LC677" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> fn.<span class="pl-c1">apply</span>(self, curryArgs.<span class="pl-c1">concat</span>(slice.<span class="pl-c1">call</span>(arguments, <span class="pl-c1">0</span>)))</td>
      </tr>
      <tr>
        <td id="L678" class="blob-num js-line-number" data-line-number="678"></td>
        <td id="LC678" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> fn.<span class="pl-c1">apply</span>(self, curryArgs);</td>
      </tr>
      <tr>
        <td id="L679" class="blob-num js-line-number" data-line-number="679"></td>
        <td id="LC679" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L680" class="blob-num js-line-number" data-line-number="680"></td>
        <td id="LC680" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L681" class="blob-num js-line-number" data-line-number="681"></td>
        <td id="LC681" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span></td>
      </tr>
      <tr>
        <td id="L682" class="blob-num js-line-number" data-line-number="682"></td>
        <td id="LC682" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> fn.<span class="pl-c1">apply</span>(self, arguments)</td>
      </tr>
      <tr>
        <td id="L683" class="blob-num js-line-number" data-line-number="683"></td>
        <td id="LC683" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> fn.<span class="pl-c1">call</span>(self);</td>
      </tr>
      <tr>
        <td id="L684" class="blob-num js-line-number" data-line-number="684"></td>
        <td id="LC684" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L685" class="blob-num js-line-number" data-line-number="685"></td>
        <td id="LC685" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L686" class="blob-num js-line-number" data-line-number="686"></td>
        <td id="LC686" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// in IE, native methods are not functions so they cannot be bound (note: they don&#39;t need to be)</span></td>
      </tr>
      <tr>
        <td id="L687" class="blob-num js-line-number" data-line-number="687"></td>
        <td id="LC687" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L688" class="blob-num js-line-number" data-line-number="688"></td>
        <td id="LC688" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L689" class="blob-num js-line-number" data-line-number="689"></td>
        <td id="LC689" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L690" class="blob-num js-line-number" data-line-number="690"></td>
        <td id="LC690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L691" class="blob-num js-line-number" data-line-number="691"></td>
        <td id="LC691" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L692" class="blob-num js-line-number" data-line-number="692"></td>
        <td id="LC692" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">toJsonReplacer</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L693" class="blob-num js-line-number" data-line-number="693"></td>
        <td id="LC693" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> val <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L694" class="blob-num js-line-number" data-line-number="694"></td>
        <td id="LC694" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L695" class="blob-num js-line-number" data-line-number="695"></td>
        <td id="LC695" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\$</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(key)) {</td>
      </tr>
      <tr>
        <td id="L696" class="blob-num js-line-number" data-line-number="696"></td>
        <td id="LC696" class="blob-code blob-code-inner js-file-line">    val <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L697" class="blob-num js-line-number" data-line-number="697"></td>
        <td id="LC697" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (isWindow(value)) {</td>
      </tr>
      <tr>
        <td id="L698" class="blob-num js-line-number" data-line-number="698"></td>
        <td id="LC698" class="blob-code blob-code-inner js-file-line">    val <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$WINDOW<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L699" class="blob-num js-line-number" data-line-number="699"></td>
        <td id="LC699" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (value <span class="pl-k">&amp;&amp;</span>  <span class="pl-c1">document</span> <span class="pl-k">===</span> value) {</td>
      </tr>
      <tr>
        <td id="L700" class="blob-num js-line-number" data-line-number="700"></td>
        <td id="LC700" class="blob-code blob-code-inner js-file-line">    val <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$DOCUMENT<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L701" class="blob-num js-line-number" data-line-number="701"></td>
        <td id="LC701" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> <span class="pl-k">if</span> (isScope(value)) {</td>
      </tr>
      <tr>
        <td id="L702" class="blob-num js-line-number" data-line-number="702"></td>
        <td id="LC702" class="blob-code blob-code-inner js-file-line">    val <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$SCOPE<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L703" class="blob-num js-line-number" data-line-number="703"></td>
        <td id="LC703" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L704" class="blob-num js-line-number" data-line-number="704"></td>
        <td id="LC704" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L705" class="blob-num js-line-number" data-line-number="705"></td>
        <td id="LC705" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> val;</td>
      </tr>
      <tr>
        <td id="L706" class="blob-num js-line-number" data-line-number="706"></td>
        <td id="LC706" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L707" class="blob-num js-line-number" data-line-number="707"></td>
        <td id="LC707" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L708" class="blob-num js-line-number" data-line-number="708"></td>
        <td id="LC708" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L709" class="blob-num js-line-number" data-line-number="709"></td>
        <td id="LC709" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L710" class="blob-num js-line-number" data-line-number="710"></td>
        <td id="LC710" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L711" class="blob-num js-line-number" data-line-number="711"></td>
        <td id="LC711" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.toJson</span></td>
      </tr>
      <tr>
        <td id="L712" class="blob-num js-line-number" data-line-number="712"></td>
        <td id="LC712" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L713" class="blob-num js-line-number" data-line-number="713"></td>
        <td id="LC713" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L714" class="blob-num js-line-number" data-line-number="714"></td>
        <td id="LC714" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L715" class="blob-num js-line-number" data-line-number="715"></td>
        <td id="LC715" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Serializes input into a JSON-formatted string.</span></td>
      </tr>
      <tr>
        <td id="L716" class="blob-num js-line-number" data-line-number="716"></td>
        <td id="LC716" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L717" class="blob-num js-line-number" data-line-number="717"></td>
        <td id="LC717" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object|Array|Date|string|number} obj Input to be serialized into JSON.</span></td>
      </tr>
      <tr>
        <td id="L718" class="blob-num js-line-number" data-line-number="718"></td>
        <td id="LC718" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {boolean=} pretty If set to true, the JSON output will contain newlines and whitespace.</span></td>
      </tr>
      <tr>
        <td id="L719" class="blob-num js-line-number" data-line-number="719"></td>
        <td id="LC719" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Jsonified string representing `obj`.</span></td>
      </tr>
      <tr>
        <td id="L720" class="blob-num js-line-number" data-line-number="720"></td>
        <td id="LC720" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L721" class="blob-num js-line-number" data-line-number="721"></td>
        <td id="LC721" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">toJson</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">pretty</span>) {</td>
      </tr>
      <tr>
        <td id="L722" class="blob-num js-line-number" data-line-number="722"></td>
        <td id="LC722" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">JSON</span>.stringify(obj, toJsonReplacer, pretty <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>  <span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-c1">null</span>);</td>
      </tr>
      <tr>
        <td id="L723" class="blob-num js-line-number" data-line-number="723"></td>
        <td id="LC723" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L724" class="blob-num js-line-number" data-line-number="724"></td>
        <td id="LC724" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L725" class="blob-num js-line-number" data-line-number="725"></td>
        <td id="LC725" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L726" class="blob-num js-line-number" data-line-number="726"></td>
        <td id="LC726" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L727" class="blob-num js-line-number" data-line-number="727"></td>
        <td id="LC727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L728" class="blob-num js-line-number" data-line-number="728"></td>
        <td id="LC728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.fromJson</span></td>
      </tr>
      <tr>
        <td id="L729" class="blob-num js-line-number" data-line-number="729"></td>
        <td id="LC729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L730" class="blob-num js-line-number" data-line-number="730"></td>
        <td id="LC730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L731" class="blob-num js-line-number" data-line-number="731"></td>
        <td id="LC731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L732" class="blob-num js-line-number" data-line-number="732"></td>
        <td id="LC732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Deserializes a JSON string.</span></td>
      </tr>
      <tr>
        <td id="L733" class="blob-num js-line-number" data-line-number="733"></td>
        <td id="LC733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L734" class="blob-num js-line-number" data-line-number="734"></td>
        <td id="LC734" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} json JSON string to deserialize.</span></td>
      </tr>
      <tr>
        <td id="L735" class="blob-num js-line-number" data-line-number="735"></td>
        <td id="LC735" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object|Array|Date|string|number} Deserialized thingy.</span></td>
      </tr>
      <tr>
        <td id="L736" class="blob-num js-line-number" data-line-number="736"></td>
        <td id="LC736" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L737" class="blob-num js-line-number" data-line-number="737"></td>
        <td id="LC737" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">fromJson</span>(<span class="pl-smi">json</span>) {</td>
      </tr>
      <tr>
        <td id="L738" class="blob-num js-line-number" data-line-number="738"></td>
        <td id="LC738" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> isString(json)</td>
      </tr>
      <tr>
        <td id="L739" class="blob-num js-line-number" data-line-number="739"></td>
        <td id="LC739" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> <span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(json)</td>
      </tr>
      <tr>
        <td id="L740" class="blob-num js-line-number" data-line-number="740"></td>
        <td id="LC740" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> json;</td>
      </tr>
      <tr>
        <td id="L741" class="blob-num js-line-number" data-line-number="741"></td>
        <td id="LC741" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L742" class="blob-num js-line-number" data-line-number="742"></td>
        <td id="LC742" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L743" class="blob-num js-line-number" data-line-number="743"></td>
        <td id="LC743" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L744" class="blob-num js-line-number" data-line-number="744"></td>
        <td id="LC744" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">toBoolean</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L745" class="blob-num js-line-number" data-line-number="745"></td>
        <td id="LC745" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (value <span class="pl-k">&amp;&amp;</span> value.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L746" class="blob-num js-line-number" data-line-number="746"></td>
        <td id="LC746" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> v <span class="pl-k">=</span> lowercase(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> value);</td>
      </tr>
      <tr>
        <td id="L747" class="blob-num js-line-number" data-line-number="747"></td>
        <td id="LC747" class="blob-code blob-code-inner js-file-line">    value <span class="pl-k">=</span> <span class="pl-k">!</span>(v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>f<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>false<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>no<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>n<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> v <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[]<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L748" class="blob-num js-line-number" data-line-number="748"></td>
        <td id="LC748" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L749" class="blob-num js-line-number" data-line-number="749"></td>
        <td id="LC749" class="blob-code blob-code-inner js-file-line">    value <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L750" class="blob-num js-line-number" data-line-number="750"></td>
        <td id="LC750" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L751" class="blob-num js-line-number" data-line-number="751"></td>
        <td id="LC751" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L752" class="blob-num js-line-number" data-line-number="752"></td>
        <td id="LC752" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L753" class="blob-num js-line-number" data-line-number="753"></td>
        <td id="LC753" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L754" class="blob-num js-line-number" data-line-number="754"></td>
        <td id="LC754" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L755" class="blob-num js-line-number" data-line-number="755"></td>
        <td id="LC755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Returns the string representation of the element.</span></td>
      </tr>
      <tr>
        <td id="L756" class="blob-num js-line-number" data-line-number="756"></td>
        <td id="LC756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L757" class="blob-num js-line-number" data-line-number="757"></td>
        <td id="LC757" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">startingTag</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L758" class="blob-num js-line-number" data-line-number="758"></td>
        <td id="LC758" class="blob-code blob-code-inner js-file-line">  element <span class="pl-k">=</span> jqLite(element).clone();</td>
      </tr>
      <tr>
        <td id="L759" class="blob-num js-line-number" data-line-number="759"></td>
        <td id="LC759" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L760" class="blob-num js-line-number" data-line-number="760"></td>
        <td id="LC760" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// turns out IE does not let you set .html() on elements which</span></td>
      </tr>
      <tr>
        <td id="L761" class="blob-num js-line-number" data-line-number="761"></td>
        <td id="LC761" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// are not allowed to have children. So we just ignore it.</span></td>
      </tr>
      <tr>
        <td id="L762" class="blob-num js-line-number" data-line-number="762"></td>
        <td id="LC762" class="blob-code blob-code-inner js-file-line">    element.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L763" class="blob-num js-line-number" data-line-number="763"></td>
        <td id="LC763" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">catch</span>(e) {}</td>
      </tr>
      <tr>
        <td id="L764" class="blob-num js-line-number" data-line-number="764"></td>
        <td id="LC764" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> jqLite(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div&gt;<span class="pl-pds">&#39;</span></span>).append(element).html().<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(&lt;<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">+</span>&gt;)<span class="pl-pds">/</span></span>)[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L765" class="blob-num js-line-number" data-line-number="765"></td>
        <td id="LC765" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L766" class="blob-num js-line-number" data-line-number="766"></td>
        <td id="LC766" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L767" class="blob-num js-line-number" data-line-number="767"></td>
        <td id="LC767" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L768" class="blob-num js-line-number" data-line-number="768"></td>
        <td id="LC768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L769" class="blob-num js-line-number" data-line-number="769"></td>
        <td id="LC769" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L770" class="blob-num js-line-number" data-line-number="770"></td>
        <td id="LC770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L771" class="blob-num js-line-number" data-line-number="771"></td>
        <td id="LC771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Parses an escaped url query string into key-value pairs.</span></td>
      </tr>
      <tr>
        <td id="L772" class="blob-num js-line-number" data-line-number="772"></td>
        <td id="LC772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> Object.&lt;(string|boolean)&gt;</span></td>
      </tr>
      <tr>
        <td id="L773" class="blob-num js-line-number" data-line-number="773"></td>
        <td id="LC773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L774" class="blob-num js-line-number" data-line-number="774"></td>
        <td id="LC774" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">parseKeyValue</span>(<span class="pl-c">/**string*/</span><span class="pl-smi">keyValue</span>) {</td>
      </tr>
      <tr>
        <td id="L775" class="blob-num js-line-number" data-line-number="775"></td>
        <td id="LC775" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> obj <span class="pl-k">=</span> {}, key_value, key;</td>
      </tr>
      <tr>
        <td id="L776" class="blob-num js-line-number" data-line-number="776"></td>
        <td id="LC776" class="blob-code blob-code-inner js-file-line">  forEach((keyValue <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">keyValue</span>){</td>
      </tr>
      <tr>
        <td id="L777" class="blob-num js-line-number" data-line-number="777"></td>
        <td id="LC777" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (keyValue) {</td>
      </tr>
      <tr>
        <td id="L778" class="blob-num js-line-number" data-line-number="778"></td>
        <td id="LC778" class="blob-code blob-code-inner js-file-line">      key_value <span class="pl-k">=</span> keyValue.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L779" class="blob-num js-line-number" data-line-number="779"></td>
        <td id="LC779" class="blob-code blob-code-inner js-file-line">      key <span class="pl-k">=</span> decodeURIComponent(key_value[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L780" class="blob-num js-line-number" data-line-number="780"></td>
        <td id="LC780" class="blob-code blob-code-inner js-file-line">      obj[key] <span class="pl-k">=</span> isDefined(key_value[<span class="pl-c1">1</span>]) <span class="pl-k">?</span> decodeURIComponent(key_value[<span class="pl-c1">1</span>]) <span class="pl-k">:</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L781" class="blob-num js-line-number" data-line-number="781"></td>
        <td id="LC781" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L782" class="blob-num js-line-number" data-line-number="782"></td>
        <td id="LC782" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L783" class="blob-num js-line-number" data-line-number="783"></td>
        <td id="LC783" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L784" class="blob-num js-line-number" data-line-number="784"></td>
        <td id="LC784" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L785" class="blob-num js-line-number" data-line-number="785"></td>
        <td id="LC785" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L786" class="blob-num js-line-number" data-line-number="786"></td>
        <td id="LC786" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">toKeyValue</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L787" class="blob-num js-line-number" data-line-number="787"></td>
        <td id="LC787" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> parts <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L788" class="blob-num js-line-number" data-line-number="788"></td>
        <td id="LC788" class="blob-code blob-code-inner js-file-line">  forEach(obj, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L789" class="blob-num js-line-number" data-line-number="789"></td>
        <td id="LC789" class="blob-code blob-code-inner js-file-line">    parts.<span class="pl-c1">push</span>(encodeUriQuery(key, <span class="pl-c1">true</span>) <span class="pl-k">+</span> (value <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encodeUriQuery(value, <span class="pl-c1">true</span>)));</td>
      </tr>
      <tr>
        <td id="L790" class="blob-num js-line-number" data-line-number="790"></td>
        <td id="LC790" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L791" class="blob-num js-line-number" data-line-number="791"></td>
        <td id="LC791" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> parts.<span class="pl-c1">length</span> <span class="pl-k">?</span> parts.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L792" class="blob-num js-line-number" data-line-number="792"></td>
        <td id="LC792" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L793" class="blob-num js-line-number" data-line-number="793"></td>
        <td id="LC793" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L794" class="blob-num js-line-number" data-line-number="794"></td>
        <td id="LC794" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L795" class="blob-num js-line-number" data-line-number="795"></td>
        <td id="LC795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L796" class="blob-num js-line-number" data-line-number="796"></td>
        <td id="LC796" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * We need our custom mehtod because encodeURIComponent is too agressive and doesn&#39;t follow</span></td>
      </tr>
      <tr>
        <td id="L797" class="blob-num js-line-number" data-line-number="797"></td>
        <td id="LC797" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path</span></td>
      </tr>
      <tr>
        <td id="L798" class="blob-num js-line-number" data-line-number="798"></td>
        <td id="LC798" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * segments:</span></td>
      </tr>
      <tr>
        <td id="L799" class="blob-num js-line-number" data-line-number="799"></td>
        <td id="LC799" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    segment       = *pchar</span></td>
      </tr>
      <tr>
        <td id="L800" class="blob-num js-line-number" data-line-number="800"></td>
        <td id="LC800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    pchar         = unreserved / pct-encoded / sub-delims / &quot;:&quot; / &quot;@&quot;</span></td>
      </tr>
      <tr>
        <td id="L801" class="blob-num js-line-number" data-line-number="801"></td>
        <td id="LC801" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    pct-encoded   = &quot;%&quot; HEXDIG HEXDIG</span></td>
      </tr>
      <tr>
        <td id="L802" class="blob-num js-line-number" data-line-number="802"></td>
        <td id="LC802" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;</span></td>
      </tr>
      <tr>
        <td id="L803" class="blob-num js-line-number" data-line-number="803"></td>
        <td id="LC803" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;&#39;&quot; / &quot;(&quot; / &quot;)&quot;</span></td>
      </tr>
      <tr>
        <td id="L804" class="blob-num js-line-number" data-line-number="804"></td>
        <td id="LC804" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                     / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;</span></td>
      </tr>
      <tr>
        <td id="L805" class="blob-num js-line-number" data-line-number="805"></td>
        <td id="LC805" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L806" class="blob-num js-line-number" data-line-number="806"></td>
        <td id="LC806" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">encodeUriSegment</span>(<span class="pl-smi">val</span>) {</td>
      </tr>
      <tr>
        <td id="L807" class="blob-num js-line-number" data-line-number="807"></td>
        <td id="LC807" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> encodeUriQuery(val, <span class="pl-c1">true</span>).</td>
      </tr>
      <tr>
        <td id="L808" class="blob-num js-line-number" data-line-number="808"></td>
        <td id="LC808" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%26<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L809" class="blob-num js-line-number" data-line-number="809"></td>
        <td id="LC809" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%3D<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L810" class="blob-num js-line-number" data-line-number="810"></td>
        <td id="LC810" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%2B<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L811" class="blob-num js-line-number" data-line-number="811"></td>
        <td id="LC811" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L812" class="blob-num js-line-number" data-line-number="812"></td>
        <td id="LC812" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L813" class="blob-num js-line-number" data-line-number="813"></td>
        <td id="LC813" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L814" class="blob-num js-line-number" data-line-number="814"></td>
        <td id="LC814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L815" class="blob-num js-line-number" data-line-number="815"></td>
        <td id="LC815" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This method is intended for encoding *key* or *value* parts of query component. We need a custom</span></td>
      </tr>
      <tr>
        <td id="L816" class="blob-num js-line-number" data-line-number="816"></td>
        <td id="LC816" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * method becuase encodeURIComponent is too agressive and encodes stuff that doesn&#39;t have to be</span></td>
      </tr>
      <tr>
        <td id="L817" class="blob-num js-line-number" data-line-number="817"></td>
        <td id="LC817" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * encoded per http://tools.ietf.org/html/rfc3986:</span></td>
      </tr>
      <tr>
        <td id="L818" class="blob-num js-line-number" data-line-number="818"></td>
        <td id="LC818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    query       = *( pchar / &quot;/&quot; / &quot;?&quot; )</span></td>
      </tr>
      <tr>
        <td id="L819" class="blob-num js-line-number" data-line-number="819"></td>
        <td id="LC819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    pchar         = unreserved / pct-encoded / sub-delims / &quot;:&quot; / &quot;@&quot;</span></td>
      </tr>
      <tr>
        <td id="L820" class="blob-num js-line-number" data-line-number="820"></td>
        <td id="LC820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    unreserved    = ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;</span></td>
      </tr>
      <tr>
        <td id="L821" class="blob-num js-line-number" data-line-number="821"></td>
        <td id="LC821" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    pct-encoded   = &quot;%&quot; HEXDIG HEXDIG</span></td>
      </tr>
      <tr>
        <td id="L822" class="blob-num js-line-number" data-line-number="822"></td>
        <td id="LC822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    sub-delims    = &quot;!&quot; / &quot;$&quot; / &quot;&amp;&quot; / &quot;&#39;&quot; / &quot;(&quot; / &quot;)&quot;</span></td>
      </tr>
      <tr>
        <td id="L823" class="blob-num js-line-number" data-line-number="823"></td>
        <td id="LC823" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                     / &quot;*&quot; / &quot;+&quot; / &quot;,&quot; / &quot;;&quot; / &quot;=&quot;</span></td>
      </tr>
      <tr>
        <td id="L824" class="blob-num js-line-number" data-line-number="824"></td>
        <td id="LC824" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L825" class="blob-num js-line-number" data-line-number="825"></td>
        <td id="LC825" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">encodeUriQuery</span>(<span class="pl-smi">val</span>, <span class="pl-smi">pctEncodeSpaces</span>) {</td>
      </tr>
      <tr>
        <td id="L826" class="blob-num js-line-number" data-line-number="826"></td>
        <td id="LC826" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> encodeURIComponent(val).</td>
      </tr>
      <tr>
        <td id="L827" class="blob-num js-line-number" data-line-number="827"></td>
        <td id="LC827" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%40<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L828" class="blob-num js-line-number" data-line-number="828"></td>
        <td id="LC828" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%3A<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L829" class="blob-num js-line-number" data-line-number="829"></td>
        <td id="LC829" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%24<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L830" class="blob-num js-line-number" data-line-number="830"></td>
        <td id="LC830" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>%2C<span class="pl-pds">/</span>gi</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>).</td>
      </tr>
      <tr>
        <td id="L831" class="blob-num js-line-number" data-line-number="831"></td>
        <td id="LC831" class="blob-code blob-code-inner js-file-line">             <span class="pl-c1">replace</span>((pctEncodeSpaces <span class="pl-k">?</span> null <span class="pl-k">:</span><span class="pl-sr"> <span class="pl-pds">/</span>%20<span class="pl-pds">/</span>g</span>), <span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L832" class="blob-num js-line-number" data-line-number="832"></td>
        <td id="LC832" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L833" class="blob-num js-line-number" data-line-number="833"></td>
        <td id="LC833" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L834" class="blob-num js-line-number" data-line-number="834"></td>
        <td id="LC834" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L835" class="blob-num js-line-number" data-line-number="835"></td>
        <td id="LC835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L836" class="blob-num js-line-number" data-line-number="836"></td>
        <td id="LC836" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L837" class="blob-num js-line-number" data-line-number="837"></td>
        <td id="LC837" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngApp</span></td>
      </tr>
      <tr>
        <td id="L838" class="blob-num js-line-number" data-line-number="838"></td>
        <td id="LC838" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L839" class="blob-num js-line-number" data-line-number="839"></td>
        <td id="LC839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L840" class="blob-num js-line-number" data-line-number="840"></td>
        <td id="LC840" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {angular.Module} ngApp on optional application</span></td>
      </tr>
      <tr>
        <td id="L841" class="blob-num js-line-number" data-line-number="841"></td>
        <td id="LC841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   {@link angular.module module} name to load.</span></td>
      </tr>
      <tr>
        <td id="L842" class="blob-num js-line-number" data-line-number="842"></td>
        <td id="LC842" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L843" class="blob-num js-line-number" data-line-number="843"></td>
        <td id="LC843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L844" class="blob-num js-line-number" data-line-number="844"></td>
        <td id="LC844" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L845" class="blob-num js-line-number" data-line-number="845"></td>
        <td id="LC845" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Use this directive to auto-bootstrap on application. Only</span></td>
      </tr>
      <tr>
        <td id="L846" class="blob-num js-line-number" data-line-number="846"></td>
        <td id="LC846" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * one directive can be used per HTML document. The directive</span></td>
      </tr>
      <tr>
        <td id="L847" class="blob-num js-line-number" data-line-number="847"></td>
        <td id="LC847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * designates the root of the application and is typically placed</span></td>
      </tr>
      <tr>
        <td id="L848" class="blob-num js-line-number" data-line-number="848"></td>
        <td id="LC848" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ot the root of the page.</span></td>
      </tr>
      <tr>
        <td id="L849" class="blob-num js-line-number" data-line-number="849"></td>
        <td id="LC849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L850" class="blob-num js-line-number" data-line-number="850"></td>
        <td id="LC850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In the example below if the `ngApp` directive would not be placed</span></td>
      </tr>
      <tr>
        <td id="L851" class="blob-num js-line-number" data-line-number="851"></td>
        <td id="LC851" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * on the `html` element then the document would not be compiled</span></td>
      </tr>
      <tr>
        <td id="L852" class="blob-num js-line-number" data-line-number="852"></td>
        <td id="LC852" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and the `{{ 1+2 }}` would not be resolved to `3`.</span></td>
      </tr>
      <tr>
        <td id="L853" class="blob-num js-line-number" data-line-number="853"></td>
        <td id="LC853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L854" class="blob-num js-line-number" data-line-number="854"></td>
        <td id="LC854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngApp` is the easiest way to bootstrap an application.</span></td>
      </tr>
      <tr>
        <td id="L855" class="blob-num js-line-number" data-line-number="855"></td>
        <td id="LC855" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L856" class="blob-num js-line-number" data-line-number="856"></td>
        <td id="LC856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L857" class="blob-num js-line-number" data-line-number="857"></td>
        <td id="LC857" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L858" class="blob-num js-line-number" data-line-number="858"></td>
        <td id="LC858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    I can add: 1 + 2 =  {{ 1+2 }}</span></td>
      </tr>
      <tr>
        <td id="L859" class="blob-num js-line-number" data-line-number="859"></td>
        <td id="LC859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L860" class="blob-num js-line-number" data-line-number="860"></td>
        <td id="LC860" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L861" class="blob-num js-line-number" data-line-number="861"></td>
        <td id="LC861" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L862" class="blob-num js-line-number" data-line-number="862"></td>
        <td id="LC862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L863" class="blob-num js-line-number" data-line-number="863"></td>
        <td id="LC863" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">angularInit</span>(<span class="pl-smi">element</span>, <span class="pl-smi">bootstrap</span>) {</td>
      </tr>
      <tr>
        <td id="L864" class="blob-num js-line-number" data-line-number="864"></td>
        <td id="LC864" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> elements <span class="pl-k">=</span> [element],</td>
      </tr>
      <tr>
        <td id="L865" class="blob-num js-line-number" data-line-number="865"></td>
        <td id="LC865" class="blob-code blob-code-inner js-file-line">      appElement,</td>
      </tr>
      <tr>
        <td id="L866" class="blob-num js-line-number" data-line-number="866"></td>
        <td id="LC866" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">module</span>,</td>
      </tr>
      <tr>
        <td id="L867" class="blob-num js-line-number" data-line-number="867"></td>
        <td id="LC867" class="blob-code blob-code-inner js-file-line">      names <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>ng:app<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ng-app<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>x-ng-app<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>data-ng-app<span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L868" class="blob-num js-line-number" data-line-number="868"></td>
        <td id="LC868" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">NG_APP_CLASS_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">\s</span>ng<span class="pl-c1">[:<span class="pl-cce">\-</span>]</span>app(:<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">\w\d</span>_]</span><span class="pl-k">+</span>);<span class="pl-k">?</span>)<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L869" class="blob-num js-line-number" data-line-number="869"></td>
        <td id="LC869" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L870" class="blob-num js-line-number" data-line-number="870"></td>
        <td id="LC870" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">append</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L871" class="blob-num js-line-number" data-line-number="871"></td>
        <td id="LC871" class="blob-code blob-code-inner js-file-line">    element <span class="pl-k">&amp;&amp;</span> elements.<span class="pl-c1">push</span>(element);</td>
      </tr>
      <tr>
        <td id="L872" class="blob-num js-line-number" data-line-number="872"></td>
        <td id="LC872" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L873" class="blob-num js-line-number" data-line-number="873"></td>
        <td id="LC873" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L874" class="blob-num js-line-number" data-line-number="874"></td>
        <td id="LC874" class="blob-code blob-code-inner js-file-line">  forEach(names, <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L875" class="blob-num js-line-number" data-line-number="875"></td>
        <td id="LC875" class="blob-code blob-code-inner js-file-line">    names[name] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L876" class="blob-num js-line-number" data-line-number="876"></td>
        <td id="LC876" class="blob-code blob-code-inner js-file-line">    append(<span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(name));</td>
      </tr>
      <tr>
        <td id="L877" class="blob-num js-line-number" data-line-number="877"></td>
        <td id="LC877" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> name.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span>:<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L878" class="blob-num js-line-number" data-line-number="878"></td>
        <td id="LC878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (element.querySelectorAll) {</td>
      </tr>
      <tr>
        <td id="L879" class="blob-num js-line-number" data-line-number="879"></td>
        <td id="LC879" class="blob-code blob-code-inner js-file-line">      forEach(element.querySelectorAll(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name), append);</td>
      </tr>
      <tr>
        <td id="L880" class="blob-num js-line-number" data-line-number="880"></td>
        <td id="LC880" class="blob-code blob-code-inner js-file-line">      forEach(element.querySelectorAll(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span>:<span class="pl-pds">&#39;</span></span>), append);</td>
      </tr>
      <tr>
        <td id="L881" class="blob-num js-line-number" data-line-number="881"></td>
        <td id="LC881" class="blob-code blob-code-inner js-file-line">      forEach(element.querySelectorAll(<span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>), append);</td>
      </tr>
      <tr>
        <td id="L882" class="blob-num js-line-number" data-line-number="882"></td>
        <td id="LC882" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L883" class="blob-num js-line-number" data-line-number="883"></td>
        <td id="LC883" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L884" class="blob-num js-line-number" data-line-number="884"></td>
        <td id="LC884" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L885" class="blob-num js-line-number" data-line-number="885"></td>
        <td id="LC885" class="blob-code blob-code-inner js-file-line">  forEach(elements, <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L886" class="blob-num js-line-number" data-line-number="886"></td>
        <td id="LC886" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>appElement) {</td>
      </tr>
      <tr>
        <td id="L887" class="blob-num js-line-number" data-line-number="887"></td>
        <td id="LC887" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> className <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> element.<span class="pl-c1">className</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L888" class="blob-num js-line-number" data-line-number="888"></td>
        <td id="LC888" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> <span class="pl-c1">NG_APP_CLASS_REGEXP</span>.<span class="pl-c1">exec</span>(className);</td>
      </tr>
      <tr>
        <td id="L889" class="blob-num js-line-number" data-line-number="889"></td>
        <td id="LC889" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (match) {</td>
      </tr>
      <tr>
        <td id="L890" class="blob-num js-line-number" data-line-number="890"></td>
        <td id="LC890" class="blob-code blob-code-inner js-file-line">        appElement <span class="pl-k">=</span> element;</td>
      </tr>
      <tr>
        <td id="L891" class="blob-num js-line-number" data-line-number="891"></td>
        <td id="LC891" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">module</span> <span class="pl-k">=</span> (match[<span class="pl-c1">2</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L892" class="blob-num js-line-number" data-line-number="892"></td>
        <td id="LC892" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L893" class="blob-num js-line-number" data-line-number="893"></td>
        <td id="LC893" class="blob-code blob-code-inner js-file-line">        forEach(element.<span class="pl-c1">attributes</span>, <span class="pl-k">function</span>(<span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L894" class="blob-num js-line-number" data-line-number="894"></td>
        <td id="LC894" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>appElement <span class="pl-k">&amp;&amp;</span> names[attr.<span class="pl-c1">name</span>]) {</td>
      </tr>
      <tr>
        <td id="L895" class="blob-num js-line-number" data-line-number="895"></td>
        <td id="LC895" class="blob-code blob-code-inner js-file-line">            appElement <span class="pl-k">=</span> element;</td>
      </tr>
      <tr>
        <td id="L896" class="blob-num js-line-number" data-line-number="896"></td>
        <td id="LC896" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">module</span> <span class="pl-k">=</span> attr.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L897" class="blob-num js-line-number" data-line-number="897"></td>
        <td id="LC897" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L898" class="blob-num js-line-number" data-line-number="898"></td>
        <td id="LC898" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L899" class="blob-num js-line-number" data-line-number="899"></td>
        <td id="LC899" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L900" class="blob-num js-line-number" data-line-number="900"></td>
        <td id="LC900" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L901" class="blob-num js-line-number" data-line-number="901"></td>
        <td id="LC901" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L902" class="blob-num js-line-number" data-line-number="902"></td>
        <td id="LC902" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (appElement) {</td>
      </tr>
      <tr>
        <td id="L903" class="blob-num js-line-number" data-line-number="903"></td>
        <td id="LC903" class="blob-code blob-code-inner js-file-line">    bootstrap(appElement, <span class="pl-c1">module</span> <span class="pl-k">?</span> [<span class="pl-c1">module</span>] <span class="pl-k">:</span> []);</td>
      </tr>
      <tr>
        <td id="L904" class="blob-num js-line-number" data-line-number="904"></td>
        <td id="LC904" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L905" class="blob-num js-line-number" data-line-number="905"></td>
        <td id="LC905" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L906" class="blob-num js-line-number" data-line-number="906"></td>
        <td id="LC906" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L907" class="blob-num js-line-number" data-line-number="907"></td>
        <td id="LC907" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L908" class="blob-num js-line-number" data-line-number="908"></td>
        <td id="LC908" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L909" class="blob-num js-line-number" data-line-number="909"></td>
        <td id="LC909" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.bootstrap</span></td>
      </tr>
      <tr>
        <td id="L910" class="blob-num js-line-number" data-line-number="910"></td>
        <td id="LC910" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L911" class="blob-num js-line-number" data-line-number="911"></td>
        <td id="LC911" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Use this function to manually start up angular application.</span></td>
      </tr>
      <tr>
        <td id="L912" class="blob-num js-line-number" data-line-number="912"></td>
        <td id="LC912" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L913" class="blob-num js-line-number" data-line-number="913"></td>
        <td id="LC913" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See: {@link guide/dev_guide.bootstrap.manual_bootstrap Bootstrap}</span></td>
      </tr>
      <tr>
        <td id="L914" class="blob-num js-line-number" data-line-number="914"></td>
        <td id="LC914" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L915" class="blob-num js-line-number" data-line-number="915"></td>
        <td id="LC915" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Element} element DOM element which is the root of angular application.</span></td>
      </tr>
      <tr>
        <td id="L916" class="blob-num js-line-number" data-line-number="916"></td>
        <td id="LC916" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Array&lt;String|Function&gt;=} modules an array of module declarations. See: {@link angular.module modules}</span></td>
      </tr>
      <tr>
        <td id="L917" class="blob-num js-line-number" data-line-number="917"></td>
        <td id="LC917" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {angular.module.auto.$injector} Returns the newly created injector for this app.</span></td>
      </tr>
      <tr>
        <td id="L918" class="blob-num js-line-number" data-line-number="918"></td>
        <td id="LC918" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L919" class="blob-num js-line-number" data-line-number="919"></td>
        <td id="LC919" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">bootstrap</span>(<span class="pl-smi">element</span>, <span class="pl-smi">modules</span>) {</td>
      </tr>
      <tr>
        <td id="L920" class="blob-num js-line-number" data-line-number="920"></td>
        <td id="LC920" class="blob-code blob-code-inner js-file-line">  element <span class="pl-k">=</span> jqLite(element);</td>
      </tr>
      <tr>
        <td id="L921" class="blob-num js-line-number" data-line-number="921"></td>
        <td id="LC921" class="blob-code blob-code-inner js-file-line">  modules <span class="pl-k">=</span> modules <span class="pl-k">||</span> [];</td>
      </tr>
      <tr>
        <td id="L922" class="blob-num js-line-number" data-line-number="922"></td>
        <td id="LC922" class="blob-code blob-code-inner js-file-line">  modules.<span class="pl-c1">unshift</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>ng<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L923" class="blob-num js-line-number" data-line-number="923"></td>
        <td id="LC923" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> injector <span class="pl-k">=</span> createInjector(modules);</td>
      </tr>
      <tr>
        <td id="L924" class="blob-num js-line-number" data-line-number="924"></td>
        <td id="LC924" class="blob-code blob-code-inner js-file-line">  injector.invoke(</td>
      </tr>
      <tr>
        <td id="L925" class="blob-num js-line-number" data-line-number="925"></td>
        <td id="LC925" class="blob-code blob-code-inner js-file-line">    [<span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$compile<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">compile</span>, <span class="pl-smi">injector</span>){</td>
      </tr>
      <tr>
        <td id="L926" class="blob-num js-line-number" data-line-number="926"></td>
        <td id="LC926" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L927" class="blob-num js-line-number" data-line-number="927"></td>
        <td id="LC927" class="blob-code blob-code-inner js-file-line">        element.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, injector);</td>
      </tr>
      <tr>
        <td id="L928" class="blob-num js-line-number" data-line-number="928"></td>
        <td id="LC928" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">compile</span>(element)(scope);</td>
      </tr>
      <tr>
        <td id="L929" class="blob-num js-line-number" data-line-number="929"></td>
        <td id="LC929" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L930" class="blob-num js-line-number" data-line-number="930"></td>
        <td id="LC930" class="blob-code blob-code-inner js-file-line">    }]</td>
      </tr>
      <tr>
        <td id="L931" class="blob-num js-line-number" data-line-number="931"></td>
        <td id="LC931" class="blob-code blob-code-inner js-file-line">  );</td>
      </tr>
      <tr>
        <td id="L932" class="blob-num js-line-number" data-line-number="932"></td>
        <td id="LC932" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> injector;</td>
      </tr>
      <tr>
        <td id="L933" class="blob-num js-line-number" data-line-number="933"></td>
        <td id="LC933" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L934" class="blob-num js-line-number" data-line-number="934"></td>
        <td id="LC934" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L935" class="blob-num js-line-number" data-line-number="935"></td>
        <td id="LC935" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">SNAKE_CASE_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span><span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L936" class="blob-num js-line-number" data-line-number="936"></td>
        <td id="LC936" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">snake_case</span>(<span class="pl-smi">name</span>, <span class="pl-smi">separator</span>){</td>
      </tr>
      <tr>
        <td id="L937" class="blob-num js-line-number" data-line-number="937"></td>
        <td id="LC937" class="blob-code blob-code-inner js-file-line">  separator <span class="pl-k">=</span> separator <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>_<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L938" class="blob-num js-line-number" data-line-number="938"></td>
        <td id="LC938" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> name.<span class="pl-c1">replace</span>(<span class="pl-c1">SNAKE_CASE_REGEXP</span>, <span class="pl-k">function</span>(<span class="pl-smi">letter</span>, <span class="pl-smi">pos</span>) {</td>
      </tr>
      <tr>
        <td id="L939" class="blob-num js-line-number" data-line-number="939"></td>
        <td id="LC939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> (pos <span class="pl-k">?</span> separator <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> letter.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L940" class="blob-num js-line-number" data-line-number="940"></td>
        <td id="LC940" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L941" class="blob-num js-line-number" data-line-number="941"></td>
        <td id="LC941" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L942" class="blob-num js-line-number" data-line-number="942"></td>
        <td id="LC942" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L943" class="blob-num js-line-number" data-line-number="943"></td>
        <td id="LC943" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">bindJQuery</span>() {</td>
      </tr>
      <tr>
        <td id="L944" class="blob-num js-line-number" data-line-number="944"></td>
        <td id="LC944" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// bind to jQuery if present;</span></td>
      </tr>
      <tr>
        <td id="L945" class="blob-num js-line-number" data-line-number="945"></td>
        <td id="LC945" class="blob-code blob-code-inner js-file-line">  jQuery <span class="pl-k">=</span> <span class="pl-c1">window</span>.jQuery;</td>
      </tr>
      <tr>
        <td id="L946" class="blob-num js-line-number" data-line-number="946"></td>
        <td id="LC946" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// reset to jQuery or default to us.</span></td>
      </tr>
      <tr>
        <td id="L947" class="blob-num js-line-number" data-line-number="947"></td>
        <td id="LC947" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (jQuery) {</td>
      </tr>
      <tr>
        <td id="L948" class="blob-num js-line-number" data-line-number="948"></td>
        <td id="LC948" class="blob-code blob-code-inner js-file-line">    jqLite <span class="pl-k">=</span> jQuery;</td>
      </tr>
      <tr>
        <td id="L949" class="blob-num js-line-number" data-line-number="949"></td>
        <td id="LC949" class="blob-code blob-code-inner js-file-line">    extend(jQuery.fn, {</td>
      </tr>
      <tr>
        <td id="L950" class="blob-num js-line-number" data-line-number="950"></td>
        <td id="LC950" class="blob-code blob-code-inner js-file-line">      scope<span class="pl-k">:</span> JQLitePrototype.<span class="pl-c1">scope</span>,</td>
      </tr>
      <tr>
        <td id="L951" class="blob-num js-line-number" data-line-number="951"></td>
        <td id="LC951" class="blob-code blob-code-inner js-file-line">      controller<span class="pl-k">:</span> JQLitePrototype.controller,</td>
      </tr>
      <tr>
        <td id="L952" class="blob-num js-line-number" data-line-number="952"></td>
        <td id="LC952" class="blob-code blob-code-inner js-file-line">      injector<span class="pl-k">:</span> JQLitePrototype.injector,</td>
      </tr>
      <tr>
        <td id="L953" class="blob-num js-line-number" data-line-number="953"></td>
        <td id="LC953" class="blob-code blob-code-inner js-file-line">      inheritedData<span class="pl-k">:</span> JQLitePrototype.inheritedData</td>
      </tr>
      <tr>
        <td id="L954" class="blob-num js-line-number" data-line-number="954"></td>
        <td id="LC954" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L955" class="blob-num js-line-number" data-line-number="955"></td>
        <td id="LC955" class="blob-code blob-code-inner js-file-line">    JQLitePatchJQueryRemove(<span class="pl-s"><span class="pl-pds">&#39;</span>remove<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L956" class="blob-num js-line-number" data-line-number="956"></td>
        <td id="LC956" class="blob-code blob-code-inner js-file-line">    JQLitePatchJQueryRemove(<span class="pl-s"><span class="pl-pds">&#39;</span>empty<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L957" class="blob-num js-line-number" data-line-number="957"></td>
        <td id="LC957" class="blob-code blob-code-inner js-file-line">    JQLitePatchJQueryRemove(<span class="pl-s"><span class="pl-pds">&#39;</span>html<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L958" class="blob-num js-line-number" data-line-number="958"></td>
        <td id="LC958" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L959" class="blob-num js-line-number" data-line-number="959"></td>
        <td id="LC959" class="blob-code blob-code-inner js-file-line">    jqLite <span class="pl-k">=</span> JQLite;</td>
      </tr>
      <tr>
        <td id="L960" class="blob-num js-line-number" data-line-number="960"></td>
        <td id="LC960" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L961" class="blob-num js-line-number" data-line-number="961"></td>
        <td id="LC961" class="blob-code blob-code-inner js-file-line">  angular.element <span class="pl-k">=</span> jqLite;</td>
      </tr>
      <tr>
        <td id="L962" class="blob-num js-line-number" data-line-number="962"></td>
        <td id="LC962" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L963" class="blob-num js-line-number" data-line-number="963"></td>
        <td id="LC963" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L964" class="blob-num js-line-number" data-line-number="964"></td>
        <td id="LC964" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L965" class="blob-num js-line-number" data-line-number="965"></td>
        <td id="LC965" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * throw error of the argument is falsy.</span></td>
      </tr>
      <tr>
        <td id="L966" class="blob-num js-line-number" data-line-number="966"></td>
        <td id="LC966" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L967" class="blob-num js-line-number" data-line-number="967"></td>
        <td id="LC967" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">assertArg</span>(<span class="pl-smi">arg</span>, <span class="pl-smi">name</span>, <span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L968" class="blob-num js-line-number" data-line-number="968"></td>
        <td id="LC968" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>arg) {</td>
      </tr>
      <tr>
        <td id="L969" class="blob-num js-line-number" data-line-number="969"></td>
        <td id="LC969" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Argument &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (name <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; is <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> (reason <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&quot;</span>required<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L970" class="blob-num js-line-number" data-line-number="970"></td>
        <td id="LC970" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L971" class="blob-num js-line-number" data-line-number="971"></td>
        <td id="LC971" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> arg;</td>
      </tr>
      <tr>
        <td id="L972" class="blob-num js-line-number" data-line-number="972"></td>
        <td id="LC972" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L973" class="blob-num js-line-number" data-line-number="973"></td>
        <td id="LC973" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L974" class="blob-num js-line-number" data-line-number="974"></td>
        <td id="LC974" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">assertArgFn</span>(<span class="pl-smi">arg</span>, <span class="pl-smi">name</span>, <span class="pl-smi">acceptArrayAnnotation</span>) {</td>
      </tr>
      <tr>
        <td id="L975" class="blob-num js-line-number" data-line-number="975"></td>
        <td id="LC975" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (acceptArrayAnnotation <span class="pl-k">&amp;&amp;</span> isArray(arg)) {</td>
      </tr>
      <tr>
        <td id="L976" class="blob-num js-line-number" data-line-number="976"></td>
        <td id="LC976" class="blob-code blob-code-inner js-file-line">      arg <span class="pl-k">=</span> arg[arg.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L977" class="blob-num js-line-number" data-line-number="977"></td>
        <td id="LC977" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L978" class="blob-num js-line-number" data-line-number="978"></td>
        <td id="LC978" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L979" class="blob-num js-line-number" data-line-number="979"></td>
        <td id="LC979" class="blob-code blob-code-inner js-file-line">  assertArg(isFunction(arg), name, <span class="pl-s"><span class="pl-pds">&#39;</span>not a function, got <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L980" class="blob-num js-line-number" data-line-number="980"></td>
        <td id="LC980" class="blob-code blob-code-inner js-file-line">      (arg <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> arg <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> arg.<span class="pl-c1">constructor</span>.<span class="pl-c1">name</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Object<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-k">typeof</span> arg));</td>
      </tr>
      <tr>
        <td id="L981" class="blob-num js-line-number" data-line-number="981"></td>
        <td id="LC981" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> arg;</td>
      </tr>
      <tr>
        <td id="L982" class="blob-num js-line-number" data-line-number="982"></td>
        <td id="LC982" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L983" class="blob-num js-line-number" data-line-number="983"></td>
        <td id="LC983" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L984" class="blob-num js-line-number" data-line-number="984"></td>
        <td id="LC984" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L985" class="blob-num js-line-number" data-line-number="985"></td>
        <td id="LC985" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc interface</span></td>
      </tr>
      <tr>
        <td id="L986" class="blob-num js-line-number" data-line-number="986"></td>
        <td id="LC986" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.Module</span></td>
      </tr>
      <tr>
        <td id="L987" class="blob-num js-line-number" data-line-number="987"></td>
        <td id="LC987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L988" class="blob-num js-line-number" data-line-number="988"></td>
        <td id="LC988" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L989" class="blob-num js-line-number" data-line-number="989"></td>
        <td id="LC989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Interface for configuring angular {@link angular.module modules}.</span></td>
      </tr>
      <tr>
        <td id="L990" class="blob-num js-line-number" data-line-number="990"></td>
        <td id="LC990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L991" class="blob-num js-line-number" data-line-number="991"></td>
        <td id="LC991" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L992" class="blob-num js-line-number" data-line-number="992"></td>
        <td id="LC992" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">setupModuleLoader</span>(<span class="pl-smi">window</span>) {</td>
      </tr>
      <tr>
        <td id="L993" class="blob-num js-line-number" data-line-number="993"></td>
        <td id="LC993" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L994" class="blob-num js-line-number" data-line-number="994"></td>
        <td id="LC994" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">ensure</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">name</span>, <span class="pl-smi">factory</span>) {</td>
      </tr>
      <tr>
        <td id="L995" class="blob-num js-line-number" data-line-number="995"></td>
        <td id="LC995" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> obj[name] <span class="pl-k">||</span> (obj[name] <span class="pl-k">=</span> factory());</td>
      </tr>
      <tr>
        <td id="L996" class="blob-num js-line-number" data-line-number="996"></td>
        <td id="LC996" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L997" class="blob-num js-line-number" data-line-number="997"></td>
        <td id="LC997" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L998" class="blob-num js-line-number" data-line-number="998"></td>
        <td id="LC998" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> ensure(ensure(<span class="pl-c1">window</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>angular<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">Object</span>), <span class="pl-s"><span class="pl-pds">&#39;</span>module<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L999" class="blob-num js-line-number" data-line-number="999"></td>
        <td id="LC999" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/** <span class="pl-k">@type</span> {Object.&lt;string, angular.Module&gt;} */</span></td>
      </tr>
      <tr>
        <td id="L1000" class="blob-num js-line-number" data-line-number="1000"></td>
        <td id="LC1000" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> modules <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1001" class="blob-num js-line-number" data-line-number="1001"></td>
        <td id="LC1001" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1002" class="blob-num js-line-number" data-line-number="1002"></td>
        <td id="LC1002" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1003" class="blob-num js-line-number" data-line-number="1003"></td>
        <td id="LC1003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L1004" class="blob-num js-line-number" data-line-number="1004"></td>
        <td id="LC1004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module</span></td>
      </tr>
      <tr>
        <td id="L1005" class="blob-num js-line-number" data-line-number="1005"></td>
        <td id="LC1005" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1006" class="blob-num js-line-number" data-line-number="1006"></td>
        <td id="LC1006" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1007" class="blob-num js-line-number" data-line-number="1007"></td>
        <td id="LC1007" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The `angular.module` is a global place for creating and registering Angular modules. All</span></td>
      </tr>
      <tr>
        <td id="L1008" class="blob-num js-line-number" data-line-number="1008"></td>
        <td id="LC1008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * modules (angular core or 3rd party) that should be available to an application must be</span></td>
      </tr>
      <tr>
        <td id="L1009" class="blob-num js-line-number" data-line-number="1009"></td>
        <td id="LC1009" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * registered using this mechanism.</span></td>
      </tr>
      <tr>
        <td id="L1010" class="blob-num js-line-number" data-line-number="1010"></td>
        <td id="LC1010" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1011" class="blob-num js-line-number" data-line-number="1011"></td>
        <td id="LC1011" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1012" class="blob-num js-line-number" data-line-number="1012"></td>
        <td id="LC1012" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Module</span></td>
      </tr>
      <tr>
        <td id="L1013" class="blob-num js-line-number" data-line-number="1013"></td>
        <td id="LC1013" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1014" class="blob-num js-line-number" data-line-number="1014"></td>
        <td id="LC1014" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A module is a collocation of services, directives, filters, and configure information. Module</span></td>
      </tr>
      <tr>
        <td id="L1015" class="blob-num js-line-number" data-line-number="1015"></td>
        <td id="LC1015" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * is used to configure the {@link angular.module.AUTO.$injector $injector}.</span></td>
      </tr>
      <tr>
        <td id="L1016" class="blob-num js-line-number" data-line-number="1016"></td>
        <td id="LC1016" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1017" class="blob-num js-line-number" data-line-number="1017"></td>
        <td id="LC1017" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L1018" class="blob-num js-line-number" data-line-number="1018"></td>
        <td id="LC1018" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * // Create a new module</span></td>
      </tr>
      <tr>
        <td id="L1019" class="blob-num js-line-number" data-line-number="1019"></td>
        <td id="LC1019" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * var myModule = angular.module(&#39;myModule&#39;, []);</span></td>
      </tr>
      <tr>
        <td id="L1020" class="blob-num js-line-number" data-line-number="1020"></td>
        <td id="LC1020" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1021" class="blob-num js-line-number" data-line-number="1021"></td>
        <td id="LC1021" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * // register a new service</span></td>
      </tr>
      <tr>
        <td id="L1022" class="blob-num js-line-number" data-line-number="1022"></td>
        <td id="LC1022" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * myModule.value(&#39;appName&#39;, &#39;MyCoolApp&#39;);</span></td>
      </tr>
      <tr>
        <td id="L1023" class="blob-num js-line-number" data-line-number="1023"></td>
        <td id="LC1023" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1024" class="blob-num js-line-number" data-line-number="1024"></td>
        <td id="LC1024" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * // configure existing services inside initialization blocks.</span></td>
      </tr>
      <tr>
        <td id="L1025" class="blob-num js-line-number" data-line-number="1025"></td>
        <td id="LC1025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * myModule.config(function($locationProvider) {</span></td>
      </tr>
      <tr>
        <td id="L1026" class="blob-num js-line-number" data-line-number="1026"></td>
        <td id="LC1026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   // Configure existing providers</span></td>
      </tr>
      <tr>
        <td id="L1027" class="blob-num js-line-number" data-line-number="1027"></td>
        <td id="LC1027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $locationProvider.hashPrefix(&#39;!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L1028" class="blob-num js-line-number" data-line-number="1028"></td>
        <td id="LC1028" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * });</span></td>
      </tr>
      <tr>
        <td id="L1029" class="blob-num js-line-number" data-line-number="1029"></td>
        <td id="LC1029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L1030" class="blob-num js-line-number" data-line-number="1030"></td>
        <td id="LC1030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1031" class="blob-num js-line-number" data-line-number="1031"></td>
        <td id="LC1031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Then you can create an injector and load your modules like this:</span></td>
      </tr>
      <tr>
        <td id="L1032" class="blob-num js-line-number" data-line-number="1032"></td>
        <td id="LC1032" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1033" class="blob-num js-line-number" data-line-number="1033"></td>
        <td id="LC1033" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L1034" class="blob-num js-line-number" data-line-number="1034"></td>
        <td id="LC1034" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * var injector = angular.injector([&#39;ng&#39;, &#39;MyModule&#39;])</span></td>
      </tr>
      <tr>
        <td id="L1035" class="blob-num js-line-number" data-line-number="1035"></td>
        <td id="LC1035" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L1036" class="blob-num js-line-number" data-line-number="1036"></td>
        <td id="LC1036" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1037" class="blob-num js-line-number" data-line-number="1037"></td>
        <td id="LC1037" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * However it&#39;s more likely that you&#39;ll just use</span></td>
      </tr>
      <tr>
        <td id="L1038" class="blob-num js-line-number" data-line-number="1038"></td>
        <td id="LC1038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.ng.$compileProvider.directive.ngApp ngApp} or</span></td>
      </tr>
      <tr>
        <td id="L1039" class="blob-num js-line-number" data-line-number="1039"></td>
        <td id="LC1039" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.bootstrap} to simplify this process for you.</span></td>
      </tr>
      <tr>
        <td id="L1040" class="blob-num js-line-number" data-line-number="1040"></td>
        <td id="LC1040" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L1041" class="blob-num js-line-number" data-line-number="1041"></td>
        <td id="LC1041" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {!string} name The name of the module to create or retrieve.</span></td>
      </tr>
      <tr>
        <td id="L1042" class="blob-num js-line-number" data-line-number="1042"></td>
        <td id="LC1042" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Array.&lt;string&gt;=} requires If specified then new module is being created. If unspecified then the</span></td>
      </tr>
      <tr>
        <td id="L1043" class="blob-num js-line-number" data-line-number="1043"></td>
        <td id="LC1043" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        the module is being retrieved for further configuration.</span></td>
      </tr>
      <tr>
        <td id="L1044" class="blob-num js-line-number" data-line-number="1044"></td>
        <td id="LC1044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Function} configFn Option configuration function for the module. Same as</span></td>
      </tr>
      <tr>
        <td id="L1045" class="blob-num js-line-number" data-line-number="1045"></td>
        <td id="LC1045" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        {@link angular.Module#config Module#config()}.</span></td>
      </tr>
      <tr>
        <td id="L1046" class="blob-num js-line-number" data-line-number="1046"></td>
        <td id="LC1046" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {module} new module with the {@link angular.Module} api.</span></td>
      </tr>
      <tr>
        <td id="L1047" class="blob-num js-line-number" data-line-number="1047"></td>
        <td id="LC1047" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L1048" class="blob-num js-line-number" data-line-number="1048"></td>
        <td id="LC1048" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span> <span class="pl-en">module</span>(<span class="pl-smi">name</span>, <span class="pl-smi">requires</span>, <span class="pl-smi">configFn</span>) {</td>
      </tr>
      <tr>
        <td id="L1049" class="blob-num js-line-number" data-line-number="1049"></td>
        <td id="LC1049" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (requires <span class="pl-k">&amp;&amp;</span> modules.hasOwnProperty(name)) {</td>
      </tr>
      <tr>
        <td id="L1050" class="blob-num js-line-number" data-line-number="1050"></td>
        <td id="LC1050" class="blob-code blob-code-inner js-file-line">        modules[name] <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1051" class="blob-num js-line-number" data-line-number="1051"></td>
        <td id="LC1051" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1052" class="blob-num js-line-number" data-line-number="1052"></td>
        <td id="LC1052" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ensure(modules, name, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1053" class="blob-num js-line-number" data-line-number="1053"></td>
        <td id="LC1053" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>requires) {</td>
      </tr>
      <tr>
        <td id="L1054" class="blob-num js-line-number" data-line-number="1054"></td>
        <td id="LC1054" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>No module: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name);</td>
      </tr>
      <tr>
        <td id="L1055" class="blob-num js-line-number" data-line-number="1055"></td>
        <td id="LC1055" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1056" class="blob-num js-line-number" data-line-number="1056"></td>
        <td id="LC1056" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1057" class="blob-num js-line-number" data-line-number="1057"></td>
        <td id="LC1057" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">/** <span class="pl-k">@type</span> {!Array.&lt;Array.&lt;*&gt;&gt;} */</span></td>
      </tr>
      <tr>
        <td id="L1058" class="blob-num js-line-number" data-line-number="1058"></td>
        <td id="LC1058" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> invokeQueue <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1059" class="blob-num js-line-number" data-line-number="1059"></td>
        <td id="LC1059" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1060" class="blob-num js-line-number" data-line-number="1060"></td>
        <td id="LC1060" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">/** <span class="pl-k">@type</span> {!Array.&lt;Function&gt;} */</span></td>
      </tr>
      <tr>
        <td id="L1061" class="blob-num js-line-number" data-line-number="1061"></td>
        <td id="LC1061" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> runBlocks <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1062" class="blob-num js-line-number" data-line-number="1062"></td>
        <td id="LC1062" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1063" class="blob-num js-line-number" data-line-number="1063"></td>
        <td id="LC1063" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> config <span class="pl-k">=</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>invoke<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1064" class="blob-num js-line-number" data-line-number="1064"></td>
        <td id="LC1064" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1065" class="blob-num js-line-number" data-line-number="1065"></td>
        <td id="LC1065" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">/** <span class="pl-k">@type</span> {angular.Module} */</span></td>
      </tr>
      <tr>
        <td id="L1066" class="blob-num js-line-number" data-line-number="1066"></td>
        <td id="LC1066" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> moduleInstance <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1067" class="blob-num js-line-number" data-line-number="1067"></td>
        <td id="LC1067" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// Private state</span></td>
      </tr>
      <tr>
        <td id="L1068" class="blob-num js-line-number" data-line-number="1068"></td>
        <td id="LC1068" class="blob-code blob-code-inner js-file-line">          _invokeQueue<span class="pl-k">:</span> invokeQueue,</td>
      </tr>
      <tr>
        <td id="L1069" class="blob-num js-line-number" data-line-number="1069"></td>
        <td id="LC1069" class="blob-code blob-code-inner js-file-line">          _runBlocks<span class="pl-k">:</span> runBlocks,</td>
      </tr>
      <tr>
        <td id="L1070" class="blob-num js-line-number" data-line-number="1070"></td>
        <td id="LC1070" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1071" class="blob-num js-line-number" data-line-number="1071"></td>
        <td id="LC1071" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1072" class="blob-num js-line-number" data-line-number="1072"></td>
        <td id="LC1072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L1073" class="blob-num js-line-number" data-line-number="1073"></td>
        <td id="LC1073" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#requires</span></td>
      </tr>
      <tr>
        <td id="L1074" class="blob-num js-line-number" data-line-number="1074"></td>
        <td id="LC1074" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @propertyOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1075" class="blob-num js-line-number" data-line-number="1075"></td>
        <td id="LC1075" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@returns</span> {Array.&lt;string&gt;} List of module names which must be loaded before this module.</span></td>
      </tr>
      <tr>
        <td id="L1076" class="blob-num js-line-number" data-line-number="1076"></td>
        <td id="LC1076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1077" class="blob-num js-line-number" data-line-number="1077"></td>
        <td id="LC1077" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * Holds the list of modules which the injector will load before the current module is loaded.</span></td>
      </tr>
      <tr>
        <td id="L1078" class="blob-num js-line-number" data-line-number="1078"></td>
        <td id="LC1078" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1079" class="blob-num js-line-number" data-line-number="1079"></td>
        <td id="LC1079" class="blob-code blob-code-inner js-file-line">          requires<span class="pl-k">:</span> requires,</td>
      </tr>
      <tr>
        <td id="L1080" class="blob-num js-line-number" data-line-number="1080"></td>
        <td id="LC1080" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1081" class="blob-num js-line-number" data-line-number="1081"></td>
        <td id="LC1081" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1082" class="blob-num js-line-number" data-line-number="1082"></td>
        <td id="LC1082" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L1083" class="blob-num js-line-number" data-line-number="1083"></td>
        <td id="LC1083" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#name</span></td>
      </tr>
      <tr>
        <td id="L1084" class="blob-num js-line-number" data-line-number="1084"></td>
        <td id="LC1084" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @propertyOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1085" class="blob-num js-line-number" data-line-number="1085"></td>
        <td id="LC1085" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@returns</span> {string} Name of the module.</span></td>
      </tr>
      <tr>
        <td id="L1086" class="blob-num js-line-number" data-line-number="1086"></td>
        <td id="LC1086" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1087" class="blob-num js-line-number" data-line-number="1087"></td>
        <td id="LC1087" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1088" class="blob-num js-line-number" data-line-number="1088"></td>
        <td id="LC1088" class="blob-code blob-code-inner js-file-line">          name<span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L1089" class="blob-num js-line-number" data-line-number="1089"></td>
        <td id="LC1089" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1090" class="blob-num js-line-number" data-line-number="1090"></td>
        <td id="LC1090" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1091" class="blob-num js-line-number" data-line-number="1091"></td>
        <td id="LC1091" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1092" class="blob-num js-line-number" data-line-number="1092"></td>
        <td id="LC1092" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1093" class="blob-num js-line-number" data-line-number="1093"></td>
        <td id="LC1093" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#provider</span></td>
      </tr>
      <tr>
        <td id="L1094" class="blob-num js-line-number" data-line-number="1094"></td>
        <td id="LC1094" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1095" class="blob-num js-line-number" data-line-number="1095"></td>
        <td id="LC1095" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name service name</span></td>
      </tr>
      <tr>
        <td id="L1096" class="blob-num js-line-number" data-line-number="1096"></td>
        <td id="LC1096" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} providerType Construction function for creating new instance of the service.</span></td>
      </tr>
      <tr>
        <td id="L1097" class="blob-num js-line-number" data-line-number="1097"></td>
        <td id="LC1097" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1098" class="blob-num js-line-number" data-line-number="1098"></td>
        <td id="LC1098" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.AUTO.$provide#provider $provide.provider()}.</span></td>
      </tr>
      <tr>
        <td id="L1099" class="blob-num js-line-number" data-line-number="1099"></td>
        <td id="LC1099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1100" class="blob-num js-line-number" data-line-number="1100"></td>
        <td id="LC1100" class="blob-code blob-code-inner js-file-line">          provider<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>provider<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1101" class="blob-num js-line-number" data-line-number="1101"></td>
        <td id="LC1101" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1102" class="blob-num js-line-number" data-line-number="1102"></td>
        <td id="LC1102" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1103" class="blob-num js-line-number" data-line-number="1103"></td>
        <td id="LC1103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1104" class="blob-num js-line-number" data-line-number="1104"></td>
        <td id="LC1104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#factory</span></td>
      </tr>
      <tr>
        <td id="L1105" class="blob-num js-line-number" data-line-number="1105"></td>
        <td id="LC1105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1106" class="blob-num js-line-number" data-line-number="1106"></td>
        <td id="LC1106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name service name</span></td>
      </tr>
      <tr>
        <td id="L1107" class="blob-num js-line-number" data-line-number="1107"></td>
        <td id="LC1107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} providerFunction Function for creating new instance of the service.</span></td>
      </tr>
      <tr>
        <td id="L1108" class="blob-num js-line-number" data-line-number="1108"></td>
        <td id="LC1108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1109" class="blob-num js-line-number" data-line-number="1109"></td>
        <td id="LC1109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.AUTO.$provide#factory $provide.factory()}.</span></td>
      </tr>
      <tr>
        <td id="L1110" class="blob-num js-line-number" data-line-number="1110"></td>
        <td id="LC1110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1111" class="blob-num js-line-number" data-line-number="1111"></td>
        <td id="LC1111" class="blob-code blob-code-inner js-file-line">          factory<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>factory<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1112" class="blob-num js-line-number" data-line-number="1112"></td>
        <td id="LC1112" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1113" class="blob-num js-line-number" data-line-number="1113"></td>
        <td id="LC1113" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1114" class="blob-num js-line-number" data-line-number="1114"></td>
        <td id="LC1114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1115" class="blob-num js-line-number" data-line-number="1115"></td>
        <td id="LC1115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#service</span></td>
      </tr>
      <tr>
        <td id="L1116" class="blob-num js-line-number" data-line-number="1116"></td>
        <td id="LC1116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1117" class="blob-num js-line-number" data-line-number="1117"></td>
        <td id="LC1117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name service name</span></td>
      </tr>
      <tr>
        <td id="L1118" class="blob-num js-line-number" data-line-number="1118"></td>
        <td id="LC1118" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} constructor A constructor function that will be instantiated.</span></td>
      </tr>
      <tr>
        <td id="L1119" class="blob-num js-line-number" data-line-number="1119"></td>
        <td id="LC1119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1120" class="blob-num js-line-number" data-line-number="1120"></td>
        <td id="LC1120" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.AUTO.$provide#service $provide.service()}.</span></td>
      </tr>
      <tr>
        <td id="L1121" class="blob-num js-line-number" data-line-number="1121"></td>
        <td id="LC1121" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1122" class="blob-num js-line-number" data-line-number="1122"></td>
        <td id="LC1122" class="blob-code blob-code-inner js-file-line">          service<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>service<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1123" class="blob-num js-line-number" data-line-number="1123"></td>
        <td id="LC1123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1124" class="blob-num js-line-number" data-line-number="1124"></td>
        <td id="LC1124" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1125" class="blob-num js-line-number" data-line-number="1125"></td>
        <td id="LC1125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1126" class="blob-num js-line-number" data-line-number="1126"></td>
        <td id="LC1126" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#value</span></td>
      </tr>
      <tr>
        <td id="L1127" class="blob-num js-line-number" data-line-number="1127"></td>
        <td id="LC1127" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1128" class="blob-num js-line-number" data-line-number="1128"></td>
        <td id="LC1128" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name service name</span></td>
      </tr>
      <tr>
        <td id="L1129" class="blob-num js-line-number" data-line-number="1129"></td>
        <td id="LC1129" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {*} object Service instance object.</span></td>
      </tr>
      <tr>
        <td id="L1130" class="blob-num js-line-number" data-line-number="1130"></td>
        <td id="LC1130" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1131" class="blob-num js-line-number" data-line-number="1131"></td>
        <td id="LC1131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.AUTO.$provide#value $provide.value()}.</span></td>
      </tr>
      <tr>
        <td id="L1132" class="blob-num js-line-number" data-line-number="1132"></td>
        <td id="LC1132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1133" class="blob-num js-line-number" data-line-number="1133"></td>
        <td id="LC1133" class="blob-code blob-code-inner js-file-line">          value<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1134" class="blob-num js-line-number" data-line-number="1134"></td>
        <td id="LC1134" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1135" class="blob-num js-line-number" data-line-number="1135"></td>
        <td id="LC1135" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1136" class="blob-num js-line-number" data-line-number="1136"></td>
        <td id="LC1136" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1137" class="blob-num js-line-number" data-line-number="1137"></td>
        <td id="LC1137" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#constant</span></td>
      </tr>
      <tr>
        <td id="L1138" class="blob-num js-line-number" data-line-number="1138"></td>
        <td id="LC1138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1139" class="blob-num js-line-number" data-line-number="1139"></td>
        <td id="LC1139" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name constant name</span></td>
      </tr>
      <tr>
        <td id="L1140" class="blob-num js-line-number" data-line-number="1140"></td>
        <td id="LC1140" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {*} object Constant value.</span></td>
      </tr>
      <tr>
        <td id="L1141" class="blob-num js-line-number" data-line-number="1141"></td>
        <td id="LC1141" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1142" class="blob-num js-line-number" data-line-number="1142"></td>
        <td id="LC1142" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * Because the constant are fixed, they get applied before other provide methods.</span></td>
      </tr>
      <tr>
        <td id="L1143" class="blob-num js-line-number" data-line-number="1143"></td>
        <td id="LC1143" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.AUTO.$provide#constant $provide.constant()}.</span></td>
      </tr>
      <tr>
        <td id="L1144" class="blob-num js-line-number" data-line-number="1144"></td>
        <td id="LC1144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1145" class="blob-num js-line-number" data-line-number="1145"></td>
        <td id="LC1145" class="blob-code blob-code-inner js-file-line">          constant<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>constant<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>unshift<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1146" class="blob-num js-line-number" data-line-number="1146"></td>
        <td id="LC1146" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1147" class="blob-num js-line-number" data-line-number="1147"></td>
        <td id="LC1147" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1148" class="blob-num js-line-number" data-line-number="1148"></td>
        <td id="LC1148" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1149" class="blob-num js-line-number" data-line-number="1149"></td>
        <td id="LC1149" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#filter</span></td>
      </tr>
      <tr>
        <td id="L1150" class="blob-num js-line-number" data-line-number="1150"></td>
        <td id="LC1150" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1151" class="blob-num js-line-number" data-line-number="1151"></td>
        <td id="LC1151" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name Filter name.</span></td>
      </tr>
      <tr>
        <td id="L1152" class="blob-num js-line-number" data-line-number="1152"></td>
        <td id="LC1152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} filterFactory Factory function for creating new instance of filter.</span></td>
      </tr>
      <tr>
        <td id="L1153" class="blob-num js-line-number" data-line-number="1153"></td>
        <td id="LC1153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1154" class="blob-num js-line-number" data-line-number="1154"></td>
        <td id="LC1154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.ng.$filterProvider#register $filterProvider.register()}.</span></td>
      </tr>
      <tr>
        <td id="L1155" class="blob-num js-line-number" data-line-number="1155"></td>
        <td id="LC1155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1156" class="blob-num js-line-number" data-line-number="1156"></td>
        <td id="LC1156" class="blob-code blob-code-inner js-file-line">          filter<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$filterProvider<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>register<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1157" class="blob-num js-line-number" data-line-number="1157"></td>
        <td id="LC1157" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1158" class="blob-num js-line-number" data-line-number="1158"></td>
        <td id="LC1158" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1159" class="blob-num js-line-number" data-line-number="1159"></td>
        <td id="LC1159" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1160" class="blob-num js-line-number" data-line-number="1160"></td>
        <td id="LC1160" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#controller</span></td>
      </tr>
      <tr>
        <td id="L1161" class="blob-num js-line-number" data-line-number="1161"></td>
        <td id="LC1161" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1162" class="blob-num js-line-number" data-line-number="1162"></td>
        <td id="LC1162" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name Controller name.</span></td>
      </tr>
      <tr>
        <td id="L1163" class="blob-num js-line-number" data-line-number="1163"></td>
        <td id="LC1163" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} constructor Controller constructor function.</span></td>
      </tr>
      <tr>
        <td id="L1164" class="blob-num js-line-number" data-line-number="1164"></td>
        <td id="LC1164" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1165" class="blob-num js-line-number" data-line-number="1165"></td>
        <td id="LC1165" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.ng.$controllerProvider#register $controllerProvider.register()}.</span></td>
      </tr>
      <tr>
        <td id="L1166" class="blob-num js-line-number" data-line-number="1166"></td>
        <td id="LC1166" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1167" class="blob-num js-line-number" data-line-number="1167"></td>
        <td id="LC1167" class="blob-code blob-code-inner js-file-line">          controller<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$controllerProvider<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>register<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1168" class="blob-num js-line-number" data-line-number="1168"></td>
        <td id="LC1168" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1169" class="blob-num js-line-number" data-line-number="1169"></td>
        <td id="LC1169" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1170" class="blob-num js-line-number" data-line-number="1170"></td>
        <td id="LC1170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1171" class="blob-num js-line-number" data-line-number="1171"></td>
        <td id="LC1171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#directive</span></td>
      </tr>
      <tr>
        <td id="L1172" class="blob-num js-line-number" data-line-number="1172"></td>
        <td id="LC1172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1173" class="blob-num js-line-number" data-line-number="1173"></td>
        <td id="LC1173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {string} name directive name</span></td>
      </tr>
      <tr>
        <td id="L1174" class="blob-num js-line-number" data-line-number="1174"></td>
        <td id="LC1174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} directiveFactory Factory function for creating new instance of</span></td>
      </tr>
      <tr>
        <td id="L1175" class="blob-num js-line-number" data-line-number="1175"></td>
        <td id="LC1175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * directives.</span></td>
      </tr>
      <tr>
        <td id="L1176" class="blob-num js-line-number" data-line-number="1176"></td>
        <td id="LC1176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1177" class="blob-num js-line-number" data-line-number="1177"></td>
        <td id="LC1177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * See {@link angular.module.ng.$compileProvider.directive $compileProvider.directive()}.</span></td>
      </tr>
      <tr>
        <td id="L1178" class="blob-num js-line-number" data-line-number="1178"></td>
        <td id="LC1178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1179" class="blob-num js-line-number" data-line-number="1179"></td>
        <td id="LC1179" class="blob-code blob-code-inner js-file-line">          directive<span class="pl-k">:</span> invokeLater(<span class="pl-s"><span class="pl-pds">&#39;</span>$compileProvider<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>directive<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L1180" class="blob-num js-line-number" data-line-number="1180"></td>
        <td id="LC1180" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1181" class="blob-num js-line-number" data-line-number="1181"></td>
        <td id="LC1181" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1182" class="blob-num js-line-number" data-line-number="1182"></td>
        <td id="LC1182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1183" class="blob-num js-line-number" data-line-number="1183"></td>
        <td id="LC1183" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#config</span></td>
      </tr>
      <tr>
        <td id="L1184" class="blob-num js-line-number" data-line-number="1184"></td>
        <td id="LC1184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1185" class="blob-num js-line-number" data-line-number="1185"></td>
        <td id="LC1185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} configFn Execute this function on module load. Useful for service</span></td>
      </tr>
      <tr>
        <td id="L1186" class="blob-num js-line-number" data-line-number="1186"></td>
        <td id="LC1186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           *    configuration.</span></td>
      </tr>
      <tr>
        <td id="L1187" class="blob-num js-line-number" data-line-number="1187"></td>
        <td id="LC1187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1188" class="blob-num js-line-number" data-line-number="1188"></td>
        <td id="LC1188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * Use this method to register work which needs to be performed on module loading.</span></td>
      </tr>
      <tr>
        <td id="L1189" class="blob-num js-line-number" data-line-number="1189"></td>
        <td id="LC1189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1190" class="blob-num js-line-number" data-line-number="1190"></td>
        <td id="LC1190" class="blob-code blob-code-inner js-file-line">          config<span class="pl-k">:</span> config,</td>
      </tr>
      <tr>
        <td id="L1191" class="blob-num js-line-number" data-line-number="1191"></td>
        <td id="LC1191" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1192" class="blob-num js-line-number" data-line-number="1192"></td>
        <td id="LC1192" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1193" class="blob-num js-line-number" data-line-number="1193"></td>
        <td id="LC1193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L1194" class="blob-num js-line-number" data-line-number="1194"></td>
        <td id="LC1194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.Module#run</span></td>
      </tr>
      <tr>
        <td id="L1195" class="blob-num js-line-number" data-line-number="1195"></td>
        <td id="LC1195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.Module</span></td>
      </tr>
      <tr>
        <td id="L1196" class="blob-num js-line-number" data-line-number="1196"></td>
        <td id="LC1196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@param</span> {Function} initializationFn Execute this function after injector creation.</span></td>
      </tr>
      <tr>
        <td id="L1197" class="blob-num js-line-number" data-line-number="1197"></td>
        <td id="LC1197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           *    Useful for application initialization.</span></td>
      </tr>
      <tr>
        <td id="L1198" class="blob-num js-line-number" data-line-number="1198"></td>
        <td id="LC1198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1199" class="blob-num js-line-number" data-line-number="1199"></td>
        <td id="LC1199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * Use this method to register work which needs to be performed when the injector with</span></td>
      </tr>
      <tr>
        <td id="L1200" class="blob-num js-line-number" data-line-number="1200"></td>
        <td id="LC1200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * with the current module is finished loading.</span></td>
      </tr>
      <tr>
        <td id="L1201" class="blob-num js-line-number" data-line-number="1201"></td>
        <td id="LC1201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L1202" class="blob-num js-line-number" data-line-number="1202"></td>
        <td id="LC1202" class="blob-code blob-code-inner js-file-line">          <span class="pl-en">run</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">block</span>) {</td>
      </tr>
      <tr>
        <td id="L1203" class="blob-num js-line-number" data-line-number="1203"></td>
        <td id="LC1203" class="blob-code blob-code-inner js-file-line">            runBlocks.<span class="pl-c1">push</span>(block);</td>
      </tr>
      <tr>
        <td id="L1204" class="blob-num js-line-number" data-line-number="1204"></td>
        <td id="LC1204" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1205" class="blob-num js-line-number" data-line-number="1205"></td>
        <td id="LC1205" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1206" class="blob-num js-line-number" data-line-number="1206"></td>
        <td id="LC1206" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L1207" class="blob-num js-line-number" data-line-number="1207"></td>
        <td id="LC1207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1208" class="blob-num js-line-number" data-line-number="1208"></td>
        <td id="LC1208" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (configFn) {</td>
      </tr>
      <tr>
        <td id="L1209" class="blob-num js-line-number" data-line-number="1209"></td>
        <td id="LC1209" class="blob-code blob-code-inner js-file-line">          config(configFn);</td>
      </tr>
      <tr>
        <td id="L1210" class="blob-num js-line-number" data-line-number="1210"></td>
        <td id="LC1210" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1211" class="blob-num js-line-number" data-line-number="1211"></td>
        <td id="LC1211" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1212" class="blob-num js-line-number" data-line-number="1212"></td>
        <td id="LC1212" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>  moduleInstance;</td>
      </tr>
      <tr>
        <td id="L1213" class="blob-num js-line-number" data-line-number="1213"></td>
        <td id="LC1213" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1214" class="blob-num js-line-number" data-line-number="1214"></td>
        <td id="LC1214" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1215" class="blob-num js-line-number" data-line-number="1215"></td>
        <td id="LC1215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> {string} provider</span></td>
      </tr>
      <tr>
        <td id="L1216" class="blob-num js-line-number" data-line-number="1216"></td>
        <td id="LC1216" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> {string} method</span></td>
      </tr>
      <tr>
        <td id="L1217" class="blob-num js-line-number" data-line-number="1217"></td>
        <td id="LC1217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@param</span> {String=} insertMethod</span></td>
      </tr>
      <tr>
        <td id="L1218" class="blob-num js-line-number" data-line-number="1218"></td>
        <td id="LC1218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@returns</span> {angular.Module}</span></td>
      </tr>
      <tr>
        <td id="L1219" class="blob-num js-line-number" data-line-number="1219"></td>
        <td id="LC1219" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         */</span></td>
      </tr>
      <tr>
        <td id="L1220" class="blob-num js-line-number" data-line-number="1220"></td>
        <td id="LC1220" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">invokeLater</span>(<span class="pl-smi">provider</span>, <span class="pl-smi">method</span>, <span class="pl-smi">insertMethod</span>) {</td>
      </tr>
      <tr>
        <td id="L1221" class="blob-num js-line-number" data-line-number="1221"></td>
        <td id="LC1221" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1222" class="blob-num js-line-number" data-line-number="1222"></td>
        <td id="LC1222" class="blob-code blob-code-inner js-file-line">            invokeQueue[insertMethod <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>push<span class="pl-pds">&#39;</span></span>]([provider, method, arguments]);</td>
      </tr>
      <tr>
        <td id="L1223" class="blob-num js-line-number" data-line-number="1223"></td>
        <td id="LC1223" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> moduleInstance;</td>
      </tr>
      <tr>
        <td id="L1224" class="blob-num js-line-number" data-line-number="1224"></td>
        <td id="LC1224" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1225" class="blob-num js-line-number" data-line-number="1225"></td>
        <td id="LC1225" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1226" class="blob-num js-line-number" data-line-number="1226"></td>
        <td id="LC1226" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1227" class="blob-num js-line-number" data-line-number="1227"></td>
        <td id="LC1227" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1228" class="blob-num js-line-number" data-line-number="1228"></td>
        <td id="LC1228" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1229" class="blob-num js-line-number" data-line-number="1229"></td>
        <td id="LC1229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1230" class="blob-num js-line-number" data-line-number="1230"></td>
        <td id="LC1230" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1231" class="blob-num js-line-number" data-line-number="1231"></td>
        <td id="LC1231" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1232" class="blob-num js-line-number" data-line-number="1232"></td>
        <td id="LC1232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1233" class="blob-num js-line-number" data-line-number="1233"></td>
        <td id="LC1233" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L1234" class="blob-num js-line-number" data-line-number="1234"></td>
        <td id="LC1234" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.version</span></td>
      </tr>
      <tr>
        <td id="L1235" class="blob-num js-line-number" data-line-number="1235"></td>
        <td id="LC1235" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1236" class="blob-num js-line-number" data-line-number="1236"></td>
        <td id="LC1236" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * An object that contains information about the current AngularJS version. This object has the</span></td>
      </tr>
      <tr>
        <td id="L1237" class="blob-num js-line-number" data-line-number="1237"></td>
        <td id="LC1237" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * following properties:</span></td>
      </tr>
      <tr>
        <td id="L1238" class="blob-num js-line-number" data-line-number="1238"></td>
        <td id="LC1238" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1239" class="blob-num js-line-number" data-line-number="1239"></td>
        <td id="LC1239" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `full` â `{string}` â Full version string, such as &quot;0.9.18&quot;.</span></td>
      </tr>
      <tr>
        <td id="L1240" class="blob-num js-line-number" data-line-number="1240"></td>
        <td id="LC1240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `major` â `{number}` â Major version number, such as &quot;0&quot;.</span></td>
      </tr>
      <tr>
        <td id="L1241" class="blob-num js-line-number" data-line-number="1241"></td>
        <td id="LC1241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `minor` â `{number}` â Minor version number, such as &quot;9&quot;.</span></td>
      </tr>
      <tr>
        <td id="L1242" class="blob-num js-line-number" data-line-number="1242"></td>
        <td id="LC1242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `dot` â `{number}` â Dot version number, such as &quot;18&quot;.</span></td>
      </tr>
      <tr>
        <td id="L1243" class="blob-num js-line-number" data-line-number="1243"></td>
        <td id="LC1243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `codeName` â `{string}` â Code name of the release, such as &quot;jiggling-armfat&quot;.</span></td>
      </tr>
      <tr>
        <td id="L1244" class="blob-num js-line-number" data-line-number="1244"></td>
        <td id="LC1244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1245" class="blob-num js-line-number" data-line-number="1245"></td>
        <td id="LC1245" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> version <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1246" class="blob-num js-line-number" data-line-number="1246"></td>
        <td id="LC1246" class="blob-code blob-code-inner js-file-line">  full<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>1.0.0rc6<span class="pl-pds">&#39;</span></span>,    <span class="pl-c">// all of these placeholder strings will be replaced by rake&#39;s</span></td>
      </tr>
      <tr>
        <td id="L1247" class="blob-num js-line-number" data-line-number="1247"></td>
        <td id="LC1247" class="blob-code blob-code-inner js-file-line">  major<span class="pl-k">:</span> <span class="pl-c1">1</span>,    <span class="pl-c">// compile task</span></td>
      </tr>
      <tr>
        <td id="L1248" class="blob-num js-line-number" data-line-number="1248"></td>
        <td id="LC1248" class="blob-code blob-code-inner js-file-line">  minor<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1249" class="blob-num js-line-number" data-line-number="1249"></td>
        <td id="LC1249" class="blob-code blob-code-inner js-file-line">  dot<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1250" class="blob-num js-line-number" data-line-number="1250"></td>
        <td id="LC1250" class="blob-code blob-code-inner js-file-line">  codeName<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>runny-nose<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L1251" class="blob-num js-line-number" data-line-number="1251"></td>
        <td id="LC1251" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1252" class="blob-num js-line-number" data-line-number="1252"></td>
        <td id="LC1252" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1253" class="blob-num js-line-number" data-line-number="1253"></td>
        <td id="LC1253" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1254" class="blob-num js-line-number" data-line-number="1254"></td>
        <td id="LC1254" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">publishExternalAPI</span>(<span class="pl-smi">angular</span>){</td>
      </tr>
      <tr>
        <td id="L1255" class="blob-num js-line-number" data-line-number="1255"></td>
        <td id="LC1255" class="blob-code blob-code-inner js-file-line">  extend(angular, {</td>
      </tr>
      <tr>
        <td id="L1256" class="blob-num js-line-number" data-line-number="1256"></td>
        <td id="LC1256" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>bootstrap<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> bootstrap,</td>
      </tr>
      <tr>
        <td id="L1257" class="blob-num js-line-number" data-line-number="1257"></td>
        <td id="LC1257" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>copy<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> copy,</td>
      </tr>
      <tr>
        <td id="L1258" class="blob-num js-line-number" data-line-number="1258"></td>
        <td id="LC1258" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>extend<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> extend,</td>
      </tr>
      <tr>
        <td id="L1259" class="blob-num js-line-number" data-line-number="1259"></td>
        <td id="LC1259" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>equals<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> equals,</td>
      </tr>
      <tr>
        <td id="L1260" class="blob-num js-line-number" data-line-number="1260"></td>
        <td id="LC1260" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>element<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> jqLite,</td>
      </tr>
      <tr>
        <td id="L1261" class="blob-num js-line-number" data-line-number="1261"></td>
        <td id="LC1261" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>forEach<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> forEach,</td>
      </tr>
      <tr>
        <td id="L1262" class="blob-num js-line-number" data-line-number="1262"></td>
        <td id="LC1262" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>injector<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> createInjector,</td>
      </tr>
      <tr>
        <td id="L1263" class="blob-num js-line-number" data-line-number="1263"></td>
        <td id="LC1263" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>noop<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span>noop,</td>
      </tr>
      <tr>
        <td id="L1264" class="blob-num js-line-number" data-line-number="1264"></td>
        <td id="LC1264" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>bind<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span>bind,</td>
      </tr>
      <tr>
        <td id="L1265" class="blob-num js-line-number" data-line-number="1265"></td>
        <td id="LC1265" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>toJson<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> toJson,</td>
      </tr>
      <tr>
        <td id="L1266" class="blob-num js-line-number" data-line-number="1266"></td>
        <td id="LC1266" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>fromJson<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> fromJson,</td>
      </tr>
      <tr>
        <td id="L1267" class="blob-num js-line-number" data-line-number="1267"></td>
        <td id="LC1267" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>identity<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span>identity,</td>
      </tr>
      <tr>
        <td id="L1268" class="blob-num js-line-number" data-line-number="1268"></td>
        <td id="LC1268" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isUndefined<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isUndefined,</td>
      </tr>
      <tr>
        <td id="L1269" class="blob-num js-line-number" data-line-number="1269"></td>
        <td id="LC1269" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isDefined<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isDefined,</td>
      </tr>
      <tr>
        <td id="L1270" class="blob-num js-line-number" data-line-number="1270"></td>
        <td id="LC1270" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isString<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isString,</td>
      </tr>
      <tr>
        <td id="L1271" class="blob-num js-line-number" data-line-number="1271"></td>
        <td id="LC1271" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isFunction<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isFunction,</td>
      </tr>
      <tr>
        <td id="L1272" class="blob-num js-line-number" data-line-number="1272"></td>
        <td id="LC1272" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isObject<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isObject,</td>
      </tr>
      <tr>
        <td id="L1273" class="blob-num js-line-number" data-line-number="1273"></td>
        <td id="LC1273" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isNumber<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isNumber,</td>
      </tr>
      <tr>
        <td id="L1274" class="blob-num js-line-number" data-line-number="1274"></td>
        <td id="LC1274" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isElement<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isElement,</td>
      </tr>
      <tr>
        <td id="L1275" class="blob-num js-line-number" data-line-number="1275"></td>
        <td id="LC1275" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isArray<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isArray,</td>
      </tr>
      <tr>
        <td id="L1276" class="blob-num js-line-number" data-line-number="1276"></td>
        <td id="LC1276" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>version<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> version,</td>
      </tr>
      <tr>
        <td id="L1277" class="blob-num js-line-number" data-line-number="1277"></td>
        <td id="LC1277" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>isDate<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> isDate,</td>
      </tr>
      <tr>
        <td id="L1278" class="blob-num js-line-number" data-line-number="1278"></td>
        <td id="LC1278" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>lowercase<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> lowercase,</td>
      </tr>
      <tr>
        <td id="L1279" class="blob-num js-line-number" data-line-number="1279"></td>
        <td id="LC1279" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>uppercase<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> uppercase,</td>
      </tr>
      <tr>
        <td id="L1280" class="blob-num js-line-number" data-line-number="1280"></td>
        <td id="LC1280" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>callbacks<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> {counter<span class="pl-k">:</span> <span class="pl-c1">0</span>}</td>
      </tr>
      <tr>
        <td id="L1281" class="blob-num js-line-number" data-line-number="1281"></td>
        <td id="LC1281" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L1282" class="blob-num js-line-number" data-line-number="1282"></td>
        <td id="LC1282" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1283" class="blob-num js-line-number" data-line-number="1283"></td>
        <td id="LC1283" class="blob-code blob-code-inner js-file-line">  angularModule <span class="pl-k">=</span> setupModuleLoader(<span class="pl-c1">window</span>);</td>
      </tr>
      <tr>
        <td id="L1284" class="blob-num js-line-number" data-line-number="1284"></td>
        <td id="LC1284" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L1285" class="blob-num js-line-number" data-line-number="1285"></td>
        <td id="LC1285" class="blob-code blob-code-inner js-file-line">    angularModule(<span class="pl-s"><span class="pl-pds">&#39;</span>ngLocale<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1286" class="blob-num js-line-number" data-line-number="1286"></td>
        <td id="LC1286" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L1287" class="blob-num js-line-number" data-line-number="1287"></td>
        <td id="LC1287" class="blob-code blob-code-inner js-file-line">    angularModule(<span class="pl-s"><span class="pl-pds">&#39;</span>ngLocale<span class="pl-pds">&#39;</span></span>, []).provider(<span class="pl-s"><span class="pl-pds">&#39;</span>$locale<span class="pl-pds">&#39;</span></span>, $LocaleProvider);</td>
      </tr>
      <tr>
        <td id="L1288" class="blob-num js-line-number" data-line-number="1288"></td>
        <td id="LC1288" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1289" class="blob-num js-line-number" data-line-number="1289"></td>
        <td id="LC1289" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1290" class="blob-num js-line-number" data-line-number="1290"></td>
        <td id="LC1290" class="blob-code blob-code-inner js-file-line">  angularModule(<span class="pl-s"><span class="pl-pds">&#39;</span>ng<span class="pl-pds">&#39;</span></span>, [<span class="pl-s"><span class="pl-pds">&#39;</span>ngLocale<span class="pl-pds">&#39;</span></span>], [<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L1291" class="blob-num js-line-number" data-line-number="1291"></td>
        <td id="LC1291" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">ngModule</span>(<span class="pl-smi">$provide</span>) {</td>
      </tr>
      <tr>
        <td id="L1292" class="blob-num js-line-number" data-line-number="1292"></td>
        <td id="LC1292" class="blob-code blob-code-inner js-file-line">      $provide.provider(<span class="pl-s"><span class="pl-pds">&#39;</span>$compile<span class="pl-pds">&#39;</span></span>, $CompileProvider).</td>
      </tr>
      <tr>
        <td id="L1293" class="blob-num js-line-number" data-line-number="1293"></td>
        <td id="LC1293" class="blob-code blob-code-inner js-file-line">        directive({</td>
      </tr>
      <tr>
        <td id="L1294" class="blob-num js-line-number" data-line-number="1294"></td>
        <td id="LC1294" class="blob-code blob-code-inner js-file-line">            a<span class="pl-k">:</span> htmlAnchorDirective,</td>
      </tr>
      <tr>
        <td id="L1295" class="blob-num js-line-number" data-line-number="1295"></td>
        <td id="LC1295" class="blob-code blob-code-inner js-file-line">            input<span class="pl-k">:</span> inputDirective,</td>
      </tr>
      <tr>
        <td id="L1296" class="blob-num js-line-number" data-line-number="1296"></td>
        <td id="LC1296" class="blob-code blob-code-inner js-file-line">            textarea<span class="pl-k">:</span> inputDirective,</td>
      </tr>
      <tr>
        <td id="L1297" class="blob-num js-line-number" data-line-number="1297"></td>
        <td id="LC1297" class="blob-code blob-code-inner js-file-line">            form<span class="pl-k">:</span> formDirective,</td>
      </tr>
      <tr>
        <td id="L1298" class="blob-num js-line-number" data-line-number="1298"></td>
        <td id="LC1298" class="blob-code blob-code-inner js-file-line">            script<span class="pl-k">:</span> scriptDirective,</td>
      </tr>
      <tr>
        <td id="L1299" class="blob-num js-line-number" data-line-number="1299"></td>
        <td id="LC1299" class="blob-code blob-code-inner js-file-line">            select<span class="pl-k">:</span> selectDirective,</td>
      </tr>
      <tr>
        <td id="L1300" class="blob-num js-line-number" data-line-number="1300"></td>
        <td id="LC1300" class="blob-code blob-code-inner js-file-line">            style<span class="pl-k">:</span> styleDirective,</td>
      </tr>
      <tr>
        <td id="L1301" class="blob-num js-line-number" data-line-number="1301"></td>
        <td id="LC1301" class="blob-code blob-code-inner js-file-line">            option<span class="pl-k">:</span> optionDirective,</td>
      </tr>
      <tr>
        <td id="L1302" class="blob-num js-line-number" data-line-number="1302"></td>
        <td id="LC1302" class="blob-code blob-code-inner js-file-line">            ngBind<span class="pl-k">:</span> ngBindDirective,</td>
      </tr>
      <tr>
        <td id="L1303" class="blob-num js-line-number" data-line-number="1303"></td>
        <td id="LC1303" class="blob-code blob-code-inner js-file-line">            ngBindHtmlUnsafe<span class="pl-k">:</span> ngBindHtmlUnsafeDirective,</td>
      </tr>
      <tr>
        <td id="L1304" class="blob-num js-line-number" data-line-number="1304"></td>
        <td id="LC1304" class="blob-code blob-code-inner js-file-line">            ngBindTemplate<span class="pl-k">:</span> ngBindTemplateDirective,</td>
      </tr>
      <tr>
        <td id="L1305" class="blob-num js-line-number" data-line-number="1305"></td>
        <td id="LC1305" class="blob-code blob-code-inner js-file-line">            ngClass<span class="pl-k">:</span> ngClassDirective,</td>
      </tr>
      <tr>
        <td id="L1306" class="blob-num js-line-number" data-line-number="1306"></td>
        <td id="LC1306" class="blob-code blob-code-inner js-file-line">            ngClassEven<span class="pl-k">:</span> ngClassEvenDirective,</td>
      </tr>
      <tr>
        <td id="L1307" class="blob-num js-line-number" data-line-number="1307"></td>
        <td id="LC1307" class="blob-code blob-code-inner js-file-line">            ngClassOdd<span class="pl-k">:</span> ngClassOddDirective,</td>
      </tr>
      <tr>
        <td id="L1308" class="blob-num js-line-number" data-line-number="1308"></td>
        <td id="LC1308" class="blob-code blob-code-inner js-file-line">            ngCloak<span class="pl-k">:</span> ngCloakDirective,</td>
      </tr>
      <tr>
        <td id="L1309" class="blob-num js-line-number" data-line-number="1309"></td>
        <td id="LC1309" class="blob-code blob-code-inner js-file-line">            ngController<span class="pl-k">:</span> ngControllerDirective,</td>
      </tr>
      <tr>
        <td id="L1310" class="blob-num js-line-number" data-line-number="1310"></td>
        <td id="LC1310" class="blob-code blob-code-inner js-file-line">            ngForm<span class="pl-k">:</span> ngFormDirective,</td>
      </tr>
      <tr>
        <td id="L1311" class="blob-num js-line-number" data-line-number="1311"></td>
        <td id="LC1311" class="blob-code blob-code-inner js-file-line">            ngHide<span class="pl-k">:</span> ngHideDirective,</td>
      </tr>
      <tr>
        <td id="L1312" class="blob-num js-line-number" data-line-number="1312"></td>
        <td id="LC1312" class="blob-code blob-code-inner js-file-line">            ngInclude<span class="pl-k">:</span> ngIncludeDirective,</td>
      </tr>
      <tr>
        <td id="L1313" class="blob-num js-line-number" data-line-number="1313"></td>
        <td id="LC1313" class="blob-code blob-code-inner js-file-line">            ngInit<span class="pl-k">:</span> ngInitDirective,</td>
      </tr>
      <tr>
        <td id="L1314" class="blob-num js-line-number" data-line-number="1314"></td>
        <td id="LC1314" class="blob-code blob-code-inner js-file-line">            ngNonBindable<span class="pl-k">:</span> ngNonBindableDirective,</td>
      </tr>
      <tr>
        <td id="L1315" class="blob-num js-line-number" data-line-number="1315"></td>
        <td id="LC1315" class="blob-code blob-code-inner js-file-line">            ngPluralize<span class="pl-k">:</span> ngPluralizeDirective,</td>
      </tr>
      <tr>
        <td id="L1316" class="blob-num js-line-number" data-line-number="1316"></td>
        <td id="LC1316" class="blob-code blob-code-inner js-file-line">            ngRepeat<span class="pl-k">:</span> ngRepeatDirective,</td>
      </tr>
      <tr>
        <td id="L1317" class="blob-num js-line-number" data-line-number="1317"></td>
        <td id="LC1317" class="blob-code blob-code-inner js-file-line">            ngShow<span class="pl-k">:</span> ngShowDirective,</td>
      </tr>
      <tr>
        <td id="L1318" class="blob-num js-line-number" data-line-number="1318"></td>
        <td id="LC1318" class="blob-code blob-code-inner js-file-line">            ngSubmit<span class="pl-k">:</span> ngSubmitDirective,</td>
      </tr>
      <tr>
        <td id="L1319" class="blob-num js-line-number" data-line-number="1319"></td>
        <td id="LC1319" class="blob-code blob-code-inner js-file-line">            ngStyle<span class="pl-k">:</span> ngStyleDirective,</td>
      </tr>
      <tr>
        <td id="L1320" class="blob-num js-line-number" data-line-number="1320"></td>
        <td id="LC1320" class="blob-code blob-code-inner js-file-line">            ngSwitch<span class="pl-k">:</span> ngSwitchDirective,</td>
      </tr>
      <tr>
        <td id="L1321" class="blob-num js-line-number" data-line-number="1321"></td>
        <td id="LC1321" class="blob-code blob-code-inner js-file-line">            ngSwitchWhen<span class="pl-k">:</span> ngSwitchWhenDirective,</td>
      </tr>
      <tr>
        <td id="L1322" class="blob-num js-line-number" data-line-number="1322"></td>
        <td id="LC1322" class="blob-code blob-code-inner js-file-line">            ngSwitchDefault<span class="pl-k">:</span> ngSwitchDefaultDirective,</td>
      </tr>
      <tr>
        <td id="L1323" class="blob-num js-line-number" data-line-number="1323"></td>
        <td id="LC1323" class="blob-code blob-code-inner js-file-line">            ngOptions<span class="pl-k">:</span> ngOptionsDirective,</td>
      </tr>
      <tr>
        <td id="L1324" class="blob-num js-line-number" data-line-number="1324"></td>
        <td id="LC1324" class="blob-code blob-code-inner js-file-line">            ngView<span class="pl-k">:</span> ngViewDirective,</td>
      </tr>
      <tr>
        <td id="L1325" class="blob-num js-line-number" data-line-number="1325"></td>
        <td id="LC1325" class="blob-code blob-code-inner js-file-line">            ngTransclude<span class="pl-k">:</span> ngTranscludeDirective,</td>
      </tr>
      <tr>
        <td id="L1326" class="blob-num js-line-number" data-line-number="1326"></td>
        <td id="LC1326" class="blob-code blob-code-inner js-file-line">            ngModel<span class="pl-k">:</span> ngModelDirective,</td>
      </tr>
      <tr>
        <td id="L1327" class="blob-num js-line-number" data-line-number="1327"></td>
        <td id="LC1327" class="blob-code blob-code-inner js-file-line">            ngList<span class="pl-k">:</span> ngListDirective,</td>
      </tr>
      <tr>
        <td id="L1328" class="blob-num js-line-number" data-line-number="1328"></td>
        <td id="LC1328" class="blob-code blob-code-inner js-file-line">            ngChange<span class="pl-k">:</span> ngChangeDirective,</td>
      </tr>
      <tr>
        <td id="L1329" class="blob-num js-line-number" data-line-number="1329"></td>
        <td id="LC1329" class="blob-code blob-code-inner js-file-line">            required<span class="pl-k">:</span> requiredDirective,</td>
      </tr>
      <tr>
        <td id="L1330" class="blob-num js-line-number" data-line-number="1330"></td>
        <td id="LC1330" class="blob-code blob-code-inner js-file-line">            ngRequired<span class="pl-k">:</span> requiredDirective,</td>
      </tr>
      <tr>
        <td id="L1331" class="blob-num js-line-number" data-line-number="1331"></td>
        <td id="LC1331" class="blob-code blob-code-inner js-file-line">            ngValue<span class="pl-k">:</span> ngValueDirective</td>
      </tr>
      <tr>
        <td id="L1332" class="blob-num js-line-number" data-line-number="1332"></td>
        <td id="LC1332" class="blob-code blob-code-inner js-file-line">        }).</td>
      </tr>
      <tr>
        <td id="L1333" class="blob-num js-line-number" data-line-number="1333"></td>
        <td id="LC1333" class="blob-code blob-code-inner js-file-line">        directive(ngAttributeAliasDirectives).</td>
      </tr>
      <tr>
        <td id="L1334" class="blob-num js-line-number" data-line-number="1334"></td>
        <td id="LC1334" class="blob-code blob-code-inner js-file-line">        directive(ngEventDirectives);</td>
      </tr>
      <tr>
        <td id="L1335" class="blob-num js-line-number" data-line-number="1335"></td>
        <td id="LC1335" class="blob-code blob-code-inner js-file-line">      $provide.provider({</td>
      </tr>
      <tr>
        <td id="L1336" class="blob-num js-line-number" data-line-number="1336"></td>
        <td id="LC1336" class="blob-code blob-code-inner js-file-line">        $anchorScroll<span class="pl-k">:</span> $AnchorScrollProvider,</td>
      </tr>
      <tr>
        <td id="L1337" class="blob-num js-line-number" data-line-number="1337"></td>
        <td id="LC1337" class="blob-code blob-code-inner js-file-line">        $browser<span class="pl-k">:</span> $BrowserProvider,</td>
      </tr>
      <tr>
        <td id="L1338" class="blob-num js-line-number" data-line-number="1338"></td>
        <td id="LC1338" class="blob-code blob-code-inner js-file-line">        $cacheFactory<span class="pl-k">:</span> $CacheFactoryProvider,</td>
      </tr>
      <tr>
        <td id="L1339" class="blob-num js-line-number" data-line-number="1339"></td>
        <td id="LC1339" class="blob-code blob-code-inner js-file-line">        $controller<span class="pl-k">:</span> $ControllerProvider,</td>
      </tr>
      <tr>
        <td id="L1340" class="blob-num js-line-number" data-line-number="1340"></td>
        <td id="LC1340" class="blob-code blob-code-inner js-file-line">        $defer<span class="pl-k">:</span> $DeferProvider,</td>
      </tr>
      <tr>
        <td id="L1341" class="blob-num js-line-number" data-line-number="1341"></td>
        <td id="LC1341" class="blob-code blob-code-inner js-file-line">        $document<span class="pl-k">:</span> $DocumentProvider,</td>
      </tr>
      <tr>
        <td id="L1342" class="blob-num js-line-number" data-line-number="1342"></td>
        <td id="LC1342" class="blob-code blob-code-inner js-file-line">        $exceptionHandler<span class="pl-k">:</span> $ExceptionHandlerProvider,</td>
      </tr>
      <tr>
        <td id="L1343" class="blob-num js-line-number" data-line-number="1343"></td>
        <td id="LC1343" class="blob-code blob-code-inner js-file-line">        $filter<span class="pl-k">:</span> $FilterProvider,</td>
      </tr>
      <tr>
        <td id="L1344" class="blob-num js-line-number" data-line-number="1344"></td>
        <td id="LC1344" class="blob-code blob-code-inner js-file-line">        $interpolate<span class="pl-k">:</span> $InterpolateProvider,</td>
      </tr>
      <tr>
        <td id="L1345" class="blob-num js-line-number" data-line-number="1345"></td>
        <td id="LC1345" class="blob-code blob-code-inner js-file-line">        $http<span class="pl-k">:</span> $HttpProvider,</td>
      </tr>
      <tr>
        <td id="L1346" class="blob-num js-line-number" data-line-number="1346"></td>
        <td id="LC1346" class="blob-code blob-code-inner js-file-line">        $httpBackend<span class="pl-k">:</span> $HttpBackendProvider,</td>
      </tr>
      <tr>
        <td id="L1347" class="blob-num js-line-number" data-line-number="1347"></td>
        <td id="LC1347" class="blob-code blob-code-inner js-file-line">        $location<span class="pl-k">:</span> $LocationProvider,</td>
      </tr>
      <tr>
        <td id="L1348" class="blob-num js-line-number" data-line-number="1348"></td>
        <td id="LC1348" class="blob-code blob-code-inner js-file-line">        $log<span class="pl-k">:</span> $LogProvider,</td>
      </tr>
      <tr>
        <td id="L1349" class="blob-num js-line-number" data-line-number="1349"></td>
        <td id="LC1349" class="blob-code blob-code-inner js-file-line">        $parse<span class="pl-k">:</span> $ParseProvider,</td>
      </tr>
      <tr>
        <td id="L1350" class="blob-num js-line-number" data-line-number="1350"></td>
        <td id="LC1350" class="blob-code blob-code-inner js-file-line">        $route<span class="pl-k">:</span> $RouteProvider,</td>
      </tr>
      <tr>
        <td id="L1351" class="blob-num js-line-number" data-line-number="1351"></td>
        <td id="LC1351" class="blob-code blob-code-inner js-file-line">        $routeParams<span class="pl-k">:</span> $RouteParamsProvider,</td>
      </tr>
      <tr>
        <td id="L1352" class="blob-num js-line-number" data-line-number="1352"></td>
        <td id="LC1352" class="blob-code blob-code-inner js-file-line">        $rootScope<span class="pl-k">:</span> $RootScopeProvider,</td>
      </tr>
      <tr>
        <td id="L1353" class="blob-num js-line-number" data-line-number="1353"></td>
        <td id="LC1353" class="blob-code blob-code-inner js-file-line">        $q<span class="pl-k">:</span> $QProvider,</td>
      </tr>
      <tr>
        <td id="L1354" class="blob-num js-line-number" data-line-number="1354"></td>
        <td id="LC1354" class="blob-code blob-code-inner js-file-line">        $sniffer<span class="pl-k">:</span> $SnifferProvider,</td>
      </tr>
      <tr>
        <td id="L1355" class="blob-num js-line-number" data-line-number="1355"></td>
        <td id="LC1355" class="blob-code blob-code-inner js-file-line">        $templateCache<span class="pl-k">:</span> $TemplateCacheProvider,</td>
      </tr>
      <tr>
        <td id="L1356" class="blob-num js-line-number" data-line-number="1356"></td>
        <td id="LC1356" class="blob-code blob-code-inner js-file-line">        $window<span class="pl-k">:</span> $WindowProvider</td>
      </tr>
      <tr>
        <td id="L1357" class="blob-num js-line-number" data-line-number="1357"></td>
        <td id="LC1357" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1358" class="blob-num js-line-number" data-line-number="1358"></td>
        <td id="LC1358" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1359" class="blob-num js-line-number" data-line-number="1359"></td>
        <td id="LC1359" class="blob-code blob-code-inner js-file-line">  ]);</td>
      </tr>
      <tr>
        <td id="L1360" class="blob-num js-line-number" data-line-number="1360"></td>
        <td id="LC1360" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1361" class="blob-num js-line-number" data-line-number="1361"></td>
        <td id="LC1361" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1362" class="blob-num js-line-number" data-line-number="1362"></td>
        <td id="LC1362" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1363" class="blob-num js-line-number" data-line-number="1363"></td>
        <td id="LC1363" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//JQLite</span></td>
      </tr>
      <tr>
        <td id="L1364" class="blob-num js-line-number" data-line-number="1364"></td>
        <td id="LC1364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1365" class="blob-num js-line-number" data-line-number="1365"></td>
        <td id="LC1365" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1366" class="blob-num js-line-number" data-line-number="1366"></td>
        <td id="LC1366" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1367" class="blob-num js-line-number" data-line-number="1367"></td>
        <td id="LC1367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L1368" class="blob-num js-line-number" data-line-number="1368"></td>
        <td id="LC1368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.element</span></td>
      </tr>
      <tr>
        <td id="L1369" class="blob-num js-line-number" data-line-number="1369"></td>
        <td id="LC1369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L1370" class="blob-num js-line-number" data-line-number="1370"></td>
        <td id="LC1370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1371" class="blob-num js-line-number" data-line-number="1371"></td>
        <td id="LC1371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L1372" class="blob-num js-line-number" data-line-number="1372"></td>
        <td id="LC1372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Wraps a raw DOM element or HTML string as a [jQuery](http://jquery.com) element.</span></td>
      </tr>
      <tr>
        <td id="L1373" class="blob-num js-line-number" data-line-number="1373"></td>
        <td id="LC1373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `angular.element` can be either an alias for [jQuery](http://api.jquery.com/jQuery/) function, if</span></td>
      </tr>
      <tr>
        <td id="L1374" class="blob-num js-line-number" data-line-number="1374"></td>
        <td id="LC1374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * jQuery is available, or a function that wraps the element or string in Angular&#39;s jQuery lite</span></td>
      </tr>
      <tr>
        <td id="L1375" class="blob-num js-line-number" data-line-number="1375"></td>
        <td id="LC1375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * implementation (commonly referred to as jqLite).</span></td>
      </tr>
      <tr>
        <td id="L1376" class="blob-num js-line-number" data-line-number="1376"></td>
        <td id="LC1376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1377" class="blob-num js-line-number" data-line-number="1377"></td>
        <td id="LC1377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Real jQuery always takes precedence over jqLite, provided it was loaded before `DOMContentLoaded`</span></td>
      </tr>
      <tr>
        <td id="L1378" class="blob-num js-line-number" data-line-number="1378"></td>
        <td id="LC1378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * event fired.</span></td>
      </tr>
      <tr>
        <td id="L1379" class="blob-num js-line-number" data-line-number="1379"></td>
        <td id="LC1379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1380" class="blob-num js-line-number" data-line-number="1380"></td>
        <td id="LC1380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * jqLite is a tiny, API-compatible subset of jQuery that allows</span></td>
      </tr>
      <tr>
        <td id="L1381" class="blob-num js-line-number" data-line-number="1381"></td>
        <td id="LC1381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Angular to manipulate the DOM. jqLite implements only the most commonly needed functionality</span></td>
      </tr>
      <tr>
        <td id="L1382" class="blob-num js-line-number" data-line-number="1382"></td>
        <td id="LC1382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * within a very small footprint, so only a subset of the jQuery API - methods, arguments and</span></td>
      </tr>
      <tr>
        <td id="L1383" class="blob-num js-line-number" data-line-number="1383"></td>
        <td id="LC1383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * invocation styles - are supported.</span></td>
      </tr>
      <tr>
        <td id="L1384" class="blob-num js-line-number" data-line-number="1384"></td>
        <td id="LC1384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1385" class="blob-num js-line-number" data-line-number="1385"></td>
        <td id="LC1385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: All element references in Angular are always wrapped with jQuery or jqLite; they are never</span></td>
      </tr>
      <tr>
        <td id="L1386" class="blob-num js-line-number" data-line-number="1386"></td>
        <td id="LC1386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * raw DOM references.</span></td>
      </tr>
      <tr>
        <td id="L1387" class="blob-num js-line-number" data-line-number="1387"></td>
        <td id="LC1387" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1388" class="blob-num js-line-number" data-line-number="1388"></td>
        <td id="LC1388" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ## Angular&#39;s jQuery lite provides the following methods:</span></td>
      </tr>
      <tr>
        <td id="L1389" class="blob-num js-line-number" data-line-number="1389"></td>
        <td id="LC1389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1390" class="blob-num js-line-number" data-line-number="1390"></td>
        <td id="LC1390" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [addClass()](http://api.jquery.com/addClass/)</span></td>
      </tr>
      <tr>
        <td id="L1391" class="blob-num js-line-number" data-line-number="1391"></td>
        <td id="LC1391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [after()](http://api.jquery.com/after/)</span></td>
      </tr>
      <tr>
        <td id="L1392" class="blob-num js-line-number" data-line-number="1392"></td>
        <td id="LC1392" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [append()](http://api.jquery.com/append/)</span></td>
      </tr>
      <tr>
        <td id="L1393" class="blob-num js-line-number" data-line-number="1393"></td>
        <td id="LC1393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [attr()](http://api.jquery.com/attr/)</span></td>
      </tr>
      <tr>
        <td id="L1394" class="blob-num js-line-number" data-line-number="1394"></td>
        <td id="LC1394" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [bind()](http://api.jquery.com/bind/)</span></td>
      </tr>
      <tr>
        <td id="L1395" class="blob-num js-line-number" data-line-number="1395"></td>
        <td id="LC1395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [children()](http://api.jquery.com/children/)</span></td>
      </tr>
      <tr>
        <td id="L1396" class="blob-num js-line-number" data-line-number="1396"></td>
        <td id="LC1396" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [clone()](http://api.jquery.com/clone/)</span></td>
      </tr>
      <tr>
        <td id="L1397" class="blob-num js-line-number" data-line-number="1397"></td>
        <td id="LC1397" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [contents()](http://api.jquery.com/contents/)</span></td>
      </tr>
      <tr>
        <td id="L1398" class="blob-num js-line-number" data-line-number="1398"></td>
        <td id="LC1398" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [css()](http://api.jquery.com/css/)</span></td>
      </tr>
      <tr>
        <td id="L1399" class="blob-num js-line-number" data-line-number="1399"></td>
        <td id="LC1399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [data()](http://api.jquery.com/data/)</span></td>
      </tr>
      <tr>
        <td id="L1400" class="blob-num js-line-number" data-line-number="1400"></td>
        <td id="LC1400" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [eq()](http://api.jquery.com/eq/)</span></td>
      </tr>
      <tr>
        <td id="L1401" class="blob-num js-line-number" data-line-number="1401"></td>
        <td id="LC1401" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [find()](http://api.jquery.com/find/) - Limited to lookups by tag name.</span></td>
      </tr>
      <tr>
        <td id="L1402" class="blob-num js-line-number" data-line-number="1402"></td>
        <td id="LC1402" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [hasClass()](http://api.jquery.com/hasClass/)</span></td>
      </tr>
      <tr>
        <td id="L1403" class="blob-num js-line-number" data-line-number="1403"></td>
        <td id="LC1403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [html()](http://api.jquery.com/html/)</span></td>
      </tr>
      <tr>
        <td id="L1404" class="blob-num js-line-number" data-line-number="1404"></td>
        <td id="LC1404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [next()](http://api.jquery.com/next/)</span></td>
      </tr>
      <tr>
        <td id="L1405" class="blob-num js-line-number" data-line-number="1405"></td>
        <td id="LC1405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [parent()](http://api.jquery.com/parent/)</span></td>
      </tr>
      <tr>
        <td id="L1406" class="blob-num js-line-number" data-line-number="1406"></td>
        <td id="LC1406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [prepend()](http://api.jquery.com/prepend/)</span></td>
      </tr>
      <tr>
        <td id="L1407" class="blob-num js-line-number" data-line-number="1407"></td>
        <td id="LC1407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [prop()](http://api.jquery.com/prop/)</span></td>
      </tr>
      <tr>
        <td id="L1408" class="blob-num js-line-number" data-line-number="1408"></td>
        <td id="LC1408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [ready()](http://api.jquery.com/ready/)</span></td>
      </tr>
      <tr>
        <td id="L1409" class="blob-num js-line-number" data-line-number="1409"></td>
        <td id="LC1409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [remove()](http://api.jquery.com/remove/)</span></td>
      </tr>
      <tr>
        <td id="L1410" class="blob-num js-line-number" data-line-number="1410"></td>
        <td id="LC1410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [removeAttr()](http://api.jquery.com/removeAttr/)</span></td>
      </tr>
      <tr>
        <td id="L1411" class="blob-num js-line-number" data-line-number="1411"></td>
        <td id="LC1411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [removeClass()](http://api.jquery.com/removeClass/)</span></td>
      </tr>
      <tr>
        <td id="L1412" class="blob-num js-line-number" data-line-number="1412"></td>
        <td id="LC1412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [removeData()](http://api.jquery.com/removeData/)</span></td>
      </tr>
      <tr>
        <td id="L1413" class="blob-num js-line-number" data-line-number="1413"></td>
        <td id="LC1413" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [replaceWith()](http://api.jquery.com/replaceWith/)</span></td>
      </tr>
      <tr>
        <td id="L1414" class="blob-num js-line-number" data-line-number="1414"></td>
        <td id="LC1414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [text()](http://api.jquery.com/text/)</span></td>
      </tr>
      <tr>
        <td id="L1415" class="blob-num js-line-number" data-line-number="1415"></td>
        <td id="LC1415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [toggleClass()](http://api.jquery.com/toggleClass/)</span></td>
      </tr>
      <tr>
        <td id="L1416" class="blob-num js-line-number" data-line-number="1416"></td>
        <td id="LC1416" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [unbind()](http://api.jquery.com/unbind/)</span></td>
      </tr>
      <tr>
        <td id="L1417" class="blob-num js-line-number" data-line-number="1417"></td>
        <td id="LC1417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [val()](http://api.jquery.com/val/)</span></td>
      </tr>
      <tr>
        <td id="L1418" class="blob-num js-line-number" data-line-number="1418"></td>
        <td id="LC1418" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - [wrap()](http://api.jquery.com/wrap/)</span></td>
      </tr>
      <tr>
        <td id="L1419" class="blob-num js-line-number" data-line-number="1419"></td>
        <td id="LC1419" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1420" class="blob-num js-line-number" data-line-number="1420"></td>
        <td id="LC1420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ## In addtion to the above, Angular privides an additional method to both jQuery and jQuery lite:</span></td>
      </tr>
      <tr>
        <td id="L1421" class="blob-num js-line-number" data-line-number="1421"></td>
        <td id="LC1421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1422" class="blob-num js-line-number" data-line-number="1422"></td>
        <td id="LC1422" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `controller(name)` - retrieves the controller of the current element or its parent. By default</span></td>
      </tr>
      <tr>
        <td id="L1423" class="blob-num js-line-number" data-line-number="1423"></td>
        <td id="LC1423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   retrieves controller associated with the `ngController` directive. If `name` is provided as</span></td>
      </tr>
      <tr>
        <td id="L1424" class="blob-num js-line-number" data-line-number="1424"></td>
        <td id="LC1424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   camelCase directive name, then the controller for this directive will be retrieved (e.g.</span></td>
      </tr>
      <tr>
        <td id="L1425" class="blob-num js-line-number" data-line-number="1425"></td>
        <td id="LC1425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `&#39;ngModel&#39;`).</span></td>
      </tr>
      <tr>
        <td id="L1426" class="blob-num js-line-number" data-line-number="1426"></td>
        <td id="LC1426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `injector()` - retrieves the injector of the current element or its parent.</span></td>
      </tr>
      <tr>
        <td id="L1427" class="blob-num js-line-number" data-line-number="1427"></td>
        <td id="LC1427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `scope()` - retrieves the {@link api/angular.module.ng.$rootScope.Scope scope} of the current</span></td>
      </tr>
      <tr>
        <td id="L1428" class="blob-num js-line-number" data-line-number="1428"></td>
        <td id="LC1428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   element or its parent.</span></td>
      </tr>
      <tr>
        <td id="L1429" class="blob-num js-line-number" data-line-number="1429"></td>
        <td id="LC1429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `inheritedData()` - same as `data()`, but walks up the DOM until a value is found or the top</span></td>
      </tr>
      <tr>
        <td id="L1430" class="blob-num js-line-number" data-line-number="1430"></td>
        <td id="LC1430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   parent element is reached.</span></td>
      </tr>
      <tr>
        <td id="L1431" class="blob-num js-line-number" data-line-number="1431"></td>
        <td id="LC1431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L1432" class="blob-num js-line-number" data-line-number="1432"></td>
        <td id="LC1432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string|DOMElement} element HTML string or DOMElement to be wrapped into jQuery.</span></td>
      </tr>
      <tr>
        <td id="L1433" class="blob-num js-line-number" data-line-number="1433"></td>
        <td id="LC1433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} jQuery object.</span></td>
      </tr>
      <tr>
        <td id="L1434" class="blob-num js-line-number" data-line-number="1434"></td>
        <td id="LC1434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1435" class="blob-num js-line-number" data-line-number="1435"></td>
        <td id="LC1435" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1436" class="blob-num js-line-number" data-line-number="1436"></td>
        <td id="LC1436" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> jqCache <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L1437" class="blob-num js-line-number" data-line-number="1437"></td>
        <td id="LC1437" class="blob-code blob-code-inner js-file-line">    jqName <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>().<span class="pl-c1">getTime</span>(),</td>
      </tr>
      <tr>
        <td id="L1438" class="blob-num js-line-number" data-line-number="1438"></td>
        <td id="LC1438" class="blob-code blob-code-inner js-file-line">    jqId <span class="pl-k">=</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L1439" class="blob-num js-line-number" data-line-number="1439"></td>
        <td id="LC1439" class="blob-code blob-code-inner js-file-line">    addEventListenerFn <span class="pl-k">=</span> (<span class="pl-c1">window</span>.<span class="pl-c1">document</span>.addEventListener</td>
      </tr>
      <tr>
        <td id="L1440" class="blob-num js-line-number" data-line-number="1440"></td>
        <td id="LC1440" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>) {element.addEventListener(type, fn, <span class="pl-c1">false</span>);}</td>
      </tr>
      <tr>
        <td id="L1441" class="blob-num js-line-number" data-line-number="1441"></td>
        <td id="LC1441" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>) {element.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>on<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> type, fn);}),</td>
      </tr>
      <tr>
        <td id="L1442" class="blob-num js-line-number" data-line-number="1442"></td>
        <td id="LC1442" class="blob-code blob-code-inner js-file-line">    removeEventListenerFn <span class="pl-k">=</span> (<span class="pl-c1">window</span>.<span class="pl-c1">document</span>.removeEventListener</td>
      </tr>
      <tr>
        <td id="L1443" class="blob-num js-line-number" data-line-number="1443"></td>
        <td id="LC1443" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>) {element.removeEventListener(type, fn, <span class="pl-c1">false</span>); }</td>
      </tr>
      <tr>
        <td id="L1444" class="blob-num js-line-number" data-line-number="1444"></td>
        <td id="LC1444" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>) {element.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>on<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> type, fn); });</td>
      </tr>
      <tr>
        <td id="L1445" class="blob-num js-line-number" data-line-number="1445"></td>
        <td id="LC1445" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1446" class="blob-num js-line-number" data-line-number="1446"></td>
        <td id="LC1446" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">jqNextId</span>() { <span class="pl-k">return</span> (jqId<span class="pl-k">++</span>); }</td>
      </tr>
      <tr>
        <td id="L1447" class="blob-num js-line-number" data-line-number="1447"></td>
        <td id="LC1447" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1448" class="blob-num js-line-number" data-line-number="1448"></td>
        <td id="LC1448" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1449" class="blob-num js-line-number" data-line-number="1449"></td>
        <td id="LC1449" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">SPECIAL_CHARS_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\:</span><span class="pl-c1">\-<span class="pl-cce">\_</span></span>]</span><span class="pl-k">+</span>(<span class="pl-c1">.</span>))<span class="pl-pds">/</span>g</span>;</td>
      </tr>
      <tr>
        <td id="L1450" class="blob-num js-line-number" data-line-number="1450"></td>
        <td id="LC1450" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">MOZ_HACK_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>moz(<span class="pl-c1">[<span class="pl-c1">A-Z</span>]</span>)<span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L1451" class="blob-num js-line-number" data-line-number="1451"></td>
        <td id="LC1451" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1452" class="blob-num js-line-number" data-line-number="1452"></td>
        <td id="LC1452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1453" class="blob-num js-line-number" data-line-number="1453"></td>
        <td id="LC1453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Converts snake_case to camelCase.</span></td>
      </tr>
      <tr>
        <td id="L1454" class="blob-num js-line-number" data-line-number="1454"></td>
        <td id="LC1454" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Also there is special case for Moz prefix starting with upper case letter.</span></td>
      </tr>
      <tr>
        <td id="L1455" class="blob-num js-line-number" data-line-number="1455"></td>
        <td id="LC1455" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> name Name to normalize</span></td>
      </tr>
      <tr>
        <td id="L1456" class="blob-num js-line-number" data-line-number="1456"></td>
        <td id="LC1456" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L1457" class="blob-num js-line-number" data-line-number="1457"></td>
        <td id="LC1457" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">camelCase</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1458" class="blob-num js-line-number" data-line-number="1458"></td>
        <td id="LC1458" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> name.</td>
      </tr>
      <tr>
        <td id="L1459" class="blob-num js-line-number" data-line-number="1459"></td>
        <td id="LC1459" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">replace</span>(<span class="pl-c1">SPECIAL_CHARS_REGEXP</span>, <span class="pl-k">function</span>(<span class="pl-smi">_</span>, <span class="pl-smi">separator</span>, <span class="pl-smi">letter</span>, <span class="pl-smi">offset</span>) {</td>
      </tr>
      <tr>
        <td id="L1460" class="blob-num js-line-number" data-line-number="1460"></td>
        <td id="LC1460" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> offset <span class="pl-k">?</span> letter.<span class="pl-c1">toUpperCase</span>() <span class="pl-k">:</span> letter;</td>
      </tr>
      <tr>
        <td id="L1461" class="blob-num js-line-number" data-line-number="1461"></td>
        <td id="LC1461" class="blob-code blob-code-inner js-file-line">    }).</td>
      </tr>
      <tr>
        <td id="L1462" class="blob-num js-line-number" data-line-number="1462"></td>
        <td id="LC1462" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">replace</span>(<span class="pl-c1">MOZ_HACK_REGEXP</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>Moz$1<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1463" class="blob-num js-line-number" data-line-number="1463"></td>
        <td id="LC1463" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1464" class="blob-num js-line-number" data-line-number="1464"></td>
        <td id="LC1464" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1465" class="blob-num js-line-number" data-line-number="1465"></td>
        <td id="LC1465" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1466" class="blob-num js-line-number" data-line-number="1466"></td>
        <td id="LC1466" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// jQuery mutation patch</span></td>
      </tr>
      <tr>
        <td id="L1467" class="blob-num js-line-number" data-line-number="1467"></td>
        <td id="LC1467" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L1468" class="blob-num js-line-number" data-line-number="1468"></td>
        <td id="LC1468" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//  In conjunction with bindJQuery intercepts all jQuery&#39;s DOM destruction apis and fires a</span></td>
      </tr>
      <tr>
        <td id="L1469" class="blob-num js-line-number" data-line-number="1469"></td>
        <td id="LC1469" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// $destroy event on all DOM nodes being removed.</span></td>
      </tr>
      <tr>
        <td id="L1470" class="blob-num js-line-number" data-line-number="1470"></td>
        <td id="LC1470" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//</span></td>
      </tr>
      <tr>
        <td id="L1471" class="blob-num js-line-number" data-line-number="1471"></td>
        <td id="LC1471" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1472" class="blob-num js-line-number" data-line-number="1472"></td>
        <td id="LC1472" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1473" class="blob-num js-line-number" data-line-number="1473"></td>
        <td id="LC1473" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLitePatchJQueryRemove</span>(<span class="pl-smi">name</span>, <span class="pl-smi">dispatchThis</span>) {</td>
      </tr>
      <tr>
        <td id="L1474" class="blob-num js-line-number" data-line-number="1474"></td>
        <td id="LC1474" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> originalJqFn <span class="pl-k">=</span> jQuery.fn[name];</td>
      </tr>
      <tr>
        <td id="L1475" class="blob-num js-line-number" data-line-number="1475"></td>
        <td id="LC1475" class="blob-code blob-code-inner js-file-line">  originalJqFn <span class="pl-k">=</span> originalJqFn.$original <span class="pl-k">||</span> originalJqFn;</td>
      </tr>
      <tr>
        <td id="L1476" class="blob-num js-line-number" data-line-number="1476"></td>
        <td id="LC1476" class="blob-code blob-code-inner js-file-line">  removePatch.$original <span class="pl-k">=</span> originalJqFn;</td>
      </tr>
      <tr>
        <td id="L1477" class="blob-num js-line-number" data-line-number="1477"></td>
        <td id="LC1477" class="blob-code blob-code-inner js-file-line">  jQuery.fn[name] <span class="pl-k">=</span> removePatch;</td>
      </tr>
      <tr>
        <td id="L1478" class="blob-num js-line-number" data-line-number="1478"></td>
        <td id="LC1478" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1479" class="blob-num js-line-number" data-line-number="1479"></td>
        <td id="LC1479" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">removePatch</span>() {</td>
      </tr>
      <tr>
        <td id="L1480" class="blob-num js-line-number" data-line-number="1480"></td>
        <td id="LC1480" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> list <span class="pl-k">=</span> [<span class="pl-v">this</span>],</td>
      </tr>
      <tr>
        <td id="L1481" class="blob-num js-line-number" data-line-number="1481"></td>
        <td id="LC1481" class="blob-code blob-code-inner js-file-line">        fireEvent <span class="pl-k">=</span> dispatchThis,</td>
      </tr>
      <tr>
        <td id="L1482" class="blob-num js-line-number" data-line-number="1482"></td>
        <td id="LC1482" class="blob-code blob-code-inner js-file-line">        set, setIndex, setLength,</td>
      </tr>
      <tr>
        <td id="L1483" class="blob-num js-line-number" data-line-number="1483"></td>
        <td id="LC1483" class="blob-code blob-code-inner js-file-line">        element, childIndex, childLength, children,</td>
      </tr>
      <tr>
        <td id="L1484" class="blob-num js-line-number" data-line-number="1484"></td>
        <td id="LC1484" class="blob-code blob-code-inner js-file-line">        fns, data;</td>
      </tr>
      <tr>
        <td id="L1485" class="blob-num js-line-number" data-line-number="1485"></td>
        <td id="LC1485" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1486" class="blob-num js-line-number" data-line-number="1486"></td>
        <td id="LC1486" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(list.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1487" class="blob-num js-line-number" data-line-number="1487"></td>
        <td id="LC1487" class="blob-code blob-code-inner js-file-line">      set <span class="pl-k">=</span> list.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L1488" class="blob-num js-line-number" data-line-number="1488"></td>
        <td id="LC1488" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(setIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>, setLength <span class="pl-k">=</span> set.<span class="pl-c1">length</span>; setIndex <span class="pl-k">&lt;</span> setLength; setIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1489" class="blob-num js-line-number" data-line-number="1489"></td>
        <td id="LC1489" class="blob-code blob-code-inner js-file-line">        element <span class="pl-k">=</span> jqLite(set[setIndex]);</td>
      </tr>
      <tr>
        <td id="L1490" class="blob-num js-line-number" data-line-number="1490"></td>
        <td id="LC1490" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (fireEvent) {</td>
      </tr>
      <tr>
        <td id="L1491" class="blob-num js-line-number" data-line-number="1491"></td>
        <td id="LC1491" class="blob-code blob-code-inner js-file-line">          data <span class="pl-k">=</span> element.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>events<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1492" class="blob-num js-line-number" data-line-number="1492"></td>
        <td id="LC1492" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> ( (fns <span class="pl-k">=</span> data <span class="pl-k">&amp;&amp;</span> data.$destroy) ) {</td>
      </tr>
      <tr>
        <td id="L1493" class="blob-num js-line-number" data-line-number="1493"></td>
        <td id="LC1493" class="blob-code blob-code-inner js-file-line">            forEach(fns, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>){</td>
      </tr>
      <tr>
        <td id="L1494" class="blob-num js-line-number" data-line-number="1494"></td>
        <td id="LC1494" class="blob-code blob-code-inner js-file-line">              fn.handler();</td>
      </tr>
      <tr>
        <td id="L1495" class="blob-num js-line-number" data-line-number="1495"></td>
        <td id="LC1495" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L1496" class="blob-num js-line-number" data-line-number="1496"></td>
        <td id="LC1496" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1497" class="blob-num js-line-number" data-line-number="1497"></td>
        <td id="LC1497" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1498" class="blob-num js-line-number" data-line-number="1498"></td>
        <td id="LC1498" class="blob-code blob-code-inner js-file-line">          fireEvent <span class="pl-k">=</span> <span class="pl-k">!</span>fireEvent;</td>
      </tr>
      <tr>
        <td id="L1499" class="blob-num js-line-number" data-line-number="1499"></td>
        <td id="LC1499" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1500" class="blob-num js-line-number" data-line-number="1500"></td>
        <td id="LC1500" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(childIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>, childLength <span class="pl-k">=</span> (children <span class="pl-k">=</span> element.children()).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L1501" class="blob-num js-line-number" data-line-number="1501"></td>
        <td id="LC1501" class="blob-code blob-code-inner js-file-line">            childIndex <span class="pl-k">&lt;</span> childLength;</td>
      </tr>
      <tr>
        <td id="L1502" class="blob-num js-line-number" data-line-number="1502"></td>
        <td id="LC1502" class="blob-code blob-code-inner js-file-line">            childIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1503" class="blob-num js-line-number" data-line-number="1503"></td>
        <td id="LC1503" class="blob-code blob-code-inner js-file-line">          list.<span class="pl-c1">push</span>(jQuery(children[childIndex]));</td>
      </tr>
      <tr>
        <td id="L1504" class="blob-num js-line-number" data-line-number="1504"></td>
        <td id="LC1504" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1505" class="blob-num js-line-number" data-line-number="1505"></td>
        <td id="LC1505" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1506" class="blob-num js-line-number" data-line-number="1506"></td>
        <td id="LC1506" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1507" class="blob-num js-line-number" data-line-number="1507"></td>
        <td id="LC1507" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> originalJqFn.<span class="pl-c1">apply</span>(<span class="pl-v">this</span>, arguments);</td>
      </tr>
      <tr>
        <td id="L1508" class="blob-num js-line-number" data-line-number="1508"></td>
        <td id="LC1508" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1509" class="blob-num js-line-number" data-line-number="1509"></td>
        <td id="LC1509" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1510" class="blob-num js-line-number" data-line-number="1510"></td>
        <td id="LC1510" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1511" class="blob-num js-line-number" data-line-number="1511"></td>
        <td id="LC1511" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1512" class="blob-num js-line-number" data-line-number="1512"></td>
        <td id="LC1512" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLite</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1513" class="blob-num js-line-number" data-line-number="1513"></td>
        <td id="LC1513" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (element <span class="pl-k">instanceof</span> JQLite) {</td>
      </tr>
      <tr>
        <td id="L1514" class="blob-num js-line-number" data-line-number="1514"></td>
        <td id="LC1514" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> element;</td>
      </tr>
      <tr>
        <td id="L1515" class="blob-num js-line-number" data-line-number="1515"></td>
        <td id="LC1515" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1516" class="blob-num js-line-number" data-line-number="1516"></td>
        <td id="LC1516" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> JQLite)) {</td>
      </tr>
      <tr>
        <td id="L1517" class="blob-num js-line-number" data-line-number="1517"></td>
        <td id="LC1517" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isString(element) <span class="pl-k">&amp;&amp;</span> element.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1518" class="blob-num js-line-number" data-line-number="1518"></td>
        <td id="LC1518" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>selectors not implemented<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1519" class="blob-num js-line-number" data-line-number="1519"></td>
        <td id="LC1519" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1520" class="blob-num js-line-number" data-line-number="1520"></td>
        <td id="LC1520" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">JQLite</span>(element);</td>
      </tr>
      <tr>
        <td id="L1521" class="blob-num js-line-number" data-line-number="1521"></td>
        <td id="LC1521" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1522" class="blob-num js-line-number" data-line-number="1522"></td>
        <td id="LC1522" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1523" class="blob-num js-line-number" data-line-number="1523"></td>
        <td id="LC1523" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isString(element)) {</td>
      </tr>
      <tr>
        <td id="L1524" class="blob-num js-line-number" data-line-number="1524"></td>
        <td id="LC1524" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> div <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>div<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1525" class="blob-num js-line-number" data-line-number="1525"></td>
        <td id="LC1525" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// Read about the NoScope elements here:</span></td>
      </tr>
      <tr>
        <td id="L1526" class="blob-num js-line-number" data-line-number="1526"></td>
        <td id="LC1526" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// http://msdn.microsoft.com/en-us/library/ms533897(VS.85).aspx</span></td>
      </tr>
      <tr>
        <td id="L1527" class="blob-num js-line-number" data-line-number="1527"></td>
        <td id="LC1527" class="blob-code blob-code-inner js-file-line">    div.innerHTML <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;div&gt;&amp;nbsp;&lt;/div&gt;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> element; <span class="pl-c">// IE insanity to make NoScope elements work!</span></td>
      </tr>
      <tr>
        <td id="L1528" class="blob-num js-line-number" data-line-number="1528"></td>
        <td id="LC1528" class="blob-code blob-code-inner js-file-line">    div.removeChild(div.<span class="pl-c1">firstChild</span>); <span class="pl-c">// remove the superfluous div</span></td>
      </tr>
      <tr>
        <td id="L1529" class="blob-num js-line-number" data-line-number="1529"></td>
        <td id="LC1529" class="blob-code blob-code-inner js-file-line">    JQLiteAddNodes(<span class="pl-v">this</span>, div.<span class="pl-c1">childNodes</span>);</td>
      </tr>
      <tr>
        <td id="L1530" class="blob-num js-line-number" data-line-number="1530"></td>
        <td id="LC1530" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.remove(); <span class="pl-c">// detach the elements from the temporary DOM div.</span></td>
      </tr>
      <tr>
        <td id="L1531" class="blob-num js-line-number" data-line-number="1531"></td>
        <td id="LC1531" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1532" class="blob-num js-line-number" data-line-number="1532"></td>
        <td id="LC1532" class="blob-code blob-code-inner js-file-line">    JQLiteAddNodes(<span class="pl-v">this</span>, element);</td>
      </tr>
      <tr>
        <td id="L1533" class="blob-num js-line-number" data-line-number="1533"></td>
        <td id="LC1533" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1534" class="blob-num js-line-number" data-line-number="1534"></td>
        <td id="LC1534" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1535" class="blob-num js-line-number" data-line-number="1535"></td>
        <td id="LC1535" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1536" class="blob-num js-line-number" data-line-number="1536"></td>
        <td id="LC1536" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteClone</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1537" class="blob-num js-line-number" data-line-number="1537"></td>
        <td id="LC1537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> element.<span class="pl-c1">cloneNode</span>(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L1538" class="blob-num js-line-number" data-line-number="1538"></td>
        <td id="LC1538" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1539" class="blob-num js-line-number" data-line-number="1539"></td>
        <td id="LC1539" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1540" class="blob-num js-line-number" data-line-number="1540"></td>
        <td id="LC1540" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteDealoc</span>(<span class="pl-smi">element</span>){</td>
      </tr>
      <tr>
        <td id="L1541" class="blob-num js-line-number" data-line-number="1541"></td>
        <td id="LC1541" class="blob-code blob-code-inner js-file-line">  JQLiteRemoveData(element);</td>
      </tr>
      <tr>
        <td id="L1542" class="blob-num js-line-number" data-line-number="1542"></td>
        <td id="LC1542" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, children <span class="pl-k">=</span> element.<span class="pl-c1">childNodes</span> <span class="pl-k">||</span> []; i <span class="pl-k">&lt;</span> children.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1543" class="blob-num js-line-number" data-line-number="1543"></td>
        <td id="LC1543" class="blob-code blob-code-inner js-file-line">    JQLiteDealoc(children[i]);</td>
      </tr>
      <tr>
        <td id="L1544" class="blob-num js-line-number" data-line-number="1544"></td>
        <td id="LC1544" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1545" class="blob-num js-line-number" data-line-number="1545"></td>
        <td id="LC1545" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1546" class="blob-num js-line-number" data-line-number="1546"></td>
        <td id="LC1546" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1547" class="blob-num js-line-number" data-line-number="1547"></td>
        <td id="LC1547" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteRemoveData</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1548" class="blob-num js-line-number" data-line-number="1548"></td>
        <td id="LC1548" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> cacheId <span class="pl-k">=</span> element[jqName],</td>
      </tr>
      <tr>
        <td id="L1549" class="blob-num js-line-number" data-line-number="1549"></td>
        <td id="LC1549" class="blob-code blob-code-inner js-file-line">  cache <span class="pl-k">=</span> jqCache[cacheId];</td>
      </tr>
      <tr>
        <td id="L1550" class="blob-num js-line-number" data-line-number="1550"></td>
        <td id="LC1550" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (cache) {</td>
      </tr>
      <tr>
        <td id="L1551" class="blob-num js-line-number" data-line-number="1551"></td>
        <td id="LC1551" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (cache.bind) {</td>
      </tr>
      <tr>
        <td id="L1552" class="blob-num js-line-number" data-line-number="1552"></td>
        <td id="LC1552" class="blob-code blob-code-inner js-file-line">      forEach(cache.bind, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">type</span>){</td>
      </tr>
      <tr>
        <td id="L1553" class="blob-num js-line-number" data-line-number="1553"></td>
        <td id="LC1553" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1554" class="blob-num js-line-number" data-line-number="1554"></td>
        <td id="LC1554" class="blob-code blob-code-inner js-file-line">          fn({});</td>
      </tr>
      <tr>
        <td id="L1555" class="blob-num js-line-number" data-line-number="1555"></td>
        <td id="LC1555" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1556" class="blob-num js-line-number" data-line-number="1556"></td>
        <td id="LC1556" class="blob-code blob-code-inner js-file-line">          removeEventListenerFn(element, type, fn);</td>
      </tr>
      <tr>
        <td id="L1557" class="blob-num js-line-number" data-line-number="1557"></td>
        <td id="LC1557" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1558" class="blob-num js-line-number" data-line-number="1558"></td>
        <td id="LC1558" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1559" class="blob-num js-line-number" data-line-number="1559"></td>
        <td id="LC1559" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1560" class="blob-num js-line-number" data-line-number="1560"></td>
        <td id="LC1560" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">delete</span> jqCache[cacheId];</td>
      </tr>
      <tr>
        <td id="L1561" class="blob-num js-line-number" data-line-number="1561"></td>
        <td id="LC1561" class="blob-code blob-code-inner js-file-line">    element[jqName] <span class="pl-k">=</span> <span class="pl-c1">undefined</span>; <span class="pl-c">// ie does not allow deletion of attributes on elements.</span></td>
      </tr>
      <tr>
        <td id="L1562" class="blob-num js-line-number" data-line-number="1562"></td>
        <td id="LC1562" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1563" class="blob-num js-line-number" data-line-number="1563"></td>
        <td id="LC1563" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1564" class="blob-num js-line-number" data-line-number="1564"></td>
        <td id="LC1564" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1565" class="blob-num js-line-number" data-line-number="1565"></td>
        <td id="LC1565" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteData</span>(<span class="pl-smi">element</span>, <span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1566" class="blob-num js-line-number" data-line-number="1566"></td>
        <td id="LC1566" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> cacheId <span class="pl-k">=</span> element[jqName],</td>
      </tr>
      <tr>
        <td id="L1567" class="blob-num js-line-number" data-line-number="1567"></td>
        <td id="LC1567" class="blob-code blob-code-inner js-file-line">      cache <span class="pl-k">=</span> jqCache[cacheId <span class="pl-k">||</span> <span class="pl-k">-</span><span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L1568" class="blob-num js-line-number" data-line-number="1568"></td>
        <td id="LC1568" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isDefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1569" class="blob-num js-line-number" data-line-number="1569"></td>
        <td id="LC1569" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>cache) {</td>
      </tr>
      <tr>
        <td id="L1570" class="blob-num js-line-number" data-line-number="1570"></td>
        <td id="LC1570" class="blob-code blob-code-inner js-file-line">      element[jqName] <span class="pl-k">=</span> cacheId <span class="pl-k">=</span> jqNextId();</td>
      </tr>
      <tr>
        <td id="L1571" class="blob-num js-line-number" data-line-number="1571"></td>
        <td id="LC1571" class="blob-code blob-code-inner js-file-line">      cache <span class="pl-k">=</span> jqCache[cacheId] <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1572" class="blob-num js-line-number" data-line-number="1572"></td>
        <td id="LC1572" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1573" class="blob-num js-line-number" data-line-number="1573"></td>
        <td id="LC1573" class="blob-code blob-code-inner js-file-line">    cache[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1574" class="blob-num js-line-number" data-line-number="1574"></td>
        <td id="LC1574" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1575" class="blob-num js-line-number" data-line-number="1575"></td>
        <td id="LC1575" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> cache <span class="pl-k">?</span> cache[key] <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1576" class="blob-num js-line-number" data-line-number="1576"></td>
        <td id="LC1576" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1577" class="blob-num js-line-number" data-line-number="1577"></td>
        <td id="LC1577" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1578" class="blob-num js-line-number" data-line-number="1578"></td>
        <td id="LC1578" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1579" class="blob-num js-line-number" data-line-number="1579"></td>
        <td id="LC1579" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteHasClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1580" class="blob-num js-line-number" data-line-number="1580"></td>
        <td id="LC1580" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> ((<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> element.<span class="pl-c1">className</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\n\t</span>]</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).</td>
      </tr>
      <tr>
        <td id="L1581" class="blob-num js-line-number" data-line-number="1581"></td>
        <td id="LC1581" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">indexOf</span>( <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> selector <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> ) <span class="pl-k">&gt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L1582" class="blob-num js-line-number" data-line-number="1582"></td>
        <td id="LC1582" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1583" class="blob-num js-line-number" data-line-number="1583"></td>
        <td id="LC1583" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1584" class="blob-num js-line-number" data-line-number="1584"></td>
        <td id="LC1584" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteRemoveClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1585" class="blob-num js-line-number" data-line-number="1585"></td>
        <td id="LC1585" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (selector) {</td>
      </tr>
      <tr>
        <td id="L1586" class="blob-num js-line-number" data-line-number="1586"></td>
        <td id="LC1586" class="blob-code blob-code-inner js-file-line">    forEach(selector.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">cssClass</span>) {</td>
      </tr>
      <tr>
        <td id="L1587" class="blob-num js-line-number" data-line-number="1587"></td>
        <td id="LC1587" class="blob-code blob-code-inner js-file-line">      element.<span class="pl-c1">className</span> <span class="pl-k">=</span> trim(</td>
      </tr>
      <tr>
        <td id="L1588" class="blob-num js-line-number" data-line-number="1588"></td>
        <td id="LC1588" class="blob-code blob-code-inner js-file-line">          (<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> element.<span class="pl-c1">className</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1589" class="blob-num js-line-number" data-line-number="1589"></td>
        <td id="LC1589" class="blob-code blob-code-inner js-file-line">          .<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\n\t</span>]</span><span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1590" class="blob-num js-line-number" data-line-number="1590"></td>
        <td id="LC1590" class="blob-code blob-code-inner js-file-line">          .<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> trim(cssClass) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1591" class="blob-num js-line-number" data-line-number="1591"></td>
        <td id="LC1591" class="blob-code blob-code-inner js-file-line">      );</td>
      </tr>
      <tr>
        <td id="L1592" class="blob-num js-line-number" data-line-number="1592"></td>
        <td id="LC1592" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1593" class="blob-num js-line-number" data-line-number="1593"></td>
        <td id="LC1593" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1594" class="blob-num js-line-number" data-line-number="1594"></td>
        <td id="LC1594" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1595" class="blob-num js-line-number" data-line-number="1595"></td>
        <td id="LC1595" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1596" class="blob-num js-line-number" data-line-number="1596"></td>
        <td id="LC1596" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteAddClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L1597" class="blob-num js-line-number" data-line-number="1597"></td>
        <td id="LC1597" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (selector) {</td>
      </tr>
      <tr>
        <td id="L1598" class="blob-num js-line-number" data-line-number="1598"></td>
        <td id="LC1598" class="blob-code blob-code-inner js-file-line">    forEach(selector.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">cssClass</span>) {</td>
      </tr>
      <tr>
        <td id="L1599" class="blob-num js-line-number" data-line-number="1599"></td>
        <td id="LC1599" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>JQLiteHasClass(element, cssClass)) {</td>
      </tr>
      <tr>
        <td id="L1600" class="blob-num js-line-number" data-line-number="1600"></td>
        <td id="LC1600" class="blob-code blob-code-inner js-file-line">        element.<span class="pl-c1">className</span> <span class="pl-k">=</span> trim(element.<span class="pl-c1">className</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> trim(cssClass));</td>
      </tr>
      <tr>
        <td id="L1601" class="blob-num js-line-number" data-line-number="1601"></td>
        <td id="LC1601" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1602" class="blob-num js-line-number" data-line-number="1602"></td>
        <td id="LC1602" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1603" class="blob-num js-line-number" data-line-number="1603"></td>
        <td id="LC1603" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1604" class="blob-num js-line-number" data-line-number="1604"></td>
        <td id="LC1604" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1605" class="blob-num js-line-number" data-line-number="1605"></td>
        <td id="LC1605" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1606" class="blob-num js-line-number" data-line-number="1606"></td>
        <td id="LC1606" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteAddNodes</span>(<span class="pl-smi">root</span>, <span class="pl-smi">elements</span>) {</td>
      </tr>
      <tr>
        <td id="L1607" class="blob-num js-line-number" data-line-number="1607"></td>
        <td id="LC1607" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (elements) {</td>
      </tr>
      <tr>
        <td id="L1608" class="blob-num js-line-number" data-line-number="1608"></td>
        <td id="LC1608" class="blob-code blob-code-inner js-file-line">    elements <span class="pl-k">=</span> (<span class="pl-k">!</span>elements.<span class="pl-c1">nodeName</span> <span class="pl-k">&amp;&amp;</span> isDefined(elements.<span class="pl-c1">length</span>) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isWindow(elements))</td>
      </tr>
      <tr>
        <td id="L1609" class="blob-num js-line-number" data-line-number="1609"></td>
        <td id="LC1609" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> elements</td>
      </tr>
      <tr>
        <td id="L1610" class="blob-num js-line-number" data-line-number="1610"></td>
        <td id="LC1610" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> [ elements ];</td>
      </tr>
      <tr>
        <td id="L1611" class="blob-num js-line-number" data-line-number="1611"></td>
        <td id="LC1611" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> elements.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1612" class="blob-num js-line-number" data-line-number="1612"></td>
        <td id="LC1612" class="blob-code blob-code-inner js-file-line">      root.<span class="pl-c1">push</span>(elements[i]);</td>
      </tr>
      <tr>
        <td id="L1613" class="blob-num js-line-number" data-line-number="1613"></td>
        <td id="LC1613" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1614" class="blob-num js-line-number" data-line-number="1614"></td>
        <td id="LC1614" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1615" class="blob-num js-line-number" data-line-number="1615"></td>
        <td id="LC1615" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1616" class="blob-num js-line-number" data-line-number="1616"></td>
        <td id="LC1616" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1617" class="blob-num js-line-number" data-line-number="1617"></td>
        <td id="LC1617" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteController</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1618" class="blob-num js-line-number" data-line-number="1618"></td>
        <td id="LC1618" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> JQLiteInheritedData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> (name <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ngController<span class="pl-pds">&#39;</span></span> ) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Controller<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1619" class="blob-num js-line-number" data-line-number="1619"></td>
        <td id="LC1619" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1620" class="blob-num js-line-number" data-line-number="1620"></td>
        <td id="LC1620" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1621" class="blob-num js-line-number" data-line-number="1621"></td>
        <td id="LC1621" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">JQLiteInheritedData</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1622" class="blob-num js-line-number" data-line-number="1622"></td>
        <td id="LC1622" class="blob-code blob-code-inner js-file-line">  element <span class="pl-k">=</span> jqLite(element);</td>
      </tr>
      <tr>
        <td id="L1623" class="blob-num js-line-number" data-line-number="1623"></td>
        <td id="LC1623" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1624" class="blob-num js-line-number" data-line-number="1624"></td>
        <td id="LC1624" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// if element is the document object work with the html element instead</span></td>
      </tr>
      <tr>
        <td id="L1625" class="blob-num js-line-number" data-line-number="1625"></td>
        <td id="LC1625" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// this makes $(document).scope() possible</span></td>
      </tr>
      <tr>
        <td id="L1626" class="blob-num js-line-number" data-line-number="1626"></td>
        <td id="LC1626" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(element[<span class="pl-c1">0</span>].<span class="pl-c1">nodeType</span> <span class="pl-k">==</span> <span class="pl-c1">9</span>) {</td>
      </tr>
      <tr>
        <td id="L1627" class="blob-num js-line-number" data-line-number="1627"></td>
        <td id="LC1627" class="blob-code blob-code-inner js-file-line">    element <span class="pl-k">=</span> element.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>html<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1628" class="blob-num js-line-number" data-line-number="1628"></td>
        <td id="LC1628" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1629" class="blob-num js-line-number" data-line-number="1629"></td>
        <td id="LC1629" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1630" class="blob-num js-line-number" data-line-number="1630"></td>
        <td id="LC1630" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span> (element.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L1631" class="blob-num js-line-number" data-line-number="1631"></td>
        <td id="LC1631" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">=</span> element.<span class="pl-c1">data</span>(name)) <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L1632" class="blob-num js-line-number" data-line-number="1632"></td>
        <td id="LC1632" class="blob-code blob-code-inner js-file-line">    element <span class="pl-k">=</span> element.<span class="pl-c1">parent</span>();</td>
      </tr>
      <tr>
        <td id="L1633" class="blob-num js-line-number" data-line-number="1633"></td>
        <td id="LC1633" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1634" class="blob-num js-line-number" data-line-number="1634"></td>
        <td id="LC1634" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1635" class="blob-num js-line-number" data-line-number="1635"></td>
        <td id="LC1635" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1636" class="blob-num js-line-number" data-line-number="1636"></td>
        <td id="LC1636" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1637" class="blob-num js-line-number" data-line-number="1637"></td>
        <td id="LC1637" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// Functions which are declared directly.</span></td>
      </tr>
      <tr>
        <td id="L1638" class="blob-num js-line-number" data-line-number="1638"></td>
        <td id="LC1638" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1639" class="blob-num js-line-number" data-line-number="1639"></td>
        <td id="LC1639" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> JQLitePrototype <span class="pl-k">=</span> <span class="pl-c1">JQLite</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L1640" class="blob-num js-line-number" data-line-number="1640"></td>
        <td id="LC1640" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">ready</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L1641" class="blob-num js-line-number" data-line-number="1641"></td>
        <td id="LC1641" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> fired <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1642" class="blob-num js-line-number" data-line-number="1642"></td>
        <td id="LC1642" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1643" class="blob-num js-line-number" data-line-number="1643"></td>
        <td id="LC1643" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">trigger</span>() {</td>
      </tr>
      <tr>
        <td id="L1644" class="blob-num js-line-number" data-line-number="1644"></td>
        <td id="LC1644" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (fired) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L1645" class="blob-num js-line-number" data-line-number="1645"></td>
        <td id="LC1645" class="blob-code blob-code-inner js-file-line">      fired <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1646" class="blob-num js-line-number" data-line-number="1646"></td>
        <td id="LC1646" class="blob-code blob-code-inner js-file-line">      fn();</td>
      </tr>
      <tr>
        <td id="L1647" class="blob-num js-line-number" data-line-number="1647"></td>
        <td id="LC1647" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1648" class="blob-num js-line-number" data-line-number="1648"></td>
        <td id="LC1648" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1649" class="blob-num js-line-number" data-line-number="1649"></td>
        <td id="LC1649" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>DOMContentLoaded<span class="pl-pds">&#39;</span></span>, trigger); <span class="pl-c">// works for modern browsers and IE9</span></td>
      </tr>
      <tr>
        <td id="L1650" class="blob-num js-line-number" data-line-number="1650"></td>
        <td id="LC1650" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// we can not use jqLite since we are not done loading and jQuery could be loaded later.</span></td>
      </tr>
      <tr>
        <td id="L1651" class="blob-num js-line-number" data-line-number="1651"></td>
        <td id="LC1651" class="blob-code blob-code-inner js-file-line">    JQLite(<span class="pl-c1">window</span>).bind(<span class="pl-s"><span class="pl-pds">&#39;</span>load<span class="pl-pds">&#39;</span></span>, trigger); <span class="pl-c">// fallback to window.onload for others</span></td>
      </tr>
      <tr>
        <td id="L1652" class="blob-num js-line-number" data-line-number="1652"></td>
        <td id="LC1652" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1653" class="blob-num js-line-number" data-line-number="1653"></td>
        <td id="LC1653" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">toString</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1654" class="blob-num js-line-number" data-line-number="1654"></td>
        <td id="LC1654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1655" class="blob-num js-line-number" data-line-number="1655"></td>
        <td id="LC1655" class="blob-code blob-code-inner js-file-line">    forEach(<span class="pl-v">this</span>, <span class="pl-k">function</span>(<span class="pl-smi">e</span>){ value.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> e);});</td>
      </tr>
      <tr>
        <td id="L1656" class="blob-num js-line-number" data-line-number="1656"></td>
        <td id="LC1656" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> value.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1657" class="blob-num js-line-number" data-line-number="1657"></td>
        <td id="LC1657" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1658" class="blob-num js-line-number" data-line-number="1658"></td>
        <td id="LC1658" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1659" class="blob-num js-line-number" data-line-number="1659"></td>
        <td id="LC1659" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">eq</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L1660" class="blob-num js-line-number" data-line-number="1660"></td>
        <td id="LC1660" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> (index <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span>) <span class="pl-k">?</span> jqLite(<span class="pl-v">this</span>[index]) <span class="pl-k">:</span> jqLite(<span class="pl-v">this</span>[<span class="pl-v">this</span>.<span class="pl-c1">length</span> <span class="pl-k">+</span> index]);</td>
      </tr>
      <tr>
        <td id="L1661" class="blob-num js-line-number" data-line-number="1661"></td>
        <td id="LC1661" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1662" class="blob-num js-line-number" data-line-number="1662"></td>
        <td id="LC1662" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1663" class="blob-num js-line-number" data-line-number="1663"></td>
        <td id="LC1663" class="blob-code blob-code-inner js-file-line">  length<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L1664" class="blob-num js-line-number" data-line-number="1664"></td>
        <td id="LC1664" class="blob-code blob-code-inner js-file-line">  push<span class="pl-k">:</span> push,</td>
      </tr>
      <tr>
        <td id="L1665" class="blob-num js-line-number" data-line-number="1665"></td>
        <td id="LC1665" class="blob-code blob-code-inner js-file-line">  sort<span class="pl-k">:</span> [].sort,</td>
      </tr>
      <tr>
        <td id="L1666" class="blob-num js-line-number" data-line-number="1666"></td>
        <td id="LC1666" class="blob-code blob-code-inner js-file-line">  splice<span class="pl-k">:</span> [].splice</td>
      </tr>
      <tr>
        <td id="L1667" class="blob-num js-line-number" data-line-number="1667"></td>
        <td id="LC1667" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L1668" class="blob-num js-line-number" data-line-number="1668"></td>
        <td id="LC1668" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1669" class="blob-num js-line-number" data-line-number="1669"></td>
        <td id="LC1669" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1670" class="blob-num js-line-number" data-line-number="1670"></td>
        <td id="LC1670" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// Functions iterating getter/setters.</span></td>
      </tr>
      <tr>
        <td id="L1671" class="blob-num js-line-number" data-line-number="1671"></td>
        <td id="LC1671" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// these functions return self on setter and</span></td>
      </tr>
      <tr>
        <td id="L1672" class="blob-num js-line-number" data-line-number="1672"></td>
        <td id="LC1672" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// value on get.</span></td>
      </tr>
      <tr>
        <td id="L1673" class="blob-num js-line-number" data-line-number="1673"></td>
        <td id="LC1673" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1674" class="blob-num js-line-number" data-line-number="1674"></td>
        <td id="LC1674" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">BOOLEAN_ATTR</span> <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1675" class="blob-num js-line-number" data-line-number="1675"></td>
        <td id="LC1675" class="blob-code blob-code-inner js-file-line">forEach(<span class="pl-s"><span class="pl-pds">&#39;</span>multiple,selected,checked,disabled,readOnly,required<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1676" class="blob-num js-line-number" data-line-number="1676"></td>
        <td id="LC1676" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">BOOLEAN_ATTR</span>[lowercase(value)] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1677" class="blob-num js-line-number" data-line-number="1677"></td>
        <td id="LC1677" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L1678" class="blob-num js-line-number" data-line-number="1678"></td>
        <td id="LC1678" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">BOOLEAN_ELEMENTS</span> <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L1679" class="blob-num js-line-number" data-line-number="1679"></td>
        <td id="LC1679" class="blob-code blob-code-inner js-file-line">forEach(<span class="pl-s"><span class="pl-pds">&#39;</span>input,select,option,textarea,button,form<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1680" class="blob-num js-line-number" data-line-number="1680"></td>
        <td id="LC1680" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">BOOLEAN_ELEMENTS</span>[uppercase(value)] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1681" class="blob-num js-line-number" data-line-number="1681"></td>
        <td id="LC1681" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L1682" class="blob-num js-line-number" data-line-number="1682"></td>
        <td id="LC1682" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1683" class="blob-num js-line-number" data-line-number="1683"></td>
        <td id="LC1683" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isBooleanAttr</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1684" class="blob-num js-line-number" data-line-number="1684"></td>
        <td id="LC1684" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">BOOLEAN_ELEMENTS</span>[element.<span class="pl-c1">nodeName</span>] <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">BOOLEAN_ATTR</span>[name.<span class="pl-c1">toLowerCase</span>()];</td>
      </tr>
      <tr>
        <td id="L1685" class="blob-num js-line-number" data-line-number="1685"></td>
        <td id="LC1685" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1686" class="blob-num js-line-number" data-line-number="1686"></td>
        <td id="LC1686" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1687" class="blob-num js-line-number" data-line-number="1687"></td>
        <td id="LC1687" class="blob-code blob-code-inner js-file-line">forEach({</td>
      </tr>
      <tr>
        <td id="L1688" class="blob-num js-line-number" data-line-number="1688"></td>
        <td id="LC1688" class="blob-code blob-code-inner js-file-line">  data<span class="pl-k">:</span> JQLiteData,</td>
      </tr>
      <tr>
        <td id="L1689" class="blob-num js-line-number" data-line-number="1689"></td>
        <td id="LC1689" class="blob-code blob-code-inner js-file-line">  inheritedData<span class="pl-k">:</span> JQLiteInheritedData,</td>
      </tr>
      <tr>
        <td id="L1690" class="blob-num js-line-number" data-line-number="1690"></td>
        <td id="LC1690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1691" class="blob-num js-line-number" data-line-number="1691"></td>
        <td id="LC1691" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">scope</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1692" class="blob-num js-line-number" data-line-number="1692"></td>
        <td id="LC1692" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> JQLiteInheritedData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1693" class="blob-num js-line-number" data-line-number="1693"></td>
        <td id="LC1693" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1694" class="blob-num js-line-number" data-line-number="1694"></td>
        <td id="LC1694" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1695" class="blob-num js-line-number" data-line-number="1695"></td>
        <td id="LC1695" class="blob-code blob-code-inner js-file-line">  controller<span class="pl-k">:</span> JQLiteController ,</td>
      </tr>
      <tr>
        <td id="L1696" class="blob-num js-line-number" data-line-number="1696"></td>
        <td id="LC1696" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1697" class="blob-num js-line-number" data-line-number="1697"></td>
        <td id="LC1697" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">injector</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1698" class="blob-num js-line-number" data-line-number="1698"></td>
        <td id="LC1698" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> JQLiteInheritedData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1699" class="blob-num js-line-number" data-line-number="1699"></td>
        <td id="LC1699" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1700" class="blob-num js-line-number" data-line-number="1700"></td>
        <td id="LC1700" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1701" class="blob-num js-line-number" data-line-number="1701"></td>
        <td id="LC1701" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">removeAttr</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>,<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L1702" class="blob-num js-line-number" data-line-number="1702"></td>
        <td id="LC1702" class="blob-code blob-code-inner js-file-line">    element.removeAttribute(name);</td>
      </tr>
      <tr>
        <td id="L1703" class="blob-num js-line-number" data-line-number="1703"></td>
        <td id="LC1703" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1704" class="blob-num js-line-number" data-line-number="1704"></td>
        <td id="LC1704" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1705" class="blob-num js-line-number" data-line-number="1705"></td>
        <td id="LC1705" class="blob-code blob-code-inner js-file-line">  hasClass<span class="pl-k">:</span> JQLiteHasClass,</td>
      </tr>
      <tr>
        <td id="L1706" class="blob-num js-line-number" data-line-number="1706"></td>
        <td id="LC1706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1707" class="blob-num js-line-number" data-line-number="1707"></td>
        <td id="LC1707" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">css</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1708" class="blob-num js-line-number" data-line-number="1708"></td>
        <td id="LC1708" class="blob-code blob-code-inner js-file-line">    name <span class="pl-k">=</span> camelCase(name);</td>
      </tr>
      <tr>
        <td id="L1709" class="blob-num js-line-number" data-line-number="1709"></td>
        <td id="LC1709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1710" class="blob-num js-line-number" data-line-number="1710"></td>
        <td id="LC1710" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isDefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1711" class="blob-num js-line-number" data-line-number="1711"></td>
        <td id="LC1711" class="blob-code blob-code-inner js-file-line">      element.<span class="pl-c1">style</span>[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1712" class="blob-num js-line-number" data-line-number="1712"></td>
        <td id="LC1712" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1713" class="blob-num js-line-number" data-line-number="1713"></td>
        <td id="LC1713" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> val;</td>
      </tr>
      <tr>
        <td id="L1714" class="blob-num js-line-number" data-line-number="1714"></td>
        <td id="LC1714" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1715" class="blob-num js-line-number" data-line-number="1715"></td>
        <td id="LC1715" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (msie <span class="pl-k">&lt;=</span> <span class="pl-c1">8</span>) {</td>
      </tr>
      <tr>
        <td id="L1716" class="blob-num js-line-number" data-line-number="1716"></td>
        <td id="LC1716" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// this is some IE specific weirdness that jQuery 1.6.4 does not sure why</span></td>
      </tr>
      <tr>
        <td id="L1717" class="blob-num js-line-number" data-line-number="1717"></td>
        <td id="LC1717" class="blob-code blob-code-inner js-file-line">        val <span class="pl-k">=</span> element.currentStyle <span class="pl-k">&amp;&amp;</span> element.currentStyle[name];</td>
      </tr>
      <tr>
        <td id="L1718" class="blob-num js-line-number" data-line-number="1718"></td>
        <td id="LC1718" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (val <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) val <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>auto<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1719" class="blob-num js-line-number" data-line-number="1719"></td>
        <td id="LC1719" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1720" class="blob-num js-line-number" data-line-number="1720"></td>
        <td id="LC1720" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1721" class="blob-num js-line-number" data-line-number="1721"></td>
        <td id="LC1721" class="blob-code blob-code-inner js-file-line">      val <span class="pl-k">=</span> val <span class="pl-k">||</span> element.<span class="pl-c1">style</span>[name];</td>
      </tr>
      <tr>
        <td id="L1722" class="blob-num js-line-number" data-line-number="1722"></td>
        <td id="LC1722" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1723" class="blob-num js-line-number" data-line-number="1723"></td>
        <td id="LC1723" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (msie <span class="pl-k">&lt;=</span> <span class="pl-c1">8</span>) {</td>
      </tr>
      <tr>
        <td id="L1724" class="blob-num js-line-number" data-line-number="1724"></td>
        <td id="LC1724" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// jquery weirdness :-/</span></td>
      </tr>
      <tr>
        <td id="L1725" class="blob-num js-line-number" data-line-number="1725"></td>
        <td id="LC1725" class="blob-code blob-code-inner js-file-line">        val <span class="pl-k">=</span> (val <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> <span class="pl-c1">undefined</span> <span class="pl-k">:</span> val;</td>
      </tr>
      <tr>
        <td id="L1726" class="blob-num js-line-number" data-line-number="1726"></td>
        <td id="LC1726" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1727" class="blob-num js-line-number" data-line-number="1727"></td>
        <td id="LC1727" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1728" class="blob-num js-line-number" data-line-number="1728"></td>
        <td id="LC1728" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span>  val;</td>
      </tr>
      <tr>
        <td id="L1729" class="blob-num js-line-number" data-line-number="1729"></td>
        <td id="LC1729" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1730" class="blob-num js-line-number" data-line-number="1730"></td>
        <td id="LC1730" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1731" class="blob-num js-line-number" data-line-number="1731"></td>
        <td id="LC1731" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1732" class="blob-num js-line-number" data-line-number="1732"></td>
        <td id="LC1732" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">attr</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L1733" class="blob-num js-line-number" data-line-number="1733"></td>
        <td id="LC1733" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> lowercasedName <span class="pl-k">=</span> lowercase(name);</td>
      </tr>
      <tr>
        <td id="L1734" class="blob-num js-line-number" data-line-number="1734"></td>
        <td id="LC1734" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">BOOLEAN_ATTR</span>[lowercasedName]) {</td>
      </tr>
      <tr>
        <td id="L1735" class="blob-num js-line-number" data-line-number="1735"></td>
        <td id="LC1735" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isDefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1736" class="blob-num js-line-number" data-line-number="1736"></td>
        <td id="LC1736" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!!</span>value) {</td>
      </tr>
      <tr>
        <td id="L1737" class="blob-num js-line-number" data-line-number="1737"></td>
        <td id="LC1737" class="blob-code blob-code-inner js-file-line">          element[name] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1738" class="blob-num js-line-number" data-line-number="1738"></td>
        <td id="LC1738" class="blob-code blob-code-inner js-file-line">          element.<span class="pl-c1">setAttribute</span>(name, lowercasedName);</td>
      </tr>
      <tr>
        <td id="L1739" class="blob-num js-line-number" data-line-number="1739"></td>
        <td id="LC1739" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1740" class="blob-num js-line-number" data-line-number="1740"></td>
        <td id="LC1740" class="blob-code blob-code-inner js-file-line">          element[name] <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1741" class="blob-num js-line-number" data-line-number="1741"></td>
        <td id="LC1741" class="blob-code blob-code-inner js-file-line">          element.removeAttribute(lowercasedName);</td>
      </tr>
      <tr>
        <td id="L1742" class="blob-num js-line-number" data-line-number="1742"></td>
        <td id="LC1742" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1743" class="blob-num js-line-number" data-line-number="1743"></td>
        <td id="LC1743" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1744" class="blob-num js-line-number" data-line-number="1744"></td>
        <td id="LC1744" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (element[name] <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L1745" class="blob-num js-line-number" data-line-number="1745"></td>
        <td id="LC1745" class="blob-code blob-code-inner js-file-line">                 (element.<span class="pl-c1">attributes</span>.<span class="pl-c1">getNamedItem</span>(name)<span class="pl-k">||</span> noop).<span class="pl-c1">specified</span>)</td>
      </tr>
      <tr>
        <td id="L1746" class="blob-num js-line-number" data-line-number="1746"></td>
        <td id="LC1746" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">?</span> lowercasedName</td>
      </tr>
      <tr>
        <td id="L1747" class="blob-num js-line-number" data-line-number="1747"></td>
        <td id="LC1747" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L1748" class="blob-num js-line-number" data-line-number="1748"></td>
        <td id="LC1748" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1749" class="blob-num js-line-number" data-line-number="1749"></td>
        <td id="LC1749" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (isDefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1750" class="blob-num js-line-number" data-line-number="1750"></td>
        <td id="LC1750" class="blob-code blob-code-inner js-file-line">      element.<span class="pl-c1">setAttribute</span>(name, value);</td>
      </tr>
      <tr>
        <td id="L1751" class="blob-num js-line-number" data-line-number="1751"></td>
        <td id="LC1751" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (element.getAttribute) {</td>
      </tr>
      <tr>
        <td id="L1752" class="blob-num js-line-number" data-line-number="1752"></td>
        <td id="LC1752" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// the extra argument &quot;2&quot; is to get the right thing for a.href in IE, see jQuery code</span></td>
      </tr>
      <tr>
        <td id="L1753" class="blob-num js-line-number" data-line-number="1753"></td>
        <td id="LC1753" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// some elements (e.g. Document) don&#39;t have get attribute, so return undefined</span></td>
      </tr>
      <tr>
        <td id="L1754" class="blob-num js-line-number" data-line-number="1754"></td>
        <td id="LC1754" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ret <span class="pl-k">=</span> element.<span class="pl-c1">getAttribute</span>(name, <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L1755" class="blob-num js-line-number" data-line-number="1755"></td>
        <td id="LC1755" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// normalize non-existing attributes to undefined (as jQuery)</span></td>
      </tr>
      <tr>
        <td id="L1756" class="blob-num js-line-number" data-line-number="1756"></td>
        <td id="LC1756" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> ret <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">?</span> <span class="pl-c1">undefined</span> <span class="pl-k">:</span> ret;</td>
      </tr>
      <tr>
        <td id="L1757" class="blob-num js-line-number" data-line-number="1757"></td>
        <td id="LC1757" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1758" class="blob-num js-line-number" data-line-number="1758"></td>
        <td id="LC1758" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1759" class="blob-num js-line-number" data-line-number="1759"></td>
        <td id="LC1759" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1760" class="blob-num js-line-number" data-line-number="1760"></td>
        <td id="LC1760" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">prop</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1761" class="blob-num js-line-number" data-line-number="1761"></td>
        <td id="LC1761" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isDefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1762" class="blob-num js-line-number" data-line-number="1762"></td>
        <td id="LC1762" class="blob-code blob-code-inner js-file-line">      element[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1763" class="blob-num js-line-number" data-line-number="1763"></td>
        <td id="LC1763" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1764" class="blob-num js-line-number" data-line-number="1764"></td>
        <td id="LC1764" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> element[name];</td>
      </tr>
      <tr>
        <td id="L1765" class="blob-num js-line-number" data-line-number="1765"></td>
        <td id="LC1765" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1766" class="blob-num js-line-number" data-line-number="1766"></td>
        <td id="LC1766" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1767" class="blob-num js-line-number" data-line-number="1767"></td>
        <td id="LC1767" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1768" class="blob-num js-line-number" data-line-number="1768"></td>
        <td id="LC1768" class="blob-code blob-code-inner js-file-line">  text<span class="pl-k">:</span> extend((msie <span class="pl-k">&lt;</span> <span class="pl-c1">9</span>)</td>
      </tr>
      <tr>
        <td id="L1769" class="blob-num js-line-number" data-line-number="1769"></td>
        <td id="LC1769" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1770" class="blob-num js-line-number" data-line-number="1770"></td>
        <td id="LC1770" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (element.<span class="pl-c1">nodeType</span> <span class="pl-k">==</span> <span class="pl-c1">1</span> <span class="pl-c">/** Element */</span>) {</td>
      </tr>
      <tr>
        <td id="L1771" class="blob-num js-line-number" data-line-number="1771"></td>
        <td id="LC1771" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isUndefined(value))</td>
      </tr>
      <tr>
        <td id="L1772" class="blob-num js-line-number" data-line-number="1772"></td>
        <td id="LC1772" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> element.innerText;</td>
      </tr>
      <tr>
        <td id="L1773" class="blob-num js-line-number" data-line-number="1773"></td>
        <td id="LC1773" class="blob-code blob-code-inner js-file-line">          element.innerText <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1774" class="blob-num js-line-number" data-line-number="1774"></td>
        <td id="LC1774" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1775" class="blob-num js-line-number" data-line-number="1775"></td>
        <td id="LC1775" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isUndefined(value))</td>
      </tr>
      <tr>
        <td id="L1776" class="blob-num js-line-number" data-line-number="1776"></td>
        <td id="LC1776" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> element.<span class="pl-c1">nodeValue</span>;</td>
      </tr>
      <tr>
        <td id="L1777" class="blob-num js-line-number" data-line-number="1777"></td>
        <td id="LC1777" class="blob-code blob-code-inner js-file-line">          element.<span class="pl-c1">nodeValue</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1778" class="blob-num js-line-number" data-line-number="1778"></td>
        <td id="LC1778" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1779" class="blob-num js-line-number" data-line-number="1779"></td>
        <td id="LC1779" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1780" class="blob-num js-line-number" data-line-number="1780"></td>
        <td id="LC1780" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1781" class="blob-num js-line-number" data-line-number="1781"></td>
        <td id="LC1781" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isUndefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1782" class="blob-num js-line-number" data-line-number="1782"></td>
        <td id="LC1782" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> element.textContent;</td>
      </tr>
      <tr>
        <td id="L1783" class="blob-num js-line-number" data-line-number="1783"></td>
        <td id="LC1783" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1784" class="blob-num js-line-number" data-line-number="1784"></td>
        <td id="LC1784" class="blob-code blob-code-inner js-file-line">        element.textContent <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1785" class="blob-num js-line-number" data-line-number="1785"></td>
        <td id="LC1785" class="blob-code blob-code-inner js-file-line">      }, {$dv<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>}),</td>
      </tr>
      <tr>
        <td id="L1786" class="blob-num js-line-number" data-line-number="1786"></td>
        <td id="LC1786" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1787" class="blob-num js-line-number" data-line-number="1787"></td>
        <td id="LC1787" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">val</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1788" class="blob-num js-line-number" data-line-number="1788"></td>
        <td id="LC1788" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1789" class="blob-num js-line-number" data-line-number="1789"></td>
        <td id="LC1789" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> element.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L1790" class="blob-num js-line-number" data-line-number="1790"></td>
        <td id="LC1790" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1791" class="blob-num js-line-number" data-line-number="1791"></td>
        <td id="LC1791" class="blob-code blob-code-inner js-file-line">    element.<span class="pl-c1">value</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1792" class="blob-num js-line-number" data-line-number="1792"></td>
        <td id="LC1792" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1793" class="blob-num js-line-number" data-line-number="1793"></td>
        <td id="LC1793" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1794" class="blob-num js-line-number" data-line-number="1794"></td>
        <td id="LC1794" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">html</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L1795" class="blob-num js-line-number" data-line-number="1795"></td>
        <td id="LC1795" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(value)) {</td>
      </tr>
      <tr>
        <td id="L1796" class="blob-num js-line-number" data-line-number="1796"></td>
        <td id="LC1796" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> element.innerHTML;</td>
      </tr>
      <tr>
        <td id="L1797" class="blob-num js-line-number" data-line-number="1797"></td>
        <td id="LC1797" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1798" class="blob-num js-line-number" data-line-number="1798"></td>
        <td id="LC1798" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, childNodes <span class="pl-k">=</span> element.<span class="pl-c1">childNodes</span>; i <span class="pl-k">&lt;</span> childNodes.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1799" class="blob-num js-line-number" data-line-number="1799"></td>
        <td id="LC1799" class="blob-code blob-code-inner js-file-line">      JQLiteDealoc(childNodes[i]);</td>
      </tr>
      <tr>
        <td id="L1800" class="blob-num js-line-number" data-line-number="1800"></td>
        <td id="LC1800" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1801" class="blob-num js-line-number" data-line-number="1801"></td>
        <td id="LC1801" class="blob-code blob-code-inner js-file-line">    element.innerHTML <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L1802" class="blob-num js-line-number" data-line-number="1802"></td>
        <td id="LC1802" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L1803" class="blob-num js-line-number" data-line-number="1803"></td>
        <td id="LC1803" class="blob-code blob-code-inner js-file-line">}, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">name</span>){</td>
      </tr>
      <tr>
        <td id="L1804" class="blob-num js-line-number" data-line-number="1804"></td>
        <td id="LC1804" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L1805" class="blob-num js-line-number" data-line-number="1805"></td>
        <td id="LC1805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Properties: writes return selection, reads return first value</span></td>
      </tr>
      <tr>
        <td id="L1806" class="blob-num js-line-number" data-line-number="1806"></td>
        <td id="LC1806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L1807" class="blob-num js-line-number" data-line-number="1807"></td>
        <td id="LC1807" class="blob-code blob-code-inner js-file-line">  JQLite.<span class="pl-c1">prototype</span>[name] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arg1</span>, <span class="pl-smi">arg2</span>) {</td>
      </tr>
      <tr>
        <td id="L1808" class="blob-num js-line-number" data-line-number="1808"></td>
        <td id="LC1808" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> i, key;</td>
      </tr>
      <tr>
        <td id="L1809" class="blob-num js-line-number" data-line-number="1809"></td>
        <td id="LC1809" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1810" class="blob-num js-line-number" data-line-number="1810"></td>
        <td id="LC1810" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// JQLiteHasClass has only two arguments, but is a getter-only fn, so we need to special-case it</span></td>
      </tr>
      <tr>
        <td id="L1811" class="blob-num js-line-number" data-line-number="1811"></td>
        <td id="LC1811" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// in a way that survives minification.</span></td>
      </tr>
      <tr>
        <td id="L1812" class="blob-num js-line-number" data-line-number="1812"></td>
        <td id="LC1812" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (((fn.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">2</span> <span class="pl-k">&amp;&amp;</span> (fn <span class="pl-k">!==</span> JQLiteHasClass <span class="pl-k">&amp;&amp;</span> fn <span class="pl-k">!==</span> JQLiteController)) <span class="pl-k">?</span> arg1 <span class="pl-k">:</span> arg2) <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L1813" class="blob-num js-line-number" data-line-number="1813"></td>
        <td id="LC1813" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isObject(arg1)) {</td>
      </tr>
      <tr>
        <td id="L1814" class="blob-num js-line-number" data-line-number="1814"></td>
        <td id="LC1814" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we are a write, but the object properties are the key/values</span></td>
      </tr>
      <tr>
        <td id="L1815" class="blob-num js-line-number" data-line-number="1815"></td>
        <td id="LC1815" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1816" class="blob-num js-line-number" data-line-number="1816"></td>
        <td id="LC1816" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (key <span class="pl-k">in</span> arg1) {</td>
      </tr>
      <tr>
        <td id="L1817" class="blob-num js-line-number" data-line-number="1817"></td>
        <td id="LC1817" class="blob-code blob-code-inner js-file-line">            fn(<span class="pl-v">this</span>[i], key, arg1[key]);</td>
      </tr>
      <tr>
        <td id="L1818" class="blob-num js-line-number" data-line-number="1818"></td>
        <td id="LC1818" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L1819" class="blob-num js-line-number" data-line-number="1819"></td>
        <td id="LC1819" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1820" class="blob-num js-line-number" data-line-number="1820"></td>
        <td id="LC1820" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// return self for chaining</span></td>
      </tr>
      <tr>
        <td id="L1821" class="blob-num js-line-number" data-line-number="1821"></td>
        <td id="LC1821" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1822" class="blob-num js-line-number" data-line-number="1822"></td>
        <td id="LC1822" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1823" class="blob-num js-line-number" data-line-number="1823"></td>
        <td id="LC1823" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we are a read, so read the first child.</span></td>
      </tr>
      <tr>
        <td id="L1824" class="blob-num js-line-number" data-line-number="1824"></td>
        <td id="LC1824" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L1825" class="blob-num js-line-number" data-line-number="1825"></td>
        <td id="LC1825" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> fn(<span class="pl-v">this</span>[<span class="pl-c1">0</span>], arg1, arg2);</td>
      </tr>
      <tr>
        <td id="L1826" class="blob-num js-line-number" data-line-number="1826"></td>
        <td id="LC1826" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1827" class="blob-num js-line-number" data-line-number="1827"></td>
        <td id="LC1827" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1828" class="blob-num js-line-number" data-line-number="1828"></td>
        <td id="LC1828" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// we are a write, so apply to all children</span></td>
      </tr>
      <tr>
        <td id="L1829" class="blob-num js-line-number" data-line-number="1829"></td>
        <td id="LC1829" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(i<span class="pl-k">=</span><span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L1830" class="blob-num js-line-number" data-line-number="1830"></td>
        <td id="LC1830" class="blob-code blob-code-inner js-file-line">        fn(<span class="pl-v">this</span>[i], arg1, arg2);</td>
      </tr>
      <tr>
        <td id="L1831" class="blob-num js-line-number" data-line-number="1831"></td>
        <td id="LC1831" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1832" class="blob-num js-line-number" data-line-number="1832"></td>
        <td id="LC1832" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// return self for chaining</span></td>
      </tr>
      <tr>
        <td id="L1833" class="blob-num js-line-number" data-line-number="1833"></td>
        <td id="LC1833" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L1834" class="blob-num js-line-number" data-line-number="1834"></td>
        <td id="LC1834" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1835" class="blob-num js-line-number" data-line-number="1835"></td>
        <td id="LC1835" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> fn.$dv;</td>
      </tr>
      <tr>
        <td id="L1836" class="blob-num js-line-number" data-line-number="1836"></td>
        <td id="LC1836" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1837" class="blob-num js-line-number" data-line-number="1837"></td>
        <td id="LC1837" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L1838" class="blob-num js-line-number" data-line-number="1838"></td>
        <td id="LC1838" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1839" class="blob-num js-line-number" data-line-number="1839"></td>
        <td id="LC1839" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">createEventHandler</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1840" class="blob-num js-line-number" data-line-number="1840"></td>
        <td id="LC1840" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">eventHandler</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L1841" class="blob-num js-line-number" data-line-number="1841"></td>
        <td id="LC1841" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">event</span>.preventDefault) {</td>
      </tr>
      <tr>
        <td id="L1842" class="blob-num js-line-number" data-line-number="1842"></td>
        <td id="LC1842" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.<span class="pl-en">preventDefault</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1843" class="blob-num js-line-number" data-line-number="1843"></td>
        <td id="LC1843" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.returnValue <span class="pl-k">=</span> <span class="pl-c1">false</span>; <span class="pl-c">//ie</span></td>
      </tr>
      <tr>
        <td id="L1844" class="blob-num js-line-number" data-line-number="1844"></td>
        <td id="LC1844" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1845" class="blob-num js-line-number" data-line-number="1845"></td>
        <td id="LC1845" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1846" class="blob-num js-line-number" data-line-number="1846"></td>
        <td id="LC1846" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1847" class="blob-num js-line-number" data-line-number="1847"></td>
        <td id="LC1847" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">event</span>.stopPropagation) {</td>
      </tr>
      <tr>
        <td id="L1848" class="blob-num js-line-number" data-line-number="1848"></td>
        <td id="LC1848" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.<span class="pl-en">stopPropagation</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1849" class="blob-num js-line-number" data-line-number="1849"></td>
        <td id="LC1849" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.cancelBubble <span class="pl-k">=</span> <span class="pl-c1">true</span>; <span class="pl-c">//ie</span></td>
      </tr>
      <tr>
        <td id="L1850" class="blob-num js-line-number" data-line-number="1850"></td>
        <td id="LC1850" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1851" class="blob-num js-line-number" data-line-number="1851"></td>
        <td id="LC1851" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1852" class="blob-num js-line-number" data-line-number="1852"></td>
        <td id="LC1852" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1853" class="blob-num js-line-number" data-line-number="1853"></td>
        <td id="LC1853" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">event</span>.<span class="pl-c1">target</span>) {</td>
      </tr>
      <tr>
        <td id="L1854" class="blob-num js-line-number" data-line-number="1854"></td>
        <td id="LC1854" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.<span class="pl-c1">target</span> <span class="pl-k">=</span> <span class="pl-c1">event</span>.srcElement <span class="pl-k">||</span> <span class="pl-c1">document</span>;</td>
      </tr>
      <tr>
        <td id="L1855" class="blob-num js-line-number" data-line-number="1855"></td>
        <td id="LC1855" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1856" class="blob-num js-line-number" data-line-number="1856"></td>
        <td id="LC1856" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1857" class="blob-num js-line-number" data-line-number="1857"></td>
        <td id="LC1857" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(<span class="pl-c1">event</span>.defaultPrevented)) {</td>
      </tr>
      <tr>
        <td id="L1858" class="blob-num js-line-number" data-line-number="1858"></td>
        <td id="LC1858" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> prevent <span class="pl-k">=</span> <span class="pl-c1">event</span>.preventDefault;</td>
      </tr>
      <tr>
        <td id="L1859" class="blob-num js-line-number" data-line-number="1859"></td>
        <td id="LC1859" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.<span class="pl-en">preventDefault</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1860" class="blob-num js-line-number" data-line-number="1860"></td>
        <td id="LC1860" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.defaultPrevented <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L1861" class="blob-num js-line-number" data-line-number="1861"></td>
        <td id="LC1861" class="blob-code blob-code-inner js-file-line">        prevent.<span class="pl-c1">call</span>(<span class="pl-c1">event</span>);</td>
      </tr>
      <tr>
        <td id="L1862" class="blob-num js-line-number" data-line-number="1862"></td>
        <td id="LC1862" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L1863" class="blob-num js-line-number" data-line-number="1863"></td>
        <td id="LC1863" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.defaultPrevented <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L1864" class="blob-num js-line-number" data-line-number="1864"></td>
        <td id="LC1864" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1865" class="blob-num js-line-number" data-line-number="1865"></td>
        <td id="LC1865" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1866" class="blob-num js-line-number" data-line-number="1866"></td>
        <td id="LC1866" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">event</span>.<span class="pl-en">isDefaultPrevented</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L1867" class="blob-num js-line-number" data-line-number="1867"></td>
        <td id="LC1867" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">event</span>.defaultPrevented;</td>
      </tr>
      <tr>
        <td id="L1868" class="blob-num js-line-number" data-line-number="1868"></td>
        <td id="LC1868" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L1869" class="blob-num js-line-number" data-line-number="1869"></td>
        <td id="LC1869" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1870" class="blob-num js-line-number" data-line-number="1870"></td>
        <td id="LC1870" class="blob-code blob-code-inner js-file-line">    forEach(eventHandler.fns, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>){</td>
      </tr>
      <tr>
        <td id="L1871" class="blob-num js-line-number" data-line-number="1871"></td>
        <td id="LC1871" class="blob-code blob-code-inner js-file-line">      fn.<span class="pl-c1">call</span>(element, <span class="pl-c1">event</span>);</td>
      </tr>
      <tr>
        <td id="L1872" class="blob-num js-line-number" data-line-number="1872"></td>
        <td id="LC1872" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1873" class="blob-num js-line-number" data-line-number="1873"></td>
        <td id="LC1873" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1874" class="blob-num js-line-number" data-line-number="1874"></td>
        <td id="LC1874" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// Remove monkey-patched methods (IE),</span></td>
      </tr>
      <tr>
        <td id="L1875" class="blob-num js-line-number" data-line-number="1875"></td>
        <td id="LC1875" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// as they would cause memory leaks in IE8.</span></td>
      </tr>
      <tr>
        <td id="L1876" class="blob-num js-line-number" data-line-number="1876"></td>
        <td id="LC1876" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (msie <span class="pl-k">&lt;</span> <span class="pl-c1">8</span>) {</td>
      </tr>
      <tr>
        <td id="L1877" class="blob-num js-line-number" data-line-number="1877"></td>
        <td id="LC1877" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// IE7 does not allow to delete property on native object</span></td>
      </tr>
      <tr>
        <td id="L1878" class="blob-num js-line-number" data-line-number="1878"></td>
        <td id="LC1878" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.preventDefault <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1879" class="blob-num js-line-number" data-line-number="1879"></td>
        <td id="LC1879" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.stopPropagation <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1880" class="blob-num js-line-number" data-line-number="1880"></td>
        <td id="LC1880" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">event</span>.isDefaultPrevented <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L1881" class="blob-num js-line-number" data-line-number="1881"></td>
        <td id="LC1881" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1882" class="blob-num js-line-number" data-line-number="1882"></td>
        <td id="LC1882" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// It shouldn&#39;t affect normal browsers (native methods are defined on prototype).</span></td>
      </tr>
      <tr>
        <td id="L1883" class="blob-num js-line-number" data-line-number="1883"></td>
        <td id="LC1883" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> <span class="pl-c1">event</span>.preventDefault;</td>
      </tr>
      <tr>
        <td id="L1884" class="blob-num js-line-number" data-line-number="1884"></td>
        <td id="LC1884" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> <span class="pl-c1">event</span>.stopPropagation;</td>
      </tr>
      <tr>
        <td id="L1885" class="blob-num js-line-number" data-line-number="1885"></td>
        <td id="LC1885" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> <span class="pl-c1">event</span>.isDefaultPrevented;</td>
      </tr>
      <tr>
        <td id="L1886" class="blob-num js-line-number" data-line-number="1886"></td>
        <td id="LC1886" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1887" class="blob-num js-line-number" data-line-number="1887"></td>
        <td id="LC1887" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L1888" class="blob-num js-line-number" data-line-number="1888"></td>
        <td id="LC1888" class="blob-code blob-code-inner js-file-line">  eventHandler.fns <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1889" class="blob-num js-line-number" data-line-number="1889"></td>
        <td id="LC1889" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> eventHandler;</td>
      </tr>
      <tr>
        <td id="L1890" class="blob-num js-line-number" data-line-number="1890"></td>
        <td id="LC1890" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L1891" class="blob-num js-line-number" data-line-number="1891"></td>
        <td id="LC1891" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1892" class="blob-num js-line-number" data-line-number="1892"></td>
        <td id="LC1892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1893" class="blob-num js-line-number" data-line-number="1893"></td>
        <td id="LC1893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// Functions iterating traversal.</span></td>
      </tr>
      <tr>
        <td id="L1894" class="blob-num js-line-number" data-line-number="1894"></td>
        <td id="LC1894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// These functions chain results into a single</span></td>
      </tr>
      <tr>
        <td id="L1895" class="blob-num js-line-number" data-line-number="1895"></td>
        <td id="LC1895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// selector.</span></td>
      </tr>
      <tr>
        <td id="L1896" class="blob-num js-line-number" data-line-number="1896"></td>
        <td id="LC1896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L1897" class="blob-num js-line-number" data-line-number="1897"></td>
        <td id="LC1897" class="blob-code blob-code-inner js-file-line">forEach({</td>
      </tr>
      <tr>
        <td id="L1898" class="blob-num js-line-number" data-line-number="1898"></td>
        <td id="LC1898" class="blob-code blob-code-inner js-file-line">  removeData<span class="pl-k">:</span> JQLiteRemoveData,</td>
      </tr>
      <tr>
        <td id="L1899" class="blob-num js-line-number" data-line-number="1899"></td>
        <td id="LC1899" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1900" class="blob-num js-line-number" data-line-number="1900"></td>
        <td id="LC1900" class="blob-code blob-code-inner js-file-line">  dealoc<span class="pl-k">:</span> JQLiteDealoc,</td>
      </tr>
      <tr>
        <td id="L1901" class="blob-num js-line-number" data-line-number="1901"></td>
        <td id="LC1901" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1902" class="blob-num js-line-number" data-line-number="1902"></td>
        <td id="LC1902" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">bind</span><span class="pl-k">:</span> <span class="pl-k">function</span> <span class="pl-en">bindFn</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>){</td>
      </tr>
      <tr>
        <td id="L1903" class="blob-num js-line-number" data-line-number="1903"></td>
        <td id="LC1903" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bind <span class="pl-k">=</span> JQLiteData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>bind<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1904" class="blob-num js-line-number" data-line-number="1904"></td>
        <td id="LC1904" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1905" class="blob-num js-line-number" data-line-number="1905"></td>
        <td id="LC1905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1906" class="blob-num js-line-number" data-line-number="1906"></td>
        <td id="LC1906" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>bind) JQLiteData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>bind<span class="pl-pds">&#39;</span></span>, bind <span class="pl-k">=</span> {});</td>
      </tr>
      <tr>
        <td id="L1907" class="blob-num js-line-number" data-line-number="1907"></td>
        <td id="LC1907" class="blob-code blob-code-inner js-file-line">    forEach(type.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">type</span>){</td>
      </tr>
      <tr>
        <td id="L1908" class="blob-num js-line-number" data-line-number="1908"></td>
        <td id="LC1908" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> eventHandler <span class="pl-k">=</span> bind[type];</td>
      </tr>
      <tr>
        <td id="L1909" class="blob-num js-line-number" data-line-number="1909"></td>
        <td id="LC1909" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1910" class="blob-num js-line-number" data-line-number="1910"></td>
        <td id="LC1910" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1911" class="blob-num js-line-number" data-line-number="1911"></td>
        <td id="LC1911" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>eventHandler) {</td>
      </tr>
      <tr>
        <td id="L1912" class="blob-num js-line-number" data-line-number="1912"></td>
        <td id="LC1912" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseenter<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> type <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseleave<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L1913" class="blob-num js-line-number" data-line-number="1913"></td>
        <td id="LC1913" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> mouseenter <span class="pl-k">=</span> bind.mouseenter <span class="pl-k">=</span> createEventHandler(element);</td>
      </tr>
      <tr>
        <td id="L1914" class="blob-num js-line-number" data-line-number="1914"></td>
        <td id="LC1914" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> mouseleave <span class="pl-k">=</span> bind.mouseleave <span class="pl-k">=</span> createEventHandler(element);</td>
      </tr>
      <tr>
        <td id="L1915" class="blob-num js-line-number" data-line-number="1915"></td>
        <td id="LC1915" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> counter <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L1916" class="blob-num js-line-number" data-line-number="1916"></td>
        <td id="LC1916" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1917" class="blob-num js-line-number" data-line-number="1917"></td>
        <td id="LC1917" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1918" class="blob-num js-line-number" data-line-number="1918"></td>
        <td id="LC1918" class="blob-code blob-code-inner js-file-line">          bindFn(element, <span class="pl-s"><span class="pl-pds">&#39;</span>mouseover<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L1919" class="blob-num js-line-number" data-line-number="1919"></td>
        <td id="LC1919" class="blob-code blob-code-inner js-file-line">            counter<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L1920" class="blob-num js-line-number" data-line-number="1920"></td>
        <td id="LC1920" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (counter <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1921" class="blob-num js-line-number" data-line-number="1921"></td>
        <td id="LC1921" class="blob-code blob-code-inner js-file-line">              <span class="pl-c1">event</span>.<span class="pl-c1">type</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseenter<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1922" class="blob-num js-line-number" data-line-number="1922"></td>
        <td id="LC1922" class="blob-code blob-code-inner js-file-line">              mouseenter(<span class="pl-c1">event</span>);</td>
      </tr>
      <tr>
        <td id="L1923" class="blob-num js-line-number" data-line-number="1923"></td>
        <td id="LC1923" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1924" class="blob-num js-line-number" data-line-number="1924"></td>
        <td id="LC1924" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L1925" class="blob-num js-line-number" data-line-number="1925"></td>
        <td id="LC1925" class="blob-code blob-code-inner js-file-line">          bindFn(element, <span class="pl-s"><span class="pl-pds">&#39;</span>mouseout<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L1926" class="blob-num js-line-number" data-line-number="1926"></td>
        <td id="LC1926" class="blob-code blob-code-inner js-file-line">            counter <span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L1927" class="blob-num js-line-number" data-line-number="1927"></td>
        <td id="LC1927" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (counter <span class="pl-k">==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L1928" class="blob-num js-line-number" data-line-number="1928"></td>
        <td id="LC1928" class="blob-code blob-code-inner js-file-line">              <span class="pl-c1">event</span>.<span class="pl-c1">type</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mouseleave<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L1929" class="blob-num js-line-number" data-line-number="1929"></td>
        <td id="LC1929" class="blob-code blob-code-inner js-file-line">              mouseleave(<span class="pl-c1">event</span>);</td>
      </tr>
      <tr>
        <td id="L1930" class="blob-num js-line-number" data-line-number="1930"></td>
        <td id="LC1930" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L1931" class="blob-num js-line-number" data-line-number="1931"></td>
        <td id="LC1931" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L1932" class="blob-num js-line-number" data-line-number="1932"></td>
        <td id="LC1932" class="blob-code blob-code-inner js-file-line">          eventHandler <span class="pl-k">=</span> bind[type];</td>
      </tr>
      <tr>
        <td id="L1933" class="blob-num js-line-number" data-line-number="1933"></td>
        <td id="LC1933" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1934" class="blob-num js-line-number" data-line-number="1934"></td>
        <td id="LC1934" class="blob-code blob-code-inner js-file-line">          eventHandler <span class="pl-k">=</span> bind[type] <span class="pl-k">=</span> createEventHandler(element);</td>
      </tr>
      <tr>
        <td id="L1935" class="blob-num js-line-number" data-line-number="1935"></td>
        <td id="LC1935" class="blob-code blob-code-inner js-file-line">          addEventListenerFn(element, type, eventHandler);</td>
      </tr>
      <tr>
        <td id="L1936" class="blob-num js-line-number" data-line-number="1936"></td>
        <td id="LC1936" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L1937" class="blob-num js-line-number" data-line-number="1937"></td>
        <td id="LC1937" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1938" class="blob-num js-line-number" data-line-number="1938"></td>
        <td id="LC1938" class="blob-code blob-code-inner js-file-line">      eventHandler.fns.<span class="pl-c1">push</span>(fn);</td>
      </tr>
      <tr>
        <td id="L1939" class="blob-num js-line-number" data-line-number="1939"></td>
        <td id="LC1939" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1940" class="blob-num js-line-number" data-line-number="1940"></td>
        <td id="LC1940" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1941" class="blob-num js-line-number" data-line-number="1941"></td>
        <td id="LC1941" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1942" class="blob-num js-line-number" data-line-number="1942"></td>
        <td id="LC1942" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">unbind</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">type</span>, <span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L1943" class="blob-num js-line-number" data-line-number="1943"></td>
        <td id="LC1943" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> bind <span class="pl-k">=</span> JQLiteData(element, <span class="pl-s"><span class="pl-pds">&#39;</span>bind<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L1944" class="blob-num js-line-number" data-line-number="1944"></td>
        <td id="LC1944" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>bind) <span class="pl-k">return</span>; <span class="pl-c">//no listeners registered</span></td>
      </tr>
      <tr>
        <td id="L1945" class="blob-num js-line-number" data-line-number="1945"></td>
        <td id="LC1945" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1946" class="blob-num js-line-number" data-line-number="1946"></td>
        <td id="LC1946" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(type)) {</td>
      </tr>
      <tr>
        <td id="L1947" class="blob-num js-line-number" data-line-number="1947"></td>
        <td id="LC1947" class="blob-code blob-code-inner js-file-line">      forEach(bind, <span class="pl-k">function</span>(<span class="pl-smi">eventHandler</span>, <span class="pl-smi">type</span>) {</td>
      </tr>
      <tr>
        <td id="L1948" class="blob-num js-line-number" data-line-number="1948"></td>
        <td id="LC1948" class="blob-code blob-code-inner js-file-line">        removeEventListenerFn(element, type, eventHandler);</td>
      </tr>
      <tr>
        <td id="L1949" class="blob-num js-line-number" data-line-number="1949"></td>
        <td id="LC1949" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> bind[type];</td>
      </tr>
      <tr>
        <td id="L1950" class="blob-num js-line-number" data-line-number="1950"></td>
        <td id="LC1950" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L1951" class="blob-num js-line-number" data-line-number="1951"></td>
        <td id="LC1951" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1952" class="blob-num js-line-number" data-line-number="1952"></td>
        <td id="LC1952" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isUndefined(fn)) {</td>
      </tr>
      <tr>
        <td id="L1953" class="blob-num js-line-number" data-line-number="1953"></td>
        <td id="LC1953" class="blob-code blob-code-inner js-file-line">        removeEventListenerFn(element, type, bind[type]);</td>
      </tr>
      <tr>
        <td id="L1954" class="blob-num js-line-number" data-line-number="1954"></td>
        <td id="LC1954" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> bind[type];</td>
      </tr>
      <tr>
        <td id="L1955" class="blob-num js-line-number" data-line-number="1955"></td>
        <td id="LC1955" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1956" class="blob-num js-line-number" data-line-number="1956"></td>
        <td id="LC1956" class="blob-code blob-code-inner js-file-line">        arrayRemove(bind[type].fns, fn);</td>
      </tr>
      <tr>
        <td id="L1957" class="blob-num js-line-number" data-line-number="1957"></td>
        <td id="LC1957" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1958" class="blob-num js-line-number" data-line-number="1958"></td>
        <td id="LC1958" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L1959" class="blob-num js-line-number" data-line-number="1959"></td>
        <td id="LC1959" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1960" class="blob-num js-line-number" data-line-number="1960"></td>
        <td id="LC1960" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1961" class="blob-num js-line-number" data-line-number="1961"></td>
        <td id="LC1961" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">replaceWith</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">replaceNode</span>) {</td>
      </tr>
      <tr>
        <td id="L1962" class="blob-num js-line-number" data-line-number="1962"></td>
        <td id="LC1962" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> index, parent <span class="pl-k">=</span> element.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L1963" class="blob-num js-line-number" data-line-number="1963"></td>
        <td id="LC1963" class="blob-code blob-code-inner js-file-line">    JQLiteDealoc(element);</td>
      </tr>
      <tr>
        <td id="L1964" class="blob-num js-line-number" data-line-number="1964"></td>
        <td id="LC1964" class="blob-code blob-code-inner js-file-line">    forEach(<span class="pl-k">new</span> <span class="pl-en">JQLite</span>(replaceNode), <span class="pl-k">function</span>(<span class="pl-smi">node</span>){</td>
      </tr>
      <tr>
        <td id="L1965" class="blob-num js-line-number" data-line-number="1965"></td>
        <td id="LC1965" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (index) {</td>
      </tr>
      <tr>
        <td id="L1966" class="blob-num js-line-number" data-line-number="1966"></td>
        <td id="LC1966" class="blob-code blob-code-inner js-file-line">        parent.<span class="pl-c1">insertBefore</span>(node, index.<span class="pl-c1">nextSibling</span>);</td>
      </tr>
      <tr>
        <td id="L1967" class="blob-num js-line-number" data-line-number="1967"></td>
        <td id="LC1967" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L1968" class="blob-num js-line-number" data-line-number="1968"></td>
        <td id="LC1968" class="blob-code blob-code-inner js-file-line">        parent.<span class="pl-c1">replaceChild</span>(node, element);</td>
      </tr>
      <tr>
        <td id="L1969" class="blob-num js-line-number" data-line-number="1969"></td>
        <td id="LC1969" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L1970" class="blob-num js-line-number" data-line-number="1970"></td>
        <td id="LC1970" class="blob-code blob-code-inner js-file-line">      index <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L1971" class="blob-num js-line-number" data-line-number="1971"></td>
        <td id="LC1971" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1972" class="blob-num js-line-number" data-line-number="1972"></td>
        <td id="LC1972" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1973" class="blob-num js-line-number" data-line-number="1973"></td>
        <td id="LC1973" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1974" class="blob-num js-line-number" data-line-number="1974"></td>
        <td id="LC1974" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">children</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1975" class="blob-num js-line-number" data-line-number="1975"></td>
        <td id="LC1975" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> children <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L1976" class="blob-num js-line-number" data-line-number="1976"></td>
        <td id="LC1976" class="blob-code blob-code-inner js-file-line">    forEach(element.<span class="pl-c1">childNodes</span>, <span class="pl-k">function</span>(<span class="pl-smi">element</span>){</td>
      </tr>
      <tr>
        <td id="L1977" class="blob-num js-line-number" data-line-number="1977"></td>
        <td id="LC1977" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (element.<span class="pl-c1">nodeName</span> <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#text<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L1978" class="blob-num js-line-number" data-line-number="1978"></td>
        <td id="LC1978" class="blob-code blob-code-inner js-file-line">        children.<span class="pl-c1">push</span>(element);</td>
      </tr>
      <tr>
        <td id="L1979" class="blob-num js-line-number" data-line-number="1979"></td>
        <td id="LC1979" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1980" class="blob-num js-line-number" data-line-number="1980"></td>
        <td id="LC1980" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> children;</td>
      </tr>
      <tr>
        <td id="L1981" class="blob-num js-line-number" data-line-number="1981"></td>
        <td id="LC1981" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1982" class="blob-num js-line-number" data-line-number="1982"></td>
        <td id="LC1982" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1983" class="blob-num js-line-number" data-line-number="1983"></td>
        <td id="LC1983" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">contents</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L1984" class="blob-num js-line-number" data-line-number="1984"></td>
        <td id="LC1984" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> element.<span class="pl-c1">childNodes</span>;</td>
      </tr>
      <tr>
        <td id="L1985" class="blob-num js-line-number" data-line-number="1985"></td>
        <td id="LC1985" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1986" class="blob-num js-line-number" data-line-number="1986"></td>
        <td id="LC1986" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1987" class="blob-num js-line-number" data-line-number="1987"></td>
        <td id="LC1987" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">append</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L1988" class="blob-num js-line-number" data-line-number="1988"></td>
        <td id="LC1988" class="blob-code blob-code-inner js-file-line">    forEach(<span class="pl-k">new</span> <span class="pl-en">JQLite</span>(node), <span class="pl-k">function</span>(<span class="pl-smi">child</span>){</td>
      </tr>
      <tr>
        <td id="L1989" class="blob-num js-line-number" data-line-number="1989"></td>
        <td id="LC1989" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (element.<span class="pl-c1">nodeType</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L1990" class="blob-num js-line-number" data-line-number="1990"></td>
        <td id="LC1990" class="blob-code blob-code-inner js-file-line">        element.<span class="pl-c1">appendChild</span>(child);</td>
      </tr>
      <tr>
        <td id="L1991" class="blob-num js-line-number" data-line-number="1991"></td>
        <td id="LC1991" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L1992" class="blob-num js-line-number" data-line-number="1992"></td>
        <td id="LC1992" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L1993" class="blob-num js-line-number" data-line-number="1993"></td>
        <td id="LC1993" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L1994" class="blob-num js-line-number" data-line-number="1994"></td>
        <td id="LC1994" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">prepend</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L1995" class="blob-num js-line-number" data-line-number="1995"></td>
        <td id="LC1995" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (element.<span class="pl-c1">nodeType</span> <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L1996" class="blob-num js-line-number" data-line-number="1996"></td>
        <td id="LC1996" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> index <span class="pl-k">=</span> element.<span class="pl-c1">firstChild</span>;</td>
      </tr>
      <tr>
        <td id="L1997" class="blob-num js-line-number" data-line-number="1997"></td>
        <td id="LC1997" class="blob-code blob-code-inner js-file-line">      forEach(<span class="pl-k">new</span> <span class="pl-en">JQLite</span>(node), <span class="pl-k">function</span>(<span class="pl-smi">child</span>){</td>
      </tr>
      <tr>
        <td id="L1998" class="blob-num js-line-number" data-line-number="1998"></td>
        <td id="LC1998" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (index) {</td>
      </tr>
      <tr>
        <td id="L1999" class="blob-num js-line-number" data-line-number="1999"></td>
        <td id="LC1999" class="blob-code blob-code-inner js-file-line">          element.<span class="pl-c1">insertBefore</span>(child, index);</td>
      </tr>
      <tr>
        <td id="L2000" class="blob-num js-line-number" data-line-number="2000"></td>
        <td id="LC2000" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2001" class="blob-num js-line-number" data-line-number="2001"></td>
        <td id="LC2001" class="blob-code blob-code-inner js-file-line">          element.<span class="pl-c1">appendChild</span>(child);</td>
      </tr>
      <tr>
        <td id="L2002" class="blob-num js-line-number" data-line-number="2002"></td>
        <td id="LC2002" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> child;</td>
      </tr>
      <tr>
        <td id="L2003" class="blob-num js-line-number" data-line-number="2003"></td>
        <td id="LC2003" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2004" class="blob-num js-line-number" data-line-number="2004"></td>
        <td id="LC2004" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2005" class="blob-num js-line-number" data-line-number="2005"></td>
        <td id="LC2005" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2006" class="blob-num js-line-number" data-line-number="2006"></td>
        <td id="LC2006" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2007" class="blob-num js-line-number" data-line-number="2007"></td>
        <td id="LC2007" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2008" class="blob-num js-line-number" data-line-number="2008"></td>
        <td id="LC2008" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">wrap</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">wrapNode</span>) {</td>
      </tr>
      <tr>
        <td id="L2009" class="blob-num js-line-number" data-line-number="2009"></td>
        <td id="LC2009" class="blob-code blob-code-inner js-file-line">    wrapNode <span class="pl-k">=</span> jqLite(wrapNode)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2010" class="blob-num js-line-number" data-line-number="2010"></td>
        <td id="LC2010" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parent <span class="pl-k">=</span> element.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2011" class="blob-num js-line-number" data-line-number="2011"></td>
        <td id="LC2011" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (parent) {</td>
      </tr>
      <tr>
        <td id="L2012" class="blob-num js-line-number" data-line-number="2012"></td>
        <td id="LC2012" class="blob-code blob-code-inner js-file-line">      parent.<span class="pl-c1">replaceChild</span>(wrapNode, element);</td>
      </tr>
      <tr>
        <td id="L2013" class="blob-num js-line-number" data-line-number="2013"></td>
        <td id="LC2013" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2014" class="blob-num js-line-number" data-line-number="2014"></td>
        <td id="LC2014" class="blob-code blob-code-inner js-file-line">    wrapNode.<span class="pl-c1">appendChild</span>(element);</td>
      </tr>
      <tr>
        <td id="L2015" class="blob-num js-line-number" data-line-number="2015"></td>
        <td id="LC2015" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2016" class="blob-num js-line-number" data-line-number="2016"></td>
        <td id="LC2016" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2017" class="blob-num js-line-number" data-line-number="2017"></td>
        <td id="LC2017" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">remove</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2018" class="blob-num js-line-number" data-line-number="2018"></td>
        <td id="LC2018" class="blob-code blob-code-inner js-file-line">    JQLiteDealoc(element);</td>
      </tr>
      <tr>
        <td id="L2019" class="blob-num js-line-number" data-line-number="2019"></td>
        <td id="LC2019" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parent <span class="pl-k">=</span> element.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2020" class="blob-num js-line-number" data-line-number="2020"></td>
        <td id="LC2020" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (parent) parent.removeChild(element);</td>
      </tr>
      <tr>
        <td id="L2021" class="blob-num js-line-number" data-line-number="2021"></td>
        <td id="LC2021" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2022" class="blob-num js-line-number" data-line-number="2022"></td>
        <td id="LC2022" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2023" class="blob-num js-line-number" data-line-number="2023"></td>
        <td id="LC2023" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">after</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">newElement</span>) {</td>
      </tr>
      <tr>
        <td id="L2024" class="blob-num js-line-number" data-line-number="2024"></td>
        <td id="LC2024" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> index <span class="pl-k">=</span> element, parent <span class="pl-k">=</span> element.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2025" class="blob-num js-line-number" data-line-number="2025"></td>
        <td id="LC2025" class="blob-code blob-code-inner js-file-line">    forEach(<span class="pl-k">new</span> <span class="pl-en">JQLite</span>(newElement), <span class="pl-k">function</span>(<span class="pl-smi">node</span>){</td>
      </tr>
      <tr>
        <td id="L2026" class="blob-num js-line-number" data-line-number="2026"></td>
        <td id="LC2026" class="blob-code blob-code-inner js-file-line">      parent.<span class="pl-c1">insertBefore</span>(node, index.<span class="pl-c1">nextSibling</span>);</td>
      </tr>
      <tr>
        <td id="L2027" class="blob-num js-line-number" data-line-number="2027"></td>
        <td id="LC2027" class="blob-code blob-code-inner js-file-line">      index <span class="pl-k">=</span> node;</td>
      </tr>
      <tr>
        <td id="L2028" class="blob-num js-line-number" data-line-number="2028"></td>
        <td id="LC2028" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2029" class="blob-num js-line-number" data-line-number="2029"></td>
        <td id="LC2029" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2030" class="blob-num js-line-number" data-line-number="2030"></td>
        <td id="LC2030" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2031" class="blob-num js-line-number" data-line-number="2031"></td>
        <td id="LC2031" class="blob-code blob-code-inner js-file-line">  addClass<span class="pl-k">:</span> JQLiteAddClass,</td>
      </tr>
      <tr>
        <td id="L2032" class="blob-num js-line-number" data-line-number="2032"></td>
        <td id="LC2032" class="blob-code blob-code-inner js-file-line">  removeClass<span class="pl-k">:</span> JQLiteRemoveClass,</td>
      </tr>
      <tr>
        <td id="L2033" class="blob-num js-line-number" data-line-number="2033"></td>
        <td id="LC2033" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2034" class="blob-num js-line-number" data-line-number="2034"></td>
        <td id="LC2034" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">toggleClass</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>, <span class="pl-smi">condition</span>) {</td>
      </tr>
      <tr>
        <td id="L2035" class="blob-num js-line-number" data-line-number="2035"></td>
        <td id="LC2035" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(condition)) {</td>
      </tr>
      <tr>
        <td id="L2036" class="blob-num js-line-number" data-line-number="2036"></td>
        <td id="LC2036" class="blob-code blob-code-inner js-file-line">      condition <span class="pl-k">=</span> <span class="pl-k">!</span>JQLiteHasClass(element, selector);</td>
      </tr>
      <tr>
        <td id="L2037" class="blob-num js-line-number" data-line-number="2037"></td>
        <td id="LC2037" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2038" class="blob-num js-line-number" data-line-number="2038"></td>
        <td id="LC2038" class="blob-code blob-code-inner js-file-line">    (condition <span class="pl-k">?</span> JQLiteAddClass <span class="pl-k">:</span> JQLiteRemoveClass)(element, selector);</td>
      </tr>
      <tr>
        <td id="L2039" class="blob-num js-line-number" data-line-number="2039"></td>
        <td id="LC2039" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2040" class="blob-num js-line-number" data-line-number="2040"></td>
        <td id="LC2040" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2041" class="blob-num js-line-number" data-line-number="2041"></td>
        <td id="LC2041" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">parent</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2042" class="blob-num js-line-number" data-line-number="2042"></td>
        <td id="LC2042" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> parent <span class="pl-k">=</span> element.<span class="pl-c1">parentNode</span>;</td>
      </tr>
      <tr>
        <td id="L2043" class="blob-num js-line-number" data-line-number="2043"></td>
        <td id="LC2043" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> parent <span class="pl-k">&amp;&amp;</span> parent.<span class="pl-c1">nodeType</span> <span class="pl-k">!==</span> <span class="pl-c1">11</span> <span class="pl-k">?</span> parent <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2044" class="blob-num js-line-number" data-line-number="2044"></td>
        <td id="LC2044" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2045" class="blob-num js-line-number" data-line-number="2045"></td>
        <td id="LC2045" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2046" class="blob-num js-line-number" data-line-number="2046"></td>
        <td id="LC2046" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">next</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2047" class="blob-num js-line-number" data-line-number="2047"></td>
        <td id="LC2047" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> element.<span class="pl-c1">nextSibling</span>;</td>
      </tr>
      <tr>
        <td id="L2048" class="blob-num js-line-number" data-line-number="2048"></td>
        <td id="LC2048" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2049" class="blob-num js-line-number" data-line-number="2049"></td>
        <td id="LC2049" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2050" class="blob-num js-line-number" data-line-number="2050"></td>
        <td id="LC2050" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">find</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L2051" class="blob-num js-line-number" data-line-number="2051"></td>
        <td id="LC2051" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> element.<span class="pl-c1">getElementsByTagName</span>(selector);</td>
      </tr>
      <tr>
        <td id="L2052" class="blob-num js-line-number" data-line-number="2052"></td>
        <td id="LC2052" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2053" class="blob-num js-line-number" data-line-number="2053"></td>
        <td id="LC2053" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2054" class="blob-num js-line-number" data-line-number="2054"></td>
        <td id="LC2054" class="blob-code blob-code-inner js-file-line">  clone<span class="pl-k">:</span> JQLiteClone</td>
      </tr>
      <tr>
        <td id="L2055" class="blob-num js-line-number" data-line-number="2055"></td>
        <td id="LC2055" class="blob-code blob-code-inner js-file-line">}, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">name</span>){</td>
      </tr>
      <tr>
        <td id="L2056" class="blob-num js-line-number" data-line-number="2056"></td>
        <td id="LC2056" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2057" class="blob-num js-line-number" data-line-number="2057"></td>
        <td id="LC2057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * chaining functions</span></td>
      </tr>
      <tr>
        <td id="L2058" class="blob-num js-line-number" data-line-number="2058"></td>
        <td id="LC2058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2059" class="blob-num js-line-number" data-line-number="2059"></td>
        <td id="LC2059" class="blob-code blob-code-inner js-file-line">  JQLite.<span class="pl-c1">prototype</span>[name] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">arg1</span>, <span class="pl-smi">arg2</span>) {</td>
      </tr>
      <tr>
        <td id="L2060" class="blob-num js-line-number" data-line-number="2060"></td>
        <td id="LC2060" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value;</td>
      </tr>
      <tr>
        <td id="L2061" class="blob-num js-line-number" data-line-number="2061"></td>
        <td id="LC2061" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> <span class="pl-v">this</span>.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2062" class="blob-num js-line-number" data-line-number="2062"></td>
        <td id="LC2062" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value <span class="pl-k">==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2063" class="blob-num js-line-number" data-line-number="2063"></td>
        <td id="LC2063" class="blob-code blob-code-inner js-file-line">        value <span class="pl-k">=</span> fn(<span class="pl-v">this</span>[i], arg1, arg2);</td>
      </tr>
      <tr>
        <td id="L2064" class="blob-num js-line-number" data-line-number="2064"></td>
        <td id="LC2064" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (value <span class="pl-k">!==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2065" class="blob-num js-line-number" data-line-number="2065"></td>
        <td id="LC2065" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// any function which returns a value needs to be wrapped</span></td>
      </tr>
      <tr>
        <td id="L2066" class="blob-num js-line-number" data-line-number="2066"></td>
        <td id="LC2066" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> jqLite(value);</td>
      </tr>
      <tr>
        <td id="L2067" class="blob-num js-line-number" data-line-number="2067"></td>
        <td id="LC2067" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2068" class="blob-num js-line-number" data-line-number="2068"></td>
        <td id="LC2068" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2069" class="blob-num js-line-number" data-line-number="2069"></td>
        <td id="LC2069" class="blob-code blob-code-inner js-file-line">        JQLiteAddNodes(value, fn(<span class="pl-v">this</span>[i], arg1, arg2));</td>
      </tr>
      <tr>
        <td id="L2070" class="blob-num js-line-number" data-line-number="2070"></td>
        <td id="LC2070" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2071" class="blob-num js-line-number" data-line-number="2071"></td>
        <td id="LC2071" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2072" class="blob-num js-line-number" data-line-number="2072"></td>
        <td id="LC2072" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> this <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L2073" class="blob-num js-line-number" data-line-number="2073"></td>
        <td id="LC2073" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2074" class="blob-num js-line-number" data-line-number="2074"></td>
        <td id="LC2074" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L2075" class="blob-num js-line-number" data-line-number="2075"></td>
        <td id="LC2075" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2076" class="blob-num js-line-number" data-line-number="2076"></td>
        <td id="LC2076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2077" class="blob-num js-line-number" data-line-number="2077"></td>
        <td id="LC2077" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Computes a hash of an &#39;obj&#39;.</span></td>
      </tr>
      <tr>
        <td id="L2078" class="blob-num js-line-number" data-line-number="2078"></td>
        <td id="LC2078" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Hash of a:</span></td>
      </tr>
      <tr>
        <td id="L2079" class="blob-num js-line-number" data-line-number="2079"></td>
        <td id="LC2079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  string is string</span></td>
      </tr>
      <tr>
        <td id="L2080" class="blob-num js-line-number" data-line-number="2080"></td>
        <td id="LC2080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  number is number as string</span></td>
      </tr>
      <tr>
        <td id="L2081" class="blob-num js-line-number" data-line-number="2081"></td>
        <td id="LC2081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  object is either result of calling $$hashKey function on the object or uniquely generated id,</span></td>
      </tr>
      <tr>
        <td id="L2082" class="blob-num js-line-number" data-line-number="2082"></td>
        <td id="LC2082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         that is also assigned to the $$hashKey property of the object.</span></td>
      </tr>
      <tr>
        <td id="L2083" class="blob-num js-line-number" data-line-number="2083"></td>
        <td id="LC2083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2084" class="blob-num js-line-number" data-line-number="2084"></td>
        <td id="LC2084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> obj</span></td>
      </tr>
      <tr>
        <td id="L2085" class="blob-num js-line-number" data-line-number="2085"></td>
        <td id="LC2085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} hash string such that the same input will have the same hash string.</span></td>
      </tr>
      <tr>
        <td id="L2086" class="blob-num js-line-number" data-line-number="2086"></td>
        <td id="LC2086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         The resulting string key is in &#39;type:hashKey&#39; format.</span></td>
      </tr>
      <tr>
        <td id="L2087" class="blob-num js-line-number" data-line-number="2087"></td>
        <td id="LC2087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2088" class="blob-num js-line-number" data-line-number="2088"></td>
        <td id="LC2088" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">hashKey</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L2089" class="blob-num js-line-number" data-line-number="2089"></td>
        <td id="LC2089" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> objType <span class="pl-k">=</span> <span class="pl-k">typeof</span> obj,</td>
      </tr>
      <tr>
        <td id="L2090" class="blob-num js-line-number" data-line-number="2090"></td>
        <td id="LC2090" class="blob-code blob-code-inner js-file-line">      key;</td>
      </tr>
      <tr>
        <td id="L2091" class="blob-num js-line-number" data-line-number="2091"></td>
        <td id="LC2091" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2092" class="blob-num js-line-number" data-line-number="2092"></td>
        <td id="LC2092" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (objType <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>object<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> obj <span class="pl-k">!==</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L2093" class="blob-num js-line-number" data-line-number="2093"></td>
        <td id="LC2093" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">typeof</span> (key <span class="pl-k">=</span> obj.$$hashKey) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2094" class="blob-num js-line-number" data-line-number="2094"></td>
        <td id="LC2094" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// must invoke on object to keep the right this</span></td>
      </tr>
      <tr>
        <td id="L2095" class="blob-num js-line-number" data-line-number="2095"></td>
        <td id="LC2095" class="blob-code blob-code-inner js-file-line">      key <span class="pl-k">=</span> obj.$$hashKey();</td>
      </tr>
      <tr>
        <td id="L2096" class="blob-num js-line-number" data-line-number="2096"></td>
        <td id="LC2096" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (key <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L2097" class="blob-num js-line-number" data-line-number="2097"></td>
        <td id="LC2097" class="blob-code blob-code-inner js-file-line">      key <span class="pl-k">=</span> obj.$$hashKey <span class="pl-k">=</span> nextUid();</td>
      </tr>
      <tr>
        <td id="L2098" class="blob-num js-line-number" data-line-number="2098"></td>
        <td id="LC2098" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2099" class="blob-num js-line-number" data-line-number="2099"></td>
        <td id="LC2099" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2100" class="blob-num js-line-number" data-line-number="2100"></td>
        <td id="LC2100" class="blob-code blob-code-inner js-file-line">    key <span class="pl-k">=</span> obj;</td>
      </tr>
      <tr>
        <td id="L2101" class="blob-num js-line-number" data-line-number="2101"></td>
        <td id="LC2101" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2102" class="blob-num js-line-number" data-line-number="2102"></td>
        <td id="LC2102" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2103" class="blob-num js-line-number" data-line-number="2103"></td>
        <td id="LC2103" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> objType <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> key;</td>
      </tr>
      <tr>
        <td id="L2104" class="blob-num js-line-number" data-line-number="2104"></td>
        <td id="LC2104" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2105" class="blob-num js-line-number" data-line-number="2105"></td>
        <td id="LC2105" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2106" class="blob-num js-line-number" data-line-number="2106"></td>
        <td id="LC2106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2107" class="blob-num js-line-number" data-line-number="2107"></td>
        <td id="LC2107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * HashMap which can use objects as keys</span></td>
      </tr>
      <tr>
        <td id="L2108" class="blob-num js-line-number" data-line-number="2108"></td>
        <td id="LC2108" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2109" class="blob-num js-line-number" data-line-number="2109"></td>
        <td id="LC2109" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">HashMap</span>(<span class="pl-smi">array</span>){</td>
      </tr>
      <tr>
        <td id="L2110" class="blob-num js-line-number" data-line-number="2110"></td>
        <td id="LC2110" class="blob-code blob-code-inner js-file-line">  forEach(array, <span class="pl-v">this</span>.put, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L2111" class="blob-num js-line-number" data-line-number="2111"></td>
        <td id="LC2111" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2112" class="blob-num js-line-number" data-line-number="2112"></td>
        <td id="LC2112" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">HashMap</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2113" class="blob-num js-line-number" data-line-number="2113"></td>
        <td id="LC2113" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2114" class="blob-num js-line-number" data-line-number="2114"></td>
        <td id="LC2114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Store key value pair</span></td>
      </tr>
      <tr>
        <td id="L2115" class="blob-num js-line-number" data-line-number="2115"></td>
        <td id="LC2115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> key key to store can be any type</span></td>
      </tr>
      <tr>
        <td id="L2116" class="blob-num js-line-number" data-line-number="2116"></td>
        <td id="LC2116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> value value to store can be any type</span></td>
      </tr>
      <tr>
        <td id="L2117" class="blob-num js-line-number" data-line-number="2117"></td>
        <td id="LC2117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2118" class="blob-num js-line-number" data-line-number="2118"></td>
        <td id="LC2118" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">put</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2119" class="blob-num js-line-number" data-line-number="2119"></td>
        <td id="LC2119" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>[hashKey(key)] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2120" class="blob-num js-line-number" data-line-number="2120"></td>
        <td id="LC2120" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2121" class="blob-num js-line-number" data-line-number="2121"></td>
        <td id="LC2121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2122" class="blob-num js-line-number" data-line-number="2122"></td>
        <td id="LC2122" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2123" class="blob-num js-line-number" data-line-number="2123"></td>
        <td id="LC2123" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> key</span></td>
      </tr>
      <tr>
        <td id="L2124" class="blob-num js-line-number" data-line-number="2124"></td>
        <td id="LC2124" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> the value for the key</span></td>
      </tr>
      <tr>
        <td id="L2125" class="blob-num js-line-number" data-line-number="2125"></td>
        <td id="LC2125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2126" class="blob-num js-line-number" data-line-number="2126"></td>
        <td id="LC2126" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L2127" class="blob-num js-line-number" data-line-number="2127"></td>
        <td id="LC2127" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>[hashKey(key)];</td>
      </tr>
      <tr>
        <td id="L2128" class="blob-num js-line-number" data-line-number="2128"></td>
        <td id="LC2128" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2129" class="blob-num js-line-number" data-line-number="2129"></td>
        <td id="LC2129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2130" class="blob-num js-line-number" data-line-number="2130"></td>
        <td id="LC2130" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2131" class="blob-num js-line-number" data-line-number="2131"></td>
        <td id="LC2131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Remove the key/value pair</span></td>
      </tr>
      <tr>
        <td id="L2132" class="blob-num js-line-number" data-line-number="2132"></td>
        <td id="LC2132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> key</span></td>
      </tr>
      <tr>
        <td id="L2133" class="blob-num js-line-number" data-line-number="2133"></td>
        <td id="LC2133" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2134" class="blob-num js-line-number" data-line-number="2134"></td>
        <td id="LC2134" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">remove</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L2135" class="blob-num js-line-number" data-line-number="2135"></td>
        <td id="LC2135" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> <span class="pl-v">this</span>[key <span class="pl-k">=</span> hashKey(key)];</td>
      </tr>
      <tr>
        <td id="L2136" class="blob-num js-line-number" data-line-number="2136"></td>
        <td id="LC2136" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">delete</span> <span class="pl-v">this</span>[key];</td>
      </tr>
      <tr>
        <td id="L2137" class="blob-num js-line-number" data-line-number="2137"></td>
        <td id="LC2137" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L2138" class="blob-num js-line-number" data-line-number="2138"></td>
        <td id="LC2138" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2139" class="blob-num js-line-number" data-line-number="2139"></td>
        <td id="LC2139" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2140" class="blob-num js-line-number" data-line-number="2140"></td>
        <td id="LC2140" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2141" class="blob-num js-line-number" data-line-number="2141"></td>
        <td id="LC2141" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2142" class="blob-num js-line-number" data-line-number="2142"></td>
        <td id="LC2142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A map where multiple values can be added to the same key such that they form a queue.</span></td>
      </tr>
      <tr>
        <td id="L2143" class="blob-num js-line-number" data-line-number="2143"></td>
        <td id="LC2143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {HashQueueMap}</span></td>
      </tr>
      <tr>
        <td id="L2144" class="blob-num js-line-number" data-line-number="2144"></td>
        <td id="LC2144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2145" class="blob-num js-line-number" data-line-number="2145"></td>
        <td id="LC2145" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">HashQueueMap</span>() {}</td>
      </tr>
      <tr>
        <td id="L2146" class="blob-num js-line-number" data-line-number="2146"></td>
        <td id="LC2146" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">HashQueueMap</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2147" class="blob-num js-line-number" data-line-number="2147"></td>
        <td id="LC2147" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2148" class="blob-num js-line-number" data-line-number="2148"></td>
        <td id="LC2148" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Same as array push, but using an array as the value for the hash</span></td>
      </tr>
      <tr>
        <td id="L2149" class="blob-num js-line-number" data-line-number="2149"></td>
        <td id="LC2149" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2150" class="blob-num js-line-number" data-line-number="2150"></td>
        <td id="LC2150" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">push</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2151" class="blob-num js-line-number" data-line-number="2151"></td>
        <td id="LC2151" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> array <span class="pl-k">=</span> <span class="pl-v">this</span>[key <span class="pl-k">=</span> hashKey(key)];</td>
      </tr>
      <tr>
        <td id="L2152" class="blob-num js-line-number" data-line-number="2152"></td>
        <td id="LC2152" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>array) {</td>
      </tr>
      <tr>
        <td id="L2153" class="blob-num js-line-number" data-line-number="2153"></td>
        <td id="LC2153" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>[key] <span class="pl-k">=</span> [value];</td>
      </tr>
      <tr>
        <td id="L2154" class="blob-num js-line-number" data-line-number="2154"></td>
        <td id="LC2154" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2155" class="blob-num js-line-number" data-line-number="2155"></td>
        <td id="LC2155" class="blob-code blob-code-inner js-file-line">      array.<span class="pl-c1">push</span>(value);</td>
      </tr>
      <tr>
        <td id="L2156" class="blob-num js-line-number" data-line-number="2156"></td>
        <td id="LC2156" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2157" class="blob-num js-line-number" data-line-number="2157"></td>
        <td id="LC2157" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L2158" class="blob-num js-line-number" data-line-number="2158"></td>
        <td id="LC2158" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2159" class="blob-num js-line-number" data-line-number="2159"></td>
        <td id="LC2159" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2160" class="blob-num js-line-number" data-line-number="2160"></td>
        <td id="LC2160" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Same as array shift, but using an array as the value for the hash</span></td>
      </tr>
      <tr>
        <td id="L2161" class="blob-num js-line-number" data-line-number="2161"></td>
        <td id="LC2161" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2162" class="blob-num js-line-number" data-line-number="2162"></td>
        <td id="LC2162" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">shift</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L2163" class="blob-num js-line-number" data-line-number="2163"></td>
        <td id="LC2163" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> array <span class="pl-k">=</span> <span class="pl-v">this</span>[key <span class="pl-k">=</span> hashKey(key)];</td>
      </tr>
      <tr>
        <td id="L2164" class="blob-num js-line-number" data-line-number="2164"></td>
        <td id="LC2164" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (array) {</td>
      </tr>
      <tr>
        <td id="L2165" class="blob-num js-line-number" data-line-number="2165"></td>
        <td id="LC2165" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (array.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L2166" class="blob-num js-line-number" data-line-number="2166"></td>
        <td id="LC2166" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> <span class="pl-v">this</span>[key];</td>
      </tr>
      <tr>
        <td id="L2167" class="blob-num js-line-number" data-line-number="2167"></td>
        <td id="LC2167" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> array[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L2168" class="blob-num js-line-number" data-line-number="2168"></td>
        <td id="LC2168" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2169" class="blob-num js-line-number" data-line-number="2169"></td>
        <td id="LC2169" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> array.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L2170" class="blob-num js-line-number" data-line-number="2170"></td>
        <td id="LC2170" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2171" class="blob-num js-line-number" data-line-number="2171"></td>
        <td id="LC2171" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2172" class="blob-num js-line-number" data-line-number="2172"></td>
        <td id="LC2172" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2173" class="blob-num js-line-number" data-line-number="2173"></td>
        <td id="LC2173" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L2174" class="blob-num js-line-number" data-line-number="2174"></td>
        <td id="LC2174" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2175" class="blob-num js-line-number" data-line-number="2175"></td>
        <td id="LC2175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2176" class="blob-num js-line-number" data-line-number="2176"></td>
        <td id="LC2176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L2177" class="blob-num js-line-number" data-line-number="2177"></td>
        <td id="LC2177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.injector</span></td>
      </tr>
      <tr>
        <td id="L2178" class="blob-num js-line-number" data-line-number="2178"></td>
        <td id="LC2178" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L2179" class="blob-num js-line-number" data-line-number="2179"></td>
        <td id="LC2179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2180" class="blob-num js-line-number" data-line-number="2180"></td>
        <td id="LC2180" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2181" class="blob-num js-line-number" data-line-number="2181"></td>
        <td id="LC2181" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Creates an injector function that can be used for retrieving services as well as for</span></td>
      </tr>
      <tr>
        <td id="L2182" class="blob-num js-line-number" data-line-number="2182"></td>
        <td id="LC2182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * dependency injection (see {@link guide/dev_guide.di dependency injection}).</span></td>
      </tr>
      <tr>
        <td id="L2183" class="blob-num js-line-number" data-line-number="2183"></td>
        <td id="LC2183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2184" class="blob-num js-line-number" data-line-number="2184"></td>
        <td id="LC2184" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L2185" class="blob-num js-line-number" data-line-number="2185"></td>
        <td id="LC2185" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Array.&lt;string|Function&gt;} modules A list of module functions or their aliases. See</span></td>
      </tr>
      <tr>
        <td id="L2186" class="blob-num js-line-number" data-line-number="2186"></td>
        <td id="LC2186" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *        {@link angular.module}. The `ng` module must be explicitly added.</span></td>
      </tr>
      <tr>
        <td id="L2187" class="blob-num js-line-number" data-line-number="2187"></td>
        <td id="LC2187" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {function()} Injector function. See {@link angular.module.AUTO.$injector $injector}.</span></td>
      </tr>
      <tr>
        <td id="L2188" class="blob-num js-line-number" data-line-number="2188"></td>
        <td id="LC2188" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2189" class="blob-num js-line-number" data-line-number="2189"></td>
        <td id="LC2189" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L2190" class="blob-num js-line-number" data-line-number="2190"></td>
        <td id="LC2190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Typical usage</span></td>
      </tr>
      <tr>
        <td id="L2191" class="blob-num js-line-number" data-line-number="2191"></td>
        <td id="LC2191" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2192" class="blob-num js-line-number" data-line-number="2192"></td>
        <td id="LC2192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // create an injector</span></td>
      </tr>
      <tr>
        <td id="L2193" class="blob-num js-line-number" data-line-number="2193"></td>
        <td id="LC2193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   var $injector = angular.injector([&#39;ng&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L2194" class="blob-num js-line-number" data-line-number="2194"></td>
        <td id="LC2194" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2195" class="blob-num js-line-number" data-line-number="2195"></td>
        <td id="LC2195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // use the injector to kick of your application</span></td>
      </tr>
      <tr>
        <td id="L2196" class="blob-num js-line-number" data-line-number="2196"></td>
        <td id="LC2196" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // use the type inference to auto inject arguments, or use implicit injection</span></td>
      </tr>
      <tr>
        <td id="L2197" class="blob-num js-line-number" data-line-number="2197"></td>
        <td id="LC2197" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   $injector.invoke(function($rootScope, $compile, $document){</span></td>
      </tr>
      <tr>
        <td id="L2198" class="blob-num js-line-number" data-line-number="2198"></td>
        <td id="LC2198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     $compile($document)($rootScope);</span></td>
      </tr>
      <tr>
        <td id="L2199" class="blob-num js-line-number" data-line-number="2199"></td>
        <td id="LC2199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     $rootScope.$digest();</span></td>
      </tr>
      <tr>
        <td id="L2200" class="blob-num js-line-number" data-line-number="2200"></td>
        <td id="LC2200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   });</span></td>
      </tr>
      <tr>
        <td id="L2201" class="blob-num js-line-number" data-line-number="2201"></td>
        <td id="LC2201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2202" class="blob-num js-line-number" data-line-number="2202"></td>
        <td id="LC2202" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2203" class="blob-num js-line-number" data-line-number="2203"></td>
        <td id="LC2203" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2204" class="blob-num js-line-number" data-line-number="2204"></td>
        <td id="LC2204" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2205" class="blob-num js-line-number" data-line-number="2205"></td>
        <td id="LC2205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2206" class="blob-num js-line-number" data-line-number="2206"></td>
        <td id="LC2206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc overview</span></td>
      </tr>
      <tr>
        <td id="L2207" class="blob-num js-line-number" data-line-number="2207"></td>
        <td id="LC2207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO</span></td>
      </tr>
      <tr>
        <td id="L2208" class="blob-num js-line-number" data-line-number="2208"></td>
        <td id="LC2208" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2209" class="blob-num js-line-number" data-line-number="2209"></td>
        <td id="LC2209" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2210" class="blob-num js-line-number" data-line-number="2210"></td>
        <td id="LC2210" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Implicit module which gets automatically added to each {@link angular.module.AUTO.$injector $injector}.</span></td>
      </tr>
      <tr>
        <td id="L2211" class="blob-num js-line-number" data-line-number="2211"></td>
        <td id="LC2211" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2212" class="blob-num js-line-number" data-line-number="2212"></td>
        <td id="LC2212" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2213" class="blob-num js-line-number" data-line-number="2213"></td>
        <td id="LC2213" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">FN_ARGS</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>function<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\(</span>]</span><span class="pl-k">*</span><span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\)</span>]</span><span class="pl-k">*</span>)<span class="pl-cce">\)</span><span class="pl-pds">/</span>m</span>;</td>
      </tr>
      <tr>
        <td id="L2214" class="blob-num js-line-number" data-line-number="2214"></td>
        <td id="LC2214" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">FN_ARG_SPLIT</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>,<span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2215" class="blob-num js-line-number" data-line-number="2215"></td>
        <td id="LC2215" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">FN_ARG</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(_<span class="pl-k">?</span>)(<span class="pl-c1">.</span><span class="pl-k">+?</span>)<span class="pl-k">\1</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L2216" class="blob-num js-line-number" data-line-number="2216"></td>
        <td id="LC2216" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">STRIP_COMMENTS</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>((<span class="pl-cce">\/\/</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-k">$</span>)<span class="pl-k">|</span>(<span class="pl-cce">\/\*</span><span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*?</span><span class="pl-cce">\*\/</span>))<span class="pl-pds">/</span>mg</span>;</td>
      </tr>
      <tr>
        <td id="L2217" class="blob-num js-line-number" data-line-number="2217"></td>
        <td id="LC2217" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">inferInjectionArgs</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L2218" class="blob-num js-line-number" data-line-number="2218"></td>
        <td id="LC2218" class="blob-code blob-code-inner js-file-line">  assertArgFn(fn);</td>
      </tr>
      <tr>
        <td id="L2219" class="blob-num js-line-number" data-line-number="2219"></td>
        <td id="LC2219" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>fn.$inject) {</td>
      </tr>
      <tr>
        <td id="L2220" class="blob-num js-line-number" data-line-number="2220"></td>
        <td id="LC2220" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> args <span class="pl-k">=</span> fn.$inject <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2221" class="blob-num js-line-number" data-line-number="2221"></td>
        <td id="LC2221" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> fnText <span class="pl-k">=</span> fn.<span class="pl-c1">toString</span>().<span class="pl-c1">replace</span>(<span class="pl-c1">STRIP_COMMENTS</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2222" class="blob-num js-line-number" data-line-number="2222"></td>
        <td id="LC2222" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> argDecl <span class="pl-k">=</span> fnText.<span class="pl-c1">match</span>(<span class="pl-c1">FN_ARGS</span>);</td>
      </tr>
      <tr>
        <td id="L2223" class="blob-num js-line-number" data-line-number="2223"></td>
        <td id="LC2223" class="blob-code blob-code-inner js-file-line">    forEach(argDecl[<span class="pl-c1">1</span>].<span class="pl-c1">split</span>(<span class="pl-c1">FN_ARG_SPLIT</span>), <span class="pl-k">function</span>(<span class="pl-smi">arg</span>){</td>
      </tr>
      <tr>
        <td id="L2224" class="blob-num js-line-number" data-line-number="2224"></td>
        <td id="LC2224" class="blob-code blob-code-inner js-file-line">      arg.<span class="pl-c1">replace</span>(<span class="pl-c1">FN_ARG</span>, <span class="pl-k">function</span>(<span class="pl-smi">all</span>, <span class="pl-smi">underscore</span>, <span class="pl-smi">name</span>){</td>
      </tr>
      <tr>
        <td id="L2225" class="blob-num js-line-number" data-line-number="2225"></td>
        <td id="LC2225" class="blob-code blob-code-inner js-file-line">        args.<span class="pl-c1">push</span>(name);</td>
      </tr>
      <tr>
        <td id="L2226" class="blob-num js-line-number" data-line-number="2226"></td>
        <td id="LC2226" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2227" class="blob-num js-line-number" data-line-number="2227"></td>
        <td id="LC2227" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2228" class="blob-num js-line-number" data-line-number="2228"></td>
        <td id="LC2228" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2229" class="blob-num js-line-number" data-line-number="2229"></td>
        <td id="LC2229" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> fn.$inject;</td>
      </tr>
      <tr>
        <td id="L2230" class="blob-num js-line-number" data-line-number="2230"></td>
        <td id="LC2230" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2231" class="blob-num js-line-number" data-line-number="2231"></td>
        <td id="LC2231" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2232" class="blob-num js-line-number" data-line-number="2232"></td>
        <td id="LC2232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">///////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2233" class="blob-num js-line-number" data-line-number="2233"></td>
        <td id="LC2233" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2234" class="blob-num js-line-number" data-line-number="2234"></td>
        <td id="LC2234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2235" class="blob-num js-line-number" data-line-number="2235"></td>
        <td id="LC2235" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L2236" class="blob-num js-line-number" data-line-number="2236"></td>
        <td id="LC2236" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$injector</span></td>
      </tr>
      <tr>
        <td id="L2237" class="blob-num js-line-number" data-line-number="2237"></td>
        <td id="LC2237" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L2238" class="blob-num js-line-number" data-line-number="2238"></td>
        <td id="LC2238" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2239" class="blob-num js-line-number" data-line-number="2239"></td>
        <td id="LC2239" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2240" class="blob-num js-line-number" data-line-number="2240"></td>
        <td id="LC2240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2241" class="blob-num js-line-number" data-line-number="2241"></td>
        <td id="LC2241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `$injector` is used to retrieve object instances as defined by</span></td>
      </tr>
      <tr>
        <td id="L2242" class="blob-num js-line-number" data-line-number="2242"></td>
        <td id="LC2242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.AUTO.$provide provider}, instantiate types, invoke methods,</span></td>
      </tr>
      <tr>
        <td id="L2243" class="blob-num js-line-number" data-line-number="2243"></td>
        <td id="LC2243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and load modules.</span></td>
      </tr>
      <tr>
        <td id="L2244" class="blob-num js-line-number" data-line-number="2244"></td>
        <td id="LC2244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2245" class="blob-num js-line-number" data-line-number="2245"></td>
        <td id="LC2245" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The following always holds true:</span></td>
      </tr>
      <tr>
        <td id="L2246" class="blob-num js-line-number" data-line-number="2246"></td>
        <td id="LC2246" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2247" class="blob-num js-line-number" data-line-number="2247"></td>
        <td id="LC2247" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2248" class="blob-num js-line-number" data-line-number="2248"></td>
        <td id="LC2248" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   var $injector = angular.injector();</span></td>
      </tr>
      <tr>
        <td id="L2249" class="blob-num js-line-number" data-line-number="2249"></td>
        <td id="LC2249" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   expect($injector.get(&#39;$injector&#39;)).toBe($injector);</span></td>
      </tr>
      <tr>
        <td id="L2250" class="blob-num js-line-number" data-line-number="2250"></td>
        <td id="LC2250" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   expect($injector.invoke(function($injector){</span></td>
      </tr>
      <tr>
        <td id="L2251" class="blob-num js-line-number" data-line-number="2251"></td>
        <td id="LC2251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     return $injector;</span></td>
      </tr>
      <tr>
        <td id="L2252" class="blob-num js-line-number" data-line-number="2252"></td>
        <td id="LC2252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   }).toBe($injector);</span></td>
      </tr>
      <tr>
        <td id="L2253" class="blob-num js-line-number" data-line-number="2253"></td>
        <td id="LC2253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2254" class="blob-num js-line-number" data-line-number="2254"></td>
        <td id="LC2254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2255" class="blob-num js-line-number" data-line-number="2255"></td>
        <td id="LC2255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Injection Function Annotation</span></td>
      </tr>
      <tr>
        <td id="L2256" class="blob-num js-line-number" data-line-number="2256"></td>
        <td id="LC2256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2257" class="blob-num js-line-number" data-line-number="2257"></td>
        <td id="LC2257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * JavaScript does not have annotations, and annotations are needed for dependency injection. The</span></td>
      </tr>
      <tr>
        <td id="L2258" class="blob-num js-line-number" data-line-number="2258"></td>
        <td id="LC2258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * following ways are all valid way of annotating function with injection arguments and are equivalent.</span></td>
      </tr>
      <tr>
        <td id="L2259" class="blob-num js-line-number" data-line-number="2259"></td>
        <td id="LC2259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2260" class="blob-num js-line-number" data-line-number="2260"></td>
        <td id="LC2260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2261" class="blob-num js-line-number" data-line-number="2261"></td>
        <td id="LC2261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // inferred (only works if code not minified/obfuscated)</span></td>
      </tr>
      <tr>
        <td id="L2262" class="blob-num js-line-number" data-line-number="2262"></td>
        <td id="LC2262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   $inject.invoke(function(serviceA){});</span></td>
      </tr>
      <tr>
        <td id="L2263" class="blob-num js-line-number" data-line-number="2263"></td>
        <td id="LC2263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2264" class="blob-num js-line-number" data-line-number="2264"></td>
        <td id="LC2264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // annotated</span></td>
      </tr>
      <tr>
        <td id="L2265" class="blob-num js-line-number" data-line-number="2265"></td>
        <td id="LC2265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   function explicit(serviceA) {};</span></td>
      </tr>
      <tr>
        <td id="L2266" class="blob-num js-line-number" data-line-number="2266"></td>
        <td id="LC2266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   explicit.$inject = [&#39;serviceA&#39;];</span></td>
      </tr>
      <tr>
        <td id="L2267" class="blob-num js-line-number" data-line-number="2267"></td>
        <td id="LC2267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   $inject.invoke(explicit);</span></td>
      </tr>
      <tr>
        <td id="L2268" class="blob-num js-line-number" data-line-number="2268"></td>
        <td id="LC2268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2269" class="blob-num js-line-number" data-line-number="2269"></td>
        <td id="LC2269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // inline</span></td>
      </tr>
      <tr>
        <td id="L2270" class="blob-num js-line-number" data-line-number="2270"></td>
        <td id="LC2270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   $inject.invoke([&#39;serviceA&#39;, function(serviceA){}]);</span></td>
      </tr>
      <tr>
        <td id="L2271" class="blob-num js-line-number" data-line-number="2271"></td>
        <td id="LC2271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2272" class="blob-num js-line-number" data-line-number="2272"></td>
        <td id="LC2272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2273" class="blob-num js-line-number" data-line-number="2273"></td>
        <td id="LC2273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ## Inference</span></td>
      </tr>
      <tr>
        <td id="L2274" class="blob-num js-line-number" data-line-number="2274"></td>
        <td id="LC2274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2275" class="blob-num js-line-number" data-line-number="2275"></td>
        <td id="LC2275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In JavaScript calling `toString()` on a function returns the function definition. The definition can then be</span></td>
      </tr>
      <tr>
        <td id="L2276" class="blob-num js-line-number" data-line-number="2276"></td>
        <td id="LC2276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * parsed and the function arguments can be extracted. *NOTE:* This does not work with minfication, and obfuscation</span></td>
      </tr>
      <tr>
        <td id="L2277" class="blob-num js-line-number" data-line-number="2277"></td>
        <td id="LC2277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * tools since these tools change the argument names.</span></td>
      </tr>
      <tr>
        <td id="L2278" class="blob-num js-line-number" data-line-number="2278"></td>
        <td id="LC2278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2279" class="blob-num js-line-number" data-line-number="2279"></td>
        <td id="LC2279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ## `$inject` Annotation</span></td>
      </tr>
      <tr>
        <td id="L2280" class="blob-num js-line-number" data-line-number="2280"></td>
        <td id="LC2280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * By adding a `$inject` property onto a function the injection parameters can be specified.</span></td>
      </tr>
      <tr>
        <td id="L2281" class="blob-num js-line-number" data-line-number="2281"></td>
        <td id="LC2281" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2282" class="blob-num js-line-number" data-line-number="2282"></td>
        <td id="LC2282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * ## Inline</span></td>
      </tr>
      <tr>
        <td id="L2283" class="blob-num js-line-number" data-line-number="2283"></td>
        <td id="LC2283" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * As an array of injection names, where the last item in the array is the function to call.</span></td>
      </tr>
      <tr>
        <td id="L2284" class="blob-num js-line-number" data-line-number="2284"></td>
        <td id="LC2284" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2285" class="blob-num js-line-number" data-line-number="2285"></td>
        <td id="LC2285" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2286" class="blob-num js-line-number" data-line-number="2286"></td>
        <td id="LC2286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2287" class="blob-num js-line-number" data-line-number="2287"></td>
        <td id="LC2287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2288" class="blob-num js-line-number" data-line-number="2288"></td>
        <td id="LC2288" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$injector#get</span></td>
      </tr>
      <tr>
        <td id="L2289" class="blob-num js-line-number" data-line-number="2289"></td>
        <td id="LC2289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$injector</span></td>
      </tr>
      <tr>
        <td id="L2290" class="blob-num js-line-number" data-line-number="2290"></td>
        <td id="LC2290" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2291" class="blob-num js-line-number" data-line-number="2291"></td>
        <td id="LC2291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2292" class="blob-num js-line-number" data-line-number="2292"></td>
        <td id="LC2292" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Return an instance of the service.</span></td>
      </tr>
      <tr>
        <td id="L2293" class="blob-num js-line-number" data-line-number="2293"></td>
        <td id="LC2293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2294" class="blob-num js-line-number" data-line-number="2294"></td>
        <td id="LC2294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the instance to retrieve.</span></td>
      </tr>
      <tr>
        <td id="L2295" class="blob-num js-line-number" data-line-number="2295"></td>
        <td id="LC2295" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@return</span> {*} The instance.</span></td>
      </tr>
      <tr>
        <td id="L2296" class="blob-num js-line-number" data-line-number="2296"></td>
        <td id="LC2296" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2297" class="blob-num js-line-number" data-line-number="2297"></td>
        <td id="LC2297" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2298" class="blob-num js-line-number" data-line-number="2298"></td>
        <td id="LC2298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2299" class="blob-num js-line-number" data-line-number="2299"></td>
        <td id="LC2299" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2300" class="blob-num js-line-number" data-line-number="2300"></td>
        <td id="LC2300" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$injector#invoke</span></td>
      </tr>
      <tr>
        <td id="L2301" class="blob-num js-line-number" data-line-number="2301"></td>
        <td id="LC2301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$injector</span></td>
      </tr>
      <tr>
        <td id="L2302" class="blob-num js-line-number" data-line-number="2302"></td>
        <td id="LC2302" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2303" class="blob-num js-line-number" data-line-number="2303"></td>
        <td id="LC2303" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2304" class="blob-num js-line-number" data-line-number="2304"></td>
        <td id="LC2304" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Invoke the method and supply the method arguments from the `$injector`.</span></td>
      </tr>
      <tr>
        <td id="L2305" class="blob-num js-line-number" data-line-number="2305"></td>
        <td id="LC2305" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2306" class="blob-num js-line-number" data-line-number="2306"></td>
        <td id="LC2306" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {!function} fn The function to invoke. The function arguments come form the function annotation.</span></td>
      </tr>
      <tr>
        <td id="L2307" class="blob-num js-line-number" data-line-number="2307"></td>
        <td id="LC2307" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object=} self The `this` for the invoked method.</span></td>
      </tr>
      <tr>
        <td id="L2308" class="blob-num js-line-number" data-line-number="2308"></td>
        <td id="LC2308" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object=} locals Optional object. If preset then any argument names are read from this object first, before</span></td>
      </tr>
      <tr>
        <td id="L2309" class="blob-num js-line-number" data-line-number="2309"></td>
        <td id="LC2309" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   the `$injector` is consulted.</span></td>
      </tr>
      <tr>
        <td id="L2310" class="blob-num js-line-number" data-line-number="2310"></td>
        <td id="LC2310" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@return</span> the value returned by the invoked `fn` function.</span></td>
      </tr>
      <tr>
        <td id="L2311" class="blob-num js-line-number" data-line-number="2311"></td>
        <td id="LC2311" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2312" class="blob-num js-line-number" data-line-number="2312"></td>
        <td id="LC2312" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2313" class="blob-num js-line-number" data-line-number="2313"></td>
        <td id="LC2313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2314" class="blob-num js-line-number" data-line-number="2314"></td>
        <td id="LC2314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2315" class="blob-num js-line-number" data-line-number="2315"></td>
        <td id="LC2315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$injector#instantiate</span></td>
      </tr>
      <tr>
        <td id="L2316" class="blob-num js-line-number" data-line-number="2316"></td>
        <td id="LC2316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$injector</span></td>
      </tr>
      <tr>
        <td id="L2317" class="blob-num js-line-number" data-line-number="2317"></td>
        <td id="LC2317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2318" class="blob-num js-line-number" data-line-number="2318"></td>
        <td id="LC2318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Create a new instance of JS type. The method takes a constructor function invokes the new operator and supplies</span></td>
      </tr>
      <tr>
        <td id="L2319" class="blob-num js-line-number" data-line-number="2319"></td>
        <td id="LC2319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * all of the arguments to the constructor function as specified by the constructor annotation.</span></td>
      </tr>
      <tr>
        <td id="L2320" class="blob-num js-line-number" data-line-number="2320"></td>
        <td id="LC2320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2321" class="blob-num js-line-number" data-line-number="2321"></td>
        <td id="LC2321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function} Type Annotated constructor function.</span></td>
      </tr>
      <tr>
        <td id="L2322" class="blob-num js-line-number" data-line-number="2322"></td>
        <td id="LC2322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object=} locals Optional object. If preset then any argument names are read from this object first, before</span></td>
      </tr>
      <tr>
        <td id="L2323" class="blob-num js-line-number" data-line-number="2323"></td>
        <td id="LC2323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   the `$injector` is consulted.</span></td>
      </tr>
      <tr>
        <td id="L2324" class="blob-num js-line-number" data-line-number="2324"></td>
        <td id="LC2324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@return</span> new instance of `Type`.</span></td>
      </tr>
      <tr>
        <td id="L2325" class="blob-num js-line-number" data-line-number="2325"></td>
        <td id="LC2325" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2326" class="blob-num js-line-number" data-line-number="2326"></td>
        <td id="LC2326" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2327" class="blob-num js-line-number" data-line-number="2327"></td>
        <td id="LC2327" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2328" class="blob-num js-line-number" data-line-number="2328"></td>
        <td id="LC2328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2329" class="blob-num js-line-number" data-line-number="2329"></td>
        <td id="LC2329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L2330" class="blob-num js-line-number" data-line-number="2330"></td>
        <td id="LC2330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2331" class="blob-num js-line-number" data-line-number="2331"></td>
        <td id="LC2331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2332" class="blob-num js-line-number" data-line-number="2332"></td>
        <td id="LC2332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2333" class="blob-num js-line-number" data-line-number="2333"></td>
        <td id="LC2333" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2334" class="blob-num js-line-number" data-line-number="2334"></td>
        <td id="LC2334" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Use `$provide` to register new providers with the `$injector`. The providers are the factories for the instance.</span></td>
      </tr>
      <tr>
        <td id="L2335" class="blob-num js-line-number" data-line-number="2335"></td>
        <td id="LC2335" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The providers share the same name as the instance they create with the `Provider` suffixed to them.</span></td>
      </tr>
      <tr>
        <td id="L2336" class="blob-num js-line-number" data-line-number="2336"></td>
        <td id="LC2336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2337" class="blob-num js-line-number" data-line-number="2337"></td>
        <td id="LC2337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A provider is an object with a `$get()` method. The injector calls the `$get` method to create a new instance of</span></td>
      </tr>
      <tr>
        <td id="L2338" class="blob-num js-line-number" data-line-number="2338"></td>
        <td id="LC2338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * a service. The Provider can have additional methods which would allow for configuration of the provider.</span></td>
      </tr>
      <tr>
        <td id="L2339" class="blob-num js-line-number" data-line-number="2339"></td>
        <td id="LC2339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2340" class="blob-num js-line-number" data-line-number="2340"></td>
        <td id="LC2340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2341" class="blob-num js-line-number" data-line-number="2341"></td>
        <td id="LC2341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   function GreetProvider() {</span></td>
      </tr>
      <tr>
        <td id="L2342" class="blob-num js-line-number" data-line-number="2342"></td>
        <td id="LC2342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     var salutation = &#39;Hello&#39;;</span></td>
      </tr>
      <tr>
        <td id="L2343" class="blob-num js-line-number" data-line-number="2343"></td>
        <td id="LC2343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2344" class="blob-num js-line-number" data-line-number="2344"></td>
        <td id="LC2344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     this.salutation = function(text) {</span></td>
      </tr>
      <tr>
        <td id="L2345" class="blob-num js-line-number" data-line-number="2345"></td>
        <td id="LC2345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       salutation = text;</span></td>
      </tr>
      <tr>
        <td id="L2346" class="blob-num js-line-number" data-line-number="2346"></td>
        <td id="LC2346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     };</span></td>
      </tr>
      <tr>
        <td id="L2347" class="blob-num js-line-number" data-line-number="2347"></td>
        <td id="LC2347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2348" class="blob-num js-line-number" data-line-number="2348"></td>
        <td id="LC2348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     this.$get = function() {</span></td>
      </tr>
      <tr>
        <td id="L2349" class="blob-num js-line-number" data-line-number="2349"></td>
        <td id="LC2349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       return function (name) {</span></td>
      </tr>
      <tr>
        <td id="L2350" class="blob-num js-line-number" data-line-number="2350"></td>
        <td id="LC2350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         return salutation + &#39; &#39; + name + &#39;!&#39;;</span></td>
      </tr>
      <tr>
        <td id="L2351" class="blob-num js-line-number" data-line-number="2351"></td>
        <td id="LC2351" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       };</span></td>
      </tr>
      <tr>
        <td id="L2352" class="blob-num js-line-number" data-line-number="2352"></td>
        <td id="LC2352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     };</span></td>
      </tr>
      <tr>
        <td id="L2353" class="blob-num js-line-number" data-line-number="2353"></td>
        <td id="LC2353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   }</span></td>
      </tr>
      <tr>
        <td id="L2354" class="blob-num js-line-number" data-line-number="2354"></td>
        <td id="LC2354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2355" class="blob-num js-line-number" data-line-number="2355"></td>
        <td id="LC2355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   describe(&#39;Greeter&#39;, function(){</span></td>
      </tr>
      <tr>
        <td id="L2356" class="blob-num js-line-number" data-line-number="2356"></td>
        <td id="LC2356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2357" class="blob-num js-line-number" data-line-number="2357"></td>
        <td id="LC2357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     beforeEach(module(function($provide) {</span></td>
      </tr>
      <tr>
        <td id="L2358" class="blob-num js-line-number" data-line-number="2358"></td>
        <td id="LC2358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       $provide.provider(&#39;greet&#39;, GreetProvider);</span></td>
      </tr>
      <tr>
        <td id="L2359" class="blob-num js-line-number" data-line-number="2359"></td>
        <td id="LC2359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L2360" class="blob-num js-line-number" data-line-number="2360"></td>
        <td id="LC2360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2361" class="blob-num js-line-number" data-line-number="2361"></td>
        <td id="LC2361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     it(&#39;should greet&#39;, inject(function(greet) {</span></td>
      </tr>
      <tr>
        <td id="L2362" class="blob-num js-line-number" data-line-number="2362"></td>
        <td id="LC2362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(greet(&#39;angular&#39;)).toEqual(&#39;Hello angular!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L2363" class="blob-num js-line-number" data-line-number="2363"></td>
        <td id="LC2363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     }));</span></td>
      </tr>
      <tr>
        <td id="L2364" class="blob-num js-line-number" data-line-number="2364"></td>
        <td id="LC2364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2365" class="blob-num js-line-number" data-line-number="2365"></td>
        <td id="LC2365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     it(&#39;should allow configuration of salutation&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L2366" class="blob-num js-line-number" data-line-number="2366"></td>
        <td id="LC2366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       module(function(greetProvider) {</span></td>
      </tr>
      <tr>
        <td id="L2367" class="blob-num js-line-number" data-line-number="2367"></td>
        <td id="LC2367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         greetProvider.salutation(&#39;Ahoj&#39;);</span></td>
      </tr>
      <tr>
        <td id="L2368" class="blob-num js-line-number" data-line-number="2368"></td>
        <td id="LC2368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       });</span></td>
      </tr>
      <tr>
        <td id="L2369" class="blob-num js-line-number" data-line-number="2369"></td>
        <td id="LC2369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       inject(function(greet) {</span></td>
      </tr>
      <tr>
        <td id="L2370" class="blob-num js-line-number" data-line-number="2370"></td>
        <td id="LC2370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         expect(greet(&#39;angular&#39;)).toEqual(&#39;Ahoj angular!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L2371" class="blob-num js-line-number" data-line-number="2371"></td>
        <td id="LC2371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       });</span></td>
      </tr>
      <tr>
        <td id="L2372" class="blob-num js-line-number" data-line-number="2372"></td>
        <td id="LC2372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     )};</span></td>
      </tr>
      <tr>
        <td id="L2373" class="blob-num js-line-number" data-line-number="2373"></td>
        <td id="LC2373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2374" class="blob-num js-line-number" data-line-number="2374"></td>
        <td id="LC2374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   });</span></td>
      </tr>
      <tr>
        <td id="L2375" class="blob-num js-line-number" data-line-number="2375"></td>
        <td id="LC2375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L2376" class="blob-num js-line-number" data-line-number="2376"></td>
        <td id="LC2376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2377" class="blob-num js-line-number" data-line-number="2377"></td>
        <td id="LC2377" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2378" class="blob-num js-line-number" data-line-number="2378"></td>
        <td id="LC2378" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2379" class="blob-num js-line-number" data-line-number="2379"></td>
        <td id="LC2379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2380" class="blob-num js-line-number" data-line-number="2380"></td>
        <td id="LC2380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#provider</span></td>
      </tr>
      <tr>
        <td id="L2381" class="blob-num js-line-number" data-line-number="2381"></td>
        <td id="LC2381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2382" class="blob-num js-line-number" data-line-number="2382"></td>
        <td id="LC2382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2383" class="blob-num js-line-number" data-line-number="2383"></td>
        <td id="LC2383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2384" class="blob-num js-line-number" data-line-number="2384"></td>
        <td id="LC2384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Register a provider for a service. The providers can be retrieved and can have additional configuration methods.</span></td>
      </tr>
      <tr>
        <td id="L2385" class="blob-num js-line-number" data-line-number="2385"></td>
        <td id="LC2385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2386" class="blob-num js-line-number" data-line-number="2386"></td>
        <td id="LC2386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the instance. NOTE: the provider will be available under `name + &#39;Provider&#39;` key.</span></td>
      </tr>
      <tr>
        <td id="L2387" class="blob-num js-line-number" data-line-number="2387"></td>
        <td id="LC2387" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(Object|function())} provider If the provider is:</span></td>
      </tr>
      <tr>
        <td id="L2388" class="blob-num js-line-number" data-line-number="2388"></td>
        <td id="LC2388" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2389" class="blob-num js-line-number" data-line-number="2389"></td>
        <td id="LC2389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `Object`: then it should have a `$get` method. The `$get` method will be invoked using</span></td>
      </tr>
      <tr>
        <td id="L2390" class="blob-num js-line-number" data-line-number="2390"></td>
        <td id="LC2390" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               {@link angular.module.AUTO.$injector#invoke $injector.invoke()} when an instance needs to be created.</span></td>
      </tr>
      <tr>
        <td id="L2391" class="blob-num js-line-number" data-line-number="2391"></td>
        <td id="LC2391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `Constructor`: a new instance of the provider will be created using</span></td>
      </tr>
      <tr>
        <td id="L2392" class="blob-num js-line-number" data-line-number="2392"></td>
        <td id="LC2392" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               {@link angular.module.AUTO.$injector#instantiate $injector.instantiate()}, then treated as `object`.</span></td>
      </tr>
      <tr>
        <td id="L2393" class="blob-num js-line-number" data-line-number="2393"></td>
        <td id="LC2393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2394" class="blob-num js-line-number" data-line-number="2394"></td>
        <td id="LC2394" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} registered provider instance</span></td>
      </tr>
      <tr>
        <td id="L2395" class="blob-num js-line-number" data-line-number="2395"></td>
        <td id="LC2395" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2396" class="blob-num js-line-number" data-line-number="2396"></td>
        <td id="LC2396" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2397" class="blob-num js-line-number" data-line-number="2397"></td>
        <td id="LC2397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2398" class="blob-num js-line-number" data-line-number="2398"></td>
        <td id="LC2398" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2399" class="blob-num js-line-number" data-line-number="2399"></td>
        <td id="LC2399" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#factory</span></td>
      </tr>
      <tr>
        <td id="L2400" class="blob-num js-line-number" data-line-number="2400"></td>
        <td id="LC2400" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2401" class="blob-num js-line-number" data-line-number="2401"></td>
        <td id="LC2401" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2402" class="blob-num js-line-number" data-line-number="2402"></td>
        <td id="LC2402" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2403" class="blob-num js-line-number" data-line-number="2403"></td>
        <td id="LC2403" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A short hand for configuring services if only `$get` method is required.</span></td>
      </tr>
      <tr>
        <td id="L2404" class="blob-num js-line-number" data-line-number="2404"></td>
        <td id="LC2404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2405" class="blob-num js-line-number" data-line-number="2405"></td>
        <td id="LC2405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the instance.</span></td>
      </tr>
      <tr>
        <td id="L2406" class="blob-num js-line-number" data-line-number="2406"></td>
        <td id="LC2406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function()} $getFn The $getFn for the instance creation. Internally this is a short hand for</span></td>
      </tr>
      <tr>
        <td id="L2407" class="blob-num js-line-number" data-line-number="2407"></td>
        <td id="LC2407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `$provide.provider(name, {$get: $getFn})`.</span></td>
      </tr>
      <tr>
        <td id="L2408" class="blob-num js-line-number" data-line-number="2408"></td>
        <td id="LC2408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} registered provider instance</span></td>
      </tr>
      <tr>
        <td id="L2409" class="blob-num js-line-number" data-line-number="2409"></td>
        <td id="LC2409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2410" class="blob-num js-line-number" data-line-number="2410"></td>
        <td id="LC2410" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2411" class="blob-num js-line-number" data-line-number="2411"></td>
        <td id="LC2411" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2412" class="blob-num js-line-number" data-line-number="2412"></td>
        <td id="LC2412" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2413" class="blob-num js-line-number" data-line-number="2413"></td>
        <td id="LC2413" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2414" class="blob-num js-line-number" data-line-number="2414"></td>
        <td id="LC2414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#service</span></td>
      </tr>
      <tr>
        <td id="L2415" class="blob-num js-line-number" data-line-number="2415"></td>
        <td id="LC2415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2416" class="blob-num js-line-number" data-line-number="2416"></td>
        <td id="LC2416" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2417" class="blob-num js-line-number" data-line-number="2417"></td>
        <td id="LC2417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2418" class="blob-num js-line-number" data-line-number="2418"></td>
        <td id="LC2418" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A short hand for registering service of given class.</span></td>
      </tr>
      <tr>
        <td id="L2419" class="blob-num js-line-number" data-line-number="2419"></td>
        <td id="LC2419" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2420" class="blob-num js-line-number" data-line-number="2420"></td>
        <td id="LC2420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the instance.</span></td>
      </tr>
      <tr>
        <td id="L2421" class="blob-num js-line-number" data-line-number="2421"></td>
        <td id="LC2421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Function} constructor A class (constructor function) that will be instantiated.</span></td>
      </tr>
      <tr>
        <td id="L2422" class="blob-num js-line-number" data-line-number="2422"></td>
        <td id="LC2422" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} registered provider instance</span></td>
      </tr>
      <tr>
        <td id="L2423" class="blob-num js-line-number" data-line-number="2423"></td>
        <td id="LC2423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2424" class="blob-num js-line-number" data-line-number="2424"></td>
        <td id="LC2424" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2425" class="blob-num js-line-number" data-line-number="2425"></td>
        <td id="LC2425" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2426" class="blob-num js-line-number" data-line-number="2426"></td>
        <td id="LC2426" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2427" class="blob-num js-line-number" data-line-number="2427"></td>
        <td id="LC2427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2428" class="blob-num js-line-number" data-line-number="2428"></td>
        <td id="LC2428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#value</span></td>
      </tr>
      <tr>
        <td id="L2429" class="blob-num js-line-number" data-line-number="2429"></td>
        <td id="LC2429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2430" class="blob-num js-line-number" data-line-number="2430"></td>
        <td id="LC2430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2431" class="blob-num js-line-number" data-line-number="2431"></td>
        <td id="LC2431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2432" class="blob-num js-line-number" data-line-number="2432"></td>
        <td id="LC2432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A short hand for configuring services if the `$get` method is a constant.</span></td>
      </tr>
      <tr>
        <td id="L2433" class="blob-num js-line-number" data-line-number="2433"></td>
        <td id="LC2433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2434" class="blob-num js-line-number" data-line-number="2434"></td>
        <td id="LC2434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the instance.</span></td>
      </tr>
      <tr>
        <td id="L2435" class="blob-num js-line-number" data-line-number="2435"></td>
        <td id="LC2435" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value The value.</span></td>
      </tr>
      <tr>
        <td id="L2436" class="blob-num js-line-number" data-line-number="2436"></td>
        <td id="LC2436" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} registered provider instance</span></td>
      </tr>
      <tr>
        <td id="L2437" class="blob-num js-line-number" data-line-number="2437"></td>
        <td id="LC2437" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2438" class="blob-num js-line-number" data-line-number="2438"></td>
        <td id="LC2438" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2439" class="blob-num js-line-number" data-line-number="2439"></td>
        <td id="LC2439" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2440" class="blob-num js-line-number" data-line-number="2440"></td>
        <td id="LC2440" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2441" class="blob-num js-line-number" data-line-number="2441"></td>
        <td id="LC2441" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2442" class="blob-num js-line-number" data-line-number="2442"></td>
        <td id="LC2442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#constant</span></td>
      </tr>
      <tr>
        <td id="L2443" class="blob-num js-line-number" data-line-number="2443"></td>
        <td id="LC2443" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2444" class="blob-num js-line-number" data-line-number="2444"></td>
        <td id="LC2444" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2445" class="blob-num js-line-number" data-line-number="2445"></td>
        <td id="LC2445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2446" class="blob-num js-line-number" data-line-number="2446"></td>
        <td id="LC2446" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A constant value, but unlike {@link angular.module.AUTO.$provide#value value} it can be injected</span></td>
      </tr>
      <tr>
        <td id="L2447" class="blob-num js-line-number" data-line-number="2447"></td>
        <td id="LC2447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * into configuration function (other modules) and it is not interceptable by</span></td>
      </tr>
      <tr>
        <td id="L2448" class="blob-num js-line-number" data-line-number="2448"></td>
        <td id="LC2448" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.AUTO.$provide#decorator decorator}.</span></td>
      </tr>
      <tr>
        <td id="L2449" class="blob-num js-line-number" data-line-number="2449"></td>
        <td id="LC2449" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2450" class="blob-num js-line-number" data-line-number="2450"></td>
        <td id="LC2450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the constant.</span></td>
      </tr>
      <tr>
        <td id="L2451" class="blob-num js-line-number" data-line-number="2451"></td>
        <td id="LC2451" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} value The constant value.</span></td>
      </tr>
      <tr>
        <td id="L2452" class="blob-num js-line-number" data-line-number="2452"></td>
        <td id="LC2452" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} registered instance</span></td>
      </tr>
      <tr>
        <td id="L2453" class="blob-num js-line-number" data-line-number="2453"></td>
        <td id="LC2453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2454" class="blob-num js-line-number" data-line-number="2454"></td>
        <td id="LC2454" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2455" class="blob-num js-line-number" data-line-number="2455"></td>
        <td id="LC2455" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2456" class="blob-num js-line-number" data-line-number="2456"></td>
        <td id="LC2456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2457" class="blob-num js-line-number" data-line-number="2457"></td>
        <td id="LC2457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2458" class="blob-num js-line-number" data-line-number="2458"></td>
        <td id="LC2458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.AUTO.$provide#decorator</span></td>
      </tr>
      <tr>
        <td id="L2459" class="blob-num js-line-number" data-line-number="2459"></td>
        <td id="LC2459" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.AUTO.$provide</span></td>
      </tr>
      <tr>
        <td id="L2460" class="blob-num js-line-number" data-line-number="2460"></td>
        <td id="LC2460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2461" class="blob-num js-line-number" data-line-number="2461"></td>
        <td id="LC2461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2462" class="blob-num js-line-number" data-line-number="2462"></td>
        <td id="LC2462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Decoration of service, allows the decorator to intercept the service instance creation. The</span></td>
      </tr>
      <tr>
        <td id="L2463" class="blob-num js-line-number" data-line-number="2463"></td>
        <td id="LC2463" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * returned instance may be the original instance, or a new instance which delegates to the</span></td>
      </tr>
      <tr>
        <td id="L2464" class="blob-num js-line-number" data-line-number="2464"></td>
        <td id="LC2464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * original instance.</span></td>
      </tr>
      <tr>
        <td id="L2465" class="blob-num js-line-number" data-line-number="2465"></td>
        <td id="LC2465" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2466" class="blob-num js-line-number" data-line-number="2466"></td>
        <td id="LC2466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name The name of the service to decorate.</span></td>
      </tr>
      <tr>
        <td id="L2467" class="blob-num js-line-number" data-line-number="2467"></td>
        <td id="LC2467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function()} decorator This function will be invoked when the service needs to be</span></td>
      </tr>
      <tr>
        <td id="L2468" class="blob-num js-line-number" data-line-number="2468"></td>
        <td id="LC2468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    instanciated. The function is called using the {@link angular.module.AUTO.$injector#invoke</span></td>
      </tr>
      <tr>
        <td id="L2469" class="blob-num js-line-number" data-line-number="2469"></td>
        <td id="LC2469" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    injector.invoke} method and is therefore fully injectable. Local injection arguments:</span></td>
      </tr>
      <tr>
        <td id="L2470" class="blob-num js-line-number" data-line-number="2470"></td>
        <td id="LC2470" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2471" class="blob-num js-line-number" data-line-number="2471"></td>
        <td id="LC2471" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    * `$delegate` - The original service instance, which can be monkey patched, configured,</span></td>
      </tr>
      <tr>
        <td id="L2472" class="blob-num js-line-number" data-line-number="2472"></td>
        <td id="LC2472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      decorated or delegated to.</span></td>
      </tr>
      <tr>
        <td id="L2473" class="blob-num js-line-number" data-line-number="2473"></td>
        <td id="LC2473" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2474" class="blob-num js-line-number" data-line-number="2474"></td>
        <td id="LC2474" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2475" class="blob-num js-line-number" data-line-number="2475"></td>
        <td id="LC2475" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2476" class="blob-num js-line-number" data-line-number="2476"></td>
        <td id="LC2476" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">createInjector</span>(<span class="pl-smi">modulesToLoad</span>) {</td>
      </tr>
      <tr>
        <td id="L2477" class="blob-num js-line-number" data-line-number="2477"></td>
        <td id="LC2477" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">INSTANTIATING</span> <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L2478" class="blob-num js-line-number" data-line-number="2478"></td>
        <td id="LC2478" class="blob-code blob-code-inner js-file-line">      providerSuffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Provider<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L2479" class="blob-num js-line-number" data-line-number="2479"></td>
        <td id="LC2479" class="blob-code blob-code-inner js-file-line">      path <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2480" class="blob-num js-line-number" data-line-number="2480"></td>
        <td id="LC2480" class="blob-code blob-code-inner js-file-line">      loadedModules <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">HashMap</span>(),</td>
      </tr>
      <tr>
        <td id="L2481" class="blob-num js-line-number" data-line-number="2481"></td>
        <td id="LC2481" class="blob-code blob-code-inner js-file-line">      providerCache <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L2482" class="blob-num js-line-number" data-line-number="2482"></td>
        <td id="LC2482" class="blob-code blob-code-inner js-file-line">        $provide<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L2483" class="blob-num js-line-number" data-line-number="2483"></td>
        <td id="LC2483" class="blob-code blob-code-inner js-file-line">            provider<span class="pl-k">:</span> supportObject(provider),</td>
      </tr>
      <tr>
        <td id="L2484" class="blob-num js-line-number" data-line-number="2484"></td>
        <td id="LC2484" class="blob-code blob-code-inner js-file-line">            factory<span class="pl-k">:</span> supportObject(factory),</td>
      </tr>
      <tr>
        <td id="L2485" class="blob-num js-line-number" data-line-number="2485"></td>
        <td id="LC2485" class="blob-code blob-code-inner js-file-line">            service<span class="pl-k">:</span> supportObject(service),</td>
      </tr>
      <tr>
        <td id="L2486" class="blob-num js-line-number" data-line-number="2486"></td>
        <td id="LC2486" class="blob-code blob-code-inner js-file-line">            value<span class="pl-k">:</span> supportObject(value),</td>
      </tr>
      <tr>
        <td id="L2487" class="blob-num js-line-number" data-line-number="2487"></td>
        <td id="LC2487" class="blob-code blob-code-inner js-file-line">            constant<span class="pl-k">:</span> supportObject(constant),</td>
      </tr>
      <tr>
        <td id="L2488" class="blob-num js-line-number" data-line-number="2488"></td>
        <td id="LC2488" class="blob-code blob-code-inner js-file-line">            decorator<span class="pl-k">:</span> decorator</td>
      </tr>
      <tr>
        <td id="L2489" class="blob-num js-line-number" data-line-number="2489"></td>
        <td id="LC2489" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2490" class="blob-num js-line-number" data-line-number="2490"></td>
        <td id="LC2490" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L2491" class="blob-num js-line-number" data-line-number="2491"></td>
        <td id="LC2491" class="blob-code blob-code-inner js-file-line">      providerInjector <span class="pl-k">=</span> createInternalInjector(providerCache, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2492" class="blob-num js-line-number" data-line-number="2492"></td>
        <td id="LC2492" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown provider: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> &lt;- <span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L2493" class="blob-num js-line-number" data-line-number="2493"></td>
        <td id="LC2493" class="blob-code blob-code-inner js-file-line">      }),</td>
      </tr>
      <tr>
        <td id="L2494" class="blob-num js-line-number" data-line-number="2494"></td>
        <td id="LC2494" class="blob-code blob-code-inner js-file-line">      instanceCache <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L2495" class="blob-num js-line-number" data-line-number="2495"></td>
        <td id="LC2495" class="blob-code blob-code-inner js-file-line">      instanceInjector <span class="pl-k">=</span> (instanceCache.$injector <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L2496" class="blob-num js-line-number" data-line-number="2496"></td>
        <td id="LC2496" class="blob-code blob-code-inner js-file-line">          createInternalInjector(instanceCache, <span class="pl-k">function</span>(<span class="pl-smi">servicename</span>) {</td>
      </tr>
      <tr>
        <td id="L2497" class="blob-num js-line-number" data-line-number="2497"></td>
        <td id="LC2497" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> provider <span class="pl-k">=</span> providerInjector.get(servicename <span class="pl-k">+</span> providerSuffix);</td>
      </tr>
      <tr>
        <td id="L2498" class="blob-num js-line-number" data-line-number="2498"></td>
        <td id="LC2498" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> instanceInjector.invoke(provider.$get, provider);</td>
      </tr>
      <tr>
        <td id="L2499" class="blob-num js-line-number" data-line-number="2499"></td>
        <td id="LC2499" class="blob-code blob-code-inner js-file-line">          }));</td>
      </tr>
      <tr>
        <td id="L2500" class="blob-num js-line-number" data-line-number="2500"></td>
        <td id="LC2500" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2501" class="blob-num js-line-number" data-line-number="2501"></td>
        <td id="LC2501" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2502" class="blob-num js-line-number" data-line-number="2502"></td>
        <td id="LC2502" class="blob-code blob-code-inner js-file-line">  forEach(loadModules(modulesToLoad), <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) { instanceInjector.invoke(fn <span class="pl-k">||</span> noop); });</td>
      </tr>
      <tr>
        <td id="L2503" class="blob-num js-line-number" data-line-number="2503"></td>
        <td id="LC2503" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2504" class="blob-num js-line-number" data-line-number="2504"></td>
        <td id="LC2504" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> instanceInjector;</td>
      </tr>
      <tr>
        <td id="L2505" class="blob-num js-line-number" data-line-number="2505"></td>
        <td id="LC2505" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2506" class="blob-num js-line-number" data-line-number="2506"></td>
        <td id="LC2506" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2507" class="blob-num js-line-number" data-line-number="2507"></td>
        <td id="LC2507" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// $provider</span></td>
      </tr>
      <tr>
        <td id="L2508" class="blob-num js-line-number" data-line-number="2508"></td>
        <td id="LC2508" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2509" class="blob-num js-line-number" data-line-number="2509"></td>
        <td id="LC2509" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2510" class="blob-num js-line-number" data-line-number="2510"></td>
        <td id="LC2510" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">supportObject</span>(<span class="pl-smi">delegate</span>) {</td>
      </tr>
      <tr>
        <td id="L2511" class="blob-num js-line-number" data-line-number="2511"></td>
        <td id="LC2511" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2512" class="blob-num js-line-number" data-line-number="2512"></td>
        <td id="LC2512" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isObject(key)) {</td>
      </tr>
      <tr>
        <td id="L2513" class="blob-num js-line-number" data-line-number="2513"></td>
        <td id="LC2513" class="blob-code blob-code-inner js-file-line">        forEach(key, reverseParams(delegate));</td>
      </tr>
      <tr>
        <td id="L2514" class="blob-num js-line-number" data-line-number="2514"></td>
        <td id="LC2514" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2515" class="blob-num js-line-number" data-line-number="2515"></td>
        <td id="LC2515" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> delegate(key, value);</td>
      </tr>
      <tr>
        <td id="L2516" class="blob-num js-line-number" data-line-number="2516"></td>
        <td id="LC2516" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2517" class="blob-num js-line-number" data-line-number="2517"></td>
        <td id="LC2517" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2518" class="blob-num js-line-number" data-line-number="2518"></td>
        <td id="LC2518" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2519" class="blob-num js-line-number" data-line-number="2519"></td>
        <td id="LC2519" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2520" class="blob-num js-line-number" data-line-number="2520"></td>
        <td id="LC2520" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">provider</span>(<span class="pl-smi">name</span>, <span class="pl-smi">provider_</span>) {</td>
      </tr>
      <tr>
        <td id="L2521" class="blob-num js-line-number" data-line-number="2521"></td>
        <td id="LC2521" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isFunction(provider_)) {</td>
      </tr>
      <tr>
        <td id="L2522" class="blob-num js-line-number" data-line-number="2522"></td>
        <td id="LC2522" class="blob-code blob-code-inner js-file-line">      provider_ <span class="pl-k">=</span> providerInjector.instantiate(provider_);</td>
      </tr>
      <tr>
        <td id="L2523" class="blob-num js-line-number" data-line-number="2523"></td>
        <td id="LC2523" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2524" class="blob-num js-line-number" data-line-number="2524"></td>
        <td id="LC2524" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>provider_.$get) {</td>
      </tr>
      <tr>
        <td id="L2525" class="blob-num js-line-number" data-line-number="2525"></td>
        <td id="LC2525" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Provider <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> must define $get factory method.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2526" class="blob-num js-line-number" data-line-number="2526"></td>
        <td id="LC2526" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2527" class="blob-num js-line-number" data-line-number="2527"></td>
        <td id="LC2527" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> providerCache[name <span class="pl-k">+</span> providerSuffix] <span class="pl-k">=</span> provider_;</td>
      </tr>
      <tr>
        <td id="L2528" class="blob-num js-line-number" data-line-number="2528"></td>
        <td id="LC2528" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2529" class="blob-num js-line-number" data-line-number="2529"></td>
        <td id="LC2529" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2530" class="blob-num js-line-number" data-line-number="2530"></td>
        <td id="LC2530" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">factory</span>(<span class="pl-smi">name</span>, <span class="pl-smi">factoryFn</span>) { <span class="pl-k">return</span> provider(name, { $get<span class="pl-k">:</span> factoryFn }); }</td>
      </tr>
      <tr>
        <td id="L2531" class="blob-num js-line-number" data-line-number="2531"></td>
        <td id="LC2531" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2532" class="blob-num js-line-number" data-line-number="2532"></td>
        <td id="LC2532" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">service</span>(<span class="pl-smi">name</span>, <span class="pl-smi">constructor</span>) {</td>
      </tr>
      <tr>
        <td id="L2533" class="blob-num js-line-number" data-line-number="2533"></td>
        <td id="LC2533" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> factory(name, [<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$injector</span>) {</td>
      </tr>
      <tr>
        <td id="L2534" class="blob-num js-line-number" data-line-number="2534"></td>
        <td id="LC2534" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> $injector.instantiate(constructor);</td>
      </tr>
      <tr>
        <td id="L2535" class="blob-num js-line-number" data-line-number="2535"></td>
        <td id="LC2535" class="blob-code blob-code-inner js-file-line">    }]);</td>
      </tr>
      <tr>
        <td id="L2536" class="blob-num js-line-number" data-line-number="2536"></td>
        <td id="LC2536" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2537" class="blob-num js-line-number" data-line-number="2537"></td>
        <td id="LC2537" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2538" class="blob-num js-line-number" data-line-number="2538"></td>
        <td id="LC2538" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">value</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) { <span class="pl-k">return</span> factory(name, valueFn(value)); }</td>
      </tr>
      <tr>
        <td id="L2539" class="blob-num js-line-number" data-line-number="2539"></td>
        <td id="LC2539" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2540" class="blob-num js-line-number" data-line-number="2540"></td>
        <td id="LC2540" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">constant</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L2541" class="blob-num js-line-number" data-line-number="2541"></td>
        <td id="LC2541" class="blob-code blob-code-inner js-file-line">    providerCache[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2542" class="blob-num js-line-number" data-line-number="2542"></td>
        <td id="LC2542" class="blob-code blob-code-inner js-file-line">    instanceCache[name] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L2543" class="blob-num js-line-number" data-line-number="2543"></td>
        <td id="LC2543" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2544" class="blob-num js-line-number" data-line-number="2544"></td>
        <td id="LC2544" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2545" class="blob-num js-line-number" data-line-number="2545"></td>
        <td id="LC2545" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">decorator</span>(<span class="pl-smi">serviceName</span>, <span class="pl-smi">decorFn</span>) {</td>
      </tr>
      <tr>
        <td id="L2546" class="blob-num js-line-number" data-line-number="2546"></td>
        <td id="LC2546" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> origProvider <span class="pl-k">=</span> providerInjector.get(serviceName <span class="pl-k">+</span> providerSuffix),</td>
      </tr>
      <tr>
        <td id="L2547" class="blob-num js-line-number" data-line-number="2547"></td>
        <td id="LC2547" class="blob-code blob-code-inner js-file-line">        orig$get <span class="pl-k">=</span> origProvider.$get;</td>
      </tr>
      <tr>
        <td id="L2548" class="blob-num js-line-number" data-line-number="2548"></td>
        <td id="LC2548" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2549" class="blob-num js-line-number" data-line-number="2549"></td>
        <td id="LC2549" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">origProvider</span>.<span class="pl-en">$get</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2550" class="blob-num js-line-number" data-line-number="2550"></td>
        <td id="LC2550" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> origInstance <span class="pl-k">=</span> instanceInjector.invoke(orig$get, origProvider);</td>
      </tr>
      <tr>
        <td id="L2551" class="blob-num js-line-number" data-line-number="2551"></td>
        <td id="LC2551" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> instanceInjector.invoke(decorFn, <span class="pl-c1">null</span>, {$delegate<span class="pl-k">:</span> origInstance});</td>
      </tr>
      <tr>
        <td id="L2552" class="blob-num js-line-number" data-line-number="2552"></td>
        <td id="LC2552" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2553" class="blob-num js-line-number" data-line-number="2553"></td>
        <td id="LC2553" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2554" class="blob-num js-line-number" data-line-number="2554"></td>
        <td id="LC2554" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2555" class="blob-num js-line-number" data-line-number="2555"></td>
        <td id="LC2555" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2556" class="blob-num js-line-number" data-line-number="2556"></td>
        <td id="LC2556" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Module Loading</span></td>
      </tr>
      <tr>
        <td id="L2557" class="blob-num js-line-number" data-line-number="2557"></td>
        <td id="LC2557" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2558" class="blob-num js-line-number" data-line-number="2558"></td>
        <td id="LC2558" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">loadModules</span>(<span class="pl-smi">modulesToLoad</span>){</td>
      </tr>
      <tr>
        <td id="L2559" class="blob-num js-line-number" data-line-number="2559"></td>
        <td id="LC2559" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> runBlocks <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2560" class="blob-num js-line-number" data-line-number="2560"></td>
        <td id="LC2560" class="blob-code blob-code-inner js-file-line">    forEach(modulesToLoad, <span class="pl-k">function</span>(<span class="pl-smi">module</span>) {</td>
      </tr>
      <tr>
        <td id="L2561" class="blob-num js-line-number" data-line-number="2561"></td>
        <td id="LC2561" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (loadedModules.get(<span class="pl-c1">module</span>)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L2562" class="blob-num js-line-number" data-line-number="2562"></td>
        <td id="LC2562" class="blob-code blob-code-inner js-file-line">      loadedModules.put(<span class="pl-c1">module</span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L2563" class="blob-num js-line-number" data-line-number="2563"></td>
        <td id="LC2563" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isString(<span class="pl-c1">module</span>)) {</td>
      </tr>
      <tr>
        <td id="L2564" class="blob-num js-line-number" data-line-number="2564"></td>
        <td id="LC2564" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> moduleFn <span class="pl-k">=</span> angularModule(<span class="pl-c1">module</span>);</td>
      </tr>
      <tr>
        <td id="L2565" class="blob-num js-line-number" data-line-number="2565"></td>
        <td id="LC2565" class="blob-code blob-code-inner js-file-line">        runBlocks <span class="pl-k">=</span> runBlocks.<span class="pl-c1">concat</span>(loadModules(moduleFn.requires)).<span class="pl-c1">concat</span>(moduleFn._runBlocks);</td>
      </tr>
      <tr>
        <td id="L2566" class="blob-num js-line-number" data-line-number="2566"></td>
        <td id="LC2566" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2567" class="blob-num js-line-number" data-line-number="2567"></td>
        <td id="LC2567" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2568" class="blob-num js-line-number" data-line-number="2568"></td>
        <td id="LC2568" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span>(<span class="pl-k">var</span> invokeQueue <span class="pl-k">=</span> moduleFn._invokeQueue, i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> invokeQueue.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2569" class="blob-num js-line-number" data-line-number="2569"></td>
        <td id="LC2569" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> invokeArgs <span class="pl-k">=</span> invokeQueue[i],</td>
      </tr>
      <tr>
        <td id="L2570" class="blob-num js-line-number" data-line-number="2570"></td>
        <td id="LC2570" class="blob-code blob-code-inner js-file-line">                provider <span class="pl-k">=</span> invokeArgs[<span class="pl-c1">0</span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L2571" class="blob-num js-line-number" data-line-number="2571"></td>
        <td id="LC2571" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> providerInjector</td>
      </tr>
      <tr>
        <td id="L2572" class="blob-num js-line-number" data-line-number="2572"></td>
        <td id="LC2572" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> providerInjector.get(invokeArgs[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L2573" class="blob-num js-line-number" data-line-number="2573"></td>
        <td id="LC2573" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2574" class="blob-num js-line-number" data-line-number="2574"></td>
        <td id="LC2574" class="blob-code blob-code-inner js-file-line">            provider[invokeArgs[<span class="pl-c1">1</span>]].<span class="pl-c1">apply</span>(provider, invokeArgs[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2575" class="blob-num js-line-number" data-line-number="2575"></td>
        <td id="LC2575" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2576" class="blob-num js-line-number" data-line-number="2576"></td>
        <td id="LC2576" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2577" class="blob-num js-line-number" data-line-number="2577"></td>
        <td id="LC2577" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (e.message) e.message <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> from <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">module</span>;</td>
      </tr>
      <tr>
        <td id="L2578" class="blob-num js-line-number" data-line-number="2578"></td>
        <td id="LC2578" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> e;</td>
      </tr>
      <tr>
        <td id="L2579" class="blob-num js-line-number" data-line-number="2579"></td>
        <td id="LC2579" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2580" class="blob-num js-line-number" data-line-number="2580"></td>
        <td id="LC2580" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (isFunction(<span class="pl-c1">module</span>)) {</td>
      </tr>
      <tr>
        <td id="L2581" class="blob-num js-line-number" data-line-number="2581"></td>
        <td id="LC2581" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2582" class="blob-num js-line-number" data-line-number="2582"></td>
        <td id="LC2582" class="blob-code blob-code-inner js-file-line">          runBlocks.<span class="pl-c1">push</span>(providerInjector.invoke(<span class="pl-c1">module</span>));</td>
      </tr>
      <tr>
        <td id="L2583" class="blob-num js-line-number" data-line-number="2583"></td>
        <td id="LC2583" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2584" class="blob-num js-line-number" data-line-number="2584"></td>
        <td id="LC2584" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (e.message) e.message <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> from <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">module</span>;</td>
      </tr>
      <tr>
        <td id="L2585" class="blob-num js-line-number" data-line-number="2585"></td>
        <td id="LC2585" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> e;</td>
      </tr>
      <tr>
        <td id="L2586" class="blob-num js-line-number" data-line-number="2586"></td>
        <td id="LC2586" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2587" class="blob-num js-line-number" data-line-number="2587"></td>
        <td id="LC2587" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (isArray(<span class="pl-c1">module</span>)) {</td>
      </tr>
      <tr>
        <td id="L2588" class="blob-num js-line-number" data-line-number="2588"></td>
        <td id="LC2588" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2589" class="blob-num js-line-number" data-line-number="2589"></td>
        <td id="LC2589" class="blob-code blob-code-inner js-file-line">          runBlocks.<span class="pl-c1">push</span>(providerInjector.invoke(<span class="pl-c1">module</span>));</td>
      </tr>
      <tr>
        <td id="L2590" class="blob-num js-line-number" data-line-number="2590"></td>
        <td id="LC2590" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2591" class="blob-num js-line-number" data-line-number="2591"></td>
        <td id="LC2591" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (e.message) e.message <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span> from <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">String</span>(<span class="pl-c1">module</span>[<span class="pl-c1">module</span>.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2592" class="blob-num js-line-number" data-line-number="2592"></td>
        <td id="LC2592" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> e;</td>
      </tr>
      <tr>
        <td id="L2593" class="blob-num js-line-number" data-line-number="2593"></td>
        <td id="LC2593" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2594" class="blob-num js-line-number" data-line-number="2594"></td>
        <td id="LC2594" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2595" class="blob-num js-line-number" data-line-number="2595"></td>
        <td id="LC2595" class="blob-code blob-code-inner js-file-line">        assertArgFn(<span class="pl-c1">module</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>module<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2596" class="blob-num js-line-number" data-line-number="2596"></td>
        <td id="LC2596" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2597" class="blob-num js-line-number" data-line-number="2597"></td>
        <td id="LC2597" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2598" class="blob-num js-line-number" data-line-number="2598"></td>
        <td id="LC2598" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> runBlocks;</td>
      </tr>
      <tr>
        <td id="L2599" class="blob-num js-line-number" data-line-number="2599"></td>
        <td id="LC2599" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2600" class="blob-num js-line-number" data-line-number="2600"></td>
        <td id="LC2600" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2601" class="blob-num js-line-number" data-line-number="2601"></td>
        <td id="LC2601" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2602" class="blob-num js-line-number" data-line-number="2602"></td>
        <td id="LC2602" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// internal Injector</span></td>
      </tr>
      <tr>
        <td id="L2603" class="blob-num js-line-number" data-line-number="2603"></td>
        <td id="LC2603" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2604" class="blob-num js-line-number" data-line-number="2604"></td>
        <td id="LC2604" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2605" class="blob-num js-line-number" data-line-number="2605"></td>
        <td id="LC2605" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">createInternalInjector</span>(<span class="pl-smi">cache</span>, <span class="pl-smi">factory</span>) {</td>
      </tr>
      <tr>
        <td id="L2606" class="blob-num js-line-number" data-line-number="2606"></td>
        <td id="LC2606" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2607" class="blob-num js-line-number" data-line-number="2607"></td>
        <td id="LC2607" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getService</span>(<span class="pl-smi">serviceName</span>) {</td>
      </tr>
      <tr>
        <td id="L2608" class="blob-num js-line-number" data-line-number="2608"></td>
        <td id="LC2608" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> serviceName <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2609" class="blob-num js-line-number" data-line-number="2609"></td>
        <td id="LC2609" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Service name expected<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2610" class="blob-num js-line-number" data-line-number="2610"></td>
        <td id="LC2610" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2611" class="blob-num js-line-number" data-line-number="2611"></td>
        <td id="LC2611" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (cache.hasOwnProperty(serviceName)) {</td>
      </tr>
      <tr>
        <td id="L2612" class="blob-num js-line-number" data-line-number="2612"></td>
        <td id="LC2612" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (cache[serviceName] <span class="pl-k">===</span> <span class="pl-c1">INSTANTIATING</span>) {</td>
      </tr>
      <tr>
        <td id="L2613" class="blob-num js-line-number" data-line-number="2613"></td>
        <td id="LC2613" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Circular dependency: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> path.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> &lt;- <span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L2614" class="blob-num js-line-number" data-line-number="2614"></td>
        <td id="LC2614" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2615" class="blob-num js-line-number" data-line-number="2615"></td>
        <td id="LC2615" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> cache[serviceName];</td>
      </tr>
      <tr>
        <td id="L2616" class="blob-num js-line-number" data-line-number="2616"></td>
        <td id="LC2616" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2617" class="blob-num js-line-number" data-line-number="2617"></td>
        <td id="LC2617" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2618" class="blob-num js-line-number" data-line-number="2618"></td>
        <td id="LC2618" class="blob-code blob-code-inner js-file-line">          path.<span class="pl-c1">unshift</span>(serviceName);</td>
      </tr>
      <tr>
        <td id="L2619" class="blob-num js-line-number" data-line-number="2619"></td>
        <td id="LC2619" class="blob-code blob-code-inner js-file-line">          cache[serviceName] <span class="pl-k">=</span> <span class="pl-c1">INSTANTIATING</span>;</td>
      </tr>
      <tr>
        <td id="L2620" class="blob-num js-line-number" data-line-number="2620"></td>
        <td id="LC2620" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> cache[serviceName] <span class="pl-k">=</span> factory(serviceName);</td>
      </tr>
      <tr>
        <td id="L2621" class="blob-num js-line-number" data-line-number="2621"></td>
        <td id="LC2621" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2622" class="blob-num js-line-number" data-line-number="2622"></td>
        <td id="LC2622" class="blob-code blob-code-inner js-file-line">          path.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L2623" class="blob-num js-line-number" data-line-number="2623"></td>
        <td id="LC2623" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2624" class="blob-num js-line-number" data-line-number="2624"></td>
        <td id="LC2624" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2625" class="blob-num js-line-number" data-line-number="2625"></td>
        <td id="LC2625" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2626" class="blob-num js-line-number" data-line-number="2626"></td>
        <td id="LC2626" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2627" class="blob-num js-line-number" data-line-number="2627"></td>
        <td id="LC2627" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">invoke</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L2628" class="blob-num js-line-number" data-line-number="2628"></td>
        <td id="LC2628" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> args <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2629" class="blob-num js-line-number" data-line-number="2629"></td>
        <td id="LC2629" class="blob-code blob-code-inner js-file-line">          $inject,</td>
      </tr>
      <tr>
        <td id="L2630" class="blob-num js-line-number" data-line-number="2630"></td>
        <td id="LC2630" class="blob-code blob-code-inner js-file-line">          length,</td>
      </tr>
      <tr>
        <td id="L2631" class="blob-num js-line-number" data-line-number="2631"></td>
        <td id="LC2631" class="blob-code blob-code-inner js-file-line">          key;</td>
      </tr>
      <tr>
        <td id="L2632" class="blob-num js-line-number" data-line-number="2632"></td>
        <td id="LC2632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2633" class="blob-num js-line-number" data-line-number="2633"></td>
        <td id="LC2633" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">typeof</span> fn <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L2634" class="blob-num js-line-number" data-line-number="2634"></td>
        <td id="LC2634" class="blob-code blob-code-inner js-file-line">        $inject <span class="pl-k">=</span> inferInjectionArgs(fn);</td>
      </tr>
      <tr>
        <td id="L2635" class="blob-num js-line-number" data-line-number="2635"></td>
        <td id="LC2635" class="blob-code blob-code-inner js-file-line">        length <span class="pl-k">=</span> $inject.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L2636" class="blob-num js-line-number" data-line-number="2636"></td>
        <td id="LC2636" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2637" class="blob-num js-line-number" data-line-number="2637"></td>
        <td id="LC2637" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isArray(fn)) {</td>
      </tr>
      <tr>
        <td id="L2638" class="blob-num js-line-number" data-line-number="2638"></td>
        <td id="LC2638" class="blob-code blob-code-inner js-file-line">          $inject <span class="pl-k">=</span> fn;</td>
      </tr>
      <tr>
        <td id="L2639" class="blob-num js-line-number" data-line-number="2639"></td>
        <td id="LC2639" class="blob-code blob-code-inner js-file-line">          length <span class="pl-k">=</span> $inject.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L2640" class="blob-num js-line-number" data-line-number="2640"></td>
        <td id="LC2640" class="blob-code blob-code-inner js-file-line">          fn <span class="pl-k">=</span> $inject[length];</td>
      </tr>
      <tr>
        <td id="L2641" class="blob-num js-line-number" data-line-number="2641"></td>
        <td id="LC2641" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2642" class="blob-num js-line-number" data-line-number="2642"></td>
        <td id="LC2642" class="blob-code blob-code-inner js-file-line">        assertArgFn(fn, <span class="pl-s"><span class="pl-pds">&#39;</span>fn<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L2643" class="blob-num js-line-number" data-line-number="2643"></td>
        <td id="LC2643" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2644" class="blob-num js-line-number" data-line-number="2644"></td>
        <td id="LC2644" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2645" class="blob-num js-line-number" data-line-number="2645"></td>
        <td id="LC2645" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> length; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L2646" class="blob-num js-line-number" data-line-number="2646"></td>
        <td id="LC2646" class="blob-code blob-code-inner js-file-line">        key <span class="pl-k">=</span> $inject[i];</td>
      </tr>
      <tr>
        <td id="L2647" class="blob-num js-line-number" data-line-number="2647"></td>
        <td id="LC2647" class="blob-code blob-code-inner js-file-line">        args.<span class="pl-c1">push</span>(</td>
      </tr>
      <tr>
        <td id="L2648" class="blob-num js-line-number" data-line-number="2648"></td>
        <td id="LC2648" class="blob-code blob-code-inner js-file-line">          locals <span class="pl-k">&amp;&amp;</span> locals.hasOwnProperty(key)</td>
      </tr>
      <tr>
        <td id="L2649" class="blob-num js-line-number" data-line-number="2649"></td>
        <td id="LC2649" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> locals[key]</td>
      </tr>
      <tr>
        <td id="L2650" class="blob-num js-line-number" data-line-number="2650"></td>
        <td id="LC2650" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> getService(key, path)</td>
      </tr>
      <tr>
        <td id="L2651" class="blob-num js-line-number" data-line-number="2651"></td>
        <td id="LC2651" class="blob-code blob-code-inner js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L2652" class="blob-num js-line-number" data-line-number="2652"></td>
        <td id="LC2652" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2653" class="blob-num js-line-number" data-line-number="2653"></td>
        <td id="LC2653" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2654" class="blob-num js-line-number" data-line-number="2654"></td>
        <td id="LC2654" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// Performance optimization: http://jsperf.com/apply-vs-call-vs-invoke</span></td>
      </tr>
      <tr>
        <td id="L2655" class="blob-num js-line-number" data-line-number="2655"></td>
        <td id="LC2655" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (self <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> args.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L2656" class="blob-num js-line-number" data-line-number="2656"></td>
        <td id="LC2656" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">0</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn();</td>
      </tr>
      <tr>
        <td id="L2657" class="blob-num js-line-number" data-line-number="2657"></td>
        <td id="LC2657" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">1</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L2658" class="blob-num js-line-number" data-line-number="2658"></td>
        <td id="LC2658" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">2</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L2659" class="blob-num js-line-number" data-line-number="2659"></td>
        <td id="LC2659" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">3</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L2660" class="blob-num js-line-number" data-line-number="2660"></td>
        <td id="LC2660" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">4</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L2661" class="blob-num js-line-number" data-line-number="2661"></td>
        <td id="LC2661" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">5</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L2662" class="blob-num js-line-number" data-line-number="2662"></td>
        <td id="LC2662" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">6</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>], args[<span class="pl-c1">5</span>]);</td>
      </tr>
      <tr>
        <td id="L2663" class="blob-num js-line-number" data-line-number="2663"></td>
        <td id="LC2663" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">7</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>], args[<span class="pl-c1">5</span>], args[<span class="pl-c1">6</span>]);</td>
      </tr>
      <tr>
        <td id="L2664" class="blob-num js-line-number" data-line-number="2664"></td>
        <td id="LC2664" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">8</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>], args[<span class="pl-c1">5</span>], args[<span class="pl-c1">6</span>], args[<span class="pl-c1">7</span>]);</td>
      </tr>
      <tr>
        <td id="L2665" class="blob-num js-line-number" data-line-number="2665"></td>
        <td id="LC2665" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span>  <span class="pl-c1">9</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>], args[<span class="pl-c1">5</span>], args[<span class="pl-c1">6</span>], args[<span class="pl-c1">7</span>], args[<span class="pl-c1">8</span>]);</td>
      </tr>
      <tr>
        <td id="L2666" class="blob-num js-line-number" data-line-number="2666"></td>
        <td id="LC2666" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-c1">10</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>], args[<span class="pl-c1">5</span>], args[<span class="pl-c1">6</span>], args[<span class="pl-c1">7</span>], args[<span class="pl-c1">8</span>], args[<span class="pl-c1">9</span>]);</td>
      </tr>
      <tr>
        <td id="L2667" class="blob-num js-line-number" data-line-number="2667"></td>
        <td id="LC2667" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">default</span><span class="pl-k">:</span> <span class="pl-k">return</span> fn.<span class="pl-c1">apply</span>(self, args);</td>
      </tr>
      <tr>
        <td id="L2668" class="blob-num js-line-number" data-line-number="2668"></td>
        <td id="LC2668" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2669" class="blob-num js-line-number" data-line-number="2669"></td>
        <td id="LC2669" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2670" class="blob-num js-line-number" data-line-number="2670"></td>
        <td id="LC2670" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2671" class="blob-num js-line-number" data-line-number="2671"></td>
        <td id="LC2671" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">instantiate</span>(<span class="pl-smi">Type</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L2672" class="blob-num js-line-number" data-line-number="2672"></td>
        <td id="LC2672" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-en">Constructor</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {},</td>
      </tr>
      <tr>
        <td id="L2673" class="blob-num js-line-number" data-line-number="2673"></td>
        <td id="LC2673" class="blob-code blob-code-inner js-file-line">          instance, returnedValue;</td>
      </tr>
      <tr>
        <td id="L2674" class="blob-num js-line-number" data-line-number="2674"></td>
        <td id="LC2674" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2675" class="blob-num js-line-number" data-line-number="2675"></td>
        <td id="LC2675" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">Constructor</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> (isArray(Type) <span class="pl-k">?</span> Type[Type.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>] <span class="pl-k">:</span> Type).<span class="pl-c1">prototype</span>;</td>
      </tr>
      <tr>
        <td id="L2676" class="blob-num js-line-number" data-line-number="2676"></td>
        <td id="LC2676" class="blob-code blob-code-inner js-file-line">      instance <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Constructor</span>();</td>
      </tr>
      <tr>
        <td id="L2677" class="blob-num js-line-number" data-line-number="2677"></td>
        <td id="LC2677" class="blob-code blob-code-inner js-file-line">      returnedValue <span class="pl-k">=</span> invoke(Type, instance, locals);</td>
      </tr>
      <tr>
        <td id="L2678" class="blob-num js-line-number" data-line-number="2678"></td>
        <td id="LC2678" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2679" class="blob-num js-line-number" data-line-number="2679"></td>
        <td id="LC2679" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> isObject(returnedValue) <span class="pl-k">?</span> returnedValue <span class="pl-k">:</span> instance;</td>
      </tr>
      <tr>
        <td id="L2680" class="blob-num js-line-number" data-line-number="2680"></td>
        <td id="LC2680" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2681" class="blob-num js-line-number" data-line-number="2681"></td>
        <td id="LC2681" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2682" class="blob-num js-line-number" data-line-number="2682"></td>
        <td id="LC2682" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L2683" class="blob-num js-line-number" data-line-number="2683"></td>
        <td id="LC2683" class="blob-code blob-code-inner js-file-line">      invoke<span class="pl-k">:</span> invoke,</td>
      </tr>
      <tr>
        <td id="L2684" class="blob-num js-line-number" data-line-number="2684"></td>
        <td id="LC2684" class="blob-code blob-code-inner js-file-line">      instantiate<span class="pl-k">:</span> instantiate,</td>
      </tr>
      <tr>
        <td id="L2685" class="blob-num js-line-number" data-line-number="2685"></td>
        <td id="LC2685" class="blob-code blob-code-inner js-file-line">      get<span class="pl-k">:</span> getService</td>
      </tr>
      <tr>
        <td id="L2686" class="blob-num js-line-number" data-line-number="2686"></td>
        <td id="LC2686" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L2687" class="blob-num js-line-number" data-line-number="2687"></td>
        <td id="LC2687" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2688" class="blob-num js-line-number" data-line-number="2688"></td>
        <td id="LC2688" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2689" class="blob-num js-line-number" data-line-number="2689"></td>
        <td id="LC2689" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2690" class="blob-num js-line-number" data-line-number="2690"></td>
        <td id="LC2690" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L2691" class="blob-num js-line-number" data-line-number="2691"></td>
        <td id="LC2691" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$anchorScroll</span></td>
      </tr>
      <tr>
        <td id="L2692" class="blob-num js-line-number" data-line-number="2692"></td>
        <td id="LC2692" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $window</span></td>
      </tr>
      <tr>
        <td id="L2693" class="blob-num js-line-number" data-line-number="2693"></td>
        <td id="LC2693" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $location</span></td>
      </tr>
      <tr>
        <td id="L2694" class="blob-num js-line-number" data-line-number="2694"></td>
        <td id="LC2694" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $rootScope</span></td>
      </tr>
      <tr>
        <td id="L2695" class="blob-num js-line-number" data-line-number="2695"></td>
        <td id="LC2695" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2696" class="blob-num js-line-number" data-line-number="2696"></td>
        <td id="LC2696" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2697" class="blob-num js-line-number" data-line-number="2697"></td>
        <td id="LC2697" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When called, it checks current value of `$location.hash()` and scroll to related element,</span></td>
      </tr>
      <tr>
        <td id="L2698" class="blob-num js-line-number" data-line-number="2698"></td>
        <td id="LC2698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * according to rules specified in</span></td>
      </tr>
      <tr>
        <td id="L2699" class="blob-num js-line-number" data-line-number="2699"></td>
        <td id="LC2699" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link http://dev.w3.org/html5/spec/Overview.html#the-indicated-part-of-the-document Html5 spec}.</span></td>
      </tr>
      <tr>
        <td id="L2700" class="blob-num js-line-number" data-line-number="2700"></td>
        <td id="LC2700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2701" class="blob-num js-line-number" data-line-number="2701"></td>
        <td id="LC2701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * It also watches the `$location.hash()` and scroll whenever it changes to match any anchor.</span></td>
      </tr>
      <tr>
        <td id="L2702" class="blob-num js-line-number" data-line-number="2702"></td>
        <td id="LC2702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This can be disabled by calling `$anchorScrollProvider.disableAutoScrolling()`.</span></td>
      </tr>
      <tr>
        <td id="L2703" class="blob-num js-line-number" data-line-number="2703"></td>
        <td id="LC2703" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2704" class="blob-num js-line-number" data-line-number="2704"></td>
        <td id="LC2704" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$AnchorScrollProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L2705" class="blob-num js-line-number" data-line-number="2705"></td>
        <td id="LC2705" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2706" class="blob-num js-line-number" data-line-number="2706"></td>
        <td id="LC2706" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> autoScrollingEnabled <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2707" class="blob-num js-line-number" data-line-number="2707"></td>
        <td id="LC2707" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2708" class="blob-num js-line-number" data-line-number="2708"></td>
        <td id="LC2708" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">disableAutoScrolling</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2709" class="blob-num js-line-number" data-line-number="2709"></td>
        <td id="LC2709" class="blob-code blob-code-inner js-file-line">    autoScrollingEnabled <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2710" class="blob-num js-line-number" data-line-number="2710"></td>
        <td id="LC2710" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2711" class="blob-num js-line-number" data-line-number="2711"></td>
        <td id="LC2711" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2712" class="blob-num js-line-number" data-line-number="2712"></td>
        <td id="LC2712" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$location<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$window</span>, <span class="pl-smi">$location</span>, <span class="pl-smi">$rootScope</span>) {</td>
      </tr>
      <tr>
        <td id="L2713" class="blob-num js-line-number" data-line-number="2713"></td>
        <td id="LC2713" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">document</span> <span class="pl-k">=</span> $window.<span class="pl-c1">document</span>;</td>
      </tr>
      <tr>
        <td id="L2714" class="blob-num js-line-number" data-line-number="2714"></td>
        <td id="LC2714" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2715" class="blob-num js-line-number" data-line-number="2715"></td>
        <td id="LC2715" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// helper function to get first anchor from a NodeList</span></td>
      </tr>
      <tr>
        <td id="L2716" class="blob-num js-line-number" data-line-number="2716"></td>
        <td id="LC2716" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// can&#39;t use filter.filter, as it accepts only instances of Array</span></td>
      </tr>
      <tr>
        <td id="L2717" class="blob-num js-line-number" data-line-number="2717"></td>
        <td id="LC2717" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// and IE can&#39;t convert NodeList to an array using [].slice</span></td>
      </tr>
      <tr>
        <td id="L2718" class="blob-num js-line-number" data-line-number="2718"></td>
        <td id="LC2718" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// TODO(vojta): use filter if we change it to accept lists as well</span></td>
      </tr>
      <tr>
        <td id="L2719" class="blob-num js-line-number" data-line-number="2719"></td>
        <td id="LC2719" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">getFirstAnchor</span>(<span class="pl-smi">list</span>) {</td>
      </tr>
      <tr>
        <td id="L2720" class="blob-num js-line-number" data-line-number="2720"></td>
        <td id="LC2720" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> result <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L2721" class="blob-num js-line-number" data-line-number="2721"></td>
        <td id="LC2721" class="blob-code blob-code-inner js-file-line">      forEach(list, <span class="pl-k">function</span>(<span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L2722" class="blob-num js-line-number" data-line-number="2722"></td>
        <td id="LC2722" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>result <span class="pl-k">&amp;&amp;</span> lowercase(element.<span class="pl-c1">nodeName</span>) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>) result <span class="pl-k">=</span> element;</td>
      </tr>
      <tr>
        <td id="L2723" class="blob-num js-line-number" data-line-number="2723"></td>
        <td id="LC2723" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2724" class="blob-num js-line-number" data-line-number="2724"></td>
        <td id="LC2724" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> result;</td>
      </tr>
      <tr>
        <td id="L2725" class="blob-num js-line-number" data-line-number="2725"></td>
        <td id="LC2725" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2726" class="blob-num js-line-number" data-line-number="2726"></td>
        <td id="LC2726" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2727" class="blob-num js-line-number" data-line-number="2727"></td>
        <td id="LC2727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">scroll</span>() {</td>
      </tr>
      <tr>
        <td id="L2728" class="blob-num js-line-number" data-line-number="2728"></td>
        <td id="LC2728" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> hash <span class="pl-k">=</span> $location.<span class="pl-c1">hash</span>(), elm;</td>
      </tr>
      <tr>
        <td id="L2729" class="blob-num js-line-number" data-line-number="2729"></td>
        <td id="LC2729" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2730" class="blob-num js-line-number" data-line-number="2730"></td>
        <td id="LC2730" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// empty hash, scroll to the top of the page</span></td>
      </tr>
      <tr>
        <td id="L2731" class="blob-num js-line-number" data-line-number="2731"></td>
        <td id="LC2731" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>hash) $window.<span class="pl-c1">scrollTo</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2732" class="blob-num js-line-number" data-line-number="2732"></td>
        <td id="LC2732" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2733" class="blob-num js-line-number" data-line-number="2733"></td>
        <td id="LC2733" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// element with given id</span></td>
      </tr>
      <tr>
        <td id="L2734" class="blob-num js-line-number" data-line-number="2734"></td>
        <td id="LC2734" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> ((elm <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">getElementById</span>(hash))) elm.scrollIntoView();</td>
      </tr>
      <tr>
        <td id="L2735" class="blob-num js-line-number" data-line-number="2735"></td>
        <td id="LC2735" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2736" class="blob-num js-line-number" data-line-number="2736"></td>
        <td id="LC2736" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// first anchor with given name :-D</span></td>
      </tr>
      <tr>
        <td id="L2737" class="blob-num js-line-number" data-line-number="2737"></td>
        <td id="LC2737" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> ((elm <span class="pl-k">=</span> getFirstAnchor(<span class="pl-c1">document</span>.<span class="pl-c1">getElementsByName</span>(hash)))) elm.scrollIntoView();</td>
      </tr>
      <tr>
        <td id="L2738" class="blob-num js-line-number" data-line-number="2738"></td>
        <td id="LC2738" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2739" class="blob-num js-line-number" data-line-number="2739"></td>
        <td id="LC2739" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// no element and hash == &#39;top&#39;, scroll to the top of the page</span></td>
      </tr>
      <tr>
        <td id="L2740" class="blob-num js-line-number" data-line-number="2740"></td>
        <td id="LC2740" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (hash <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>top<span class="pl-pds">&#39;</span></span>) $window.<span class="pl-c1">scrollTo</span>(<span class="pl-c1">0</span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L2741" class="blob-num js-line-number" data-line-number="2741"></td>
        <td id="LC2741" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2742" class="blob-num js-line-number" data-line-number="2742"></td>
        <td id="LC2742" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2743" class="blob-num js-line-number" data-line-number="2743"></td>
        <td id="LC2743" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// does not scroll when user clicks on anchor link that is currently on</span></td>
      </tr>
      <tr>
        <td id="L2744" class="blob-num js-line-number" data-line-number="2744"></td>
        <td id="LC2744" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// (no url change, no $locaiton.hash() change), browser native does scroll</span></td>
      </tr>
      <tr>
        <td id="L2745" class="blob-num js-line-number" data-line-number="2745"></td>
        <td id="LC2745" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (autoScrollingEnabled) {</td>
      </tr>
      <tr>
        <td id="L2746" class="blob-num js-line-number" data-line-number="2746"></td>
        <td id="LC2746" class="blob-code blob-code-inner js-file-line">      $rootScope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>() {<span class="pl-k">return</span> $location.<span class="pl-c1">hash</span>();}, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L2747" class="blob-num js-line-number" data-line-number="2747"></td>
        <td id="LC2747" class="blob-code blob-code-inner js-file-line">        $rootScope.$evalAsync(scroll);</td>
      </tr>
      <tr>
        <td id="L2748" class="blob-num js-line-number" data-line-number="2748"></td>
        <td id="LC2748" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L2749" class="blob-num js-line-number" data-line-number="2749"></td>
        <td id="LC2749" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2750" class="blob-num js-line-number" data-line-number="2750"></td>
        <td id="LC2750" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2751" class="blob-num js-line-number" data-line-number="2751"></td>
        <td id="LC2751" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> scroll;</td>
      </tr>
      <tr>
        <td id="L2752" class="blob-num js-line-number" data-line-number="2752"></td>
        <td id="LC2752" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L2753" class="blob-num js-line-number" data-line-number="2753"></td>
        <td id="LC2753" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L2754" class="blob-num js-line-number" data-line-number="2754"></td>
        <td id="LC2754" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2755" class="blob-num js-line-number" data-line-number="2755"></td>
        <td id="LC2755" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2756" class="blob-num js-line-number" data-line-number="2756"></td>
        <td id="LC2756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L2757" class="blob-num js-line-number" data-line-number="2757"></td>
        <td id="LC2757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L2758" class="blob-num js-line-number" data-line-number="2758"></td>
        <td id="LC2758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $log</span></td>
      </tr>
      <tr>
        <td id="L2759" class="blob-num js-line-number" data-line-number="2759"></td>
        <td id="LC2759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2760" class="blob-num js-line-number" data-line-number="2760"></td>
        <td id="LC2760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This object has two goals:</span></td>
      </tr>
      <tr>
        <td id="L2761" class="blob-num js-line-number" data-line-number="2761"></td>
        <td id="LC2761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2762" class="blob-num js-line-number" data-line-number="2762"></td>
        <td id="LC2762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - hide all the global state in the browser caused by the window object</span></td>
      </tr>
      <tr>
        <td id="L2763" class="blob-num js-line-number" data-line-number="2763"></td>
        <td id="LC2763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - abstract away all the browser specific features and inconsistencies</span></td>
      </tr>
      <tr>
        <td id="L2764" class="blob-num js-line-number" data-line-number="2764"></td>
        <td id="LC2764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L2765" class="blob-num js-line-number" data-line-number="2765"></td>
        <td id="LC2765" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For tests we provide {@link angular.module.ngMock.$browser mock implementation} of the `$browser`</span></td>
      </tr>
      <tr>
        <td id="L2766" class="blob-num js-line-number" data-line-number="2766"></td>
        <td id="LC2766" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * service, which can be used for convenient testing of the application without the interaction with</span></td>
      </tr>
      <tr>
        <td id="L2767" class="blob-num js-line-number" data-line-number="2767"></td>
        <td id="LC2767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the real browser apis.</span></td>
      </tr>
      <tr>
        <td id="L2768" class="blob-num js-line-number" data-line-number="2768"></td>
        <td id="LC2768" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2769" class="blob-num js-line-number" data-line-number="2769"></td>
        <td id="LC2769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2770" class="blob-num js-line-number" data-line-number="2770"></td>
        <td id="LC2770" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object} window The global window object.</span></td>
      </tr>
      <tr>
        <td id="L2771" class="blob-num js-line-number" data-line-number="2771"></td>
        <td id="LC2771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object} document jQuery wrapped document.</span></td>
      </tr>
      <tr>
        <td id="L2772" class="blob-num js-line-number" data-line-number="2772"></td>
        <td id="LC2772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object} body jQuery wrapped document.body.</span></td>
      </tr>
      <tr>
        <td id="L2773" class="blob-num js-line-number" data-line-number="2773"></td>
        <td id="LC2773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function()} XHR XMLHttpRequest constructor.</span></td>
      </tr>
      <tr>
        <td id="L2774" class="blob-num js-line-number" data-line-number="2774"></td>
        <td id="LC2774" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object} $log console.log or an object with the same interface.</span></td>
      </tr>
      <tr>
        <td id="L2775" class="blob-num js-line-number" data-line-number="2775"></td>
        <td id="LC2775" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object} $sniffer $sniffer service</span></td>
      </tr>
      <tr>
        <td id="L2776" class="blob-num js-line-number" data-line-number="2776"></td>
        <td id="LC2776" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L2777" class="blob-num js-line-number" data-line-number="2777"></td>
        <td id="LC2777" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Browser</span>(<span class="pl-smi">window</span>, <span class="pl-smi">document</span>, <span class="pl-smi">body</span>, <span class="pl-smi">$log</span>, <span class="pl-smi">$sniffer</span>) {</td>
      </tr>
      <tr>
        <td id="L2778" class="blob-num js-line-number" data-line-number="2778"></td>
        <td id="LC2778" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> self <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L2779" class="blob-num js-line-number" data-line-number="2779"></td>
        <td id="LC2779" class="blob-code blob-code-inner js-file-line">      rawDocument <span class="pl-k">=</span> <span class="pl-c1">document</span>[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L2780" class="blob-num js-line-number" data-line-number="2780"></td>
        <td id="LC2780" class="blob-code blob-code-inner js-file-line">      location <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-c1">location</span>,</td>
      </tr>
      <tr>
        <td id="L2781" class="blob-num js-line-number" data-line-number="2781"></td>
        <td id="LC2781" class="blob-code blob-code-inner js-file-line">      history <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-c1">history</span>,</td>
      </tr>
      <tr>
        <td id="L2782" class="blob-num js-line-number" data-line-number="2782"></td>
        <td id="LC2782" class="blob-code blob-code-inner js-file-line">      setTimeout <span class="pl-k">=</span> <span class="pl-c1">window</span>.setTimeout,</td>
      </tr>
      <tr>
        <td id="L2783" class="blob-num js-line-number" data-line-number="2783"></td>
        <td id="LC2783" class="blob-code blob-code-inner js-file-line">      clearTimeout <span class="pl-k">=</span> <span class="pl-c1">window</span>.clearTimeout,</td>
      </tr>
      <tr>
        <td id="L2784" class="blob-num js-line-number" data-line-number="2784"></td>
        <td id="LC2784" class="blob-code blob-code-inner js-file-line">      pendingDeferIds <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2785" class="blob-num js-line-number" data-line-number="2785"></td>
        <td id="LC2785" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2786" class="blob-num js-line-number" data-line-number="2786"></td>
        <td id="LC2786" class="blob-code blob-code-inner js-file-line">  self.isMock <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2787" class="blob-num js-line-number" data-line-number="2787"></td>
        <td id="LC2787" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2788" class="blob-num js-line-number" data-line-number="2788"></td>
        <td id="LC2788" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> outstandingRequestCount <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L2789" class="blob-num js-line-number" data-line-number="2789"></td>
        <td id="LC2789" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> outstandingRequestCallbacks <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L2790" class="blob-num js-line-number" data-line-number="2790"></td>
        <td id="LC2790" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2791" class="blob-num js-line-number" data-line-number="2791"></td>
        <td id="LC2791" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// TODO(vojta): remove this temporary api</span></td>
      </tr>
      <tr>
        <td id="L2792" class="blob-num js-line-number" data-line-number="2792"></td>
        <td id="LC2792" class="blob-code blob-code-inner js-file-line">  self.$$completeOutstandingRequest <span class="pl-k">=</span> completeOutstandingRequest;</td>
      </tr>
      <tr>
        <td id="L2793" class="blob-num js-line-number" data-line-number="2793"></td>
        <td id="LC2793" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">$$incOutstandingRequestCount</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() { outstandingRequestCount<span class="pl-k">++</span>; };</td>
      </tr>
      <tr>
        <td id="L2794" class="blob-num js-line-number" data-line-number="2794"></td>
        <td id="LC2794" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2795" class="blob-num js-line-number" data-line-number="2795"></td>
        <td id="LC2795" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2796" class="blob-num js-line-number" data-line-number="2796"></td>
        <td id="LC2796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`</span></td>
      </tr>
      <tr>
        <td id="L2797" class="blob-num js-line-number" data-line-number="2797"></td>
        <td id="LC2797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * counter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.</span></td>
      </tr>
      <tr>
        <td id="L2798" class="blob-num js-line-number" data-line-number="2798"></td>
        <td id="LC2798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2799" class="blob-num js-line-number" data-line-number="2799"></td>
        <td id="LC2799" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">completeOutstandingRequest</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L2800" class="blob-num js-line-number" data-line-number="2800"></td>
        <td id="LC2800" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2801" class="blob-num js-line-number" data-line-number="2801"></td>
        <td id="LC2801" class="blob-code blob-code-inner js-file-line">      fn.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, sliceArgs(arguments, <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L2802" class="blob-num js-line-number" data-line-number="2802"></td>
        <td id="LC2802" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L2803" class="blob-num js-line-number" data-line-number="2803"></td>
        <td id="LC2803" class="blob-code blob-code-inner js-file-line">      outstandingRequestCount<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L2804" class="blob-num js-line-number" data-line-number="2804"></td>
        <td id="LC2804" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (outstandingRequestCount <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2805" class="blob-num js-line-number" data-line-number="2805"></td>
        <td id="LC2805" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span>(outstandingRequestCallbacks.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L2806" class="blob-num js-line-number" data-line-number="2806"></td>
        <td id="LC2806" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L2807" class="blob-num js-line-number" data-line-number="2807"></td>
        <td id="LC2807" class="blob-code blob-code-inner js-file-line">            outstandingRequestCallbacks.<span class="pl-c1">pop</span>()();</td>
      </tr>
      <tr>
        <td id="L2808" class="blob-num js-line-number" data-line-number="2808"></td>
        <td id="LC2808" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L2809" class="blob-num js-line-number" data-line-number="2809"></td>
        <td id="LC2809" class="blob-code blob-code-inner js-file-line">            $log<span class="pl-c1">.error</span>(e);</td>
      </tr>
      <tr>
        <td id="L2810" class="blob-num js-line-number" data-line-number="2810"></td>
        <td id="LC2810" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L2811" class="blob-num js-line-number" data-line-number="2811"></td>
        <td id="LC2811" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L2812" class="blob-num js-line-number" data-line-number="2812"></td>
        <td id="LC2812" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2813" class="blob-num js-line-number" data-line-number="2813"></td>
        <td id="LC2813" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2814" class="blob-num js-line-number" data-line-number="2814"></td>
        <td id="LC2814" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2815" class="blob-num js-line-number" data-line-number="2815"></td>
        <td id="LC2815" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2816" class="blob-num js-line-number" data-line-number="2816"></td>
        <td id="LC2816" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2817" class="blob-num js-line-number" data-line-number="2817"></td>
        <td id="LC2817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L2818" class="blob-num js-line-number" data-line-number="2818"></td>
        <td id="LC2818" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Note: this method is used only by scenario runner</span></td>
      </tr>
      <tr>
        <td id="L2819" class="blob-num js-line-number" data-line-number="2819"></td>
        <td id="LC2819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * TODO(vojta): prefix this method with $$ ?</span></td>
      </tr>
      <tr>
        <td id="L2820" class="blob-num js-line-number" data-line-number="2820"></td>
        <td id="LC2820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {function()} callback Function that will be called when no outstanding request</span></td>
      </tr>
      <tr>
        <td id="L2821" class="blob-num js-line-number" data-line-number="2821"></td>
        <td id="LC2821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2822" class="blob-num js-line-number" data-line-number="2822"></td>
        <td id="LC2822" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">notifyWhenNoOutstandingRequests</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2823" class="blob-num js-line-number" data-line-number="2823"></td>
        <td id="LC2823" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// force browser to execute all pollFns - this is needed so that cookies and other pollers fire</span></td>
      </tr>
      <tr>
        <td id="L2824" class="blob-num js-line-number" data-line-number="2824"></td>
        <td id="LC2824" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// at some deterministic time in respect to the test runner&#39;s actions. Leaving things up to the</span></td>
      </tr>
      <tr>
        <td id="L2825" class="blob-num js-line-number" data-line-number="2825"></td>
        <td id="LC2825" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// regular poller would result in flaky tests.</span></td>
      </tr>
      <tr>
        <td id="L2826" class="blob-num js-line-number" data-line-number="2826"></td>
        <td id="LC2826" class="blob-code blob-code-inner js-file-line">    forEach(pollFns, <span class="pl-k">function</span>(<span class="pl-smi">pollFn</span>){ pollFn(); });</td>
      </tr>
      <tr>
        <td id="L2827" class="blob-num js-line-number" data-line-number="2827"></td>
        <td id="LC2827" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2828" class="blob-num js-line-number" data-line-number="2828"></td>
        <td id="LC2828" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (outstandingRequestCount <span class="pl-k">===</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L2829" class="blob-num js-line-number" data-line-number="2829"></td>
        <td id="LC2829" class="blob-code blob-code-inner js-file-line">      callback();</td>
      </tr>
      <tr>
        <td id="L2830" class="blob-num js-line-number" data-line-number="2830"></td>
        <td id="LC2830" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2831" class="blob-num js-line-number" data-line-number="2831"></td>
        <td id="LC2831" class="blob-code blob-code-inner js-file-line">      outstandingRequestCallbacks.<span class="pl-c1">push</span>(callback);</td>
      </tr>
      <tr>
        <td id="L2832" class="blob-num js-line-number" data-line-number="2832"></td>
        <td id="LC2832" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2833" class="blob-num js-line-number" data-line-number="2833"></td>
        <td id="LC2833" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2834" class="blob-num js-line-number" data-line-number="2834"></td>
        <td id="LC2834" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2835" class="blob-num js-line-number" data-line-number="2835"></td>
        <td id="LC2835" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2836" class="blob-num js-line-number" data-line-number="2836"></td>
        <td id="LC2836" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Poll Watcher API</span></td>
      </tr>
      <tr>
        <td id="L2837" class="blob-num js-line-number" data-line-number="2837"></td>
        <td id="LC2837" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2838" class="blob-num js-line-number" data-line-number="2838"></td>
        <td id="LC2838" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> pollFns <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2839" class="blob-num js-line-number" data-line-number="2839"></td>
        <td id="LC2839" class="blob-code blob-code-inner js-file-line">      pollTimeout;</td>
      </tr>
      <tr>
        <td id="L2840" class="blob-num js-line-number" data-line-number="2840"></td>
        <td id="LC2840" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2841" class="blob-num js-line-number" data-line-number="2841"></td>
        <td id="LC2841" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2842" class="blob-num js-line-number" data-line-number="2842"></td>
        <td id="LC2842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2843" class="blob-num js-line-number" data-line-number="2843"></td>
        <td id="LC2843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#addPollFn</span></td>
      </tr>
      <tr>
        <td id="L2844" class="blob-num js-line-number" data-line-number="2844"></td>
        <td id="LC2844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L2845" class="blob-num js-line-number" data-line-number="2845"></td>
        <td id="LC2845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2846" class="blob-num js-line-number" data-line-number="2846"></td>
        <td id="LC2846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {function()} fn Poll function to add</span></td>
      </tr>
      <tr>
        <td id="L2847" class="blob-num js-line-number" data-line-number="2847"></td>
        <td id="LC2847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2848" class="blob-num js-line-number" data-line-number="2848"></td>
        <td id="LC2848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2849" class="blob-num js-line-number" data-line-number="2849"></td>
        <td id="LC2849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Adds a function to the list of functions that poller periodically executes,</span></td>
      </tr>
      <tr>
        <td id="L2850" class="blob-num js-line-number" data-line-number="2850"></td>
        <td id="LC2850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * and starts polling if not started yet.</span></td>
      </tr>
      <tr>
        <td id="L2851" class="blob-num js-line-number" data-line-number="2851"></td>
        <td id="LC2851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2852" class="blob-num js-line-number" data-line-number="2852"></td>
        <td id="LC2852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {function()} the added function</span></td>
      </tr>
      <tr>
        <td id="L2853" class="blob-num js-line-number" data-line-number="2853"></td>
        <td id="LC2853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2854" class="blob-num js-line-number" data-line-number="2854"></td>
        <td id="LC2854" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">addPollFn</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L2855" class="blob-num js-line-number" data-line-number="2855"></td>
        <td id="LC2855" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(pollTimeout)) startPoller(<span class="pl-c1">100</span>, setTimeout);</td>
      </tr>
      <tr>
        <td id="L2856" class="blob-num js-line-number" data-line-number="2856"></td>
        <td id="LC2856" class="blob-code blob-code-inner js-file-line">    pollFns.<span class="pl-c1">push</span>(fn);</td>
      </tr>
      <tr>
        <td id="L2857" class="blob-num js-line-number" data-line-number="2857"></td>
        <td id="LC2857" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L2858" class="blob-num js-line-number" data-line-number="2858"></td>
        <td id="LC2858" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2859" class="blob-num js-line-number" data-line-number="2859"></td>
        <td id="LC2859" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2860" class="blob-num js-line-number" data-line-number="2860"></td>
        <td id="LC2860" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2861" class="blob-num js-line-number" data-line-number="2861"></td>
        <td id="LC2861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number} interval How often should browser call poll functions (ms)</span></td>
      </tr>
      <tr>
        <td id="L2862" class="blob-num js-line-number" data-line-number="2862"></td>
        <td id="LC2862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {function()} setTimeout Reference to a real or fake `setTimeout` function.</span></td>
      </tr>
      <tr>
        <td id="L2863" class="blob-num js-line-number" data-line-number="2863"></td>
        <td id="LC2863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2864" class="blob-num js-line-number" data-line-number="2864"></td>
        <td id="LC2864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2865" class="blob-num js-line-number" data-line-number="2865"></td>
        <td id="LC2865" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Configures the poller to run in the specified intervals, using the specified</span></td>
      </tr>
      <tr>
        <td id="L2866" class="blob-num js-line-number" data-line-number="2866"></td>
        <td id="LC2866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * setTimeout fn and kicks it off.</span></td>
      </tr>
      <tr>
        <td id="L2867" class="blob-num js-line-number" data-line-number="2867"></td>
        <td id="LC2867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2868" class="blob-num js-line-number" data-line-number="2868"></td>
        <td id="LC2868" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">startPoller</span>(<span class="pl-smi">interval</span>, <span class="pl-smi">setTimeout</span>) {</td>
      </tr>
      <tr>
        <td id="L2869" class="blob-num js-line-number" data-line-number="2869"></td>
        <td id="LC2869" class="blob-code blob-code-inner js-file-line">    (<span class="pl-k">function</span> <span class="pl-en">check</span>() {</td>
      </tr>
      <tr>
        <td id="L2870" class="blob-num js-line-number" data-line-number="2870"></td>
        <td id="LC2870" class="blob-code blob-code-inner js-file-line">      forEach(pollFns, <span class="pl-k">function</span>(<span class="pl-smi">pollFn</span>){ pollFn(); });</td>
      </tr>
      <tr>
        <td id="L2871" class="blob-num js-line-number" data-line-number="2871"></td>
        <td id="LC2871" class="blob-code blob-code-inner js-file-line">      pollTimeout <span class="pl-k">=</span> <span class="pl-c1">setTimeout</span>(check, interval);</td>
      </tr>
      <tr>
        <td id="L2872" class="blob-num js-line-number" data-line-number="2872"></td>
        <td id="LC2872" class="blob-code blob-code-inner js-file-line">    })();</td>
      </tr>
      <tr>
        <td id="L2873" class="blob-num js-line-number" data-line-number="2873"></td>
        <td id="LC2873" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2874" class="blob-num js-line-number" data-line-number="2874"></td>
        <td id="LC2874" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2875" class="blob-num js-line-number" data-line-number="2875"></td>
        <td id="LC2875" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2876" class="blob-num js-line-number" data-line-number="2876"></td>
        <td id="LC2876" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// URL API</span></td>
      </tr>
      <tr>
        <td id="L2877" class="blob-num js-line-number" data-line-number="2877"></td>
        <td id="LC2877" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2878" class="blob-num js-line-number" data-line-number="2878"></td>
        <td id="LC2878" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2879" class="blob-num js-line-number" data-line-number="2879"></td>
        <td id="LC2879" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> lastBrowserUrl <span class="pl-k">=</span> location.<span class="pl-c1">href</span>;</td>
      </tr>
      <tr>
        <td id="L2880" class="blob-num js-line-number" data-line-number="2880"></td>
        <td id="LC2880" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2881" class="blob-num js-line-number" data-line-number="2881"></td>
        <td id="LC2881" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2882" class="blob-num js-line-number" data-line-number="2882"></td>
        <td id="LC2882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2883" class="blob-num js-line-number" data-line-number="2883"></td>
        <td id="LC2883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#url</span></td>
      </tr>
      <tr>
        <td id="L2884" class="blob-num js-line-number" data-line-number="2884"></td>
        <td id="LC2884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L2885" class="blob-num js-line-number" data-line-number="2885"></td>
        <td id="LC2885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2886" class="blob-num js-line-number" data-line-number="2886"></td>
        <td id="LC2886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2887" class="blob-num js-line-number" data-line-number="2887"></td>
        <td id="LC2887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * GETTER:</span></td>
      </tr>
      <tr>
        <td id="L2888" class="blob-num js-line-number" data-line-number="2888"></td>
        <td id="LC2888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Without any argument, this method just returns current value of location.href.</span></td>
      </tr>
      <tr>
        <td id="L2889" class="blob-num js-line-number" data-line-number="2889"></td>
        <td id="LC2889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2890" class="blob-num js-line-number" data-line-number="2890"></td>
        <td id="LC2890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * SETTER:</span></td>
      </tr>
      <tr>
        <td id="L2891" class="blob-num js-line-number" data-line-number="2891"></td>
        <td id="LC2891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * With at least one argument, this method sets url to new value.</span></td>
      </tr>
      <tr>
        <td id="L2892" class="blob-num js-line-number" data-line-number="2892"></td>
        <td id="LC2892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * If html5 history api supported, pushState/replaceState is used, otherwise</span></td>
      </tr>
      <tr>
        <td id="L2893" class="blob-num js-line-number" data-line-number="2893"></td>
        <td id="LC2893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * location.href/location.replace is used.</span></td>
      </tr>
      <tr>
        <td id="L2894" class="blob-num js-line-number" data-line-number="2894"></td>
        <td id="LC2894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Returns its own instance to allow chaining</span></td>
      </tr>
      <tr>
        <td id="L2895" class="blob-num js-line-number" data-line-number="2895"></td>
        <td id="LC2895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2896" class="blob-num js-line-number" data-line-number="2896"></td>
        <td id="LC2896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * NOTE: this api is intended for use only by the $location service. Please use the</span></td>
      </tr>
      <tr>
        <td id="L2897" class="blob-num js-line-number" data-line-number="2897"></td>
        <td id="LC2897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * {@link angular.module.ng.$location $location service} to change url.</span></td>
      </tr>
      <tr>
        <td id="L2898" class="blob-num js-line-number" data-line-number="2898"></td>
        <td id="LC2898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2899" class="blob-num js-line-number" data-line-number="2899"></td>
        <td id="LC2899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} url New url (when used as setter)</span></td>
      </tr>
      <tr>
        <td id="L2900" class="blob-num js-line-number" data-line-number="2900"></td>
        <td id="LC2900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {boolean=} replace Should new url replace current history record ?</span></td>
      </tr>
      <tr>
        <td id="L2901" class="blob-num js-line-number" data-line-number="2901"></td>
        <td id="LC2901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2902" class="blob-num js-line-number" data-line-number="2902"></td>
        <td id="LC2902" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">url</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">replace</span>) {</td>
      </tr>
      <tr>
        <td id="L2903" class="blob-num js-line-number" data-line-number="2903"></td>
        <td id="LC2903" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// setter</span></td>
      </tr>
      <tr>
        <td id="L2904" class="blob-num js-line-number" data-line-number="2904"></td>
        <td id="LC2904" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (url) {</td>
      </tr>
      <tr>
        <td id="L2905" class="blob-num js-line-number" data-line-number="2905"></td>
        <td id="LC2905" class="blob-code blob-code-inner js-file-line">      lastBrowserUrl <span class="pl-k">=</span> url;</td>
      </tr>
      <tr>
        <td id="L2906" class="blob-num js-line-number" data-line-number="2906"></td>
        <td id="LC2906" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($sniffer.<span class="pl-c1">history</span>) {</td>
      </tr>
      <tr>
        <td id="L2907" class="blob-num js-line-number" data-line-number="2907"></td>
        <td id="LC2907" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (replace) history.replaceState(<span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, url);</td>
      </tr>
      <tr>
        <td id="L2908" class="blob-num js-line-number" data-line-number="2908"></td>
        <td id="LC2908" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> history.pushState(<span class="pl-c1">null</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, url);</td>
      </tr>
      <tr>
        <td id="L2909" class="blob-num js-line-number" data-line-number="2909"></td>
        <td id="LC2909" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2910" class="blob-num js-line-number" data-line-number="2910"></td>
        <td id="LC2910" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (replace) location.<span class="pl-c1">replace</span>(url);</td>
      </tr>
      <tr>
        <td id="L2911" class="blob-num js-line-number" data-line-number="2911"></td>
        <td id="LC2911" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">else</span> location.<span class="pl-c1">href</span> <span class="pl-k">=</span> url;</td>
      </tr>
      <tr>
        <td id="L2912" class="blob-num js-line-number" data-line-number="2912"></td>
        <td id="LC2912" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L2913" class="blob-num js-line-number" data-line-number="2913"></td>
        <td id="LC2913" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> self;</td>
      </tr>
      <tr>
        <td id="L2914" class="blob-num js-line-number" data-line-number="2914"></td>
        <td id="LC2914" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// getter</span></td>
      </tr>
      <tr>
        <td id="L2915" class="blob-num js-line-number" data-line-number="2915"></td>
        <td id="LC2915" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L2916" class="blob-num js-line-number" data-line-number="2916"></td>
        <td id="LC2916" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> location.<span class="pl-c1">href</span>;</td>
      </tr>
      <tr>
        <td id="L2917" class="blob-num js-line-number" data-line-number="2917"></td>
        <td id="LC2917" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2918" class="blob-num js-line-number" data-line-number="2918"></td>
        <td id="LC2918" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2919" class="blob-num js-line-number" data-line-number="2919"></td>
        <td id="LC2919" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2920" class="blob-num js-line-number" data-line-number="2920"></td>
        <td id="LC2920" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> urlChangeListeners <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L2921" class="blob-num js-line-number" data-line-number="2921"></td>
        <td id="LC2921" class="blob-code blob-code-inner js-file-line">      urlChangeInit <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L2922" class="blob-num js-line-number" data-line-number="2922"></td>
        <td id="LC2922" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2923" class="blob-num js-line-number" data-line-number="2923"></td>
        <td id="LC2923" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">fireUrlChange</span>() {</td>
      </tr>
      <tr>
        <td id="L2924" class="blob-num js-line-number" data-line-number="2924"></td>
        <td id="LC2924" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (lastBrowserUrl <span class="pl-k">==</span> self.url()) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L2925" class="blob-num js-line-number" data-line-number="2925"></td>
        <td id="LC2925" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2926" class="blob-num js-line-number" data-line-number="2926"></td>
        <td id="LC2926" class="blob-code blob-code-inner js-file-line">    lastBrowserUrl <span class="pl-k">=</span> self.url();</td>
      </tr>
      <tr>
        <td id="L2927" class="blob-num js-line-number" data-line-number="2927"></td>
        <td id="LC2927" class="blob-code blob-code-inner js-file-line">    forEach(urlChangeListeners, <span class="pl-k">function</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L2928" class="blob-num js-line-number" data-line-number="2928"></td>
        <td id="LC2928" class="blob-code blob-code-inner js-file-line">      listener(self.url());</td>
      </tr>
      <tr>
        <td id="L2929" class="blob-num js-line-number" data-line-number="2929"></td>
        <td id="LC2929" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L2930" class="blob-num js-line-number" data-line-number="2930"></td>
        <td id="LC2930" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L2931" class="blob-num js-line-number" data-line-number="2931"></td>
        <td id="LC2931" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2932" class="blob-num js-line-number" data-line-number="2932"></td>
        <td id="LC2932" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2933" class="blob-num js-line-number" data-line-number="2933"></td>
        <td id="LC2933" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2934" class="blob-num js-line-number" data-line-number="2934"></td>
        <td id="LC2934" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#onUrlChange</span></td>
      </tr>
      <tr>
        <td id="L2935" class="blob-num js-line-number" data-line-number="2935"></td>
        <td id="LC2935" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L2936" class="blob-num js-line-number" data-line-number="2936"></td>
        <td id="LC2936" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @TODO(vojta): refactor to use node&#39;s syntax for events</span></td>
      </tr>
      <tr>
        <td id="L2937" class="blob-num js-line-number" data-line-number="2937"></td>
        <td id="LC2937" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2938" class="blob-num js-line-number" data-line-number="2938"></td>
        <td id="LC2938" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2939" class="blob-num js-line-number" data-line-number="2939"></td>
        <td id="LC2939" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Register callback function that will be called, when url changes.</span></td>
      </tr>
      <tr>
        <td id="L2940" class="blob-num js-line-number" data-line-number="2940"></td>
        <td id="LC2940" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2941" class="blob-num js-line-number" data-line-number="2941"></td>
        <td id="LC2941" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * It&#39;s only called when the url is changed by outside of angular:</span></td>
      </tr>
      <tr>
        <td id="L2942" class="blob-num js-line-number" data-line-number="2942"></td>
        <td id="LC2942" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * - user types different url into address bar</span></td>
      </tr>
      <tr>
        <td id="L2943" class="blob-num js-line-number" data-line-number="2943"></td>
        <td id="LC2943" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * - user clicks on history (forward/back) button</span></td>
      </tr>
      <tr>
        <td id="L2944" class="blob-num js-line-number" data-line-number="2944"></td>
        <td id="LC2944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * - user clicks on a link</span></td>
      </tr>
      <tr>
        <td id="L2945" class="blob-num js-line-number" data-line-number="2945"></td>
        <td id="LC2945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2946" class="blob-num js-line-number" data-line-number="2946"></td>
        <td id="LC2946" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * It&#39;s not called when url is changed by $browser.url() method</span></td>
      </tr>
      <tr>
        <td id="L2947" class="blob-num js-line-number" data-line-number="2947"></td>
        <td id="LC2947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2948" class="blob-num js-line-number" data-line-number="2948"></td>
        <td id="LC2948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * The listener gets called with new url as parameter.</span></td>
      </tr>
      <tr>
        <td id="L2949" class="blob-num js-line-number" data-line-number="2949"></td>
        <td id="LC2949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2950" class="blob-num js-line-number" data-line-number="2950"></td>
        <td id="LC2950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * NOTE: this api is intended for use only by the $location service. Please use the</span></td>
      </tr>
      <tr>
        <td id="L2951" class="blob-num js-line-number" data-line-number="2951"></td>
        <td id="LC2951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * {@link angular.module.ng.$location $location service} to monitor url changes in angular apps.</span></td>
      </tr>
      <tr>
        <td id="L2952" class="blob-num js-line-number" data-line-number="2952"></td>
        <td id="LC2952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2953" class="blob-num js-line-number" data-line-number="2953"></td>
        <td id="LC2953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {function(string)} listener Listener function to be called when url changes.</span></td>
      </tr>
      <tr>
        <td id="L2954" class="blob-num js-line-number" data-line-number="2954"></td>
        <td id="LC2954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {function(string)} Returns the registered listener fn - handy if the fn is anonymous.</span></td>
      </tr>
      <tr>
        <td id="L2955" class="blob-num js-line-number" data-line-number="2955"></td>
        <td id="LC2955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L2956" class="blob-num js-line-number" data-line-number="2956"></td>
        <td id="LC2956" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">onUrlChange</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L2957" class="blob-num js-line-number" data-line-number="2957"></td>
        <td id="LC2957" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>urlChangeInit) {</td>
      </tr>
      <tr>
        <td id="L2958" class="blob-num js-line-number" data-line-number="2958"></td>
        <td id="LC2958" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// We listen on both (hashchange/popstate) when available, as some browsers (e.g. Opera)</span></td>
      </tr>
      <tr>
        <td id="L2959" class="blob-num js-line-number" data-line-number="2959"></td>
        <td id="LC2959" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// don&#39;t fire popstate when user change the address bar and don&#39;t fire hashchange when url</span></td>
      </tr>
      <tr>
        <td id="L2960" class="blob-num js-line-number" data-line-number="2960"></td>
        <td id="LC2960" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// changed by push/replaceState</span></td>
      </tr>
      <tr>
        <td id="L2961" class="blob-num js-line-number" data-line-number="2961"></td>
        <td id="LC2961" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2962" class="blob-num js-line-number" data-line-number="2962"></td>
        <td id="LC2962" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// html5 history api - popstate event</span></td>
      </tr>
      <tr>
        <td id="L2963" class="blob-num js-line-number" data-line-number="2963"></td>
        <td id="LC2963" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($sniffer.<span class="pl-c1">history</span>) jqLite(<span class="pl-c1">window</span>).bind(<span class="pl-s"><span class="pl-pds">&#39;</span>popstate<span class="pl-pds">&#39;</span></span>, fireUrlChange);</td>
      </tr>
      <tr>
        <td id="L2964" class="blob-num js-line-number" data-line-number="2964"></td>
        <td id="LC2964" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// hashchange event</span></td>
      </tr>
      <tr>
        <td id="L2965" class="blob-num js-line-number" data-line-number="2965"></td>
        <td id="LC2965" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($sniffer.hashchange) jqLite(<span class="pl-c1">window</span>).bind(<span class="pl-s"><span class="pl-pds">&#39;</span>hashchange<span class="pl-pds">&#39;</span></span>, fireUrlChange);</td>
      </tr>
      <tr>
        <td id="L2966" class="blob-num js-line-number" data-line-number="2966"></td>
        <td id="LC2966" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// polling</span></td>
      </tr>
      <tr>
        <td id="L2967" class="blob-num js-line-number" data-line-number="2967"></td>
        <td id="LC2967" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> self.addPollFn(fireUrlChange);</td>
      </tr>
      <tr>
        <td id="L2968" class="blob-num js-line-number" data-line-number="2968"></td>
        <td id="LC2968" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2969" class="blob-num js-line-number" data-line-number="2969"></td>
        <td id="LC2969" class="blob-code blob-code-inner js-file-line">      urlChangeInit <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L2970" class="blob-num js-line-number" data-line-number="2970"></td>
        <td id="LC2970" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L2971" class="blob-num js-line-number" data-line-number="2971"></td>
        <td id="LC2971" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2972" class="blob-num js-line-number" data-line-number="2972"></td>
        <td id="LC2972" class="blob-code blob-code-inner js-file-line">    urlChangeListeners.<span class="pl-c1">push</span>(callback);</td>
      </tr>
      <tr>
        <td id="L2973" class="blob-num js-line-number" data-line-number="2973"></td>
        <td id="LC2973" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> callback;</td>
      </tr>
      <tr>
        <td id="L2974" class="blob-num js-line-number" data-line-number="2974"></td>
        <td id="LC2974" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L2975" class="blob-num js-line-number" data-line-number="2975"></td>
        <td id="LC2975" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2976" class="blob-num js-line-number" data-line-number="2976"></td>
        <td id="LC2976" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2977" class="blob-num js-line-number" data-line-number="2977"></td>
        <td id="LC2977" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Cookies API</span></td>
      </tr>
      <tr>
        <td id="L2978" class="blob-num js-line-number" data-line-number="2978"></td>
        <td id="LC2978" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L2979" class="blob-num js-line-number" data-line-number="2979"></td>
        <td id="LC2979" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> lastCookies <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L2980" class="blob-num js-line-number" data-line-number="2980"></td>
        <td id="LC2980" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> lastCookieString <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L2981" class="blob-num js-line-number" data-line-number="2981"></td>
        <td id="LC2981" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2982" class="blob-num js-line-number" data-line-number="2982"></td>
        <td id="LC2982" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L2983" class="blob-num js-line-number" data-line-number="2983"></td>
        <td id="LC2983" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L2984" class="blob-num js-line-number" data-line-number="2984"></td>
        <td id="LC2984" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#cookies</span></td>
      </tr>
      <tr>
        <td id="L2985" class="blob-num js-line-number" data-line-number="2985"></td>
        <td id="LC2985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L2986" class="blob-num js-line-number" data-line-number="2986"></td>
        <td id="LC2986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2987" class="blob-num js-line-number" data-line-number="2987"></td>
        <td id="LC2987" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Cookie name</span></td>
      </tr>
      <tr>
        <td id="L2988" class="blob-num js-line-number" data-line-number="2988"></td>
        <td id="LC2988" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} value Cokkie value</span></td>
      </tr>
      <tr>
        <td id="L2989" class="blob-num js-line-number" data-line-number="2989"></td>
        <td id="LC2989" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2990" class="blob-num js-line-number" data-line-number="2990"></td>
        <td id="LC2990" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L2991" class="blob-num js-line-number" data-line-number="2991"></td>
        <td id="LC2991" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * The cookies method provides a &#39;private&#39; low level access to browser cookies.</span></td>
      </tr>
      <tr>
        <td id="L2992" class="blob-num js-line-number" data-line-number="2992"></td>
        <td id="LC2992" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * It is not meant to be used directly, use the $cookie service instead.</span></td>
      </tr>
      <tr>
        <td id="L2993" class="blob-num js-line-number" data-line-number="2993"></td>
        <td id="LC2993" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L2994" class="blob-num js-line-number" data-line-number="2994"></td>
        <td id="LC2994" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * The return values vary depending on the arguments that the method was called with as follows:</span></td>
      </tr>
      <tr>
        <td id="L2995" class="blob-num js-line-number" data-line-number="2995"></td>
        <td id="LC2995" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L2996" class="blob-num js-line-number" data-line-number="2996"></td>
        <td id="LC2996" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   &lt;li&gt;cookies() -&gt; hash of all cookies, this is NOT a copy of the internal state, so do not modify it&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L2997" class="blob-num js-line-number" data-line-number="2997"></td>
        <td id="LC2997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   &lt;li&gt;cookies(name, value) -&gt; set name to value, if value is undefined delete the cookie&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L2998" class="blob-num js-line-number" data-line-number="2998"></td>
        <td id="LC2998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   &lt;li&gt;cookies(name) -&gt; the same as (name, undefined) == DELETES (no one calls it right now that way)&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L2999" class="blob-num js-line-number" data-line-number="2999"></td>
        <td id="LC2999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L3000" class="blob-num js-line-number" data-line-number="3000"></td>
        <td id="LC3000" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3001" class="blob-num js-line-number" data-line-number="3001"></td>
        <td id="LC3001" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Object} Hash of all cookies (if called without any parameter)</span></td>
      </tr>
      <tr>
        <td id="L3002" class="blob-num js-line-number" data-line-number="3002"></td>
        <td id="LC3002" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L3003" class="blob-num js-line-number" data-line-number="3003"></td>
        <td id="LC3003" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">cookies</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3004" class="blob-num js-line-number" data-line-number="3004"></td>
        <td id="LC3004" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cookieLength, cookieArray, cookie, i, index;</td>
      </tr>
      <tr>
        <td id="L3005" class="blob-num js-line-number" data-line-number="3005"></td>
        <td id="LC3005" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3006" class="blob-num js-line-number" data-line-number="3006"></td>
        <td id="LC3006" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (name) {</td>
      </tr>
      <tr>
        <td id="L3007" class="blob-num js-line-number" data-line-number="3007"></td>
        <td id="LC3007" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3008" class="blob-num js-line-number" data-line-number="3008"></td>
        <td id="LC3008" class="blob-code blob-code-inner js-file-line">        rawDocument.<span class="pl-c1">cookie</span> <span class="pl-k">=</span> <span class="pl-c1">escape</span>(name) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>=;expires=Thu, 01 Jan 1970 00:00:00 GMT<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3009" class="blob-num js-line-number" data-line-number="3009"></td>
        <td id="LC3009" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3010" class="blob-num js-line-number" data-line-number="3010"></td>
        <td id="LC3010" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isString(value)) {</td>
      </tr>
      <tr>
        <td id="L3011" class="blob-num js-line-number" data-line-number="3011"></td>
        <td id="LC3011" class="blob-code blob-code-inner js-file-line">          rawDocument.<span class="pl-c1">cookie</span> <span class="pl-k">=</span> <span class="pl-c1">escape</span>(name) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">escape</span>(value);</td>
      </tr>
      <tr>
        <td id="L3012" class="blob-num js-line-number" data-line-number="3012"></td>
        <td id="LC3012" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3013" class="blob-num js-line-number" data-line-number="3013"></td>
        <td id="LC3013" class="blob-code blob-code-inner js-file-line">          cookieLength <span class="pl-k">=</span> name.<span class="pl-c1">length</span> <span class="pl-k">+</span> value.<span class="pl-c1">length</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L3014" class="blob-num js-line-number" data-line-number="3014"></td>
        <td id="LC3014" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (cookieLength <span class="pl-k">&gt;</span> <span class="pl-c1">4096</span>) {</td>
      </tr>
      <tr>
        <td id="L3015" class="blob-num js-line-number" data-line-number="3015"></td>
        <td id="LC3015" class="blob-code blob-code-inner js-file-line">            $log<span class="pl-c1">.warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cookie &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> name <span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; possibly not set or overflowed because it was too large (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L3016" class="blob-num js-line-number" data-line-number="3016"></td>
        <td id="LC3016" class="blob-code blob-code-inner js-file-line">              cookieLength <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> &gt; 4096 bytes)!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3017" class="blob-num js-line-number" data-line-number="3017"></td>
        <td id="LC3017" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3018" class="blob-num js-line-number" data-line-number="3018"></td>
        <td id="LC3018" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lastCookies.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">20</span>) {</td>
      </tr>
      <tr>
        <td id="L3019" class="blob-num js-line-number" data-line-number="3019"></td>
        <td id="LC3019" class="blob-code blob-code-inner js-file-line">            $log<span class="pl-c1">.warn</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cookie &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span> name <span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39; possibly not set or overflowed because too many cookies <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L3020" class="blob-num js-line-number" data-line-number="3020"></td>
        <td id="LC3020" class="blob-code blob-code-inner js-file-line">              <span class="pl-s"><span class="pl-pds">&quot;</span>were already set (<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> lastCookies.<span class="pl-c1">length</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> &gt; 20 )<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3021" class="blob-num js-line-number" data-line-number="3021"></td>
        <td id="LC3021" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3022" class="blob-num js-line-number" data-line-number="3022"></td>
        <td id="LC3022" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3023" class="blob-num js-line-number" data-line-number="3023"></td>
        <td id="LC3023" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3024" class="blob-num js-line-number" data-line-number="3024"></td>
        <td id="LC3024" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3025" class="blob-num js-line-number" data-line-number="3025"></td>
        <td id="LC3025" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (rawDocument.<span class="pl-c1">cookie</span> <span class="pl-k">!==</span> lastCookieString) {</td>
      </tr>
      <tr>
        <td id="L3026" class="blob-num js-line-number" data-line-number="3026"></td>
        <td id="LC3026" class="blob-code blob-code-inner js-file-line">        lastCookieString <span class="pl-k">=</span> rawDocument.<span class="pl-c1">cookie</span>;</td>
      </tr>
      <tr>
        <td id="L3027" class="blob-num js-line-number" data-line-number="3027"></td>
        <td id="LC3027" class="blob-code blob-code-inner js-file-line">        cookieArray <span class="pl-k">=</span> lastCookieString.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>; <span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3028" class="blob-num js-line-number" data-line-number="3028"></td>
        <td id="LC3028" class="blob-code blob-code-inner js-file-line">        lastCookies <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3029" class="blob-num js-line-number" data-line-number="3029"></td>
        <td id="LC3029" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3030" class="blob-num js-line-number" data-line-number="3030"></td>
        <td id="LC3030" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> cookieArray.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3031" class="blob-num js-line-number" data-line-number="3031"></td>
        <td id="LC3031" class="blob-code blob-code-inner js-file-line">          cookie <span class="pl-k">=</span> cookieArray[i];</td>
      </tr>
      <tr>
        <td id="L3032" class="blob-num js-line-number" data-line-number="3032"></td>
        <td id="LC3032" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> cookie.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3033" class="blob-num js-line-number" data-line-number="3033"></td>
        <td id="LC3033" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (index <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) { <span class="pl-c">//ignore nameless cookies</span></td>
      </tr>
      <tr>
        <td id="L3034" class="blob-num js-line-number" data-line-number="3034"></td>
        <td id="LC3034" class="blob-code blob-code-inner js-file-line">            lastCookies[<span class="pl-c1">unescape</span>(cookie.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, index))] <span class="pl-k">=</span> <span class="pl-c1">unescape</span>(cookie.<span class="pl-c1">substring</span>(index <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L3035" class="blob-num js-line-number" data-line-number="3035"></td>
        <td id="LC3035" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3036" class="blob-num js-line-number" data-line-number="3036"></td>
        <td id="LC3036" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3037" class="blob-num js-line-number" data-line-number="3037"></td>
        <td id="LC3037" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3038" class="blob-num js-line-number" data-line-number="3038"></td>
        <td id="LC3038" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> lastCookies;</td>
      </tr>
      <tr>
        <td id="L3039" class="blob-num js-line-number" data-line-number="3039"></td>
        <td id="LC3039" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3040" class="blob-num js-line-number" data-line-number="3040"></td>
        <td id="LC3040" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3041" class="blob-num js-line-number" data-line-number="3041"></td>
        <td id="LC3041" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3042" class="blob-num js-line-number" data-line-number="3042"></td>
        <td id="LC3042" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3043" class="blob-num js-line-number" data-line-number="3043"></td>
        <td id="LC3043" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3044" class="blob-num js-line-number" data-line-number="3044"></td>
        <td id="LC3044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L3045" class="blob-num js-line-number" data-line-number="3045"></td>
        <td id="LC3045" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#defer</span></td>
      </tr>
      <tr>
        <td id="L3046" class="blob-num js-line-number" data-line-number="3046"></td>
        <td id="LC3046" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser</span></td>
      </tr>
      <tr>
        <td id="L3047" class="blob-num js-line-number" data-line-number="3047"></td>
        <td id="LC3047" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {function()} fn A function, who&#39;s execution should be defered.</span></td>
      </tr>
      <tr>
        <td id="L3048" class="blob-num js-line-number" data-line-number="3048"></td>
        <td id="LC3048" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} [delay=0] of milliseconds to defer the function execution.</span></td>
      </tr>
      <tr>
        <td id="L3049" class="blob-num js-line-number" data-line-number="3049"></td>
        <td id="LC3049" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {*} DeferId that can be used to cancel the task via `$browser.defer.cancel()`.</span></td>
      </tr>
      <tr>
        <td id="L3050" class="blob-num js-line-number" data-line-number="3050"></td>
        <td id="LC3050" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3051" class="blob-num js-line-number" data-line-number="3051"></td>
        <td id="LC3051" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L3052" class="blob-num js-line-number" data-line-number="3052"></td>
        <td id="LC3052" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Executes a fn asynchroniously via `setTimeout(fn, delay)`.</span></td>
      </tr>
      <tr>
        <td id="L3053" class="blob-num js-line-number" data-line-number="3053"></td>
        <td id="LC3053" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3054" class="blob-num js-line-number" data-line-number="3054"></td>
        <td id="LC3054" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Unlike when calling `setTimeout` directly, in test this function is mocked and instead of using</span></td>
      </tr>
      <tr>
        <td id="L3055" class="blob-num js-line-number" data-line-number="3055"></td>
        <td id="LC3055" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * `setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed</span></td>
      </tr>
      <tr>
        <td id="L3056" class="blob-num js-line-number" data-line-number="3056"></td>
        <td id="LC3056" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * via `$browser.defer.flush()`.</span></td>
      </tr>
      <tr>
        <td id="L3057" class="blob-num js-line-number" data-line-number="3057"></td>
        <td id="LC3057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3058" class="blob-num js-line-number" data-line-number="3058"></td>
        <td id="LC3058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L3059" class="blob-num js-line-number" data-line-number="3059"></td>
        <td id="LC3059" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">defer</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">delay</span>) {</td>
      </tr>
      <tr>
        <td id="L3060" class="blob-num js-line-number" data-line-number="3060"></td>
        <td id="LC3060" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> timeoutId;</td>
      </tr>
      <tr>
        <td id="L3061" class="blob-num js-line-number" data-line-number="3061"></td>
        <td id="LC3061" class="blob-code blob-code-inner js-file-line">    outstandingRequestCount<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3062" class="blob-num js-line-number" data-line-number="3062"></td>
        <td id="LC3062" class="blob-code blob-code-inner js-file-line">    timeoutId <span class="pl-k">=</span> <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3063" class="blob-num js-line-number" data-line-number="3063"></td>
        <td id="LC3063" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> pendingDeferIds[timeoutId];</td>
      </tr>
      <tr>
        <td id="L3064" class="blob-num js-line-number" data-line-number="3064"></td>
        <td id="LC3064" class="blob-code blob-code-inner js-file-line">      completeOutstandingRequest(fn);</td>
      </tr>
      <tr>
        <td id="L3065" class="blob-num js-line-number" data-line-number="3065"></td>
        <td id="LC3065" class="blob-code blob-code-inner js-file-line">    }, delay <span class="pl-k">||</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L3066" class="blob-num js-line-number" data-line-number="3066"></td>
        <td id="LC3066" class="blob-code blob-code-inner js-file-line">    pendingDeferIds[timeoutId] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3067" class="blob-num js-line-number" data-line-number="3067"></td>
        <td id="LC3067" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> timeoutId;</td>
      </tr>
      <tr>
        <td id="L3068" class="blob-num js-line-number" data-line-number="3068"></td>
        <td id="LC3068" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3069" class="blob-num js-line-number" data-line-number="3069"></td>
        <td id="LC3069" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3070" class="blob-num js-line-number" data-line-number="3070"></td>
        <td id="LC3070" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3071" class="blob-num js-line-number" data-line-number="3071"></td>
        <td id="LC3071" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3072" class="blob-num js-line-number" data-line-number="3072"></td>
        <td id="LC3072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * THIS DOC IS NOT VISIBLE because ngdocs can&#39;t process docs for foo#method.method</span></td>
      </tr>
      <tr>
        <td id="L3073" class="blob-num js-line-number" data-line-number="3073"></td>
        <td id="LC3073" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3074" class="blob-num js-line-number" data-line-number="3074"></td>
        <td id="LC3074" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$browser#defer.cancel</span></td>
      </tr>
      <tr>
        <td id="L3075" class="blob-num js-line-number" data-line-number="3075"></td>
        <td id="LC3075" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$browser.defer</span></td>
      </tr>
      <tr>
        <td id="L3076" class="blob-num js-line-number" data-line-number="3076"></td>
        <td id="LC3076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3077" class="blob-num js-line-number" data-line-number="3077"></td>
        <td id="LC3077" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L3078" class="blob-num js-line-number" data-line-number="3078"></td>
        <td id="LC3078" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Cancels a defered task identified with `deferId`.</span></td>
      </tr>
      <tr>
        <td id="L3079" class="blob-num js-line-number" data-line-number="3079"></td>
        <td id="LC3079" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3080" class="blob-num js-line-number" data-line-number="3080"></td>
        <td id="LC3080" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {*} deferId Token returned by the `$browser.defer` function.</span></td>
      </tr>
      <tr>
        <td id="L3081" class="blob-num js-line-number" data-line-number="3081"></td>
        <td id="LC3081" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {boolean} Returns `true` if the task hasn&#39;t executed yet and was successfuly canceled.</span></td>
      </tr>
      <tr>
        <td id="L3082" class="blob-num js-line-number" data-line-number="3082"></td>
        <td id="LC3082" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L3083" class="blob-num js-line-number" data-line-number="3083"></td>
        <td id="LC3083" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self.defer</span>.<span class="pl-en">cancel</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">deferId</span>) {</td>
      </tr>
      <tr>
        <td id="L3084" class="blob-num js-line-number" data-line-number="3084"></td>
        <td id="LC3084" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (pendingDeferIds[deferId]) {</td>
      </tr>
      <tr>
        <td id="L3085" class="blob-num js-line-number" data-line-number="3085"></td>
        <td id="LC3085" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> pendingDeferIds[deferId];</td>
      </tr>
      <tr>
        <td id="L3086" class="blob-num js-line-number" data-line-number="3086"></td>
        <td id="LC3086" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">clearTimeout</span>(deferId);</td>
      </tr>
      <tr>
        <td id="L3087" class="blob-num js-line-number" data-line-number="3087"></td>
        <td id="LC3087" class="blob-code blob-code-inner js-file-line">      completeOutstandingRequest(noop);</td>
      </tr>
      <tr>
        <td id="L3088" class="blob-num js-line-number" data-line-number="3088"></td>
        <td id="LC3088" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3089" class="blob-num js-line-number" data-line-number="3089"></td>
        <td id="LC3089" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3090" class="blob-num js-line-number" data-line-number="3090"></td>
        <td id="LC3090" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3091" class="blob-num js-line-number" data-line-number="3091"></td>
        <td id="LC3091" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3092" class="blob-num js-line-number" data-line-number="3092"></td>
        <td id="LC3092" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3093" class="blob-num js-line-number" data-line-number="3093"></td>
        <td id="LC3093" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3094" class="blob-num js-line-number" data-line-number="3094"></td>
        <td id="LC3094" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L3095" class="blob-num js-line-number" data-line-number="3095"></td>
        <td id="LC3095" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Misc API</span></td>
      </tr>
      <tr>
        <td id="L3096" class="blob-num js-line-number" data-line-number="3096"></td>
        <td id="LC3096" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//////////////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L3097" class="blob-num js-line-number" data-line-number="3097"></td>
        <td id="LC3097" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3098" class="blob-num js-line-number" data-line-number="3098"></td>
        <td id="LC3098" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3099" class="blob-num js-line-number" data-line-number="3099"></td>
        <td id="LC3099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Returns current &lt;base href&gt;</span></td>
      </tr>
      <tr>
        <td id="L3100" class="blob-num js-line-number" data-line-number="3100"></td>
        <td id="LC3100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * (always relative - without domain)</span></td>
      </tr>
      <tr>
        <td id="L3101" class="blob-num js-line-number" data-line-number="3101"></td>
        <td id="LC3101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L3102" class="blob-num js-line-number" data-line-number="3102"></td>
        <td id="LC3102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {string=}</span></td>
      </tr>
      <tr>
        <td id="L3103" class="blob-num js-line-number" data-line-number="3103"></td>
        <td id="LC3103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L3104" class="blob-num js-line-number" data-line-number="3104"></td>
        <td id="LC3104" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">self</span>.<span class="pl-en">baseHref</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3105" class="blob-num js-line-number" data-line-number="3105"></td>
        <td id="LC3105" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> href <span class="pl-k">=</span> <span class="pl-c1">document</span>.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>base<span class="pl-pds">&#39;</span></span>).attr(<span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3106" class="blob-num js-line-number" data-line-number="3106"></td>
        <td id="LC3106" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> href <span class="pl-k">?</span> href.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>https<span class="pl-k">?</span><span class="pl-cce">\:\/\/</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\/</span>]</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> href;</td>
      </tr>
      <tr>
        <td id="L3107" class="blob-num js-line-number" data-line-number="3107"></td>
        <td id="LC3107" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3108" class="blob-num js-line-number" data-line-number="3108"></td>
        <td id="LC3108" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3109" class="blob-num js-line-number" data-line-number="3109"></td>
        <td id="LC3109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3110" class="blob-num js-line-number" data-line-number="3110"></td>
        <td id="LC3110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$BrowserProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L3111" class="blob-num js-line-number" data-line-number="3111"></td>
        <td id="LC3111" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$log<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$sniffer<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$document<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3112" class="blob-num js-line-number" data-line-number="3112"></td>
        <td id="LC3112" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>( <span class="pl-smi">$window</span>,   <span class="pl-smi">$log</span>,   <span class="pl-smi">$sniffer</span>,   <span class="pl-smi">$document</span>){</td>
      </tr>
      <tr>
        <td id="L3113" class="blob-num js-line-number" data-line-number="3113"></td>
        <td id="LC3113" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Browser</span>($window, $document, $document.<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>body<span class="pl-pds">&#39;</span></span>), $log, $sniffer);</td>
      </tr>
      <tr>
        <td id="L3114" class="blob-num js-line-number" data-line-number="3114"></td>
        <td id="LC3114" class="blob-code blob-code-inner js-file-line">      }];</td>
      </tr>
      <tr>
        <td id="L3115" class="blob-num js-line-number" data-line-number="3115"></td>
        <td id="LC3115" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3116" class="blob-num js-line-number" data-line-number="3116"></td>
        <td id="LC3116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3117" class="blob-num js-line-number" data-line-number="3117"></td>
        <td id="LC3117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L3118" class="blob-num js-line-number" data-line-number="3118"></td>
        <td id="LC3118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$cacheFactory</span></td>
      </tr>
      <tr>
        <td id="L3119" class="blob-num js-line-number" data-line-number="3119"></td>
        <td id="LC3119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3120" class="blob-num js-line-number" data-line-number="3120"></td>
        <td id="LC3120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L3121" class="blob-num js-line-number" data-line-number="3121"></td>
        <td id="LC3121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Factory that constructs cache objects.</span></td>
      </tr>
      <tr>
        <td id="L3122" class="blob-num js-line-number" data-line-number="3122"></td>
        <td id="LC3122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3123" class="blob-num js-line-number" data-line-number="3123"></td>
        <td id="LC3123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3124" class="blob-num js-line-number" data-line-number="3124"></td>
        <td id="LC3124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} cacheId Name or id of the newly created cache.</span></td>
      </tr>
      <tr>
        <td id="L3125" class="blob-num js-line-number" data-line-number="3125"></td>
        <td id="LC3125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {object=} options Options object that specifies the cache behavior. Properties:</span></td>
      </tr>
      <tr>
        <td id="L3126" class="blob-num js-line-number" data-line-number="3126"></td>
        <td id="LC3126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3127" class="blob-num js-line-number" data-line-number="3127"></td>
        <td id="LC3127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `{number=}` `capacity` â turns the cache into LRU cache.</span></td>
      </tr>
      <tr>
        <td id="L3128" class="blob-num js-line-number" data-line-number="3128"></td>
        <td id="LC3128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3129" class="blob-num js-line-number" data-line-number="3129"></td>
        <td id="LC3129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {object} Newly created cache object with the following set of methods:</span></td>
      </tr>
      <tr>
        <td id="L3130" class="blob-num js-line-number" data-line-number="3130"></td>
        <td id="LC3130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3131" class="blob-num js-line-number" data-line-number="3131"></td>
        <td id="LC3131" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{object}` `info()` â Returns id, size, and options of cache.</span></td>
      </tr>
      <tr>
        <td id="L3132" class="blob-num js-line-number" data-line-number="3132"></td>
        <td id="LC3132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{void}` `put({string} key, {*} value)` â Puts a new key-value pair into the cache.</span></td>
      </tr>
      <tr>
        <td id="L3133" class="blob-num js-line-number" data-line-number="3133"></td>
        <td id="LC3133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{{*}} `get({string} key) â Returns cached value for `key` or undefined for cache miss.</span></td>
      </tr>
      <tr>
        <td id="L3134" class="blob-num js-line-number" data-line-number="3134"></td>
        <td id="LC3134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{void}` `remove({string} key) â Removes a key-value pair from the cache.</span></td>
      </tr>
      <tr>
        <td id="L3135" class="blob-num js-line-number" data-line-number="3135"></td>
        <td id="LC3135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{void}` `removeAll() â Removes all cached values.</span></td>
      </tr>
      <tr>
        <td id="L3136" class="blob-num js-line-number" data-line-number="3136"></td>
        <td id="LC3136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `{void}` `destroy() â Removes references to this cache from $cacheFactory.</span></td>
      </tr>
      <tr>
        <td id="L3137" class="blob-num js-line-number" data-line-number="3137"></td>
        <td id="LC3137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3138" class="blob-num js-line-number" data-line-number="3138"></td>
        <td id="LC3138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3139" class="blob-num js-line-number" data-line-number="3139"></td>
        <td id="LC3139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$CacheFactoryProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L3140" class="blob-num js-line-number" data-line-number="3140"></td>
        <td id="LC3140" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3141" class="blob-num js-line-number" data-line-number="3141"></td>
        <td id="LC3141" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$get</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3142" class="blob-num js-line-number" data-line-number="3142"></td>
        <td id="LC3142" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> caches <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3143" class="blob-num js-line-number" data-line-number="3143"></td>
        <td id="LC3143" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3144" class="blob-num js-line-number" data-line-number="3144"></td>
        <td id="LC3144" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">cacheFactory</span>(<span class="pl-smi">cacheId</span>, <span class="pl-smi">options</span>) {</td>
      </tr>
      <tr>
        <td id="L3145" class="blob-num js-line-number" data-line-number="3145"></td>
        <td id="LC3145" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (cacheId <span class="pl-k">in</span> caches) {</td>
      </tr>
      <tr>
        <td id="L3146" class="blob-num js-line-number" data-line-number="3146"></td>
        <td id="LC3146" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>cacheId <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> cacheId <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> taken<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3147" class="blob-num js-line-number" data-line-number="3147"></td>
        <td id="LC3147" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3148" class="blob-num js-line-number" data-line-number="3148"></td>
        <td id="LC3148" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3149" class="blob-num js-line-number" data-line-number="3149"></td>
        <td id="LC3149" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> size <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L3150" class="blob-num js-line-number" data-line-number="3150"></td>
        <td id="LC3150" class="blob-code blob-code-inner js-file-line">          stats <span class="pl-k">=</span> extend({}, options, {id<span class="pl-k">:</span> cacheId}),</td>
      </tr>
      <tr>
        <td id="L3151" class="blob-num js-line-number" data-line-number="3151"></td>
        <td id="LC3151" class="blob-code blob-code-inner js-file-line">          data <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L3152" class="blob-num js-line-number" data-line-number="3152"></td>
        <td id="LC3152" class="blob-code blob-code-inner js-file-line">          capacity <span class="pl-k">=</span> (options <span class="pl-k">&amp;&amp;</span> options.capacity) <span class="pl-k">||</span> <span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,</td>
      </tr>
      <tr>
        <td id="L3153" class="blob-num js-line-number" data-line-number="3153"></td>
        <td id="LC3153" class="blob-code blob-code-inner js-file-line">          lruHash <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L3154" class="blob-num js-line-number" data-line-number="3154"></td>
        <td id="LC3154" class="blob-code blob-code-inner js-file-line">          freshEnd <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L3155" class="blob-num js-line-number" data-line-number="3155"></td>
        <td id="LC3155" class="blob-code blob-code-inner js-file-line">          staleEnd <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3156" class="blob-num js-line-number" data-line-number="3156"></td>
        <td id="LC3156" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3157" class="blob-num js-line-number" data-line-number="3157"></td>
        <td id="LC3157" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> caches[cacheId] <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3158" class="blob-num js-line-number" data-line-number="3158"></td>
        <td id="LC3158" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3159" class="blob-num js-line-number" data-line-number="3159"></td>
        <td id="LC3159" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">put</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3160" class="blob-num js-line-number" data-line-number="3160"></td>
        <td id="LC3160" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> lruEntry <span class="pl-k">=</span> lruHash[key] <span class="pl-k">||</span> (lruHash[key] <span class="pl-k">=</span> {key<span class="pl-k">:</span> key});</td>
      </tr>
      <tr>
        <td id="L3161" class="blob-num js-line-number" data-line-number="3161"></td>
        <td id="LC3161" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3162" class="blob-num js-line-number" data-line-number="3162"></td>
        <td id="LC3162" class="blob-code blob-code-inner js-file-line">          refresh(lruEntry);</td>
      </tr>
      <tr>
        <td id="L3163" class="blob-num js-line-number" data-line-number="3163"></td>
        <td id="LC3163" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3164" class="blob-num js-line-number" data-line-number="3164"></td>
        <td id="LC3164" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isUndefined(value)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3165" class="blob-num js-line-number" data-line-number="3165"></td>
        <td id="LC3165" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(key <span class="pl-k">in</span> data)) size<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L3166" class="blob-num js-line-number" data-line-number="3166"></td>
        <td id="LC3166" class="blob-code blob-code-inner js-file-line">          data[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3167" class="blob-num js-line-number" data-line-number="3167"></td>
        <td id="LC3167" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3168" class="blob-num js-line-number" data-line-number="3168"></td>
        <td id="LC3168" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (size <span class="pl-k">&gt;</span> capacity) {</td>
      </tr>
      <tr>
        <td id="L3169" class="blob-num js-line-number" data-line-number="3169"></td>
        <td id="LC3169" class="blob-code blob-code-inner js-file-line">            <span class="pl-v">this</span>.remove(staleEnd.key);</td>
      </tr>
      <tr>
        <td id="L3170" class="blob-num js-line-number" data-line-number="3170"></td>
        <td id="LC3170" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3171" class="blob-num js-line-number" data-line-number="3171"></td>
        <td id="LC3171" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3172" class="blob-num js-line-number" data-line-number="3172"></td>
        <td id="LC3172" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3173" class="blob-num js-line-number" data-line-number="3173"></td>
        <td id="LC3173" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3174" class="blob-num js-line-number" data-line-number="3174"></td>
        <td id="LC3174" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">get</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L3175" class="blob-num js-line-number" data-line-number="3175"></td>
        <td id="LC3175" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> lruEntry <span class="pl-k">=</span> lruHash[key];</td>
      </tr>
      <tr>
        <td id="L3176" class="blob-num js-line-number" data-line-number="3176"></td>
        <td id="LC3176" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3177" class="blob-num js-line-number" data-line-number="3177"></td>
        <td id="LC3177" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>lruEntry) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L3178" class="blob-num js-line-number" data-line-number="3178"></td>
        <td id="LC3178" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3179" class="blob-num js-line-number" data-line-number="3179"></td>
        <td id="LC3179" class="blob-code blob-code-inner js-file-line">          refresh(lruEntry);</td>
      </tr>
      <tr>
        <td id="L3180" class="blob-num js-line-number" data-line-number="3180"></td>
        <td id="LC3180" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3181" class="blob-num js-line-number" data-line-number="3181"></td>
        <td id="LC3181" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> data[key];</td>
      </tr>
      <tr>
        <td id="L3182" class="blob-num js-line-number" data-line-number="3182"></td>
        <td id="LC3182" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3183" class="blob-num js-line-number" data-line-number="3183"></td>
        <td id="LC3183" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3184" class="blob-num js-line-number" data-line-number="3184"></td>
        <td id="LC3184" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3185" class="blob-num js-line-number" data-line-number="3185"></td>
        <td id="LC3185" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">remove</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L3186" class="blob-num js-line-number" data-line-number="3186"></td>
        <td id="LC3186" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> lruEntry <span class="pl-k">=</span> lruHash[key];</td>
      </tr>
      <tr>
        <td id="L3187" class="blob-num js-line-number" data-line-number="3187"></td>
        <td id="LC3187" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3188" class="blob-num js-line-number" data-line-number="3188"></td>
        <td id="LC3188" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lruEntry <span class="pl-k">==</span> freshEnd) freshEnd <span class="pl-k">=</span> lruEntry.p;</td>
      </tr>
      <tr>
        <td id="L3189" class="blob-num js-line-number" data-line-number="3189"></td>
        <td id="LC3189" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lruEntry <span class="pl-k">==</span> staleEnd) staleEnd <span class="pl-k">=</span> lruEntry.n;</td>
      </tr>
      <tr>
        <td id="L3190" class="blob-num js-line-number" data-line-number="3190"></td>
        <td id="LC3190" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">link</span>(lruEntry.n,lruEntry.p);</td>
      </tr>
      <tr>
        <td id="L3191" class="blob-num js-line-number" data-line-number="3191"></td>
        <td id="LC3191" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3192" class="blob-num js-line-number" data-line-number="3192"></td>
        <td id="LC3192" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> lruHash[key];</td>
      </tr>
      <tr>
        <td id="L3193" class="blob-num js-line-number" data-line-number="3193"></td>
        <td id="LC3193" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> data[key];</td>
      </tr>
      <tr>
        <td id="L3194" class="blob-num js-line-number" data-line-number="3194"></td>
        <td id="LC3194" class="blob-code blob-code-inner js-file-line">          size<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L3195" class="blob-num js-line-number" data-line-number="3195"></td>
        <td id="LC3195" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3196" class="blob-num js-line-number" data-line-number="3196"></td>
        <td id="LC3196" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3197" class="blob-num js-line-number" data-line-number="3197"></td>
        <td id="LC3197" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3198" class="blob-num js-line-number" data-line-number="3198"></td>
        <td id="LC3198" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">removeAll</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3199" class="blob-num js-line-number" data-line-number="3199"></td>
        <td id="LC3199" class="blob-code blob-code-inner js-file-line">          data <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3200" class="blob-num js-line-number" data-line-number="3200"></td>
        <td id="LC3200" class="blob-code blob-code-inner js-file-line">          size <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3201" class="blob-num js-line-number" data-line-number="3201"></td>
        <td id="LC3201" class="blob-code blob-code-inner js-file-line">          lruHash <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3202" class="blob-num js-line-number" data-line-number="3202"></td>
        <td id="LC3202" class="blob-code blob-code-inner js-file-line">          freshEnd <span class="pl-k">=</span> staleEnd <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3203" class="blob-num js-line-number" data-line-number="3203"></td>
        <td id="LC3203" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3204" class="blob-num js-line-number" data-line-number="3204"></td>
        <td id="LC3204" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3205" class="blob-num js-line-number" data-line-number="3205"></td>
        <td id="LC3205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3206" class="blob-num js-line-number" data-line-number="3206"></td>
        <td id="LC3206" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">destroy</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3207" class="blob-num js-line-number" data-line-number="3207"></td>
        <td id="LC3207" class="blob-code blob-code-inner js-file-line">          data <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3208" class="blob-num js-line-number" data-line-number="3208"></td>
        <td id="LC3208" class="blob-code blob-code-inner js-file-line">          stats <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3209" class="blob-num js-line-number" data-line-number="3209"></td>
        <td id="LC3209" class="blob-code blob-code-inner js-file-line">          lruHash <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3210" class="blob-num js-line-number" data-line-number="3210"></td>
        <td id="LC3210" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> caches[cacheId];</td>
      </tr>
      <tr>
        <td id="L3211" class="blob-num js-line-number" data-line-number="3211"></td>
        <td id="LC3211" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L3212" class="blob-num js-line-number" data-line-number="3212"></td>
        <td id="LC3212" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3213" class="blob-num js-line-number" data-line-number="3213"></td>
        <td id="LC3213" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3214" class="blob-num js-line-number" data-line-number="3214"></td>
        <td id="LC3214" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">info</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3215" class="blob-num js-line-number" data-line-number="3215"></td>
        <td id="LC3215" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> extend({}, stats, {size<span class="pl-k">:</span> size});</td>
      </tr>
      <tr>
        <td id="L3216" class="blob-num js-line-number" data-line-number="3216"></td>
        <td id="LC3216" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3217" class="blob-num js-line-number" data-line-number="3217"></td>
        <td id="LC3217" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3218" class="blob-num js-line-number" data-line-number="3218"></td>
        <td id="LC3218" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3219" class="blob-num js-line-number" data-line-number="3219"></td>
        <td id="LC3219" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3220" class="blob-num js-line-number" data-line-number="3220"></td>
        <td id="LC3220" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3221" class="blob-num js-line-number" data-line-number="3221"></td>
        <td id="LC3221" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * makes the `entry` the freshEnd of the LRU linked list</span></td>
      </tr>
      <tr>
        <td id="L3222" class="blob-num js-line-number" data-line-number="3222"></td>
        <td id="LC3222" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L3223" class="blob-num js-line-number" data-line-number="3223"></td>
        <td id="LC3223" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">refresh</span>(<span class="pl-smi">entry</span>) {</td>
      </tr>
      <tr>
        <td id="L3224" class="blob-num js-line-number" data-line-number="3224"></td>
        <td id="LC3224" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (entry <span class="pl-k">!=</span> freshEnd) {</td>
      </tr>
      <tr>
        <td id="L3225" class="blob-num js-line-number" data-line-number="3225"></td>
        <td id="LC3225" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>staleEnd) {</td>
      </tr>
      <tr>
        <td id="L3226" class="blob-num js-line-number" data-line-number="3226"></td>
        <td id="LC3226" class="blob-code blob-code-inner js-file-line">            staleEnd <span class="pl-k">=</span> entry;</td>
      </tr>
      <tr>
        <td id="L3227" class="blob-num js-line-number" data-line-number="3227"></td>
        <td id="LC3227" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (staleEnd <span class="pl-k">==</span> entry) {</td>
      </tr>
      <tr>
        <td id="L3228" class="blob-num js-line-number" data-line-number="3228"></td>
        <td id="LC3228" class="blob-code blob-code-inner js-file-line">            staleEnd <span class="pl-k">=</span> entry.n;</td>
      </tr>
      <tr>
        <td id="L3229" class="blob-num js-line-number" data-line-number="3229"></td>
        <td id="LC3229" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3230" class="blob-num js-line-number" data-line-number="3230"></td>
        <td id="LC3230" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3231" class="blob-num js-line-number" data-line-number="3231"></td>
        <td id="LC3231" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">link</span>(entry.n, entry.p);</td>
      </tr>
      <tr>
        <td id="L3232" class="blob-num js-line-number" data-line-number="3232"></td>
        <td id="LC3232" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">link</span>(entry, freshEnd);</td>
      </tr>
      <tr>
        <td id="L3233" class="blob-num js-line-number" data-line-number="3233"></td>
        <td id="LC3233" class="blob-code blob-code-inner js-file-line">          freshEnd <span class="pl-k">=</span> entry;</td>
      </tr>
      <tr>
        <td id="L3234" class="blob-num js-line-number" data-line-number="3234"></td>
        <td id="LC3234" class="blob-code blob-code-inner js-file-line">          freshEnd.n <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3235" class="blob-num js-line-number" data-line-number="3235"></td>
        <td id="LC3235" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3236" class="blob-num js-line-number" data-line-number="3236"></td>
        <td id="LC3236" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3237" class="blob-num js-line-number" data-line-number="3237"></td>
        <td id="LC3237" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3238" class="blob-num js-line-number" data-line-number="3238"></td>
        <td id="LC3238" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3239" class="blob-num js-line-number" data-line-number="3239"></td>
        <td id="LC3239" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3240" class="blob-num js-line-number" data-line-number="3240"></td>
        <td id="LC3240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * bidirectionally links two entries of the LRU linked list</span></td>
      </tr>
      <tr>
        <td id="L3241" class="blob-num js-line-number" data-line-number="3241"></td>
        <td id="LC3241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L3242" class="blob-num js-line-number" data-line-number="3242"></td>
        <td id="LC3242" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">link</span>(<span class="pl-smi">nextEntry</span>, <span class="pl-smi">prevEntry</span>) {</td>
      </tr>
      <tr>
        <td id="L3243" class="blob-num js-line-number" data-line-number="3243"></td>
        <td id="LC3243" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (nextEntry <span class="pl-k">!=</span> prevEntry) {</td>
      </tr>
      <tr>
        <td id="L3244" class="blob-num js-line-number" data-line-number="3244"></td>
        <td id="LC3244" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (nextEntry) nextEntry.p <span class="pl-k">=</span> prevEntry; <span class="pl-c">//p stands for previous, &#39;prev&#39; didn&#39;t minify</span></td>
      </tr>
      <tr>
        <td id="L3245" class="blob-num js-line-number" data-line-number="3245"></td>
        <td id="LC3245" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (prevEntry) prevEntry.n <span class="pl-k">=</span> nextEntry; <span class="pl-c">//n stands for next, &#39;next&#39; didn&#39;t minify</span></td>
      </tr>
      <tr>
        <td id="L3246" class="blob-num js-line-number" data-line-number="3246"></td>
        <td id="LC3246" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3247" class="blob-num js-line-number" data-line-number="3247"></td>
        <td id="LC3247" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3248" class="blob-num js-line-number" data-line-number="3248"></td>
        <td id="LC3248" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3249" class="blob-num js-line-number" data-line-number="3249"></td>
        <td id="LC3249" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3250" class="blob-num js-line-number" data-line-number="3250"></td>
        <td id="LC3250" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3251" class="blob-num js-line-number" data-line-number="3251"></td>
        <td id="LC3251" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">cacheFactory</span>.<span class="pl-en">info</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3252" class="blob-num js-line-number" data-line-number="3252"></td>
        <td id="LC3252" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> info <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3253" class="blob-num js-line-number" data-line-number="3253"></td>
        <td id="LC3253" class="blob-code blob-code-inner js-file-line">      forEach(caches, <span class="pl-k">function</span>(<span class="pl-smi">cache</span>, <span class="pl-smi">cacheId</span>) {</td>
      </tr>
      <tr>
        <td id="L3254" class="blob-num js-line-number" data-line-number="3254"></td>
        <td id="LC3254" class="blob-code blob-code-inner js-file-line">        info[cacheId] <span class="pl-k">=</span> cache<span class="pl-c1">.info</span>();</td>
      </tr>
      <tr>
        <td id="L3255" class="blob-num js-line-number" data-line-number="3255"></td>
        <td id="LC3255" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L3256" class="blob-num js-line-number" data-line-number="3256"></td>
        <td id="LC3256" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> info;</td>
      </tr>
      <tr>
        <td id="L3257" class="blob-num js-line-number" data-line-number="3257"></td>
        <td id="LC3257" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3258" class="blob-num js-line-number" data-line-number="3258"></td>
        <td id="LC3258" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3259" class="blob-num js-line-number" data-line-number="3259"></td>
        <td id="LC3259" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3260" class="blob-num js-line-number" data-line-number="3260"></td>
        <td id="LC3260" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">cacheFactory</span>.<span class="pl-en">get</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">cacheId</span>) {</td>
      </tr>
      <tr>
        <td id="L3261" class="blob-num js-line-number" data-line-number="3261"></td>
        <td id="LC3261" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> caches[cacheId];</td>
      </tr>
      <tr>
        <td id="L3262" class="blob-num js-line-number" data-line-number="3262"></td>
        <td id="LC3262" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3263" class="blob-num js-line-number" data-line-number="3263"></td>
        <td id="LC3263" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3264" class="blob-num js-line-number" data-line-number="3264"></td>
        <td id="LC3264" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3265" class="blob-num js-line-number" data-line-number="3265"></td>
        <td id="LC3265" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> cacheFactory;</td>
      </tr>
      <tr>
        <td id="L3266" class="blob-num js-line-number" data-line-number="3266"></td>
        <td id="LC3266" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3267" class="blob-num js-line-number" data-line-number="3267"></td>
        <td id="LC3267" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3268" class="blob-num js-line-number" data-line-number="3268"></td>
        <td id="LC3268" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3269" class="blob-num js-line-number" data-line-number="3269"></td>
        <td id="LC3269" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$TemplateCacheProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L3270" class="blob-num js-line-number" data-line-number="3270"></td>
        <td id="LC3270" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$cacheFactory<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$cacheFactory</span>) {</td>
      </tr>
      <tr>
        <td id="L3271" class="blob-num js-line-number" data-line-number="3271"></td>
        <td id="LC3271" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> $cacheFactory(<span class="pl-s"><span class="pl-pds">&#39;</span>templates<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3272" class="blob-num js-line-number" data-line-number="3272"></td>
        <td id="LC3272" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L3273" class="blob-num js-line-number" data-line-number="3273"></td>
        <td id="LC3273" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L3274" class="blob-num js-line-number" data-line-number="3274"></td>
        <td id="LC3274" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3275" class="blob-num js-line-number" data-line-number="3275"></td>
        <td id="LC3275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3276" class="blob-num js-line-number" data-line-number="3276"></td>
        <td id="LC3276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L3277" class="blob-num js-line-number" data-line-number="3277"></td>
        <td id="LC3277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compile</span></td>
      </tr>
      <tr>
        <td id="L3278" class="blob-num js-line-number" data-line-number="3278"></td>
        <td id="LC3278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L3279" class="blob-num js-line-number" data-line-number="3279"></td>
        <td id="LC3279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3280" class="blob-num js-line-number" data-line-number="3280"></td>
        <td id="LC3280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L3281" class="blob-num js-line-number" data-line-number="3281"></td>
        <td id="LC3281" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Compiles a piece of HTML string or DOM into a template and produces a template function, which</span></td>
      </tr>
      <tr>
        <td id="L3282" class="blob-num js-line-number" data-line-number="3282"></td>
        <td id="LC3282" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * can then be used to link {@link angular.module.ng.$rootScope.Scope scope} and the template together.</span></td>
      </tr>
      <tr>
        <td id="L3283" class="blob-num js-line-number" data-line-number="3283"></td>
        <td id="LC3283" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3284" class="blob-num js-line-number" data-line-number="3284"></td>
        <td id="LC3284" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The compilation is a process of walking the DOM tree and trying to match DOM elements to</span></td>
      </tr>
      <tr>
        <td id="L3285" class="blob-num js-line-number" data-line-number="3285"></td>
        <td id="LC3285" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive directives}. For each match it</span></td>
      </tr>
      <tr>
        <td id="L3286" class="blob-num js-line-number" data-line-number="3286"></td>
        <td id="LC3286" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * executes corresponding template function and collects the</span></td>
      </tr>
      <tr>
        <td id="L3287" class="blob-num js-line-number" data-line-number="3287"></td>
        <td id="LC3287" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * instance functions into a single template function which is then returned.</span></td>
      </tr>
      <tr>
        <td id="L3288" class="blob-num js-line-number" data-line-number="3288"></td>
        <td id="LC3288" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3289" class="blob-num js-line-number" data-line-number="3289"></td>
        <td id="LC3289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The template function can then be used once to produce the view or as it is the case with</span></td>
      </tr>
      <tr>
        <td id="L3290" class="blob-num js-line-number" data-line-number="3290"></td>
        <td id="LC3290" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngRepeat repeater} many-times, in which</span></td>
      </tr>
      <tr>
        <td id="L3291" class="blob-num js-line-number" data-line-number="3291"></td>
        <td id="LC3291" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * case each call results in a view that is a DOM clone of the original template.</span></td>
      </tr>
      <tr>
        <td id="L3292" class="blob-num js-line-number" data-line-number="3292"></td>
        <td id="LC3292" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3293" class="blob-num js-line-number" data-line-number="3293"></td>
        <td id="LC3293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> &lt;doc:example module=&quot;compile&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L3294" class="blob-num js-line-number" data-line-number="3294"></td>
        <td id="LC3294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L3295" class="blob-num js-line-number" data-line-number="3295"></td>
        <td id="LC3295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L3296" class="blob-num js-line-number" data-line-number="3296"></td>
        <td id="LC3296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      // declare a new module, and inject the $compileProvider</span></td>
      </tr>
      <tr>
        <td id="L3297" class="blob-num js-line-number" data-line-number="3297"></td>
        <td id="LC3297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      angular.module(&#39;compile&#39;, [], function($compileProvider) {</span></td>
      </tr>
      <tr>
        <td id="L3298" class="blob-num js-line-number" data-line-number="3298"></td>
        <td id="LC3298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        // configure new &#39;compile&#39; directive by passing a directive</span></td>
      </tr>
      <tr>
        <td id="L3299" class="blob-num js-line-number" data-line-number="3299"></td>
        <td id="LC3299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        // factory function. The factory function injects the &#39;$compile&#39;</span></td>
      </tr>
      <tr>
        <td id="L3300" class="blob-num js-line-number" data-line-number="3300"></td>
        <td id="LC3300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        $compileProvider.directive(&#39;compile&#39;, function($compile) {</span></td>
      </tr>
      <tr>
        <td id="L3301" class="blob-num js-line-number" data-line-number="3301"></td>
        <td id="LC3301" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          // directive factory creates a link function</span></td>
      </tr>
      <tr>
        <td id="L3302" class="blob-num js-line-number" data-line-number="3302"></td>
        <td id="LC3302" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          return function(scope, element, attrs) {</span></td>
      </tr>
      <tr>
        <td id="L3303" class="blob-num js-line-number" data-line-number="3303"></td>
        <td id="LC3303" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            scope.$watch(</span></td>
      </tr>
      <tr>
        <td id="L3304" class="blob-num js-line-number" data-line-number="3304"></td>
        <td id="LC3304" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              function(scope) {</span></td>
      </tr>
      <tr>
        <td id="L3305" class="blob-num js-line-number" data-line-number="3305"></td>
        <td id="LC3305" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 // watch the &#39;compile&#39; expression for changes</span></td>
      </tr>
      <tr>
        <td id="L3306" class="blob-num js-line-number" data-line-number="3306"></td>
        <td id="LC3306" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                return scope.$eval(attrs.compile);</span></td>
      </tr>
      <tr>
        <td id="L3307" class="blob-num js-line-number" data-line-number="3307"></td>
        <td id="LC3307" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              },</span></td>
      </tr>
      <tr>
        <td id="L3308" class="blob-num js-line-number" data-line-number="3308"></td>
        <td id="LC3308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              function(value) {</span></td>
      </tr>
      <tr>
        <td id="L3309" class="blob-num js-line-number" data-line-number="3309"></td>
        <td id="LC3309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // when the &#39;compile&#39; expression changes</span></td>
      </tr>
      <tr>
        <td id="L3310" class="blob-num js-line-number" data-line-number="3310"></td>
        <td id="LC3310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // assign it into the current DOM</span></td>
      </tr>
      <tr>
        <td id="L3311" class="blob-num js-line-number" data-line-number="3311"></td>
        <td id="LC3311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                element.html(value);</span></td>
      </tr>
      <tr>
        <td id="L3312" class="blob-num js-line-number" data-line-number="3312"></td>
        <td id="LC3312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L3313" class="blob-num js-line-number" data-line-number="3313"></td>
        <td id="LC3313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // compile the new DOM and link it to the current</span></td>
      </tr>
      <tr>
        <td id="L3314" class="blob-num js-line-number" data-line-number="3314"></td>
        <td id="LC3314" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // scope.</span></td>
      </tr>
      <tr>
        <td id="L3315" class="blob-num js-line-number" data-line-number="3315"></td>
        <td id="LC3315" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // NOTE: we only compile .childNodes so that</span></td>
      </tr>
      <tr>
        <td id="L3316" class="blob-num js-line-number" data-line-number="3316"></td>
        <td id="LC3316" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                // we don&#39;t get into infinite loop compiling ourselves</span></td>
      </tr>
      <tr>
        <td id="L3317" class="blob-num js-line-number" data-line-number="3317"></td>
        <td id="LC3317" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                $compile(element.contents())(scope);</span></td>
      </tr>
      <tr>
        <td id="L3318" class="blob-num js-line-number" data-line-number="3318"></td>
        <td id="LC3318" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              }</span></td>
      </tr>
      <tr>
        <td id="L3319" class="blob-num js-line-number" data-line-number="3319"></td>
        <td id="LC3319" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            );</span></td>
      </tr>
      <tr>
        <td id="L3320" class="blob-num js-line-number" data-line-number="3320"></td>
        <td id="LC3320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L3321" class="blob-num js-line-number" data-line-number="3321"></td>
        <td id="LC3321" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        })</span></td>
      </tr>
      <tr>
        <td id="L3322" class="blob-num js-line-number" data-line-number="3322"></td>
        <td id="LC3322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      });</span></td>
      </tr>
      <tr>
        <td id="L3323" class="blob-num js-line-number" data-line-number="3323"></td>
        <td id="LC3323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L3324" class="blob-num js-line-number" data-line-number="3324"></td>
        <td id="LC3324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L3325" class="blob-num js-line-number" data-line-number="3325"></td>
        <td id="LC3325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        $scope.name = &#39;Angular&#39;;</span></td>
      </tr>
      <tr>
        <td id="L3326" class="blob-num js-line-number" data-line-number="3326"></td>
        <td id="LC3326" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        $scope.html = &#39;Hello {{name}}&#39;;</span></td>
      </tr>
      <tr>
        <td id="L3327" class="blob-num js-line-number" data-line-number="3327"></td>
        <td id="LC3327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      }</span></td>
      </tr>
      <tr>
        <td id="L3328" class="blob-num js-line-number" data-line-number="3328"></td>
        <td id="LC3328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L3329" class="blob-num js-line-number" data-line-number="3329"></td>
        <td id="LC3329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L3330" class="blob-num js-line-number" data-line-number="3330"></td>
        <td id="LC3330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;input ng-model=&quot;name&quot;&gt; &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L3331" class="blob-num js-line-number" data-line-number="3331"></td>
        <td id="LC3331" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;textarea ng-model=&quot;html&quot;&gt;&lt;/textarea&gt; &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L3332" class="blob-num js-line-number" data-line-number="3332"></td>
        <td id="LC3332" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;div compile=&quot;html&quot;&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L3333" class="blob-num js-line-number" data-line-number="3333"></td>
        <td id="LC3333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L3334" class="blob-num js-line-number" data-line-number="3334"></td>
        <td id="LC3334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L3335" class="blob-num js-line-number" data-line-number="3335"></td>
        <td id="LC3335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L3336" class="blob-num js-line-number" data-line-number="3336"></td>
        <td id="LC3336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     it(&#39;should auto compile&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L3337" class="blob-num js-line-number" data-line-number="3337"></td>
        <td id="LC3337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       expect(element(&#39;div[compile]&#39;).text()).toBe(&#39;Hello Angular&#39;);</span></td>
      </tr>
      <tr>
        <td id="L3338" class="blob-num js-line-number" data-line-number="3338"></td>
        <td id="LC3338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       input(&#39;html&#39;).enter(&#39;{{name}}!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L3339" class="blob-num js-line-number" data-line-number="3339"></td>
        <td id="LC3339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       expect(element(&#39;div[compile]&#39;).text()).toBe(&#39;Angular!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L3340" class="blob-num js-line-number" data-line-number="3340"></td>
        <td id="LC3340" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     });</span></td>
      </tr>
      <tr>
        <td id="L3341" class="blob-num js-line-number" data-line-number="3341"></td>
        <td id="LC3341" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L3342" class="blob-num js-line-number" data-line-number="3342"></td>
        <td id="LC3342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L3343" class="blob-num js-line-number" data-line-number="3343"></td>
        <td id="LC3343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L3344" class="blob-num js-line-number" data-line-number="3344"></td>
        <td id="LC3344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3345" class="blob-num js-line-number" data-line-number="3345"></td>
        <td id="LC3345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3346" class="blob-num js-line-number" data-line-number="3346"></td>
        <td id="LC3346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string|DOMElement} element Element or HTML string to compile into a template function.</span></td>
      </tr>
      <tr>
        <td id="L3347" class="blob-num js-line-number" data-line-number="3347"></td>
        <td id="LC3347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(angular.Scope[, cloneAttachFn]} transclude function available to directives.</span></td>
      </tr>
      <tr>
        <td id="L3348" class="blob-num js-line-number" data-line-number="3348"></td>
        <td id="LC3348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number} maxPriority only apply directives lower then given priority (Only effects the</span></td>
      </tr>
      <tr>
        <td id="L3349" class="blob-num js-line-number" data-line-number="3349"></td>
        <td id="LC3349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                 root element(s), not their children)</span></td>
      </tr>
      <tr>
        <td id="L3350" class="blob-num js-line-number" data-line-number="3350"></td>
        <td id="LC3350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {function(scope[, cloneAttachFn])} a link function which is used to bind template</span></td>
      </tr>
      <tr>
        <td id="L3351" class="blob-num js-line-number" data-line-number="3351"></td>
        <td id="LC3351" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (a DOM element/tree) to a scope. Where:</span></td>
      </tr>
      <tr>
        <td id="L3352" class="blob-num js-line-number" data-line-number="3352"></td>
        <td id="LC3352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3353" class="blob-num js-line-number" data-line-number="3353"></td>
        <td id="LC3353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  * `scope` - A {@link angular.module.ng.$rootScope.Scope Scope} to bind to.</span></td>
      </tr>
      <tr>
        <td id="L3354" class="blob-num js-line-number" data-line-number="3354"></td>
        <td id="LC3354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the</span></td>
      </tr>
      <tr>
        <td id="L3355" class="blob-num js-line-number" data-line-number="3355"></td>
        <td id="LC3355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               `template` and call the `cloneAttachFn` function allowing the caller to attach the</span></td>
      </tr>
      <tr>
        <td id="L3356" class="blob-num js-line-number" data-line-number="3356"></td>
        <td id="LC3356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is</span></td>
      </tr>
      <tr>
        <td id="L3357" class="blob-num js-line-number" data-line-number="3357"></td>
        <td id="LC3357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               called as: &lt;br&gt; `cloneAttachFn(clonedElement, scope)` where:</span></td>
      </tr>
      <tr>
        <td id="L3358" class="blob-num js-line-number" data-line-number="3358"></td>
        <td id="LC3358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3359" class="blob-num js-line-number" data-line-number="3359"></td>
        <td id="LC3359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      * `clonedElement` - is a clone of the original `element` passed into the compiler.</span></td>
      </tr>
      <tr>
        <td id="L3360" class="blob-num js-line-number" data-line-number="3360"></td>
        <td id="LC3360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      * `scope` - is the current scope with which the linking function is working with.</span></td>
      </tr>
      <tr>
        <td id="L3361" class="blob-num js-line-number" data-line-number="3361"></td>
        <td id="LC3361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3362" class="blob-num js-line-number" data-line-number="3362"></td>
        <td id="LC3362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Calling the linking function returns the element of the template. It is either the original element</span></td>
      </tr>
      <tr>
        <td id="L3363" class="blob-num js-line-number" data-line-number="3363"></td>
        <td id="LC3363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * passed in, or the clone of the element if the `cloneAttachFn` is provided.</span></td>
      </tr>
      <tr>
        <td id="L3364" class="blob-num js-line-number" data-line-number="3364"></td>
        <td id="LC3364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3365" class="blob-num js-line-number" data-line-number="3365"></td>
        <td id="LC3365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * After linking the view is not updated until after a call to $digest which typically is done by</span></td>
      </tr>
      <tr>
        <td id="L3366" class="blob-num js-line-number" data-line-number="3366"></td>
        <td id="LC3366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Angular automatically.</span></td>
      </tr>
      <tr>
        <td id="L3367" class="blob-num js-line-number" data-line-number="3367"></td>
        <td id="LC3367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3368" class="blob-num js-line-number" data-line-number="3368"></td>
        <td id="LC3368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * If you need access to the bound view, there are two ways to do it:</span></td>
      </tr>
      <tr>
        <td id="L3369" class="blob-num js-line-number" data-line-number="3369"></td>
        <td id="LC3369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3370" class="blob-num js-line-number" data-line-number="3370"></td>
        <td id="LC3370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - If you are not asking the linking function to clone the template, create the DOM element(s)</span></td>
      </tr>
      <tr>
        <td id="L3371" class="blob-num js-line-number" data-line-number="3371"></td>
        <td id="LC3371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   before you send them to the compiler and keep this reference around.</span></td>
      </tr>
      <tr>
        <td id="L3372" class="blob-num js-line-number" data-line-number="3372"></td>
        <td id="LC3372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L3373" class="blob-num js-line-number" data-line-number="3373"></td>
        <td id="LC3373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     var element = $compile(&#39;&lt;p&gt;{{total}}&lt;/p&gt;&#39;)(scope);</span></td>
      </tr>
      <tr>
        <td id="L3374" class="blob-num js-line-number" data-line-number="3374"></td>
        <td id="LC3374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L3375" class="blob-num js-line-number" data-line-number="3375"></td>
        <td id="LC3375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3376" class="blob-num js-line-number" data-line-number="3376"></td>
        <td id="LC3376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - if on the other hand, you need the element to be cloned, the view reference from the original</span></td>
      </tr>
      <tr>
        <td id="L3377" class="blob-num js-line-number" data-line-number="3377"></td>
        <td id="LC3377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   example would not point to the clone, but rather to the original template that was cloned. In</span></td>
      </tr>
      <tr>
        <td id="L3378" class="blob-num js-line-number" data-line-number="3378"></td>
        <td id="LC3378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   this case, you can access the clone via the cloneAttachFn:</span></td>
      </tr>
      <tr>
        <td id="L3379" class="blob-num js-line-number" data-line-number="3379"></td>
        <td id="LC3379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L3380" class="blob-num js-line-number" data-line-number="3380"></td>
        <td id="LC3380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     var templateHTML = angular.element(&#39;&lt;p&gt;{{total}}&lt;/p&gt;&#39;),</span></td>
      </tr>
      <tr>
        <td id="L3381" class="blob-num js-line-number" data-line-number="3381"></td>
        <td id="LC3381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         scope = ....;</span></td>
      </tr>
      <tr>
        <td id="L3382" class="blob-num js-line-number" data-line-number="3382"></td>
        <td id="LC3382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3383" class="blob-num js-line-number" data-line-number="3383"></td>
        <td id="LC3383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     var clonedElement = $compile(templateHTML)(scope, function(clonedElement, scope) {</span></td>
      </tr>
      <tr>
        <td id="L3384" class="blob-num js-line-number" data-line-number="3384"></td>
        <td id="LC3384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       //attach the clone to DOM document at the right place</span></td>
      </tr>
      <tr>
        <td id="L3385" class="blob-num js-line-number" data-line-number="3385"></td>
        <td id="LC3385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L3386" class="blob-num js-line-number" data-line-number="3386"></td>
        <td id="LC3386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3387" class="blob-num js-line-number" data-line-number="3387"></td>
        <td id="LC3387" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     //now we have reference to the cloned DOM via `clone`</span></td>
      </tr>
      <tr>
        <td id="L3388" class="blob-num js-line-number" data-line-number="3388"></td>
        <td id="LC3388" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L3389" class="blob-num js-line-number" data-line-number="3389"></td>
        <td id="LC3389" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3390" class="blob-num js-line-number" data-line-number="3390"></td>
        <td id="LC3390" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L3391" class="blob-num js-line-number" data-line-number="3391"></td>
        <td id="LC3391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For information on how the compiler works, see the</span></td>
      </tr>
      <tr>
        <td id="L3392" class="blob-num js-line-number" data-line-number="3392"></td>
        <td id="LC3392" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link guide/dev_guide.compiler Angular HTML Compiler} section of the Developer Guide.</span></td>
      </tr>
      <tr>
        <td id="L3393" class="blob-num js-line-number" data-line-number="3393"></td>
        <td id="LC3393" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L3394" class="blob-num js-line-number" data-line-number="3394"></td>
        <td id="LC3394" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3395" class="blob-num js-line-number" data-line-number="3395"></td>
        <td id="LC3395" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3396" class="blob-num js-line-number" data-line-number="3396"></td>
        <td id="LC3396" class="blob-code blob-code-inner js-file-line">$CompileProvider.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L3397" class="blob-num js-line-number" data-line-number="3397"></td>
        <td id="LC3397" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$CompileProvider</span>(<span class="pl-smi">$provide</span>) {</td>
      </tr>
      <tr>
        <td id="L3398" class="blob-num js-line-number" data-line-number="3398"></td>
        <td id="LC3398" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> hasDirectives <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L3399" class="blob-num js-line-number" data-line-number="3399"></td>
        <td id="LC3399" class="blob-code blob-code-inner js-file-line">      Suffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Directive<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3400" class="blob-num js-line-number" data-line-number="3400"></td>
        <td id="LC3400" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">COMMENT_DIRECTIVE_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>directive<span class="pl-cce">\:</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-c1">\d\w</span><span class="pl-c1">\-_</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L3401" class="blob-num js-line-number" data-line-number="3401"></td>
        <td id="LC3401" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">CLASS_DIRECTIVE_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>((<span class="pl-c1">[<span class="pl-c1">\d\w</span><span class="pl-c1">\-_</span>]</span><span class="pl-k">+</span>)(?:<span class="pl-cce">\:</span>(<span class="pl-c1">[<span class="pl-k">^</span>;]</span><span class="pl-k">+</span>))<span class="pl-k">?</span>;<span class="pl-k">?</span>)<span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L3402" class="blob-num js-line-number" data-line-number="3402"></td>
        <td id="LC3402" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">CONTENT_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-cce">\&lt;\&lt;</span>content<span class="pl-cce">\&gt;\&gt;</span><span class="pl-pds">/</span>i</span>,</td>
      </tr>
      <tr>
        <td id="L3403" class="blob-num js-line-number" data-line-number="3403"></td>
        <td id="LC3403" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">HAS_ROOT_ELEMENT</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\&lt;</span><span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*</span><span class="pl-cce">\&gt;</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L3404" class="blob-num js-line-number" data-line-number="3404"></td>
        <td id="LC3404" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3405" class="blob-num js-line-number" data-line-number="3405"></td>
        <td id="LC3405" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3406" class="blob-num js-line-number" data-line-number="3406"></td>
        <td id="LC3406" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">directive</span> <span class="pl-k">=</span> <span class="pl-k">function</span> <span class="pl-en">registerDirective</span>(<span class="pl-smi">name</span>, <span class="pl-smi">directiveFactory</span>) {</td>
      </tr>
      <tr>
        <td id="L3407" class="blob-num js-line-number" data-line-number="3407"></td>
        <td id="LC3407" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isString(name)) {</td>
      </tr>
      <tr>
        <td id="L3408" class="blob-num js-line-number" data-line-number="3408"></td>
        <td id="LC3408" class="blob-code blob-code-inner js-file-line">      assertArg(directiveFactory, <span class="pl-s"><span class="pl-pds">&#39;</span>directive<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3409" class="blob-num js-line-number" data-line-number="3409"></td>
        <td id="LC3409" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>hasDirectives.hasOwnProperty(name)) {</td>
      </tr>
      <tr>
        <td id="L3410" class="blob-num js-line-number" data-line-number="3410"></td>
        <td id="LC3410" class="blob-code blob-code-inner js-file-line">        hasDirectives[name] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3411" class="blob-num js-line-number" data-line-number="3411"></td>
        <td id="LC3411" class="blob-code blob-code-inner js-file-line">        $provide.factory(name <span class="pl-k">+</span> Suffix, [<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$exceptionHandler<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3412" class="blob-num js-line-number" data-line-number="3412"></td>
        <td id="LC3412" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">function</span>(<span class="pl-smi">$injector</span>, <span class="pl-smi">$exceptionHandler</span>) {</td>
      </tr>
      <tr>
        <td id="L3413" class="blob-num js-line-number" data-line-number="3413"></td>
        <td id="LC3413" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> directives <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3414" class="blob-num js-line-number" data-line-number="3414"></td>
        <td id="LC3414" class="blob-code blob-code-inner js-file-line">            forEach(hasDirectives[name], <span class="pl-k">function</span>(<span class="pl-smi">directiveFactory</span>) {</td>
      </tr>
      <tr>
        <td id="L3415" class="blob-num js-line-number" data-line-number="3415"></td>
        <td id="LC3415" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3416" class="blob-num js-line-number" data-line-number="3416"></td>
        <td id="LC3416" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">var</span> directive <span class="pl-k">=</span> $injector.invoke(directiveFactory);</td>
      </tr>
      <tr>
        <td id="L3417" class="blob-num js-line-number" data-line-number="3417"></td>
        <td id="LC3417" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (isFunction(directive)) {</td>
      </tr>
      <tr>
        <td id="L3418" class="blob-num js-line-number" data-line-number="3418"></td>
        <td id="LC3418" class="blob-code blob-code-inner js-file-line">                  directive <span class="pl-k">=</span> { compile<span class="pl-k">:</span> valueFn(directive) };</td>
      </tr>
      <tr>
        <td id="L3419" class="blob-num js-line-number" data-line-number="3419"></td>
        <td id="LC3419" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">!</span>directive.compile <span class="pl-k">&amp;&amp;</span> directive.<span class="pl-c1">link</span>) {</td>
      </tr>
      <tr>
        <td id="L3420" class="blob-num js-line-number" data-line-number="3420"></td>
        <td id="LC3420" class="blob-code blob-code-inner js-file-line">                  directive.compile <span class="pl-k">=</span> valueFn(directive.<span class="pl-c1">link</span>);</td>
      </tr>
      <tr>
        <td id="L3421" class="blob-num js-line-number" data-line-number="3421"></td>
        <td id="LC3421" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L3422" class="blob-num js-line-number" data-line-number="3422"></td>
        <td id="LC3422" class="blob-code blob-code-inner js-file-line">                directive.priority <span class="pl-k">=</span> directive.priority <span class="pl-k">||</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L3423" class="blob-num js-line-number" data-line-number="3423"></td>
        <td id="LC3423" class="blob-code blob-code-inner js-file-line">                directive.<span class="pl-c1">name</span> <span class="pl-k">=</span> directive.<span class="pl-c1">name</span> <span class="pl-k">||</span> name;</td>
      </tr>
      <tr>
        <td id="L3424" class="blob-num js-line-number" data-line-number="3424"></td>
        <td id="LC3424" class="blob-code blob-code-inner js-file-line">                directive.require <span class="pl-k">=</span> directive.require <span class="pl-k">||</span> (directive.controller <span class="pl-k">&amp;&amp;</span> directive.<span class="pl-c1">name</span>);</td>
      </tr>
      <tr>
        <td id="L3425" class="blob-num js-line-number" data-line-number="3425"></td>
        <td id="LC3425" class="blob-code blob-code-inner js-file-line">                directive.restrict <span class="pl-k">=</span> directive.restrict <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3426" class="blob-num js-line-number" data-line-number="3426"></td>
        <td id="LC3426" class="blob-code blob-code-inner js-file-line">                directives.<span class="pl-c1">push</span>(directive);</td>
      </tr>
      <tr>
        <td id="L3427" class="blob-num js-line-number" data-line-number="3427"></td>
        <td id="LC3427" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L3428" class="blob-num js-line-number" data-line-number="3428"></td>
        <td id="LC3428" class="blob-code blob-code-inner js-file-line">                $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L3429" class="blob-num js-line-number" data-line-number="3429"></td>
        <td id="LC3429" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3430" class="blob-num js-line-number" data-line-number="3430"></td>
        <td id="LC3430" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3431" class="blob-num js-line-number" data-line-number="3431"></td>
        <td id="LC3431" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> directives;</td>
      </tr>
      <tr>
        <td id="L3432" class="blob-num js-line-number" data-line-number="3432"></td>
        <td id="LC3432" class="blob-code blob-code-inner js-file-line">          }]);</td>
      </tr>
      <tr>
        <td id="L3433" class="blob-num js-line-number" data-line-number="3433"></td>
        <td id="LC3433" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3434" class="blob-num js-line-number" data-line-number="3434"></td>
        <td id="LC3434" class="blob-code blob-code-inner js-file-line">      hasDirectives[name].<span class="pl-c1">push</span>(directiveFactory);</td>
      </tr>
      <tr>
        <td id="L3435" class="blob-num js-line-number" data-line-number="3435"></td>
        <td id="LC3435" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3436" class="blob-num js-line-number" data-line-number="3436"></td>
        <td id="LC3436" class="blob-code blob-code-inner js-file-line">      forEach(name, reverseParams(registerDirective));</td>
      </tr>
      <tr>
        <td id="L3437" class="blob-num js-line-number" data-line-number="3437"></td>
        <td id="LC3437" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3438" class="blob-num js-line-number" data-line-number="3438"></td>
        <td id="LC3438" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L3439" class="blob-num js-line-number" data-line-number="3439"></td>
        <td id="LC3439" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L3440" class="blob-num js-line-number" data-line-number="3440"></td>
        <td id="LC3440" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3441" class="blob-num js-line-number" data-line-number="3441"></td>
        <td id="LC3441" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3442" class="blob-num js-line-number" data-line-number="3442"></td>
        <td id="LC3442" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [</td>
      </tr>
      <tr>
        <td id="L3443" class="blob-num js-line-number" data-line-number="3443"></td>
        <td id="LC3443" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$interpolate<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$exceptionHandler<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$http<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$templateCache<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3444" class="blob-num js-line-number" data-line-number="3444"></td>
        <td id="LC3444" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>$controller<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3445" class="blob-num js-line-number" data-line-number="3445"></td>
        <td id="LC3445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span>(<span class="pl-smi">$injector</span>,   <span class="pl-smi">$interpolate</span>,   <span class="pl-smi">$exceptionHandler</span>,   <span class="pl-smi">$http</span>,   <span class="pl-smi">$templateCache</span>,   <span class="pl-smi">$parse</span>,</td>
      </tr>
      <tr>
        <td id="L3446" class="blob-num js-line-number" data-line-number="3446"></td>
        <td id="LC3446" class="blob-code blob-code-inner js-file-line">             <span class="pl-smi">$controller</span>) {</td>
      </tr>
      <tr>
        <td id="L3447" class="blob-num js-line-number" data-line-number="3447"></td>
        <td id="LC3447" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3448" class="blob-num js-line-number" data-line-number="3448"></td>
        <td id="LC3448" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-c1">LOCAL_MODE</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3449" class="blob-num js-line-number" data-line-number="3449"></td>
        <td id="LC3449" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">attribute</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>, <span class="pl-smi">parentScope</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3450" class="blob-num js-line-number" data-line-number="3450"></td>
        <td id="LC3450" class="blob-code blob-code-inner js-file-line">        scope[localName] <span class="pl-k">=</span> attr[localName];</td>
      </tr>
      <tr>
        <td id="L3451" class="blob-num js-line-number" data-line-number="3451"></td>
        <td id="LC3451" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3452" class="blob-num js-line-number" data-line-number="3452"></td>
        <td id="LC3452" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3453" class="blob-num js-line-number" data-line-number="3453"></td>
        <td id="LC3453" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">evaluate</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>, <span class="pl-smi">parentScope</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3454" class="blob-num js-line-number" data-line-number="3454"></td>
        <td id="LC3454" class="blob-code blob-code-inner js-file-line">        scope[localName] <span class="pl-k">=</span> parentScope.$<span class="pl-c1">eval</span>(attr[localName]);</td>
      </tr>
      <tr>
        <td id="L3455" class="blob-num js-line-number" data-line-number="3455"></td>
        <td id="LC3455" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3456" class="blob-num js-line-number" data-line-number="3456"></td>
        <td id="LC3456" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3457" class="blob-num js-line-number" data-line-number="3457"></td>
        <td id="LC3457" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">bind</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>, <span class="pl-smi">parentScope</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3458" class="blob-num js-line-number" data-line-number="3458"></td>
        <td id="LC3458" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> getter <span class="pl-k">=</span> $interpolate(attr[localName]);</td>
      </tr>
      <tr>
        <td id="L3459" class="blob-num js-line-number" data-line-number="3459"></td>
        <td id="LC3459" class="blob-code blob-code-inner js-file-line">        scope.$<span class="pl-c1">watch</span>(</td>
      </tr>
      <tr>
        <td id="L3460" class="blob-num js-line-number" data-line-number="3460"></td>
        <td id="LC3460" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">function</span>() { <span class="pl-k">return</span> getter(parentScope); },</td>
      </tr>
      <tr>
        <td id="L3461" class="blob-num js-line-number" data-line-number="3461"></td>
        <td id="LC3461" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">function</span>(<span class="pl-smi">v</span>) { scope[localName] <span class="pl-k">=</span> v; }</td>
      </tr>
      <tr>
        <td id="L3462" class="blob-num js-line-number" data-line-number="3462"></td>
        <td id="LC3462" class="blob-code blob-code-inner js-file-line">        );</td>
      </tr>
      <tr>
        <td id="L3463" class="blob-num js-line-number" data-line-number="3463"></td>
        <td id="LC3463" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3464" class="blob-num js-line-number" data-line-number="3464"></td>
        <td id="LC3464" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3465" class="blob-num js-line-number" data-line-number="3465"></td>
        <td id="LC3465" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">accessor</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>, <span class="pl-smi">parentScope</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3466" class="blob-num js-line-number" data-line-number="3466"></td>
        <td id="LC3466" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> getter <span class="pl-k">=</span> noop,</td>
      </tr>
      <tr>
        <td id="L3467" class="blob-num js-line-number" data-line-number="3467"></td>
        <td id="LC3467" class="blob-code blob-code-inner js-file-line">            setter <span class="pl-k">=</span> noop,</td>
      </tr>
      <tr>
        <td id="L3468" class="blob-num js-line-number" data-line-number="3468"></td>
        <td id="LC3468" class="blob-code blob-code-inner js-file-line">            exp <span class="pl-k">=</span> attr[localName];</td>
      </tr>
      <tr>
        <td id="L3469" class="blob-num js-line-number" data-line-number="3469"></td>
        <td id="LC3469" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3470" class="blob-num js-line-number" data-line-number="3470"></td>
        <td id="LC3470" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (exp) {</td>
      </tr>
      <tr>
        <td id="L3471" class="blob-num js-line-number" data-line-number="3471"></td>
        <td id="LC3471" class="blob-code blob-code-inner js-file-line">          getter <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(exp);</td>
      </tr>
      <tr>
        <td id="L3472" class="blob-num js-line-number" data-line-number="3472"></td>
        <td id="LC3472" class="blob-code blob-code-inner js-file-line">          setter <span class="pl-k">=</span> getter.assign <span class="pl-k">||</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L3473" class="blob-num js-line-number" data-line-number="3473"></td>
        <td id="LC3473" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Expression &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> exp <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; not assignable.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3474" class="blob-num js-line-number" data-line-number="3474"></td>
        <td id="LC3474" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L3475" class="blob-num js-line-number" data-line-number="3475"></td>
        <td id="LC3475" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3476" class="blob-num js-line-number" data-line-number="3476"></td>
        <td id="LC3476" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3477" class="blob-num js-line-number" data-line-number="3477"></td>
        <td id="LC3477" class="blob-code blob-code-inner js-file-line">        scope[localName] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L3478" class="blob-num js-line-number" data-line-number="3478"></td>
        <td id="LC3478" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> arguments.<span class="pl-c1">length</span> <span class="pl-k">?</span> setter(parentScope, value) <span class="pl-k">:</span> getter(parentScope);</td>
      </tr>
      <tr>
        <td id="L3479" class="blob-num js-line-number" data-line-number="3479"></td>
        <td id="LC3479" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3480" class="blob-num js-line-number" data-line-number="3480"></td>
        <td id="LC3480" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3481" class="blob-num js-line-number" data-line-number="3481"></td>
        <td id="LC3481" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3482" class="blob-num js-line-number" data-line-number="3482"></td>
        <td id="LC3482" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">expression</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>, <span class="pl-smi">parentScope</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3483" class="blob-num js-line-number" data-line-number="3483"></td>
        <td id="LC3483" class="blob-code blob-code-inner js-file-line">        scope[localName] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L3484" class="blob-num js-line-number" data-line-number="3484"></td>
        <td id="LC3484" class="blob-code blob-code-inner js-file-line">          $<span class="pl-c1">parse</span>(attr[localName])(parentScope, locals);</td>
      </tr>
      <tr>
        <td id="L3485" class="blob-num js-line-number" data-line-number="3485"></td>
        <td id="LC3485" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L3486" class="blob-num js-line-number" data-line-number="3486"></td>
        <td id="LC3486" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3487" class="blob-num js-line-number" data-line-number="3487"></td>
        <td id="LC3487" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3488" class="blob-num js-line-number" data-line-number="3488"></td>
        <td id="LC3488" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3489" class="blob-num js-line-number" data-line-number="3489"></td>
        <td id="LC3489" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">Attributes</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L3490" class="blob-num js-line-number" data-line-number="3490"></td>
        <td id="LC3490" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$element <span class="pl-k">=</span> element;</td>
      </tr>
      <tr>
        <td id="L3491" class="blob-num js-line-number" data-line-number="3491"></td>
        <td id="LC3491" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$observers <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L3492" class="blob-num js-line-number" data-line-number="3492"></td>
        <td id="LC3492" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$attr <span class="pl-k">=</span> attr <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L3493" class="blob-num js-line-number" data-line-number="3493"></td>
        <td id="LC3493" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3494" class="blob-num js-line-number" data-line-number="3494"></td>
        <td id="LC3494" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3495" class="blob-num js-line-number" data-line-number="3495"></td>
        <td id="LC3495" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">Attributes</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3496" class="blob-num js-line-number" data-line-number="3496"></td>
        <td id="LC3496" class="blob-code blob-code-inner js-file-line">      $normalize<span class="pl-k">:</span> directiveNormalize,</td>
      </tr>
      <tr>
        <td id="L3497" class="blob-num js-line-number" data-line-number="3497"></td>
        <td id="LC3497" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3498" class="blob-num js-line-number" data-line-number="3498"></td>
        <td id="LC3498" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3499" class="blob-num js-line-number" data-line-number="3499"></td>
        <td id="LC3499" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3500" class="blob-num js-line-number" data-line-number="3500"></td>
        <td id="LC3500" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Set a normalized attribute on the element in a way such that all directives</span></td>
      </tr>
      <tr>
        <td id="L3501" class="blob-num js-line-number" data-line-number="3501"></td>
        <td id="LC3501" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * can share the attribute. This function properly handles boolean attributes.</span></td>
      </tr>
      <tr>
        <td id="L3502" class="blob-num js-line-number" data-line-number="3502"></td>
        <td id="LC3502" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string} key Normalized key. (ie ngAttribute)</span></td>
      </tr>
      <tr>
        <td id="L3503" class="blob-num js-line-number" data-line-number="3503"></td>
        <td id="LC3503" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string|boolean} value The value to set. If `null` attribute will be deleted.</span></td>
      </tr>
      <tr>
        <td id="L3504" class="blob-num js-line-number" data-line-number="3504"></td>
        <td id="LC3504" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {boolean=} writeAttr If false, does not write the value to DOM element attribute.</span></td>
      </tr>
      <tr>
        <td id="L3505" class="blob-num js-line-number" data-line-number="3505"></td>
        <td id="LC3505" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *     Defaults to true.</span></td>
      </tr>
      <tr>
        <td id="L3506" class="blob-num js-line-number" data-line-number="3506"></td>
        <td id="LC3506" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string=} attrName Optional none normalized name. Defaults to key.</span></td>
      </tr>
      <tr>
        <td id="L3507" class="blob-num js-line-number" data-line-number="3507"></td>
        <td id="LC3507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L3508" class="blob-num js-line-number" data-line-number="3508"></td>
        <td id="LC3508" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">set</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">value</span>, <span class="pl-smi">writeAttr</span>, <span class="pl-smi">attrName</span>) {</td>
      </tr>
      <tr>
        <td id="L3509" class="blob-num js-line-number" data-line-number="3509"></td>
        <td id="LC3509" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> booleanKey <span class="pl-k">=</span> isBooleanAttr(<span class="pl-v">this</span>.$$element[<span class="pl-c1">0</span>], key.<span class="pl-c1">toLowerCase</span>());</td>
      </tr>
      <tr>
        <td id="L3510" class="blob-num js-line-number" data-line-number="3510"></td>
        <td id="LC3510" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3511" class="blob-num js-line-number" data-line-number="3511"></td>
        <td id="LC3511" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (booleanKey) {</td>
      </tr>
      <tr>
        <td id="L3512" class="blob-num js-line-number" data-line-number="3512"></td>
        <td id="LC3512" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$element.prop(key, value);</td>
      </tr>
      <tr>
        <td id="L3513" class="blob-num js-line-number" data-line-number="3513"></td>
        <td id="LC3513" class="blob-code blob-code-inner js-file-line">          attrName <span class="pl-k">=</span> booleanKey;</td>
      </tr>
      <tr>
        <td id="L3514" class="blob-num js-line-number" data-line-number="3514"></td>
        <td id="LC3514" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3515" class="blob-num js-line-number" data-line-number="3515"></td>
        <td id="LC3515" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3516" class="blob-num js-line-number" data-line-number="3516"></td>
        <td id="LC3516" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L3517" class="blob-num js-line-number" data-line-number="3517"></td>
        <td id="LC3517" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3518" class="blob-num js-line-number" data-line-number="3518"></td>
        <td id="LC3518" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// translate normalized key to actual key</span></td>
      </tr>
      <tr>
        <td id="L3519" class="blob-num js-line-number" data-line-number="3519"></td>
        <td id="LC3519" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (attrName) {</td>
      </tr>
      <tr>
        <td id="L3520" class="blob-num js-line-number" data-line-number="3520"></td>
        <td id="LC3520" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$attr[key] <span class="pl-k">=</span> attrName;</td>
      </tr>
      <tr>
        <td id="L3521" class="blob-num js-line-number" data-line-number="3521"></td>
        <td id="LC3521" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3522" class="blob-num js-line-number" data-line-number="3522"></td>
        <td id="LC3522" class="blob-code blob-code-inner js-file-line">          attrName <span class="pl-k">=</span> <span class="pl-v">this</span>.$attr[key];</td>
      </tr>
      <tr>
        <td id="L3523" class="blob-num js-line-number" data-line-number="3523"></td>
        <td id="LC3523" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>attrName) {</td>
      </tr>
      <tr>
        <td id="L3524" class="blob-num js-line-number" data-line-number="3524"></td>
        <td id="LC3524" class="blob-code blob-code-inner js-file-line">            <span class="pl-v">this</span>.$attr[key] <span class="pl-k">=</span> attrName <span class="pl-k">=</span> snake_case(key, <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3525" class="blob-num js-line-number" data-line-number="3525"></td>
        <td id="LC3525" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3526" class="blob-num js-line-number" data-line-number="3526"></td>
        <td id="LC3526" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3527" class="blob-num js-line-number" data-line-number="3527"></td>
        <td id="LC3527" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3528" class="blob-num js-line-number" data-line-number="3528"></td>
        <td id="LC3528" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (writeAttr <span class="pl-k">!==</span> <span class="pl-c1">false</span>) {</td>
      </tr>
      <tr>
        <td id="L3529" class="blob-num js-line-number" data-line-number="3529"></td>
        <td id="LC3529" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L3530" class="blob-num js-line-number" data-line-number="3530"></td>
        <td id="LC3530" class="blob-code blob-code-inner js-file-line">            <span class="pl-v">this</span>.$$element.removeAttr(attrName);</td>
      </tr>
      <tr>
        <td id="L3531" class="blob-num js-line-number" data-line-number="3531"></td>
        <td id="LC3531" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3532" class="blob-num js-line-number" data-line-number="3532"></td>
        <td id="LC3532" class="blob-code blob-code-inner js-file-line">            <span class="pl-v">this</span>.$$element.attr(attrName, value);</td>
      </tr>
      <tr>
        <td id="L3533" class="blob-num js-line-number" data-line-number="3533"></td>
        <td id="LC3533" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3534" class="blob-num js-line-number" data-line-number="3534"></td>
        <td id="LC3534" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3535" class="blob-num js-line-number" data-line-number="3535"></td>
        <td id="LC3535" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3536" class="blob-num js-line-number" data-line-number="3536"></td>
        <td id="LC3536" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// fire observers</span></td>
      </tr>
      <tr>
        <td id="L3537" class="blob-num js-line-number" data-line-number="3537"></td>
        <td id="LC3537" class="blob-code blob-code-inner js-file-line">        forEach(<span class="pl-v">this</span>.$$observers[key], <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L3538" class="blob-num js-line-number" data-line-number="3538"></td>
        <td id="LC3538" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3539" class="blob-num js-line-number" data-line-number="3539"></td>
        <td id="LC3539" class="blob-code blob-code-inner js-file-line">            fn(value);</td>
      </tr>
      <tr>
        <td id="L3540" class="blob-num js-line-number" data-line-number="3540"></td>
        <td id="LC3540" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L3541" class="blob-num js-line-number" data-line-number="3541"></td>
        <td id="LC3541" class="blob-code blob-code-inner js-file-line">            $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L3542" class="blob-num js-line-number" data-line-number="3542"></td>
        <td id="LC3542" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3543" class="blob-num js-line-number" data-line-number="3543"></td>
        <td id="LC3543" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L3544" class="blob-num js-line-number" data-line-number="3544"></td>
        <td id="LC3544" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L3545" class="blob-num js-line-number" data-line-number="3545"></td>
        <td id="LC3545" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3546" class="blob-num js-line-number" data-line-number="3546"></td>
        <td id="LC3546" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3547" class="blob-num js-line-number" data-line-number="3547"></td>
        <td id="LC3547" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3548" class="blob-num js-line-number" data-line-number="3548"></td>
        <td id="LC3548" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Observe an interpolated attribute.</span></td>
      </tr>
      <tr>
        <td id="L3549" class="blob-num js-line-number" data-line-number="3549"></td>
        <td id="LC3549" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The observer will never be called, if given attribute is not interpolated.</span></td>
      </tr>
      <tr>
        <td id="L3550" class="blob-num js-line-number" data-line-number="3550"></td>
        <td id="LC3550" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L3551" class="blob-num js-line-number" data-line-number="3551"></td>
        <td id="LC3551" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string} key Normalized key. (ie ngAttribute) .</span></td>
      </tr>
      <tr>
        <td id="L3552" class="blob-num js-line-number" data-line-number="3552"></td>
        <td id="LC3552" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {function(*)} fn Function that will be called whenever the attribute value changes.</span></td>
      </tr>
      <tr>
        <td id="L3553" class="blob-num js-line-number" data-line-number="3553"></td>
        <td id="LC3553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L3554" class="blob-num js-line-number" data-line-number="3554"></td>
        <td id="LC3554" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">observe</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L3555" class="blob-num js-line-number" data-line-number="3555"></td>
        <td id="LC3555" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// keep only observers for interpolated attrs</span></td>
      </tr>
      <tr>
        <td id="L3556" class="blob-num js-line-number" data-line-number="3556"></td>
        <td id="LC3556" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.$$observers[key]) {</td>
      </tr>
      <tr>
        <td id="L3557" class="blob-num js-line-number" data-line-number="3557"></td>
        <td id="LC3557" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$observers[key].<span class="pl-c1">push</span>(fn);</td>
      </tr>
      <tr>
        <td id="L3558" class="blob-num js-line-number" data-line-number="3558"></td>
        <td id="LC3558" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3559" class="blob-num js-line-number" data-line-number="3559"></td>
        <td id="LC3559" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3560" class="blob-num js-line-number" data-line-number="3560"></td>
        <td id="LC3560" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L3561" class="blob-num js-line-number" data-line-number="3561"></td>
        <td id="LC3561" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3562" class="blob-num js-line-number" data-line-number="3562"></td>
        <td id="LC3562" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> compile;</td>
      </tr>
      <tr>
        <td id="L3563" class="blob-num js-line-number" data-line-number="3563"></td>
        <td id="LC3563" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3564" class="blob-num js-line-number" data-line-number="3564"></td>
        <td id="LC3564" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//================================</span></td>
      </tr>
      <tr>
        <td id="L3565" class="blob-num js-line-number" data-line-number="3565"></td>
        <td id="LC3565" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3566" class="blob-num js-line-number" data-line-number="3566"></td>
        <td id="LC3566" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compile</span>(<span class="pl-smi">templateElement</span>, <span class="pl-smi">transcludeFn</span>, <span class="pl-smi">maxPriority</span>) {</td>
      </tr>
      <tr>
        <td id="L3567" class="blob-num js-line-number" data-line-number="3567"></td>
        <td id="LC3567" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>(templateElement <span class="pl-k">instanceof</span> jqLite)) {</td>
      </tr>
      <tr>
        <td id="L3568" class="blob-num js-line-number" data-line-number="3568"></td>
        <td id="LC3568" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// jquery always rewraps, where as we need to preserve the original selector so that we can modify it.</span></td>
      </tr>
      <tr>
        <td id="L3569" class="blob-num js-line-number" data-line-number="3569"></td>
        <td id="LC3569" class="blob-code blob-code-inner js-file-line">        templateElement <span class="pl-k">=</span> jqLite(templateElement);</td>
      </tr>
      <tr>
        <td id="L3570" class="blob-num js-line-number" data-line-number="3570"></td>
        <td id="LC3570" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3571" class="blob-num js-line-number" data-line-number="3571"></td>
        <td id="LC3571" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// We can not compile top level text elements since text nodes can be merged and we will</span></td>
      </tr>
      <tr>
        <td id="L3572" class="blob-num js-line-number" data-line-number="3572"></td>
        <td id="LC3572" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// not be able to attach scope data to them, so we will wrap them in &lt;span&gt;</span></td>
      </tr>
      <tr>
        <td id="L3573" class="blob-num js-line-number" data-line-number="3573"></td>
        <td id="LC3573" class="blob-code blob-code-inner js-file-line">      forEach(templateElement, <span class="pl-k">function</span>(<span class="pl-smi">node</span>, <span class="pl-smi">index</span>){</td>
      </tr>
      <tr>
        <td id="L3574" class="blob-num js-line-number" data-line-number="3574"></td>
        <td id="LC3574" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (node.<span class="pl-c1">nodeType</span> <span class="pl-k">==</span> <span class="pl-c1">3</span> <span class="pl-c">/* text node */</span>) {</td>
      </tr>
      <tr>
        <td id="L3575" class="blob-num js-line-number" data-line-number="3575"></td>
        <td id="LC3575" class="blob-code blob-code-inner js-file-line">          templateElement[index] <span class="pl-k">=</span> jqLite(node).wrap(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;span&gt;<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">parent</span>()[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3576" class="blob-num js-line-number" data-line-number="3576"></td>
        <td id="LC3576" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3577" class="blob-num js-line-number" data-line-number="3577"></td>
        <td id="LC3577" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L3578" class="blob-num js-line-number" data-line-number="3578"></td>
        <td id="LC3578" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> linkingFn <span class="pl-k">=</span> compileNodes(templateElement, transcludeFn, templateElement, maxPriority);</td>
      </tr>
      <tr>
        <td id="L3579" class="blob-num js-line-number" data-line-number="3579"></td>
        <td id="LC3579" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">cloneConnectFn</span>){</td>
      </tr>
      <tr>
        <td id="L3580" class="blob-num js-line-number" data-line-number="3580"></td>
        <td id="LC3580" class="blob-code blob-code-inner js-file-line">        assertArg(scope, <span class="pl-s"><span class="pl-pds">&#39;</span>scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3581" class="blob-num js-line-number" data-line-number="3581"></td>
        <td id="LC3581" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// important!!: we must call our jqLite.clone() since the jQuery one is trying to be smart</span></td>
      </tr>
      <tr>
        <td id="L3582" class="blob-num js-line-number" data-line-number="3582"></td>
        <td id="LC3582" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// and sometimes changes the structure of the DOM.</span></td>
      </tr>
      <tr>
        <td id="L3583" class="blob-num js-line-number" data-line-number="3583"></td>
        <td id="LC3583" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> element <span class="pl-k">=</span> cloneConnectFn</td>
      </tr>
      <tr>
        <td id="L3584" class="blob-num js-line-number" data-line-number="3584"></td>
        <td id="LC3584" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> JQLitePrototype.clone.<span class="pl-c1">call</span>(templateElement) <span class="pl-c">// IMPORTANT!!!</span></td>
      </tr>
      <tr>
        <td id="L3585" class="blob-num js-line-number" data-line-number="3585"></td>
        <td id="LC3585" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> templateElement;</td>
      </tr>
      <tr>
        <td id="L3586" class="blob-num js-line-number" data-line-number="3586"></td>
        <td id="LC3586" class="blob-code blob-code-inner js-file-line">        safeAddClass(element.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>, scope), <span class="pl-s"><span class="pl-pds">&#39;</span>ng-scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3587" class="blob-num js-line-number" data-line-number="3587"></td>
        <td id="LC3587" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (cloneConnectFn) cloneConnectFn(element, scope);</td>
      </tr>
      <tr>
        <td id="L3588" class="blob-num js-line-number" data-line-number="3588"></td>
        <td id="LC3588" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (linkingFn) linkingFn(scope, element, element);</td>
      </tr>
      <tr>
        <td id="L3589" class="blob-num js-line-number" data-line-number="3589"></td>
        <td id="LC3589" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> element;</td>
      </tr>
      <tr>
        <td id="L3590" class="blob-num js-line-number" data-line-number="3590"></td>
        <td id="LC3590" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L3591" class="blob-num js-line-number" data-line-number="3591"></td>
        <td id="LC3591" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3592" class="blob-num js-line-number" data-line-number="3592"></td>
        <td id="LC3592" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3593" class="blob-num js-line-number" data-line-number="3593"></td>
        <td id="LC3593" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">wrongMode</span>(<span class="pl-smi">localName</span>, <span class="pl-smi">mode</span>) {</td>
      </tr>
      <tr>
        <td id="L3594" class="blob-num js-line-number" data-line-number="3594"></td>
        <td id="LC3594" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Unsupported &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> mode <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; for &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> localName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3595" class="blob-num js-line-number" data-line-number="3595"></td>
        <td id="LC3595" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3596" class="blob-num js-line-number" data-line-number="3596"></td>
        <td id="LC3596" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3597" class="blob-num js-line-number" data-line-number="3597"></td>
        <td id="LC3597" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">safeAddClass</span>(<span class="pl-smi">element</span>, <span class="pl-smi">className</span>) {</td>
      </tr>
      <tr>
        <td id="L3598" class="blob-num js-line-number" data-line-number="3598"></td>
        <td id="LC3598" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3599" class="blob-num js-line-number" data-line-number="3599"></td>
        <td id="LC3599" class="blob-code blob-code-inner js-file-line">        element.addClass(className);</td>
      </tr>
      <tr>
        <td id="L3600" class="blob-num js-line-number" data-line-number="3600"></td>
        <td id="LC3600" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L3601" class="blob-num js-line-number" data-line-number="3601"></td>
        <td id="LC3601" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// ignore, since it means that we are trying to set class on</span></td>
      </tr>
      <tr>
        <td id="L3602" class="blob-num js-line-number" data-line-number="3602"></td>
        <td id="LC3602" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// SVG element, where class name is read-only.</span></td>
      </tr>
      <tr>
        <td id="L3603" class="blob-num js-line-number" data-line-number="3603"></td>
        <td id="LC3603" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3604" class="blob-num js-line-number" data-line-number="3604"></td>
        <td id="LC3604" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3605" class="blob-num js-line-number" data-line-number="3605"></td>
        <td id="LC3605" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3606" class="blob-num js-line-number" data-line-number="3606"></td>
        <td id="LC3606" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3607" class="blob-num js-line-number" data-line-number="3607"></td>
        <td id="LC3607" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Compile function matches each node in nodeList against the directives. Once all directives</span></td>
      </tr>
      <tr>
        <td id="L3608" class="blob-num js-line-number" data-line-number="3608"></td>
        <td id="LC3608" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * for a particular node are collected their compile functions are executed. The compile</span></td>
      </tr>
      <tr>
        <td id="L3609" class="blob-num js-line-number" data-line-number="3609"></td>
        <td id="LC3609" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * functions return values - the linking functions - are combined into a composite linking</span></td>
      </tr>
      <tr>
        <td id="L3610" class="blob-num js-line-number" data-line-number="3610"></td>
        <td id="LC3610" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * function, which is the a linking function for the node.</span></td>
      </tr>
      <tr>
        <td id="L3611" class="blob-num js-line-number" data-line-number="3611"></td>
        <td id="LC3611" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3612" class="blob-num js-line-number" data-line-number="3612"></td>
        <td id="LC3612" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {NodeList} nodeList an array of nodes to compile</span></td>
      </tr>
      <tr>
        <td id="L3613" class="blob-num js-line-number" data-line-number="3613"></td>
        <td id="LC3613" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the</span></td>
      </tr>
      <tr>
        <td id="L3614" class="blob-num js-line-number" data-line-number="3614"></td>
        <td id="LC3614" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        scope argument is auto-generated to the new child of the transcluded parent scope.</span></td>
      </tr>
      <tr>
        <td id="L3615" class="blob-num js-line-number" data-line-number="3615"></td>
        <td id="LC3615" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {DOMElement=} rootElement If the nodeList is the root of the compilation tree then the</span></td>
      </tr>
      <tr>
        <td id="L3616" class="blob-num js-line-number" data-line-number="3616"></td>
        <td id="LC3616" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        rootElement must be set the jqLite collection of the compile root. This is</span></td>
      </tr>
      <tr>
        <td id="L3617" class="blob-num js-line-number" data-line-number="3617"></td>
        <td id="LC3617" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        needed so that the jqLite collection items can be replaced with widgets.</span></td>
      </tr>
      <tr>
        <td id="L3618" class="blob-num js-line-number" data-line-number="3618"></td>
        <td id="LC3618" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {number=} max directive priority</span></td>
      </tr>
      <tr>
        <td id="L3619" class="blob-num js-line-number" data-line-number="3619"></td>
        <td id="LC3619" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {?function} A composite linking function of all of the matched directives or null.</span></td>
      </tr>
      <tr>
        <td id="L3620" class="blob-num js-line-number" data-line-number="3620"></td>
        <td id="LC3620" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3621" class="blob-num js-line-number" data-line-number="3621"></td>
        <td id="LC3621" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compileNodes</span>(<span class="pl-smi">nodeList</span>, <span class="pl-smi">transcludeFn</span>, <span class="pl-smi">rootElement</span>, <span class="pl-smi">maxPriority</span>) {</td>
      </tr>
      <tr>
        <td id="L3622" class="blob-num js-line-number" data-line-number="3622"></td>
        <td id="LC3622" class="blob-code blob-code-inner js-file-line">     <span class="pl-k">var</span> linkingFns <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3623" class="blob-num js-line-number" data-line-number="3623"></td>
        <td id="LC3623" class="blob-code blob-code-inner js-file-line">         directiveLinkingFn, childLinkingFn, directives, attrs, linkingFnFound;</td>
      </tr>
      <tr>
        <td id="L3624" class="blob-num js-line-number" data-line-number="3624"></td>
        <td id="LC3624" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3625" class="blob-num js-line-number" data-line-number="3625"></td>
        <td id="LC3625" class="blob-code blob-code-inner js-file-line">     <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> nodeList.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3626" class="blob-num js-line-number" data-line-number="3626"></td>
        <td id="LC3626" class="blob-code blob-code-inner js-file-line">       attrs <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Attributes</span>();</td>
      </tr>
      <tr>
        <td id="L3627" class="blob-num js-line-number" data-line-number="3627"></td>
        <td id="LC3627" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3628" class="blob-num js-line-number" data-line-number="3628"></td>
        <td id="LC3628" class="blob-code blob-code-inner js-file-line">       <span class="pl-c">// we must always refer to nodeList[i] since the nodes can be replaced underneath us.</span></td>
      </tr>
      <tr>
        <td id="L3629" class="blob-num js-line-number" data-line-number="3629"></td>
        <td id="LC3629" class="blob-code blob-code-inner js-file-line">       directives <span class="pl-k">=</span> collectDirectives(nodeList[i], [], attrs, maxPriority);</td>
      </tr>
      <tr>
        <td id="L3630" class="blob-num js-line-number" data-line-number="3630"></td>
        <td id="LC3630" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3631" class="blob-num js-line-number" data-line-number="3631"></td>
        <td id="LC3631" class="blob-code blob-code-inner js-file-line">       directiveLinkingFn <span class="pl-k">=</span> (directives.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L3632" class="blob-num js-line-number" data-line-number="3632"></td>
        <td id="LC3632" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">?</span> applyDirectivesToNode(directives, nodeList[i], attrs, transcludeFn, rootElement)</td>
      </tr>
      <tr>
        <td id="L3633" class="blob-num js-line-number" data-line-number="3633"></td>
        <td id="LC3633" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3634" class="blob-num js-line-number" data-line-number="3634"></td>
        <td id="LC3634" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3635" class="blob-num js-line-number" data-line-number="3635"></td>
        <td id="LC3635" class="blob-code blob-code-inner js-file-line">       childLinkingFn <span class="pl-k">=</span> (directiveLinkingFn <span class="pl-k">&amp;&amp;</span> directiveLinkingFn.terminal)</td>
      </tr>
      <tr>
        <td id="L3636" class="blob-num js-line-number" data-line-number="3636"></td>
        <td id="LC3636" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">?</span> <span class="pl-c1">null</span></td>
      </tr>
      <tr>
        <td id="L3637" class="blob-num js-line-number" data-line-number="3637"></td>
        <td id="LC3637" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">:</span> compileNodes(nodeList[i].<span class="pl-c1">childNodes</span>,</td>
      </tr>
      <tr>
        <td id="L3638" class="blob-num js-line-number" data-line-number="3638"></td>
        <td id="LC3638" class="blob-code blob-code-inner js-file-line">                directiveLinkingFn <span class="pl-k">?</span> directiveLinkingFn.transclude <span class="pl-k">:</span> transcludeFn);</td>
      </tr>
      <tr>
        <td id="L3639" class="blob-num js-line-number" data-line-number="3639"></td>
        <td id="LC3639" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3640" class="blob-num js-line-number" data-line-number="3640"></td>
        <td id="LC3640" class="blob-code blob-code-inner js-file-line">       linkingFns.<span class="pl-c1">push</span>(directiveLinkingFn);</td>
      </tr>
      <tr>
        <td id="L3641" class="blob-num js-line-number" data-line-number="3641"></td>
        <td id="LC3641" class="blob-code blob-code-inner js-file-line">       linkingFns.<span class="pl-c1">push</span>(childLinkingFn);</td>
      </tr>
      <tr>
        <td id="L3642" class="blob-num js-line-number" data-line-number="3642"></td>
        <td id="LC3642" class="blob-code blob-code-inner js-file-line">       linkingFnFound <span class="pl-k">=</span> (linkingFnFound <span class="pl-k">||</span> directiveLinkingFn <span class="pl-k">||</span> childLinkingFn);</td>
      </tr>
      <tr>
        <td id="L3643" class="blob-num js-line-number" data-line-number="3643"></td>
        <td id="LC3643" class="blob-code blob-code-inner js-file-line">     }</td>
      </tr>
      <tr>
        <td id="L3644" class="blob-num js-line-number" data-line-number="3644"></td>
        <td id="LC3644" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3645" class="blob-num js-line-number" data-line-number="3645"></td>
        <td id="LC3645" class="blob-code blob-code-inner js-file-line">     <span class="pl-c">// return a linking function if we have found anything, null otherwise</span></td>
      </tr>
      <tr>
        <td id="L3646" class="blob-num js-line-number" data-line-number="3646"></td>
        <td id="LC3646" class="blob-code blob-code-inner js-file-line">     <span class="pl-k">return</span> linkingFnFound <span class="pl-k">?</span> linkingFn <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L3647" class="blob-num js-line-number" data-line-number="3647"></td>
        <td id="LC3647" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3648" class="blob-num js-line-number" data-line-number="3648"></td>
        <td id="LC3648" class="blob-code blob-code-inner js-file-line">     <span class="pl-c">/* nodesetLinkingFn */</span> <span class="pl-k">function</span> <span class="pl-en">linkingFn</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">nodeList</span>, <span class="pl-smi">rootElement</span>, <span class="pl-smi">boundTranscludeFn</span>) {</td>
      </tr>
      <tr>
        <td id="L3649" class="blob-num js-line-number" data-line-number="3649"></td>
        <td id="LC3649" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">var</span> childLinkingFn, directiveLinkingFn, node, childScope, childTransclusionFn;</td>
      </tr>
      <tr>
        <td id="L3650" class="blob-num js-line-number" data-line-number="3650"></td>
        <td id="LC3650" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3651" class="blob-num js-line-number" data-line-number="3651"></td>
        <td id="LC3651" class="blob-code blob-code-inner js-file-line">       <span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>, n<span class="pl-k">=</span><span class="pl-c1">0</span>, ii<span class="pl-k">=</span>linkingFns.<span class="pl-c1">length</span>; i<span class="pl-k">&lt;</span>ii; n<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3652" class="blob-num js-line-number" data-line-number="3652"></td>
        <td id="LC3652" class="blob-code blob-code-inner js-file-line">         node <span class="pl-k">=</span> nodeList[n];</td>
      </tr>
      <tr>
        <td id="L3653" class="blob-num js-line-number" data-line-number="3653"></td>
        <td id="LC3653" class="blob-code blob-code-inner js-file-line">         directiveLinkingFn <span class="pl-k">=</span> <span class="pl-c">/* directiveLinkingFn */</span> linkingFns[i<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L3654" class="blob-num js-line-number" data-line-number="3654"></td>
        <td id="LC3654" class="blob-code blob-code-inner js-file-line">         childLinkingFn <span class="pl-k">=</span> <span class="pl-c">/* nodesetLinkingFn */</span> linkingFns[i<span class="pl-k">++</span>];</td>
      </tr>
      <tr>
        <td id="L3655" class="blob-num js-line-number" data-line-number="3655"></td>
        <td id="LC3655" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3656" class="blob-num js-line-number" data-line-number="3656"></td>
        <td id="LC3656" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (directiveLinkingFn) {</td>
      </tr>
      <tr>
        <td id="L3657" class="blob-num js-line-number" data-line-number="3657"></td>
        <td id="LC3657" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">if</span> (directiveLinkingFn.<span class="pl-c1">scope</span>) {</td>
      </tr>
      <tr>
        <td id="L3658" class="blob-num js-line-number" data-line-number="3658"></td>
        <td id="LC3658" class="blob-code blob-code-inner js-file-line">             childScope <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>(isObject(directiveLinkingFn.<span class="pl-c1">scope</span>));</td>
      </tr>
      <tr>
        <td id="L3659" class="blob-num js-line-number" data-line-number="3659"></td>
        <td id="LC3659" class="blob-code blob-code-inner js-file-line">             jqLite(node).<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>, childScope);</td>
      </tr>
      <tr>
        <td id="L3660" class="blob-num js-line-number" data-line-number="3660"></td>
        <td id="LC3660" class="blob-code blob-code-inner js-file-line">           } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3661" class="blob-num js-line-number" data-line-number="3661"></td>
        <td id="LC3661" class="blob-code blob-code-inner js-file-line">             childScope <span class="pl-k">=</span> scope;</td>
      </tr>
      <tr>
        <td id="L3662" class="blob-num js-line-number" data-line-number="3662"></td>
        <td id="LC3662" class="blob-code blob-code-inner js-file-line">           }</td>
      </tr>
      <tr>
        <td id="L3663" class="blob-num js-line-number" data-line-number="3663"></td>
        <td id="LC3663" class="blob-code blob-code-inner js-file-line">           childTransclusionFn <span class="pl-k">=</span> directiveLinkingFn.transclude;</td>
      </tr>
      <tr>
        <td id="L3664" class="blob-num js-line-number" data-line-number="3664"></td>
        <td id="LC3664" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">if</span> (childTransclusionFn <span class="pl-k">||</span> (<span class="pl-k">!</span>boundTranscludeFn <span class="pl-k">&amp;&amp;</span> transcludeFn)) {</td>
      </tr>
      <tr>
        <td id="L3665" class="blob-num js-line-number" data-line-number="3665"></td>
        <td id="LC3665" class="blob-code blob-code-inner js-file-line">             directiveLinkingFn(childLinkingFn, childScope, node, rootElement,</td>
      </tr>
      <tr>
        <td id="L3666" class="blob-num js-line-number" data-line-number="3666"></td>
        <td id="LC3666" class="blob-code blob-code-inner js-file-line">                 (<span class="pl-k">function</span>(<span class="pl-smi">transcludeFn</span>) {</td>
      </tr>
      <tr>
        <td id="L3667" class="blob-num js-line-number" data-line-number="3667"></td>
        <td id="LC3667" class="blob-code blob-code-inner js-file-line">                   <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">cloneFn</span>) {</td>
      </tr>
      <tr>
        <td id="L3668" class="blob-num js-line-number" data-line-number="3668"></td>
        <td id="LC3668" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">var</span> transcludeScope <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>();</td>
      </tr>
      <tr>
        <td id="L3669" class="blob-num js-line-number" data-line-number="3669"></td>
        <td id="LC3669" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3670" class="blob-num js-line-number" data-line-number="3670"></td>
        <td id="LC3670" class="blob-code blob-code-inner js-file-line">                     <span class="pl-k">return</span> transcludeFn(transcludeScope, cloneFn).</td>
      </tr>
      <tr>
        <td id="L3671" class="blob-num js-line-number" data-line-number="3671"></td>
        <td id="LC3671" class="blob-code blob-code-inner js-file-line">                         bind(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>, bind(transcludeScope, transcludeScope.$destroy));</td>
      </tr>
      <tr>
        <td id="L3672" class="blob-num js-line-number" data-line-number="3672"></td>
        <td id="LC3672" class="blob-code blob-code-inner js-file-line">                    };</td>
      </tr>
      <tr>
        <td id="L3673" class="blob-num js-line-number" data-line-number="3673"></td>
        <td id="LC3673" class="blob-code blob-code-inner js-file-line">                  })(childTransclusionFn <span class="pl-k">||</span> transcludeFn)</td>
      </tr>
      <tr>
        <td id="L3674" class="blob-num js-line-number" data-line-number="3674"></td>
        <td id="LC3674" class="blob-code blob-code-inner js-file-line">             );</td>
      </tr>
      <tr>
        <td id="L3675" class="blob-num js-line-number" data-line-number="3675"></td>
        <td id="LC3675" class="blob-code blob-code-inner js-file-line">           } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3676" class="blob-num js-line-number" data-line-number="3676"></td>
        <td id="LC3676" class="blob-code blob-code-inner js-file-line">             directiveLinkingFn(childLinkingFn, childScope, node, <span class="pl-c1">undefined</span>, boundTranscludeFn);</td>
      </tr>
      <tr>
        <td id="L3677" class="blob-num js-line-number" data-line-number="3677"></td>
        <td id="LC3677" class="blob-code blob-code-inner js-file-line">           }</td>
      </tr>
      <tr>
        <td id="L3678" class="blob-num js-line-number" data-line-number="3678"></td>
        <td id="LC3678" class="blob-code blob-code-inner js-file-line">         } <span class="pl-k">else</span> <span class="pl-k">if</span> (childLinkingFn) {</td>
      </tr>
      <tr>
        <td id="L3679" class="blob-num js-line-number" data-line-number="3679"></td>
        <td id="LC3679" class="blob-code blob-code-inner js-file-line">           childLinkingFn(scope, node.<span class="pl-c1">childNodes</span>, <span class="pl-c1">undefined</span>, boundTranscludeFn);</td>
      </tr>
      <tr>
        <td id="L3680" class="blob-num js-line-number" data-line-number="3680"></td>
        <td id="LC3680" class="blob-code blob-code-inner js-file-line">         }</td>
      </tr>
      <tr>
        <td id="L3681" class="blob-num js-line-number" data-line-number="3681"></td>
        <td id="LC3681" class="blob-code blob-code-inner js-file-line">       }</td>
      </tr>
      <tr>
        <td id="L3682" class="blob-num js-line-number" data-line-number="3682"></td>
        <td id="LC3682" class="blob-code blob-code-inner js-file-line">     }</td>
      </tr>
      <tr>
        <td id="L3683" class="blob-num js-line-number" data-line-number="3683"></td>
        <td id="LC3683" class="blob-code blob-code-inner js-file-line">   }</td>
      </tr>
      <tr>
        <td id="L3684" class="blob-num js-line-number" data-line-number="3684"></td>
        <td id="LC3684" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3685" class="blob-num js-line-number" data-line-number="3685"></td>
        <td id="LC3685" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3686" class="blob-num js-line-number" data-line-number="3686"></td>
        <td id="LC3686" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3687" class="blob-num js-line-number" data-line-number="3687"></td>
        <td id="LC3687" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Looks for directives on the given node ands them to the directive collection which is sorted.</span></td>
      </tr>
      <tr>
        <td id="L3688" class="blob-num js-line-number" data-line-number="3688"></td>
        <td id="LC3688" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3689" class="blob-num js-line-number" data-line-number="3689"></td>
        <td id="LC3689" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> node node to search</span></td>
      </tr>
      <tr>
        <td id="L3690" class="blob-num js-line-number" data-line-number="3690"></td>
        <td id="LC3690" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> directives an array to which the directives are added to. This array is sorted before</span></td>
      </tr>
      <tr>
        <td id="L3691" class="blob-num js-line-number" data-line-number="3691"></td>
        <td id="LC3691" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        the function returns.</span></td>
      </tr>
      <tr>
        <td id="L3692" class="blob-num js-line-number" data-line-number="3692"></td>
        <td id="LC3692" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> attrs the shared attrs object which is used to populate the normalized attributes.</span></td>
      </tr>
      <tr>
        <td id="L3693" class="blob-num js-line-number" data-line-number="3693"></td>
        <td id="LC3693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {number=} max directive priority</span></td>
      </tr>
      <tr>
        <td id="L3694" class="blob-num js-line-number" data-line-number="3694"></td>
        <td id="LC3694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3695" class="blob-num js-line-number" data-line-number="3695"></td>
        <td id="LC3695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">collectDirectives</span>(<span class="pl-smi">node</span>, <span class="pl-smi">directives</span>, <span class="pl-smi">attrs</span>, <span class="pl-smi">maxPriority</span>) {</td>
      </tr>
      <tr>
        <td id="L3696" class="blob-num js-line-number" data-line-number="3696"></td>
        <td id="LC3696" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> nodeType <span class="pl-k">=</span> node.<span class="pl-c1">nodeType</span>,</td>
      </tr>
      <tr>
        <td id="L3697" class="blob-num js-line-number" data-line-number="3697"></td>
        <td id="LC3697" class="blob-code blob-code-inner js-file-line">          attrsMap <span class="pl-k">=</span> attrs.$attr,</td>
      </tr>
      <tr>
        <td id="L3698" class="blob-num js-line-number" data-line-number="3698"></td>
        <td id="LC3698" class="blob-code blob-code-inner js-file-line">          match,</td>
      </tr>
      <tr>
        <td id="L3699" class="blob-num js-line-number" data-line-number="3699"></td>
        <td id="LC3699" class="blob-code blob-code-inner js-file-line">          className;</td>
      </tr>
      <tr>
        <td id="L3700" class="blob-num js-line-number" data-line-number="3700"></td>
        <td id="LC3700" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3701" class="blob-num js-line-number" data-line-number="3701"></td>
        <td id="LC3701" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span>(nodeType) {</td>
      </tr>
      <tr>
        <td id="L3702" class="blob-num js-line-number" data-line-number="3702"></td>
        <td id="LC3702" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span> <span class="pl-c">/* Element */</span></td>
      </tr>
      <tr>
        <td id="L3703" class="blob-num js-line-number" data-line-number="3703"></td>
        <td id="LC3703" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// use the node name: &lt;directive&gt;</span></td>
      </tr>
      <tr>
        <td id="L3704" class="blob-num js-line-number" data-line-number="3704"></td>
        <td id="LC3704" class="blob-code blob-code-inner js-file-line">          addDirective(directives,</td>
      </tr>
      <tr>
        <td id="L3705" class="blob-num js-line-number" data-line-number="3705"></td>
        <td id="LC3705" class="blob-code blob-code-inner js-file-line">              directiveNormalize(nodeName_(node).<span class="pl-c1">toLowerCase</span>()), <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>, maxPriority);</td>
      </tr>
      <tr>
        <td id="L3706" class="blob-num js-line-number" data-line-number="3706"></td>
        <td id="LC3706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3707" class="blob-num js-line-number" data-line-number="3707"></td>
        <td id="LC3707" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// iterate over the attributes</span></td>
      </tr>
      <tr>
        <td id="L3708" class="blob-num js-line-number" data-line-number="3708"></td>
        <td id="LC3708" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (<span class="pl-k">var</span> attr, name, nName, value, nAttrs <span class="pl-k">=</span> node.<span class="pl-c1">attributes</span>,</td>
      </tr>
      <tr>
        <td id="L3709" class="blob-num js-line-number" data-line-number="3709"></td>
        <td id="LC3709" class="blob-code blob-code-inner js-file-line">                   j <span class="pl-k">=</span> <span class="pl-c1">0</span>, jj <span class="pl-k">=</span> nAttrs <span class="pl-k">&amp;&amp;</span> nAttrs.<span class="pl-c1">length</span>; j <span class="pl-k">&lt;</span> jj; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3710" class="blob-num js-line-number" data-line-number="3710"></td>
        <td id="LC3710" class="blob-code blob-code-inner js-file-line">            attr <span class="pl-k">=</span> nAttrs[j];</td>
      </tr>
      <tr>
        <td id="L3711" class="blob-num js-line-number" data-line-number="3711"></td>
        <td id="LC3711" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (attr.<span class="pl-c1">specified</span>) {</td>
      </tr>
      <tr>
        <td id="L3712" class="blob-num js-line-number" data-line-number="3712"></td>
        <td id="LC3712" class="blob-code blob-code-inner js-file-line">              name <span class="pl-k">=</span> attr.<span class="pl-c1">name</span>;</td>
      </tr>
      <tr>
        <td id="L3713" class="blob-num js-line-number" data-line-number="3713"></td>
        <td id="LC3713" class="blob-code blob-code-inner js-file-line">              nName <span class="pl-k">=</span> directiveNormalize(name.<span class="pl-c1">toLowerCase</span>());</td>
      </tr>
      <tr>
        <td id="L3714" class="blob-num js-line-number" data-line-number="3714"></td>
        <td id="LC3714" class="blob-code blob-code-inner js-file-line">              attrsMap[nName] <span class="pl-k">=</span> name;</td>
      </tr>
      <tr>
        <td id="L3715" class="blob-num js-line-number" data-line-number="3715"></td>
        <td id="LC3715" class="blob-code blob-code-inner js-file-line">              attrs[nName] <span class="pl-k">=</span> value <span class="pl-k">=</span> trim((msie <span class="pl-k">&amp;&amp;</span> name <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L3716" class="blob-num js-line-number" data-line-number="3716"></td>
        <td id="LC3716" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">?</span> decodeURIComponent(node.<span class="pl-c1">getAttribute</span>(name, <span class="pl-c1">2</span>))</td>
      </tr>
      <tr>
        <td id="L3717" class="blob-num js-line-number" data-line-number="3717"></td>
        <td id="LC3717" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">:</span> attr.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L3718" class="blob-num js-line-number" data-line-number="3718"></td>
        <td id="LC3718" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (isBooleanAttr(node, nName)) {</td>
      </tr>
      <tr>
        <td id="L3719" class="blob-num js-line-number" data-line-number="3719"></td>
        <td id="LC3719" class="blob-code blob-code-inner js-file-line">                attrs[nName] <span class="pl-k">=</span> <span class="pl-c1">true</span>; <span class="pl-c">// presence means true</span></td>
      </tr>
      <tr>
        <td id="L3720" class="blob-num js-line-number" data-line-number="3720"></td>
        <td id="LC3720" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3721" class="blob-num js-line-number" data-line-number="3721"></td>
        <td id="LC3721" class="blob-code blob-code-inner js-file-line">              addAttrInterpolateDirective(node, directives, value, nName);</td>
      </tr>
      <tr>
        <td id="L3722" class="blob-num js-line-number" data-line-number="3722"></td>
        <td id="LC3722" class="blob-code blob-code-inner js-file-line">              addDirective(directives, nName, <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span>, maxPriority);</td>
      </tr>
      <tr>
        <td id="L3723" class="blob-num js-line-number" data-line-number="3723"></td>
        <td id="LC3723" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3724" class="blob-num js-line-number" data-line-number="3724"></td>
        <td id="LC3724" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3725" class="blob-num js-line-number" data-line-number="3725"></td>
        <td id="LC3725" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3726" class="blob-num js-line-number" data-line-number="3726"></td>
        <td id="LC3726" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// use class as directive</span></td>
      </tr>
      <tr>
        <td id="L3727" class="blob-num js-line-number" data-line-number="3727"></td>
        <td id="LC3727" class="blob-code blob-code-inner js-file-line">          className <span class="pl-k">=</span> node.<span class="pl-c1">className</span>;</td>
      </tr>
      <tr>
        <td id="L3728" class="blob-num js-line-number" data-line-number="3728"></td>
        <td id="LC3728" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isString(className)) {</td>
      </tr>
      <tr>
        <td id="L3729" class="blob-num js-line-number" data-line-number="3729"></td>
        <td id="LC3729" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span> (match <span class="pl-k">=</span> <span class="pl-c1">CLASS_DIRECTIVE_REGEXP</span>.<span class="pl-c1">exec</span>(className)) {</td>
      </tr>
      <tr>
        <td id="L3730" class="blob-num js-line-number" data-line-number="3730"></td>
        <td id="LC3730" class="blob-code blob-code-inner js-file-line">              nName <span class="pl-k">=</span> directiveNormalize(match[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L3731" class="blob-num js-line-number" data-line-number="3731"></td>
        <td id="LC3731" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (addDirective(directives, nName, <span class="pl-s"><span class="pl-pds">&#39;</span>C<span class="pl-pds">&#39;</span></span>, maxPriority)) {</td>
      </tr>
      <tr>
        <td id="L3732" class="blob-num js-line-number" data-line-number="3732"></td>
        <td id="LC3732" class="blob-code blob-code-inner js-file-line">                attrs[nName] <span class="pl-k">=</span> trim(match[<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L3733" class="blob-num js-line-number" data-line-number="3733"></td>
        <td id="LC3733" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3734" class="blob-num js-line-number" data-line-number="3734"></td>
        <td id="LC3734" class="blob-code blob-code-inner js-file-line">              className <span class="pl-k">=</span> className.<span class="pl-c1">substr</span>(match.<span class="pl-c1">index</span> <span class="pl-k">+</span> match[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L3735" class="blob-num js-line-number" data-line-number="3735"></td>
        <td id="LC3735" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3736" class="blob-num js-line-number" data-line-number="3736"></td>
        <td id="LC3736" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3737" class="blob-num js-line-number" data-line-number="3737"></td>
        <td id="LC3737" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3738" class="blob-num js-line-number" data-line-number="3738"></td>
        <td id="LC3738" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span> <span class="pl-c">/* Text Node */</span></td>
      </tr>
      <tr>
        <td id="L3739" class="blob-num js-line-number" data-line-number="3739"></td>
        <td id="LC3739" class="blob-code blob-code-inner js-file-line">          addTextInterpolateDirective(directives, node.<span class="pl-c1">nodeValue</span>);</td>
      </tr>
      <tr>
        <td id="L3740" class="blob-num js-line-number" data-line-number="3740"></td>
        <td id="LC3740" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3741" class="blob-num js-line-number" data-line-number="3741"></td>
        <td id="LC3741" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span> <span class="pl-c">/* Comment */</span></td>
      </tr>
      <tr>
        <td id="L3742" class="blob-num js-line-number" data-line-number="3742"></td>
        <td id="LC3742" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3743" class="blob-num js-line-number" data-line-number="3743"></td>
        <td id="LC3743" class="blob-code blob-code-inner js-file-line">            match <span class="pl-k">=</span> <span class="pl-c1">COMMENT_DIRECTIVE_REGEXP</span>.<span class="pl-c1">exec</span>(node.<span class="pl-c1">nodeValue</span>);</td>
      </tr>
      <tr>
        <td id="L3744" class="blob-num js-line-number" data-line-number="3744"></td>
        <td id="LC3744" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (match) {</td>
      </tr>
      <tr>
        <td id="L3745" class="blob-num js-line-number" data-line-number="3745"></td>
        <td id="LC3745" class="blob-code blob-code-inner js-file-line">              nName <span class="pl-k">=</span> directiveNormalize(match[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L3746" class="blob-num js-line-number" data-line-number="3746"></td>
        <td id="LC3746" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (addDirective(directives, nName, <span class="pl-s"><span class="pl-pds">&#39;</span>M<span class="pl-pds">&#39;</span></span>, maxPriority)) {</td>
      </tr>
      <tr>
        <td id="L3747" class="blob-num js-line-number" data-line-number="3747"></td>
        <td id="LC3747" class="blob-code blob-code-inner js-file-line">                attrs[nName] <span class="pl-k">=</span> trim(match[<span class="pl-c1">2</span>]);</td>
      </tr>
      <tr>
        <td id="L3748" class="blob-num js-line-number" data-line-number="3748"></td>
        <td id="LC3748" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L3749" class="blob-num js-line-number" data-line-number="3749"></td>
        <td id="LC3749" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3750" class="blob-num js-line-number" data-line-number="3750"></td>
        <td id="LC3750" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L3751" class="blob-num js-line-number" data-line-number="3751"></td>
        <td id="LC3751" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// turns out that under some circumstances IE9 throws errors when one attempts to read comment&#39;s node value.</span></td>
      </tr>
      <tr>
        <td id="L3752" class="blob-num js-line-number" data-line-number="3752"></td>
        <td id="LC3752" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// Just ignore it and continue. (Can&#39;t seem to reproduce in test case.)</span></td>
      </tr>
      <tr>
        <td id="L3753" class="blob-num js-line-number" data-line-number="3753"></td>
        <td id="LC3753" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3754" class="blob-num js-line-number" data-line-number="3754"></td>
        <td id="LC3754" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3755" class="blob-num js-line-number" data-line-number="3755"></td>
        <td id="LC3755" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3756" class="blob-num js-line-number" data-line-number="3756"></td>
        <td id="LC3756" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3757" class="blob-num js-line-number" data-line-number="3757"></td>
        <td id="LC3757" class="blob-code blob-code-inner js-file-line">      directives.<span class="pl-c1">sort</span>(byPriority);</td>
      </tr>
      <tr>
        <td id="L3758" class="blob-num js-line-number" data-line-number="3758"></td>
        <td id="LC3758" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> directives;</td>
      </tr>
      <tr>
        <td id="L3759" class="blob-num js-line-number" data-line-number="3759"></td>
        <td id="LC3759" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L3760" class="blob-num js-line-number" data-line-number="3760"></td>
        <td id="LC3760" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3761" class="blob-num js-line-number" data-line-number="3761"></td>
        <td id="LC3761" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3762" class="blob-num js-line-number" data-line-number="3762"></td>
        <td id="LC3762" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L3763" class="blob-num js-line-number" data-line-number="3763"></td>
        <td id="LC3763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Once the directives have been collected their compile functions is executed. This method</span></td>
      </tr>
      <tr>
        <td id="L3764" class="blob-num js-line-number" data-line-number="3764"></td>
        <td id="LC3764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * is responsible for inlining directive templates as well as terminating the application</span></td>
      </tr>
      <tr>
        <td id="L3765" class="blob-num js-line-number" data-line-number="3765"></td>
        <td id="LC3765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * of the directives if the terminal directive has been reached..</span></td>
      </tr>
      <tr>
        <td id="L3766" class="blob-num js-line-number" data-line-number="3766"></td>
        <td id="LC3766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L3767" class="blob-num js-line-number" data-line-number="3767"></td>
        <td id="LC3767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Array} directives Array of collected directives to execute their compile function.</span></td>
      </tr>
      <tr>
        <td id="L3768" class="blob-num js-line-number" data-line-number="3768"></td>
        <td id="LC3768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        this needs to be pre-sorted by priority order.</span></td>
      </tr>
      <tr>
        <td id="L3769" class="blob-num js-line-number" data-line-number="3769"></td>
        <td id="LC3769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Node} templateNode The raw DOM node to apply the compile functions to</span></td>
      </tr>
      <tr>
        <td id="L3770" class="blob-num js-line-number" data-line-number="3770"></td>
        <td id="LC3770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object} templateAttrs The shared attribute function</span></td>
      </tr>
      <tr>
        <td id="L3771" class="blob-num js-line-number" data-line-number="3771"></td>
        <td id="LC3771" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {function(angular.Scope[, cloneAttachFn]} transcludeFn A linking function, where the</span></td>
      </tr>
      <tr>
        <td id="L3772" class="blob-num js-line-number" data-line-number="3772"></td>
        <td id="LC3772" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        scope argument is auto-generated to the new child of the transcluded parent scope.</span></td>
      </tr>
      <tr>
        <td id="L3773" class="blob-num js-line-number" data-line-number="3773"></td>
        <td id="LC3773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {DOMElement} rootElement If we are working on the root of the compile tree then this</span></td>
      </tr>
      <tr>
        <td id="L3774" class="blob-num js-line-number" data-line-number="3774"></td>
        <td id="LC3774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *        argument has the root jqLite array so that we can replace widgets on it.</span></td>
      </tr>
      <tr>
        <td id="L3775" class="blob-num js-line-number" data-line-number="3775"></td>
        <td id="LC3775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> linkingFn</span></td>
      </tr>
      <tr>
        <td id="L3776" class="blob-num js-line-number" data-line-number="3776"></td>
        <td id="LC3776" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L3777" class="blob-num js-line-number" data-line-number="3777"></td>
        <td id="LC3777" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">applyDirectivesToNode</span>(<span class="pl-smi">directives</span>, <span class="pl-smi">templateNode</span>, <span class="pl-smi">templateAttrs</span>, <span class="pl-smi">transcludeFn</span>, <span class="pl-smi">rootElement</span>) {</td>
      </tr>
      <tr>
        <td id="L3778" class="blob-num js-line-number" data-line-number="3778"></td>
        <td id="LC3778" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> terminalPriority <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">Number</span>.<span class="pl-c1">MAX_VALUE</span>,</td>
      </tr>
      <tr>
        <td id="L3779" class="blob-num js-line-number" data-line-number="3779"></td>
        <td id="LC3779" class="blob-code blob-code-inner js-file-line">          preLinkingFns <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3780" class="blob-num js-line-number" data-line-number="3780"></td>
        <td id="LC3780" class="blob-code blob-code-inner js-file-line">          postLinkingFns <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L3781" class="blob-num js-line-number" data-line-number="3781"></td>
        <td id="LC3781" class="blob-code blob-code-inner js-file-line">          newScopeDirective <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L3782" class="blob-num js-line-number" data-line-number="3782"></td>
        <td id="LC3782" class="blob-code blob-code-inner js-file-line">          newIsolatedScopeDirective <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L3783" class="blob-num js-line-number" data-line-number="3783"></td>
        <td id="LC3783" class="blob-code blob-code-inner js-file-line">          templateDirective <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L3784" class="blob-num js-line-number" data-line-number="3784"></td>
        <td id="LC3784" class="blob-code blob-code-inner js-file-line">          delayedLinkingFn <span class="pl-k">=</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L3785" class="blob-num js-line-number" data-line-number="3785"></td>
        <td id="LC3785" class="blob-code blob-code-inner js-file-line">          element <span class="pl-k">=</span> templateAttrs.$$element <span class="pl-k">=</span> jqLite(templateNode),</td>
      </tr>
      <tr>
        <td id="L3786" class="blob-num js-line-number" data-line-number="3786"></td>
        <td id="LC3786" class="blob-code blob-code-inner js-file-line">          directive,</td>
      </tr>
      <tr>
        <td id="L3787" class="blob-num js-line-number" data-line-number="3787"></td>
        <td id="LC3787" class="blob-code blob-code-inner js-file-line">          directiveName,</td>
      </tr>
      <tr>
        <td id="L3788" class="blob-num js-line-number" data-line-number="3788"></td>
        <td id="LC3788" class="blob-code blob-code-inner js-file-line">          template,</td>
      </tr>
      <tr>
        <td id="L3789" class="blob-num js-line-number" data-line-number="3789"></td>
        <td id="LC3789" class="blob-code blob-code-inner js-file-line">          transcludeDirective,</td>
      </tr>
      <tr>
        <td id="L3790" class="blob-num js-line-number" data-line-number="3790"></td>
        <td id="LC3790" class="blob-code blob-code-inner js-file-line">          childTranscludeFn <span class="pl-k">=</span> transcludeFn,</td>
      </tr>
      <tr>
        <td id="L3791" class="blob-num js-line-number" data-line-number="3791"></td>
        <td id="LC3791" class="blob-code blob-code-inner js-file-line">          controllerDirectives,</td>
      </tr>
      <tr>
        <td id="L3792" class="blob-num js-line-number" data-line-number="3792"></td>
        <td id="LC3792" class="blob-code blob-code-inner js-file-line">          linkingFn,</td>
      </tr>
      <tr>
        <td id="L3793" class="blob-num js-line-number" data-line-number="3793"></td>
        <td id="LC3793" class="blob-code blob-code-inner js-file-line">          directiveValue;</td>
      </tr>
      <tr>
        <td id="L3794" class="blob-num js-line-number" data-line-number="3794"></td>
        <td id="LC3794" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3795" class="blob-num js-line-number" data-line-number="3795"></td>
        <td id="LC3795" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// executes all directives on the current element</span></td>
      </tr>
      <tr>
        <td id="L3796" class="blob-num js-line-number" data-line-number="3796"></td>
        <td id="LC3796" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> directives.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3797" class="blob-num js-line-number" data-line-number="3797"></td>
        <td id="LC3797" class="blob-code blob-code-inner js-file-line">        directive <span class="pl-k">=</span> directives[i];</td>
      </tr>
      <tr>
        <td id="L3798" class="blob-num js-line-number" data-line-number="3798"></td>
        <td id="LC3798" class="blob-code blob-code-inner js-file-line">        template <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L3799" class="blob-num js-line-number" data-line-number="3799"></td>
        <td id="LC3799" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3800" class="blob-num js-line-number" data-line-number="3800"></td>
        <td id="LC3800" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (terminalPriority <span class="pl-k">&gt;</span> directive.priority) {</td>
      </tr>
      <tr>
        <td id="L3801" class="blob-num js-line-number" data-line-number="3801"></td>
        <td id="LC3801" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>; <span class="pl-c">// prevent further processing of directives</span></td>
      </tr>
      <tr>
        <td id="L3802" class="blob-num js-line-number" data-line-number="3802"></td>
        <td id="LC3802" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3803" class="blob-num js-line-number" data-line-number="3803"></td>
        <td id="LC3803" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3804" class="blob-num js-line-number" data-line-number="3804"></td>
        <td id="LC3804" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directiveValue <span class="pl-k">=</span> directive.<span class="pl-c1">scope</span>) {</td>
      </tr>
      <tr>
        <td id="L3805" class="blob-num js-line-number" data-line-number="3805"></td>
        <td id="LC3805" class="blob-code blob-code-inner js-file-line">          assertNoDuplicate(<span class="pl-s"><span class="pl-pds">&#39;</span>isolated scope<span class="pl-pds">&#39;</span></span>, newIsolatedScopeDirective, directive, element);</td>
      </tr>
      <tr>
        <td id="L3806" class="blob-num js-line-number" data-line-number="3806"></td>
        <td id="LC3806" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isObject(directiveValue)) {</td>
      </tr>
      <tr>
        <td id="L3807" class="blob-num js-line-number" data-line-number="3807"></td>
        <td id="LC3807" class="blob-code blob-code-inner js-file-line">            safeAddClass(element, <span class="pl-s"><span class="pl-pds">&#39;</span>ng-isolate-scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3808" class="blob-num js-line-number" data-line-number="3808"></td>
        <td id="LC3808" class="blob-code blob-code-inner js-file-line">            newIsolatedScopeDirective <span class="pl-k">=</span> directive;</td>
      </tr>
      <tr>
        <td id="L3809" class="blob-num js-line-number" data-line-number="3809"></td>
        <td id="LC3809" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3810" class="blob-num js-line-number" data-line-number="3810"></td>
        <td id="LC3810" class="blob-code blob-code-inner js-file-line">          safeAddClass(element, <span class="pl-s"><span class="pl-pds">&#39;</span>ng-scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3811" class="blob-num js-line-number" data-line-number="3811"></td>
        <td id="LC3811" class="blob-code blob-code-inner js-file-line">          newScopeDirective <span class="pl-k">=</span> newScopeDirective <span class="pl-k">||</span> directive;</td>
      </tr>
      <tr>
        <td id="L3812" class="blob-num js-line-number" data-line-number="3812"></td>
        <td id="LC3812" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3813" class="blob-num js-line-number" data-line-number="3813"></td>
        <td id="LC3813" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3814" class="blob-num js-line-number" data-line-number="3814"></td>
        <td id="LC3814" class="blob-code blob-code-inner js-file-line">        directiveName <span class="pl-k">=</span> directive.<span class="pl-c1">name</span>;</td>
      </tr>
      <tr>
        <td id="L3815" class="blob-num js-line-number" data-line-number="3815"></td>
        <td id="LC3815" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3816" class="blob-num js-line-number" data-line-number="3816"></td>
        <td id="LC3816" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directiveValue <span class="pl-k">=</span> directive.controller) {</td>
      </tr>
      <tr>
        <td id="L3817" class="blob-num js-line-number" data-line-number="3817"></td>
        <td id="LC3817" class="blob-code blob-code-inner js-file-line">          controllerDirectives <span class="pl-k">=</span> controllerDirectives <span class="pl-k">||</span> {};</td>
      </tr>
      <tr>
        <td id="L3818" class="blob-num js-line-number" data-line-number="3818"></td>
        <td id="LC3818" class="blob-code blob-code-inner js-file-line">          assertNoDuplicate(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> directiveName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; controller<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3819" class="blob-num js-line-number" data-line-number="3819"></td>
        <td id="LC3819" class="blob-code blob-code-inner js-file-line">              controllerDirectives[directiveName], directive, element);</td>
      </tr>
      <tr>
        <td id="L3820" class="blob-num js-line-number" data-line-number="3820"></td>
        <td id="LC3820" class="blob-code blob-code-inner js-file-line">          controllerDirectives[directiveName] <span class="pl-k">=</span> directive;</td>
      </tr>
      <tr>
        <td id="L3821" class="blob-num js-line-number" data-line-number="3821"></td>
        <td id="LC3821" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3822" class="blob-num js-line-number" data-line-number="3822"></td>
        <td id="LC3822" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3823" class="blob-num js-line-number" data-line-number="3823"></td>
        <td id="LC3823" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directiveValue <span class="pl-k">=</span> directive.transclude) {</td>
      </tr>
      <tr>
        <td id="L3824" class="blob-num js-line-number" data-line-number="3824"></td>
        <td id="LC3824" class="blob-code blob-code-inner js-file-line">          assertNoDuplicate(<span class="pl-s"><span class="pl-pds">&#39;</span>transclusion<span class="pl-pds">&#39;</span></span>, transcludeDirective, directive, element);</td>
      </tr>
      <tr>
        <td id="L3825" class="blob-num js-line-number" data-line-number="3825"></td>
        <td id="LC3825" class="blob-code blob-code-inner js-file-line">          transcludeDirective <span class="pl-k">=</span> directive;</td>
      </tr>
      <tr>
        <td id="L3826" class="blob-num js-line-number" data-line-number="3826"></td>
        <td id="LC3826" class="blob-code blob-code-inner js-file-line">          terminalPriority <span class="pl-k">=</span> directive.priority;</td>
      </tr>
      <tr>
        <td id="L3827" class="blob-num js-line-number" data-line-number="3827"></td>
        <td id="LC3827" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (directiveValue <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>element<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3828" class="blob-num js-line-number" data-line-number="3828"></td>
        <td id="LC3828" class="blob-code blob-code-inner js-file-line">            template <span class="pl-k">=</span> jqLite(templateNode);</td>
      </tr>
      <tr>
        <td id="L3829" class="blob-num js-line-number" data-line-number="3829"></td>
        <td id="LC3829" class="blob-code blob-code-inner js-file-line">            templateNode <span class="pl-k">=</span> (element <span class="pl-k">=</span> templateAttrs.$$element <span class="pl-k">=</span> jqLite(</td>
      </tr>
      <tr>
        <td id="L3830" class="blob-num js-line-number" data-line-number="3830"></td>
        <td id="LC3830" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!-- <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> directiveName <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> templateAttrs[directiveName]  <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> --&gt;<span class="pl-pds">&#39;</span></span>))[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3831" class="blob-num js-line-number" data-line-number="3831"></td>
        <td id="LC3831" class="blob-code blob-code-inner js-file-line">            replaceWith(rootElement, jqLite(template[<span class="pl-c1">0</span>]), templateNode);</td>
      </tr>
      <tr>
        <td id="L3832" class="blob-num js-line-number" data-line-number="3832"></td>
        <td id="LC3832" class="blob-code blob-code-inner js-file-line">            childTranscludeFn <span class="pl-k">=</span> <span class="pl-c1">compile</span>(template, transcludeFn, terminalPriority);</td>
      </tr>
      <tr>
        <td id="L3833" class="blob-num js-line-number" data-line-number="3833"></td>
        <td id="LC3833" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3834" class="blob-num js-line-number" data-line-number="3834"></td>
        <td id="LC3834" class="blob-code blob-code-inner js-file-line">            template <span class="pl-k">=</span> jqLite(JQLiteClone(templateNode));</td>
      </tr>
      <tr>
        <td id="L3835" class="blob-num js-line-number" data-line-number="3835"></td>
        <td id="LC3835" class="blob-code blob-code-inner js-file-line">            element.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>); <span class="pl-c">// clear contents</span></td>
      </tr>
      <tr>
        <td id="L3836" class="blob-num js-line-number" data-line-number="3836"></td>
        <td id="LC3836" class="blob-code blob-code-inner js-file-line">            childTranscludeFn <span class="pl-k">=</span> <span class="pl-c1">compile</span>(template.contents(), transcludeFn);</td>
      </tr>
      <tr>
        <td id="L3837" class="blob-num js-line-number" data-line-number="3837"></td>
        <td id="LC3837" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3838" class="blob-num js-line-number" data-line-number="3838"></td>
        <td id="LC3838" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3839" class="blob-num js-line-number" data-line-number="3839"></td>
        <td id="LC3839" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3840" class="blob-num js-line-number" data-line-number="3840"></td>
        <td id="LC3840" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directiveValue <span class="pl-k">=</span> directive.template) {</td>
      </tr>
      <tr>
        <td id="L3841" class="blob-num js-line-number" data-line-number="3841"></td>
        <td id="LC3841" class="blob-code blob-code-inner js-file-line">          assertNoDuplicate(<span class="pl-s"><span class="pl-pds">&#39;</span>template<span class="pl-pds">&#39;</span></span>, templateDirective, directive, element);</td>
      </tr>
      <tr>
        <td id="L3842" class="blob-num js-line-number" data-line-number="3842"></td>
        <td id="LC3842" class="blob-code blob-code-inner js-file-line">          templateDirective <span class="pl-k">=</span> directive;</td>
      </tr>
      <tr>
        <td id="L3843" class="blob-num js-line-number" data-line-number="3843"></td>
        <td id="LC3843" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3844" class="blob-num js-line-number" data-line-number="3844"></td>
        <td id="LC3844" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// include the contents of the original element into the template and replace the element</span></td>
      </tr>
      <tr>
        <td id="L3845" class="blob-num js-line-number" data-line-number="3845"></td>
        <td id="LC3845" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> content <span class="pl-k">=</span> directiveValue.<span class="pl-c1">replace</span>(<span class="pl-c1">CONTENT_REGEXP</span>, element.html());</td>
      </tr>
      <tr>
        <td id="L3846" class="blob-num js-line-number" data-line-number="3846"></td>
        <td id="LC3846" class="blob-code blob-code-inner js-file-line">          templateNode <span class="pl-k">=</span> jqLite(content)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L3847" class="blob-num js-line-number" data-line-number="3847"></td>
        <td id="LC3847" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (directive.replace) {</td>
      </tr>
      <tr>
        <td id="L3848" class="blob-num js-line-number" data-line-number="3848"></td>
        <td id="LC3848" class="blob-code blob-code-inner js-file-line">            replaceWith(rootElement, element, templateNode);</td>
      </tr>
      <tr>
        <td id="L3849" class="blob-num js-line-number" data-line-number="3849"></td>
        <td id="LC3849" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3850" class="blob-num js-line-number" data-line-number="3850"></td>
        <td id="LC3850" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> newTemplateAttrs <span class="pl-k">=</span> {$attr<span class="pl-k">:</span> {}};</td>
      </tr>
      <tr>
        <td id="L3851" class="blob-num js-line-number" data-line-number="3851"></td>
        <td id="LC3851" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3852" class="blob-num js-line-number" data-line-number="3852"></td>
        <td id="LC3852" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// combine directives from the original node and from the template:</span></td>
      </tr>
      <tr>
        <td id="L3853" class="blob-num js-line-number" data-line-number="3853"></td>
        <td id="LC3853" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// - take the array of directives for this element</span></td>
      </tr>
      <tr>
        <td id="L3854" class="blob-num js-line-number" data-line-number="3854"></td>
        <td id="LC3854" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// - split it into two parts, those that were already applied and those that weren&#39;t</span></td>
      </tr>
      <tr>
        <td id="L3855" class="blob-num js-line-number" data-line-number="3855"></td>
        <td id="LC3855" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// - collect directives from the template, add them to the second group and sort them</span></td>
      </tr>
      <tr>
        <td id="L3856" class="blob-num js-line-number" data-line-number="3856"></td>
        <td id="LC3856" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// - append the second group with new directives to the first group</span></td>
      </tr>
      <tr>
        <td id="L3857" class="blob-num js-line-number" data-line-number="3857"></td>
        <td id="LC3857" class="blob-code blob-code-inner js-file-line">            directives <span class="pl-k">=</span> directives.<span class="pl-c1">concat</span>(</td>
      </tr>
      <tr>
        <td id="L3858" class="blob-num js-line-number" data-line-number="3858"></td>
        <td id="LC3858" class="blob-code blob-code-inner js-file-line">                collectDirectives(</td>
      </tr>
      <tr>
        <td id="L3859" class="blob-num js-line-number" data-line-number="3859"></td>
        <td id="LC3859" class="blob-code blob-code-inner js-file-line">                    templateNode,</td>
      </tr>
      <tr>
        <td id="L3860" class="blob-num js-line-number" data-line-number="3860"></td>
        <td id="LC3860" class="blob-code blob-code-inner js-file-line">                    directives.<span class="pl-c1">splice</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>, directives.<span class="pl-c1">length</span> <span class="pl-k">-</span> (i <span class="pl-k">+</span> <span class="pl-c1">1</span>)),</td>
      </tr>
      <tr>
        <td id="L3861" class="blob-num js-line-number" data-line-number="3861"></td>
        <td id="LC3861" class="blob-code blob-code-inner js-file-line">                    newTemplateAttrs</td>
      </tr>
      <tr>
        <td id="L3862" class="blob-num js-line-number" data-line-number="3862"></td>
        <td id="LC3862" class="blob-code blob-code-inner js-file-line">                )</td>
      </tr>
      <tr>
        <td id="L3863" class="blob-num js-line-number" data-line-number="3863"></td>
        <td id="LC3863" class="blob-code blob-code-inner js-file-line">            );</td>
      </tr>
      <tr>
        <td id="L3864" class="blob-num js-line-number" data-line-number="3864"></td>
        <td id="LC3864" class="blob-code blob-code-inner js-file-line">            mergeTemplateAttributes(templateAttrs, newTemplateAttrs);</td>
      </tr>
      <tr>
        <td id="L3865" class="blob-num js-line-number" data-line-number="3865"></td>
        <td id="LC3865" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3866" class="blob-num js-line-number" data-line-number="3866"></td>
        <td id="LC3866" class="blob-code blob-code-inner js-file-line">            ii <span class="pl-k">=</span> directives.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3867" class="blob-num js-line-number" data-line-number="3867"></td>
        <td id="LC3867" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3868" class="blob-num js-line-number" data-line-number="3868"></td>
        <td id="LC3868" class="blob-code blob-code-inner js-file-line">            element.html(content);</td>
      </tr>
      <tr>
        <td id="L3869" class="blob-num js-line-number" data-line-number="3869"></td>
        <td id="LC3869" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3870" class="blob-num js-line-number" data-line-number="3870"></td>
        <td id="LC3870" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3871" class="blob-num js-line-number" data-line-number="3871"></td>
        <td id="LC3871" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3872" class="blob-num js-line-number" data-line-number="3872"></td>
        <td id="LC3872" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directive.templateUrl) {</td>
      </tr>
      <tr>
        <td id="L3873" class="blob-num js-line-number" data-line-number="3873"></td>
        <td id="LC3873" class="blob-code blob-code-inner js-file-line">          assertNoDuplicate(<span class="pl-s"><span class="pl-pds">&#39;</span>template<span class="pl-pds">&#39;</span></span>, templateDirective, directive, element);</td>
      </tr>
      <tr>
        <td id="L3874" class="blob-num js-line-number" data-line-number="3874"></td>
        <td id="LC3874" class="blob-code blob-code-inner js-file-line">          templateDirective <span class="pl-k">=</span> directive;</td>
      </tr>
      <tr>
        <td id="L3875" class="blob-num js-line-number" data-line-number="3875"></td>
        <td id="LC3875" class="blob-code blob-code-inner js-file-line">          delayedLinkingFn <span class="pl-k">=</span> compileTemplateUrl(directives.<span class="pl-c1">splice</span>(i, directives.<span class="pl-c1">length</span> <span class="pl-k">-</span> i),</td>
      </tr>
      <tr>
        <td id="L3876" class="blob-num js-line-number" data-line-number="3876"></td>
        <td id="LC3876" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">/* directiveLinkingFn */</span> compositeLinkFn, element, templateAttrs, rootElement,</td>
      </tr>
      <tr>
        <td id="L3877" class="blob-num js-line-number" data-line-number="3877"></td>
        <td id="LC3877" class="blob-code blob-code-inner js-file-line">              directive.replace, childTranscludeFn);</td>
      </tr>
      <tr>
        <td id="L3878" class="blob-num js-line-number" data-line-number="3878"></td>
        <td id="LC3878" class="blob-code blob-code-inner js-file-line">          ii <span class="pl-k">=</span> directives.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L3879" class="blob-num js-line-number" data-line-number="3879"></td>
        <td id="LC3879" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (directive.compile) {</td>
      </tr>
      <tr>
        <td id="L3880" class="blob-num js-line-number" data-line-number="3880"></td>
        <td id="LC3880" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3881" class="blob-num js-line-number" data-line-number="3881"></td>
        <td id="LC3881" class="blob-code blob-code-inner js-file-line">            linkingFn <span class="pl-k">=</span> directive.<span class="pl-c1">compile</span>(element, templateAttrs, childTranscludeFn);</td>
      </tr>
      <tr>
        <td id="L3882" class="blob-num js-line-number" data-line-number="3882"></td>
        <td id="LC3882" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isFunction(linkingFn)) {</td>
      </tr>
      <tr>
        <td id="L3883" class="blob-num js-line-number" data-line-number="3883"></td>
        <td id="LC3883" class="blob-code blob-code-inner js-file-line">              addLinkingFns(<span class="pl-c1">null</span>, linkingFn);</td>
      </tr>
      <tr>
        <td id="L3884" class="blob-num js-line-number" data-line-number="3884"></td>
        <td id="LC3884" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> <span class="pl-k">if</span> (linkingFn) {</td>
      </tr>
      <tr>
        <td id="L3885" class="blob-num js-line-number" data-line-number="3885"></td>
        <td id="LC3885" class="blob-code blob-code-inner js-file-line">              addLinkingFns(linkingFn.pre, linkingFn.post);</td>
      </tr>
      <tr>
        <td id="L3886" class="blob-num js-line-number" data-line-number="3886"></td>
        <td id="LC3886" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3887" class="blob-num js-line-number" data-line-number="3887"></td>
        <td id="LC3887" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L3888" class="blob-num js-line-number" data-line-number="3888"></td>
        <td id="LC3888" class="blob-code blob-code-inner js-file-line">            $exceptionHandler(e, startingTag(element));</td>
      </tr>
      <tr>
        <td id="L3889" class="blob-num js-line-number" data-line-number="3889"></td>
        <td id="LC3889" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3890" class="blob-num js-line-number" data-line-number="3890"></td>
        <td id="LC3890" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3891" class="blob-num js-line-number" data-line-number="3891"></td>
        <td id="LC3891" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3892" class="blob-num js-line-number" data-line-number="3892"></td>
        <td id="LC3892" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (directive.terminal) {</td>
      </tr>
      <tr>
        <td id="L3893" class="blob-num js-line-number" data-line-number="3893"></td>
        <td id="LC3893" class="blob-code blob-code-inner js-file-line">          compositeLinkFn.terminal <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L3894" class="blob-num js-line-number" data-line-number="3894"></td>
        <td id="LC3894" class="blob-code blob-code-inner js-file-line">          terminalPriority <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(terminalPriority, directive.priority);</td>
      </tr>
      <tr>
        <td id="L3895" class="blob-num js-line-number" data-line-number="3895"></td>
        <td id="LC3895" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3896" class="blob-num js-line-number" data-line-number="3896"></td>
        <td id="LC3896" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3897" class="blob-num js-line-number" data-line-number="3897"></td>
        <td id="LC3897" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3898" class="blob-num js-line-number" data-line-number="3898"></td>
        <td id="LC3898" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3899" class="blob-num js-line-number" data-line-number="3899"></td>
        <td id="LC3899" class="blob-code blob-code-inner js-file-line">      linkingFn <span class="pl-k">=</span> delayedLinkingFn <span class="pl-k">||</span> compositeLinkFn;</td>
      </tr>
      <tr>
        <td id="L3900" class="blob-num js-line-number" data-line-number="3900"></td>
        <td id="LC3900" class="blob-code blob-code-inner js-file-line">      linkingFn.<span class="pl-c1">scope</span> <span class="pl-k">=</span> newScopeDirective <span class="pl-k">&amp;&amp;</span> newScopeDirective.<span class="pl-c1">scope</span>;</td>
      </tr>
      <tr>
        <td id="L3901" class="blob-num js-line-number" data-line-number="3901"></td>
        <td id="LC3901" class="blob-code blob-code-inner js-file-line">      linkingFn.transclude <span class="pl-k">=</span> transcludeDirective <span class="pl-k">&amp;&amp;</span> childTranscludeFn;</td>
      </tr>
      <tr>
        <td id="L3902" class="blob-num js-line-number" data-line-number="3902"></td>
        <td id="LC3902" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3903" class="blob-num js-line-number" data-line-number="3903"></td>
        <td id="LC3903" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// if we have templateUrl, then we have to delay linking</span></td>
      </tr>
      <tr>
        <td id="L3904" class="blob-num js-line-number" data-line-number="3904"></td>
        <td id="LC3904" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> linkingFn;</td>
      </tr>
      <tr>
        <td id="L3905" class="blob-num js-line-number" data-line-number="3905"></td>
        <td id="LC3905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3906" class="blob-num js-line-number" data-line-number="3906"></td>
        <td id="LC3906" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">////////////////////</span></td>
      </tr>
      <tr>
        <td id="L3907" class="blob-num js-line-number" data-line-number="3907"></td>
        <td id="LC3907" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3908" class="blob-num js-line-number" data-line-number="3908"></td>
        <td id="LC3908" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">addLinkingFns</span>(<span class="pl-smi">pre</span>, <span class="pl-smi">post</span>) {</td>
      </tr>
      <tr>
        <td id="L3909" class="blob-num js-line-number" data-line-number="3909"></td>
        <td id="LC3909" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (pre) {</td>
      </tr>
      <tr>
        <td id="L3910" class="blob-num js-line-number" data-line-number="3910"></td>
        <td id="LC3910" class="blob-code blob-code-inner js-file-line">          pre.require <span class="pl-k">=</span> directive.require;</td>
      </tr>
      <tr>
        <td id="L3911" class="blob-num js-line-number" data-line-number="3911"></td>
        <td id="LC3911" class="blob-code blob-code-inner js-file-line">          preLinkingFns.<span class="pl-c1">push</span>(pre);</td>
      </tr>
      <tr>
        <td id="L3912" class="blob-num js-line-number" data-line-number="3912"></td>
        <td id="LC3912" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3913" class="blob-num js-line-number" data-line-number="3913"></td>
        <td id="LC3913" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (post) {</td>
      </tr>
      <tr>
        <td id="L3914" class="blob-num js-line-number" data-line-number="3914"></td>
        <td id="LC3914" class="blob-code blob-code-inner js-file-line">          post.require <span class="pl-k">=</span> directive.require;</td>
      </tr>
      <tr>
        <td id="L3915" class="blob-num js-line-number" data-line-number="3915"></td>
        <td id="LC3915" class="blob-code blob-code-inner js-file-line">          postLinkingFns.<span class="pl-c1">push</span>(post);</td>
      </tr>
      <tr>
        <td id="L3916" class="blob-num js-line-number" data-line-number="3916"></td>
        <td id="LC3916" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3917" class="blob-num js-line-number" data-line-number="3917"></td>
        <td id="LC3917" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3918" class="blob-num js-line-number" data-line-number="3918"></td>
        <td id="LC3918" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3919" class="blob-num js-line-number" data-line-number="3919"></td>
        <td id="LC3919" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3920" class="blob-num js-line-number" data-line-number="3920"></td>
        <td id="LC3920" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">getControllers</span>(<span class="pl-smi">require</span>, <span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L3921" class="blob-num js-line-number" data-line-number="3921"></td>
        <td id="LC3921" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> value, retrievalMethod <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>data<span class="pl-pds">&#39;</span></span>, optional <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L3922" class="blob-num js-line-number" data-line-number="3922"></td>
        <td id="LC3922" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isString(<span class="pl-c1">require</span>)) {</td>
      </tr>
      <tr>
        <td id="L3923" class="blob-num js-line-number" data-line-number="3923"></td>
        <td id="LC3923" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span>((value <span class="pl-k">=</span> <span class="pl-c1">require</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>^<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3924" class="blob-num js-line-number" data-line-number="3924"></td>
        <td id="LC3924" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">require</span> <span class="pl-k">=</span> <span class="pl-c1">require</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L3925" class="blob-num js-line-number" data-line-number="3925"></td>
        <td id="LC3925" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>^<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3926" class="blob-num js-line-number" data-line-number="3926"></td>
        <td id="LC3926" class="blob-code blob-code-inner js-file-line">              retrievalMethod <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>inheritedData<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3927" class="blob-num js-line-number" data-line-number="3927"></td>
        <td id="LC3927" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3928" class="blob-num js-line-number" data-line-number="3928"></td>
        <td id="LC3928" class="blob-code blob-code-inner js-file-line">            optional <span class="pl-k">=</span> optional <span class="pl-k">||</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L3929" class="blob-num js-line-number" data-line-number="3929"></td>
        <td id="LC3929" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3930" class="blob-num js-line-number" data-line-number="3930"></td>
        <td id="LC3930" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> element[retrievalMethod](<span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">require</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Controller<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L3931" class="blob-num js-line-number" data-line-number="3931"></td>
        <td id="LC3931" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>value <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>optional) {</td>
      </tr>
      <tr>
        <td id="L3932" class="blob-num js-line-number" data-line-number="3932"></td>
        <td id="LC3932" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>No controller: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> <span class="pl-c1">require</span>);</td>
      </tr>
      <tr>
        <td id="L3933" class="blob-num js-line-number" data-line-number="3933"></td>
        <td id="LC3933" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3934" class="blob-num js-line-number" data-line-number="3934"></td>
        <td id="LC3934" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3935" class="blob-num js-line-number" data-line-number="3935"></td>
        <td id="LC3935" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (isArray(<span class="pl-c1">require</span>)) {</td>
      </tr>
      <tr>
        <td id="L3936" class="blob-num js-line-number" data-line-number="3936"></td>
        <td id="LC3936" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L3937" class="blob-num js-line-number" data-line-number="3937"></td>
        <td id="LC3937" class="blob-code blob-code-inner js-file-line">          forEach(<span class="pl-c1">require</span>, <span class="pl-k">function</span>(<span class="pl-smi">require</span>) {</td>
      </tr>
      <tr>
        <td id="L3938" class="blob-num js-line-number" data-line-number="3938"></td>
        <td id="LC3938" class="blob-code blob-code-inner js-file-line">            value.<span class="pl-c1">push</span>(getControllers(<span class="pl-c1">require</span>, element));</td>
      </tr>
      <tr>
        <td id="L3939" class="blob-num js-line-number" data-line-number="3939"></td>
        <td id="LC3939" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L3940" class="blob-num js-line-number" data-line-number="3940"></td>
        <td id="LC3940" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3941" class="blob-num js-line-number" data-line-number="3941"></td>
        <td id="LC3941" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L3942" class="blob-num js-line-number" data-line-number="3942"></td>
        <td id="LC3942" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L3943" class="blob-num js-line-number" data-line-number="3943"></td>
        <td id="LC3943" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3944" class="blob-num js-line-number" data-line-number="3944"></td>
        <td id="LC3944" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3945" class="blob-num js-line-number" data-line-number="3945"></td>
        <td id="LC3945" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/* directiveLinkingFn */</span></td>
      </tr>
      <tr>
        <td id="L3946" class="blob-num js-line-number" data-line-number="3946"></td>
        <td id="LC3946" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">compositeLinkFn</span>(<span class="pl-c">/* nodesetLinkingFn */</span> <span class="pl-smi">childLinkingFn</span>,</td>
      </tr>
      <tr>
        <td id="L3947" class="blob-num js-line-number" data-line-number="3947"></td>
        <td id="LC3947" class="blob-code blob-code-inner js-file-line">                               <span class="pl-smi">scope</span>, <span class="pl-smi">linkNode</span>, <span class="pl-smi">rootElement</span>, <span class="pl-smi">boundTranscludeFn</span>) {</td>
      </tr>
      <tr>
        <td id="L3948" class="blob-num js-line-number" data-line-number="3948"></td>
        <td id="LC3948" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> attrs, element, i, ii, linkingFn, controller;</td>
      </tr>
      <tr>
        <td id="L3949" class="blob-num js-line-number" data-line-number="3949"></td>
        <td id="LC3949" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3950" class="blob-num js-line-number" data-line-number="3950"></td>
        <td id="LC3950" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (templateNode <span class="pl-k">===</span> linkNode) {</td>
      </tr>
      <tr>
        <td id="L3951" class="blob-num js-line-number" data-line-number="3951"></td>
        <td id="LC3951" class="blob-code blob-code-inner js-file-line">          attrs <span class="pl-k">=</span> templateAttrs;</td>
      </tr>
      <tr>
        <td id="L3952" class="blob-num js-line-number" data-line-number="3952"></td>
        <td id="LC3952" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L3953" class="blob-num js-line-number" data-line-number="3953"></td>
        <td id="LC3953" class="blob-code blob-code-inner js-file-line">          attrs <span class="pl-k">=</span> shallowCopy(templateAttrs, <span class="pl-k">new</span> <span class="pl-en">Attributes</span>(jqLite(linkNode), templateAttrs.$attr));</td>
      </tr>
      <tr>
        <td id="L3954" class="blob-num js-line-number" data-line-number="3954"></td>
        <td id="LC3954" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3955" class="blob-num js-line-number" data-line-number="3955"></td>
        <td id="LC3955" class="blob-code blob-code-inner js-file-line">        element <span class="pl-k">=</span> attrs.$$element;</td>
      </tr>
      <tr>
        <td id="L3956" class="blob-num js-line-number" data-line-number="3956"></td>
        <td id="LC3956" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3957" class="blob-num js-line-number" data-line-number="3957"></td>
        <td id="LC3957" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (newScopeDirective <span class="pl-k">&amp;&amp;</span> isObject(newScopeDirective.<span class="pl-c1">scope</span>)) {</td>
      </tr>
      <tr>
        <td id="L3958" class="blob-num js-line-number" data-line-number="3958"></td>
        <td id="LC3958" class="blob-code blob-code-inner js-file-line">          forEach(newScopeDirective.<span class="pl-c1">scope</span>, <span class="pl-k">function</span>(<span class="pl-smi">mode</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3959" class="blob-num js-line-number" data-line-number="3959"></td>
        <td id="LC3959" class="blob-code blob-code-inner js-file-line">            (<span class="pl-c1">LOCAL_MODE</span>[mode] <span class="pl-k">||</span> wrongMode)(name, mode,</td>
      </tr>
      <tr>
        <td id="L3960" class="blob-num js-line-number" data-line-number="3960"></td>
        <td id="LC3960" class="blob-code blob-code-inner js-file-line">                scope.$parent <span class="pl-k">||</span> scope, scope, attrs);</td>
      </tr>
      <tr>
        <td id="L3961" class="blob-num js-line-number" data-line-number="3961"></td>
        <td id="LC3961" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L3962" class="blob-num js-line-number" data-line-number="3962"></td>
        <td id="LC3962" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3963" class="blob-num js-line-number" data-line-number="3963"></td>
        <td id="LC3963" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3964" class="blob-num js-line-number" data-line-number="3964"></td>
        <td id="LC3964" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (controllerDirectives) {</td>
      </tr>
      <tr>
        <td id="L3965" class="blob-num js-line-number" data-line-number="3965"></td>
        <td id="LC3965" class="blob-code blob-code-inner js-file-line">          forEach(controllerDirectives, <span class="pl-k">function</span>(<span class="pl-smi">directive</span>) {</td>
      </tr>
      <tr>
        <td id="L3966" class="blob-num js-line-number" data-line-number="3966"></td>
        <td id="LC3966" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> locals <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L3967" class="blob-num js-line-number" data-line-number="3967"></td>
        <td id="LC3967" class="blob-code blob-code-inner js-file-line">              $scope<span class="pl-k">:</span> scope,</td>
      </tr>
      <tr>
        <td id="L3968" class="blob-num js-line-number" data-line-number="3968"></td>
        <td id="LC3968" class="blob-code blob-code-inner js-file-line">              $element<span class="pl-k">:</span> element,</td>
      </tr>
      <tr>
        <td id="L3969" class="blob-num js-line-number" data-line-number="3969"></td>
        <td id="LC3969" class="blob-code blob-code-inner js-file-line">              $attrs<span class="pl-k">:</span> attrs,</td>
      </tr>
      <tr>
        <td id="L3970" class="blob-num js-line-number" data-line-number="3970"></td>
        <td id="LC3970" class="blob-code blob-code-inner js-file-line">              $transclude<span class="pl-k">:</span> boundTranscludeFn</td>
      </tr>
      <tr>
        <td id="L3971" class="blob-num js-line-number" data-line-number="3971"></td>
        <td id="LC3971" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L3972" class="blob-num js-line-number" data-line-number="3972"></td>
        <td id="LC3972" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3973" class="blob-num js-line-number" data-line-number="3973"></td>
        <td id="LC3973" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3974" class="blob-num js-line-number" data-line-number="3974"></td>
        <td id="LC3974" class="blob-code blob-code-inner js-file-line">            forEach(directive.inject <span class="pl-k">||</span> {}, <span class="pl-k">function</span>(<span class="pl-smi">mode</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L3975" class="blob-num js-line-number" data-line-number="3975"></td>
        <td id="LC3975" class="blob-code blob-code-inner js-file-line">              (<span class="pl-c1">LOCAL_MODE</span>[mode] <span class="pl-k">||</span> wrongMode)(name, mode,</td>
      </tr>
      <tr>
        <td id="L3976" class="blob-num js-line-number" data-line-number="3976"></td>
        <td id="LC3976" class="blob-code blob-code-inner js-file-line">                  newScopeDirective <span class="pl-k">?</span> scope.$parent <span class="pl-k">||</span> scope <span class="pl-k">:</span> scope, locals, attrs);</td>
      </tr>
      <tr>
        <td id="L3977" class="blob-num js-line-number" data-line-number="3977"></td>
        <td id="LC3977" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L3978" class="blob-num js-line-number" data-line-number="3978"></td>
        <td id="LC3978" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3979" class="blob-num js-line-number" data-line-number="3979"></td>
        <td id="LC3979" class="blob-code blob-code-inner js-file-line">            controller <span class="pl-k">=</span> directive.controller;</td>
      </tr>
      <tr>
        <td id="L3980" class="blob-num js-line-number" data-line-number="3980"></td>
        <td id="LC3980" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (controller <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L3981" class="blob-num js-line-number" data-line-number="3981"></td>
        <td id="LC3981" class="blob-code blob-code-inner js-file-line">              controller <span class="pl-k">=</span> attrs[directive.<span class="pl-c1">name</span>];</td>
      </tr>
      <tr>
        <td id="L3982" class="blob-num js-line-number" data-line-number="3982"></td>
        <td id="LC3982" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L3983" class="blob-num js-line-number" data-line-number="3983"></td>
        <td id="LC3983" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3984" class="blob-num js-line-number" data-line-number="3984"></td>
        <td id="LC3984" class="blob-code blob-code-inner js-file-line">            element.<span class="pl-c1">data</span>(</td>
      </tr>
      <tr>
        <td id="L3985" class="blob-num js-line-number" data-line-number="3985"></td>
        <td id="LC3985" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> directive.<span class="pl-c1">name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Controller<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L3986" class="blob-num js-line-number" data-line-number="3986"></td>
        <td id="LC3986" class="blob-code blob-code-inner js-file-line">                $controller(controller, locals));</td>
      </tr>
      <tr>
        <td id="L3987" class="blob-num js-line-number" data-line-number="3987"></td>
        <td id="LC3987" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L3988" class="blob-num js-line-number" data-line-number="3988"></td>
        <td id="LC3988" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L3989" class="blob-num js-line-number" data-line-number="3989"></td>
        <td id="LC3989" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L3990" class="blob-num js-line-number" data-line-number="3990"></td>
        <td id="LC3990" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// PRELINKING</span></td>
      </tr>
      <tr>
        <td id="L3991" class="blob-num js-line-number" data-line-number="3991"></td>
        <td id="LC3991" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> preLinkingFns.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L3992" class="blob-num js-line-number" data-line-number="3992"></td>
        <td id="LC3992" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L3993" class="blob-num js-line-number" data-line-number="3993"></td>
        <td id="LC3993" class="blob-code blob-code-inner js-file-line">            linkingFn <span class="pl-k">=</span> preLinkingFns[i];</td>
      </tr>
      <tr>
        <td id="L3994" class="blob-num js-line-number" data-line-number="3994"></td>
        <td id="LC3994" class="blob-code blob-code-inner js-file-line">            linkingFn(scope, element, attrs,</td>
      </tr>
      <tr>
        <td id="L3995" class="blob-num js-line-number" data-line-number="3995"></td>
        <td id="LC3995" class="blob-code blob-code-inner js-file-line">                linkingFn.require <span class="pl-k">&amp;&amp;</span> getControllers(linkingFn.require, element));</td>
      </tr>
      <tr>
        <td id="L3996" class="blob-num js-line-number" data-line-number="3996"></td>
        <td id="LC3996" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L3997" class="blob-num js-line-number" data-line-number="3997"></td>
        <td id="LC3997" class="blob-code blob-code-inner js-file-line">            $exceptionHandler(e, startingTag(element));</td>
      </tr>
      <tr>
        <td id="L3998" class="blob-num js-line-number" data-line-number="3998"></td>
        <td id="LC3998" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L3999" class="blob-num js-line-number" data-line-number="3999"></td>
        <td id="LC3999" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4000" class="blob-num js-line-number" data-line-number="4000"></td>
        <td id="LC4000" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4001" class="blob-num js-line-number" data-line-number="4001"></td>
        <td id="LC4001" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// RECURSION</span></td>
      </tr>
      <tr>
        <td id="L4002" class="blob-num js-line-number" data-line-number="4002"></td>
        <td id="LC4002" class="blob-code blob-code-inner js-file-line">        childLinkingFn <span class="pl-k">&amp;&amp;</span> childLinkingFn(scope, linkNode.<span class="pl-c1">childNodes</span>, <span class="pl-c1">undefined</span>, boundTranscludeFn);</td>
      </tr>
      <tr>
        <td id="L4003" class="blob-num js-line-number" data-line-number="4003"></td>
        <td id="LC4003" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4004" class="blob-num js-line-number" data-line-number="4004"></td>
        <td id="LC4004" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// POSTLINKING</span></td>
      </tr>
      <tr>
        <td id="L4005" class="blob-num js-line-number" data-line-number="4005"></td>
        <td id="LC4005" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> postLinkingFns.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4006" class="blob-num js-line-number" data-line-number="4006"></td>
        <td id="LC4006" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4007" class="blob-num js-line-number" data-line-number="4007"></td>
        <td id="LC4007" class="blob-code blob-code-inner js-file-line">            linkingFn <span class="pl-k">=</span> postLinkingFns[i];</td>
      </tr>
      <tr>
        <td id="L4008" class="blob-num js-line-number" data-line-number="4008"></td>
        <td id="LC4008" class="blob-code blob-code-inner js-file-line">            linkingFn(scope, element, attrs,</td>
      </tr>
      <tr>
        <td id="L4009" class="blob-num js-line-number" data-line-number="4009"></td>
        <td id="LC4009" class="blob-code blob-code-inner js-file-line">                linkingFn.require <span class="pl-k">&amp;&amp;</span> getControllers(linkingFn.require, element));</td>
      </tr>
      <tr>
        <td id="L4010" class="blob-num js-line-number" data-line-number="4010"></td>
        <td id="LC4010" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L4011" class="blob-num js-line-number" data-line-number="4011"></td>
        <td id="LC4011" class="blob-code blob-code-inner js-file-line">            $exceptionHandler(e, startingTag(element));</td>
      </tr>
      <tr>
        <td id="L4012" class="blob-num js-line-number" data-line-number="4012"></td>
        <td id="LC4012" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4013" class="blob-num js-line-number" data-line-number="4013"></td>
        <td id="LC4013" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4014" class="blob-num js-line-number" data-line-number="4014"></td>
        <td id="LC4014" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4015" class="blob-num js-line-number" data-line-number="4015"></td>
        <td id="LC4015" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4016" class="blob-num js-line-number" data-line-number="4016"></td>
        <td id="LC4016" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4017" class="blob-num js-line-number" data-line-number="4017"></td>
        <td id="LC4017" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4018" class="blob-num js-line-number" data-line-number="4018"></td>
        <td id="LC4018" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4019" class="blob-num js-line-number" data-line-number="4019"></td>
        <td id="LC4019" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * looks up the directive and decorates it with exception handling and proper parameters. We</span></td>
      </tr>
      <tr>
        <td id="L4020" class="blob-num js-line-number" data-line-number="4020"></td>
        <td id="LC4020" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * call this the boundDirective.</span></td>
      </tr>
      <tr>
        <td id="L4021" class="blob-num js-line-number" data-line-number="4021"></td>
        <td id="LC4021" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4022" class="blob-num js-line-number" data-line-number="4022"></td>
        <td id="LC4022" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} name name of the directive to look up.</span></td>
      </tr>
      <tr>
        <td id="L4023" class="blob-num js-line-number" data-line-number="4023"></td>
        <td id="LC4023" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} location The directive must be found in specific format.</span></td>
      </tr>
      <tr>
        <td id="L4024" class="blob-num js-line-number" data-line-number="4024"></td>
        <td id="LC4024" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   String containing any of theses characters:</span></td>
      </tr>
      <tr>
        <td id="L4025" class="blob-num js-line-number" data-line-number="4025"></td>
        <td id="LC4025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4026" class="blob-num js-line-number" data-line-number="4026"></td>
        <td id="LC4026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   * `E`: element name</span></td>
      </tr>
      <tr>
        <td id="L4027" class="blob-num js-line-number" data-line-number="4027"></td>
        <td id="LC4027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   * `A&#39;: attribute</span></td>
      </tr>
      <tr>
        <td id="L4028" class="blob-num js-line-number" data-line-number="4028"></td>
        <td id="LC4028" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   * `C`: class</span></td>
      </tr>
      <tr>
        <td id="L4029" class="blob-num js-line-number" data-line-number="4029"></td>
        <td id="LC4029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   * `M`: comment</span></td>
      </tr>
      <tr>
        <td id="L4030" class="blob-num js-line-number" data-line-number="4030"></td>
        <td id="LC4030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> true if directive was added.</span></td>
      </tr>
      <tr>
        <td id="L4031" class="blob-num js-line-number" data-line-number="4031"></td>
        <td id="LC4031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4032" class="blob-num js-line-number" data-line-number="4032"></td>
        <td id="LC4032" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">addDirective</span>(<span class="pl-smi">tDirectives</span>, <span class="pl-smi">name</span>, <span class="pl-smi">location</span>, <span class="pl-smi">maxPriority</span>) {</td>
      </tr>
      <tr>
        <td id="L4033" class="blob-num js-line-number" data-line-number="4033"></td>
        <td id="LC4033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L4034" class="blob-num js-line-number" data-line-number="4034"></td>
        <td id="LC4034" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (hasDirectives.hasOwnProperty(name)) {</td>
      </tr>
      <tr>
        <td id="L4035" class="blob-num js-line-number" data-line-number="4035"></td>
        <td id="LC4035" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(<span class="pl-k">var</span> directive, directives <span class="pl-k">=</span> $injector.get(name <span class="pl-k">+</span> Suffix),</td>
      </tr>
      <tr>
        <td id="L4036" class="blob-num js-line-number" data-line-number="4036"></td>
        <td id="LC4036" class="blob-code blob-code-inner js-file-line">            i<span class="pl-k">=</span><span class="pl-c1">0</span>, ii <span class="pl-k">=</span> directives.<span class="pl-c1">length</span>; i<span class="pl-k">&lt;</span>ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4037" class="blob-num js-line-number" data-line-number="4037"></td>
        <td id="LC4037" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L4038" class="blob-num js-line-number" data-line-number="4038"></td>
        <td id="LC4038" class="blob-code blob-code-inner js-file-line">            directive <span class="pl-k">=</span> directives[i];</td>
      </tr>
      <tr>
        <td id="L4039" class="blob-num js-line-number" data-line-number="4039"></td>
        <td id="LC4039" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ( (maxPriority <span class="pl-k">===</span> <span class="pl-c1">undefined</span> <span class="pl-k">||</span> maxPriority <span class="pl-k">&gt;</span> directive.priority) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L4040" class="blob-num js-line-number" data-line-number="4040"></td>
        <td id="LC4040" class="blob-code blob-code-inner js-file-line">                 directive.restrict.<span class="pl-c1">indexOf</span>(location) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L4041" class="blob-num js-line-number" data-line-number="4041"></td>
        <td id="LC4041" class="blob-code blob-code-inner js-file-line">              tDirectives.<span class="pl-c1">push</span>(directive);</td>
      </tr>
      <tr>
        <td id="L4042" class="blob-num js-line-number" data-line-number="4042"></td>
        <td id="LC4042" class="blob-code blob-code-inner js-file-line">              match <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4043" class="blob-num js-line-number" data-line-number="4043"></td>
        <td id="LC4043" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4044" class="blob-num js-line-number" data-line-number="4044"></td>
        <td id="LC4044" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">catch</span>(e) { $exceptionHandler(e); }</td>
      </tr>
      <tr>
        <td id="L4045" class="blob-num js-line-number" data-line-number="4045"></td>
        <td id="LC4045" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4046" class="blob-num js-line-number" data-line-number="4046"></td>
        <td id="LC4046" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4047" class="blob-num js-line-number" data-line-number="4047"></td>
        <td id="LC4047" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> match;</td>
      </tr>
      <tr>
        <td id="L4048" class="blob-num js-line-number" data-line-number="4048"></td>
        <td id="LC4048" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4049" class="blob-num js-line-number" data-line-number="4049"></td>
        <td id="LC4049" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4050" class="blob-num js-line-number" data-line-number="4050"></td>
        <td id="LC4050" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4051" class="blob-num js-line-number" data-line-number="4051"></td>
        <td id="LC4051" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4052" class="blob-num js-line-number" data-line-number="4052"></td>
        <td id="LC4052" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * When the element is replaced with HTML template then the new attributes</span></td>
      </tr>
      <tr>
        <td id="L4053" class="blob-num js-line-number" data-line-number="4053"></td>
        <td id="LC4053" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * on the template need to be merged with the existing attributes in the DOM.</span></td>
      </tr>
      <tr>
        <td id="L4054" class="blob-num js-line-number" data-line-number="4054"></td>
        <td id="LC4054" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The desired effect is to have both of the attributes present.</span></td>
      </tr>
      <tr>
        <td id="L4055" class="blob-num js-line-number" data-line-number="4055"></td>
        <td id="LC4055" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4056" class="blob-num js-line-number" data-line-number="4056"></td>
        <td id="LC4056" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {object} dst destination attributes (original DOM)</span></td>
      </tr>
      <tr>
        <td id="L4057" class="blob-num js-line-number" data-line-number="4057"></td>
        <td id="LC4057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {object} src source attributes (from the directive template)</span></td>
      </tr>
      <tr>
        <td id="L4058" class="blob-num js-line-number" data-line-number="4058"></td>
        <td id="LC4058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4059" class="blob-num js-line-number" data-line-number="4059"></td>
        <td id="LC4059" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">mergeTemplateAttributes</span>(<span class="pl-smi">dst</span>, <span class="pl-smi">src</span>) {</td>
      </tr>
      <tr>
        <td id="L4060" class="blob-num js-line-number" data-line-number="4060"></td>
        <td id="LC4060" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> srcAttr <span class="pl-k">=</span> src.$attr,</td>
      </tr>
      <tr>
        <td id="L4061" class="blob-num js-line-number" data-line-number="4061"></td>
        <td id="LC4061" class="blob-code blob-code-inner js-file-line">          dstAttr <span class="pl-k">=</span> dst.$attr,</td>
      </tr>
      <tr>
        <td id="L4062" class="blob-num js-line-number" data-line-number="4062"></td>
        <td id="LC4062" class="blob-code blob-code-inner js-file-line">          element <span class="pl-k">=</span> dst.$$element;</td>
      </tr>
      <tr>
        <td id="L4063" class="blob-num js-line-number" data-line-number="4063"></td>
        <td id="LC4063" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// reapply the old attributes to the new element</span></td>
      </tr>
      <tr>
        <td id="L4064" class="blob-num js-line-number" data-line-number="4064"></td>
        <td id="LC4064" class="blob-code blob-code-inner js-file-line">      forEach(dst, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L4065" class="blob-num js-line-number" data-line-number="4065"></td>
        <td id="LC4065" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (key.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4066" class="blob-num js-line-number" data-line-number="4066"></td>
        <td id="LC4066" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (src[key]) {</td>
      </tr>
      <tr>
        <td id="L4067" class="blob-num js-line-number" data-line-number="4067"></td>
        <td id="LC4067" class="blob-code blob-code-inner js-file-line">            value <span class="pl-k">+=</span> (key <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>style<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>;<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> src[key];</td>
      </tr>
      <tr>
        <td id="L4068" class="blob-num js-line-number" data-line-number="4068"></td>
        <td id="LC4068" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4069" class="blob-num js-line-number" data-line-number="4069"></td>
        <td id="LC4069" class="blob-code blob-code-inner js-file-line">          dst.$set(key, value, <span class="pl-c1">true</span>, srcAttr[key]);</td>
      </tr>
      <tr>
        <td id="L4070" class="blob-num js-line-number" data-line-number="4070"></td>
        <td id="LC4070" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4071" class="blob-num js-line-number" data-line-number="4071"></td>
        <td id="LC4071" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4072" class="blob-num js-line-number" data-line-number="4072"></td>
        <td id="LC4072" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// copy the new attributes on the old attrs object</span></td>
      </tr>
      <tr>
        <td id="L4073" class="blob-num js-line-number" data-line-number="4073"></td>
        <td id="LC4073" class="blob-code blob-code-inner js-file-line">      forEach(src, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L4074" class="blob-num js-line-number" data-line-number="4074"></td>
        <td id="LC4074" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>class<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4075" class="blob-num js-line-number" data-line-number="4075"></td>
        <td id="LC4075" class="blob-code blob-code-inner js-file-line">          safeAddClass(element, value);</td>
      </tr>
      <tr>
        <td id="L4076" class="blob-num js-line-number" data-line-number="4076"></td>
        <td id="LC4076" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>style<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4077" class="blob-num js-line-number" data-line-number="4077"></td>
        <td id="LC4077" class="blob-code blob-code-inner js-file-line">          element.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>style<span class="pl-pds">&#39;</span></span>, element.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>style<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> value);</td>
      </tr>
      <tr>
        <td id="L4078" class="blob-num js-line-number" data-line-number="4078"></td>
        <td id="LC4078" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (key.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>dst.hasOwnProperty(key)) {</td>
      </tr>
      <tr>
        <td id="L4079" class="blob-num js-line-number" data-line-number="4079"></td>
        <td id="LC4079" class="blob-code blob-code-inner js-file-line">          dst[key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L4080" class="blob-num js-line-number" data-line-number="4080"></td>
        <td id="LC4080" class="blob-code blob-code-inner js-file-line">          dstAttr[key] <span class="pl-k">=</span> srcAttr[key];</td>
      </tr>
      <tr>
        <td id="L4081" class="blob-num js-line-number" data-line-number="4081"></td>
        <td id="LC4081" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4082" class="blob-num js-line-number" data-line-number="4082"></td>
        <td id="LC4082" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4083" class="blob-num js-line-number" data-line-number="4083"></td>
        <td id="LC4083" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4084" class="blob-num js-line-number" data-line-number="4084"></td>
        <td id="LC4084" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4085" class="blob-num js-line-number" data-line-number="4085"></td>
        <td id="LC4085" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4086" class="blob-num js-line-number" data-line-number="4086"></td>
        <td id="LC4086" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compileTemplateUrl</span>(<span class="pl-smi">directives</span>, <span class="pl-c">/* directiveLinkingFn */</span> <span class="pl-smi">beforeWidgetLinkFn</span>,</td>
      </tr>
      <tr>
        <td id="L4087" class="blob-num js-line-number" data-line-number="4087"></td>
        <td id="LC4087" class="blob-code blob-code-inner js-file-line">                                <span class="pl-smi">tElement</span>, <span class="pl-smi">tAttrs</span>, <span class="pl-smi">rootElement</span>, <span class="pl-smi">replace</span>, <span class="pl-smi">transcludeFn</span>) {</td>
      </tr>
      <tr>
        <td id="L4088" class="blob-num js-line-number" data-line-number="4088"></td>
        <td id="LC4088" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> linkQueue <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L4089" class="blob-num js-line-number" data-line-number="4089"></td>
        <td id="LC4089" class="blob-code blob-code-inner js-file-line">          afterWidgetLinkFn,</td>
      </tr>
      <tr>
        <td id="L4090" class="blob-num js-line-number" data-line-number="4090"></td>
        <td id="LC4090" class="blob-code blob-code-inner js-file-line">          afterWidgetChildrenLinkFn,</td>
      </tr>
      <tr>
        <td id="L4091" class="blob-num js-line-number" data-line-number="4091"></td>
        <td id="LC4091" class="blob-code blob-code-inner js-file-line">          originalWidgetNode <span class="pl-k">=</span> tElement[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4092" class="blob-num js-line-number" data-line-number="4092"></td>
        <td id="LC4092" class="blob-code blob-code-inner js-file-line">          asyncWidgetDirective <span class="pl-k">=</span> directives.<span class="pl-c1">shift</span>(),</td>
      </tr>
      <tr>
        <td id="L4093" class="blob-num js-line-number" data-line-number="4093"></td>
        <td id="LC4093" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// The fact that we have to copy and patch the directive seems wrong!</span></td>
      </tr>
      <tr>
        <td id="L4094" class="blob-num js-line-number" data-line-number="4094"></td>
        <td id="LC4094" class="blob-code blob-code-inner js-file-line">          syncWidgetDirective <span class="pl-k">=</span> extend({}, asyncWidgetDirective, {templateUrl<span class="pl-k">:</span><span class="pl-c1">null</span>, transclude<span class="pl-k">:</span><span class="pl-c1">null</span>}),</td>
      </tr>
      <tr>
        <td id="L4095" class="blob-num js-line-number" data-line-number="4095"></td>
        <td id="LC4095" class="blob-code blob-code-inner js-file-line">          html <span class="pl-k">=</span> tElement.html();</td>
      </tr>
      <tr>
        <td id="L4096" class="blob-num js-line-number" data-line-number="4096"></td>
        <td id="LC4096" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4097" class="blob-num js-line-number" data-line-number="4097"></td>
        <td id="LC4097" class="blob-code blob-code-inner js-file-line">      tElement.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4098" class="blob-num js-line-number" data-line-number="4098"></td>
        <td id="LC4098" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4099" class="blob-num js-line-number" data-line-number="4099"></td>
        <td id="LC4099" class="blob-code blob-code-inner js-file-line">      $http.get(asyncWidgetDirective.templateUrl, {cache<span class="pl-k">:</span> $templateCache}).</td>
      </tr>
      <tr>
        <td id="L4100" class="blob-num js-line-number" data-line-number="4100"></td>
        <td id="LC4100" class="blob-code blob-code-inner js-file-line">        success(<span class="pl-k">function</span>(<span class="pl-smi">content</span>) {</td>
      </tr>
      <tr>
        <td id="L4101" class="blob-num js-line-number" data-line-number="4101"></td>
        <td id="LC4101" class="blob-code blob-code-inner js-file-line">          content <span class="pl-k">=</span> trim(content).<span class="pl-c1">replace</span>(<span class="pl-c1">CONTENT_REGEXP</span>, html);</td>
      </tr>
      <tr>
        <td id="L4102" class="blob-num js-line-number" data-line-number="4102"></td>
        <td id="LC4102" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (replace <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>content.<span class="pl-c1">match</span>(<span class="pl-c1">HAS_ROOT_ELEMENT</span>)) {</td>
      </tr>
      <tr>
        <td id="L4103" class="blob-num js-line-number" data-line-number="4103"></td>
        <td id="LC4103" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Template must have exactly one root element: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> content);</td>
      </tr>
      <tr>
        <td id="L4104" class="blob-num js-line-number" data-line-number="4104"></td>
        <td id="LC4104" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4105" class="blob-num js-line-number" data-line-number="4105"></td>
        <td id="LC4105" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4106" class="blob-num js-line-number" data-line-number="4106"></td>
        <td id="LC4106" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> templateNode, tempTemplateAttrs;</td>
      </tr>
      <tr>
        <td id="L4107" class="blob-num js-line-number" data-line-number="4107"></td>
        <td id="LC4107" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4108" class="blob-num js-line-number" data-line-number="4108"></td>
        <td id="LC4108" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (replace) {</td>
      </tr>
      <tr>
        <td id="L4109" class="blob-num js-line-number" data-line-number="4109"></td>
        <td id="LC4109" class="blob-code blob-code-inner js-file-line">            tempTemplateAttrs <span class="pl-k">=</span> {$attr<span class="pl-k">:</span> {}};</td>
      </tr>
      <tr>
        <td id="L4110" class="blob-num js-line-number" data-line-number="4110"></td>
        <td id="LC4110" class="blob-code blob-code-inner js-file-line">            templateNode <span class="pl-k">=</span> jqLite(content)[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4111" class="blob-num js-line-number" data-line-number="4111"></td>
        <td id="LC4111" class="blob-code blob-code-inner js-file-line">            replaceWith(rootElement, tElement, templateNode);</td>
      </tr>
      <tr>
        <td id="L4112" class="blob-num js-line-number" data-line-number="4112"></td>
        <td id="LC4112" class="blob-code blob-code-inner js-file-line">            collectDirectives(tElement[<span class="pl-c1">0</span>], directives, tempTemplateAttrs);</td>
      </tr>
      <tr>
        <td id="L4113" class="blob-num js-line-number" data-line-number="4113"></td>
        <td id="LC4113" class="blob-code blob-code-inner js-file-line">            mergeTemplateAttributes(tAttrs, tempTemplateAttrs);</td>
      </tr>
      <tr>
        <td id="L4114" class="blob-num js-line-number" data-line-number="4114"></td>
        <td id="LC4114" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4115" class="blob-num js-line-number" data-line-number="4115"></td>
        <td id="LC4115" class="blob-code blob-code-inner js-file-line">            templateNode <span class="pl-k">=</span> tElement[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L4116" class="blob-num js-line-number" data-line-number="4116"></td>
        <td id="LC4116" class="blob-code blob-code-inner js-file-line">            tElement.html(content);</td>
      </tr>
      <tr>
        <td id="L4117" class="blob-num js-line-number" data-line-number="4117"></td>
        <td id="LC4117" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4118" class="blob-num js-line-number" data-line-number="4118"></td>
        <td id="LC4118" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4119" class="blob-num js-line-number" data-line-number="4119"></td>
        <td id="LC4119" class="blob-code blob-code-inner js-file-line">          directives.<span class="pl-c1">unshift</span>(syncWidgetDirective);</td>
      </tr>
      <tr>
        <td id="L4120" class="blob-num js-line-number" data-line-number="4120"></td>
        <td id="LC4120" class="blob-code blob-code-inner js-file-line">          afterWidgetLinkFn <span class="pl-k">=</span> <span class="pl-c">/* directiveLinkingFn */</span> applyDirectivesToNode(directives, tElement, tAttrs, transcludeFn);</td>
      </tr>
      <tr>
        <td id="L4121" class="blob-num js-line-number" data-line-number="4121"></td>
        <td id="LC4121" class="blob-code blob-code-inner js-file-line">          afterWidgetChildrenLinkFn <span class="pl-k">=</span> <span class="pl-c">/* nodesetLinkingFn */</span> compileNodes(tElement.contents(), transcludeFn);</td>
      </tr>
      <tr>
        <td id="L4122" class="blob-num js-line-number" data-line-number="4122"></td>
        <td id="LC4122" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4123" class="blob-num js-line-number" data-line-number="4123"></td>
        <td id="LC4123" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4124" class="blob-num js-line-number" data-line-number="4124"></td>
        <td id="LC4124" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span>(linkQueue.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L4125" class="blob-num js-line-number" data-line-number="4125"></td>
        <td id="LC4125" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> controller <span class="pl-k">=</span> linkQueue.<span class="pl-c1">pop</span>(),</td>
      </tr>
      <tr>
        <td id="L4126" class="blob-num js-line-number" data-line-number="4126"></td>
        <td id="LC4126" class="blob-code blob-code-inner js-file-line">                linkRootElement <span class="pl-k">=</span> linkQueue.<span class="pl-c1">pop</span>(),</td>
      </tr>
      <tr>
        <td id="L4127" class="blob-num js-line-number" data-line-number="4127"></td>
        <td id="LC4127" class="blob-code blob-code-inner js-file-line">                cLinkNode <span class="pl-k">=</span> linkQueue.<span class="pl-c1">pop</span>(),</td>
      </tr>
      <tr>
        <td id="L4128" class="blob-num js-line-number" data-line-number="4128"></td>
        <td id="LC4128" class="blob-code blob-code-inner js-file-line">                scope <span class="pl-k">=</span> linkQueue.<span class="pl-c1">pop</span>(),</td>
      </tr>
      <tr>
        <td id="L4129" class="blob-num js-line-number" data-line-number="4129"></td>
        <td id="LC4129" class="blob-code blob-code-inner js-file-line">                node <span class="pl-k">=</span> templateNode;</td>
      </tr>
      <tr>
        <td id="L4130" class="blob-num js-line-number" data-line-number="4130"></td>
        <td id="LC4130" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4131" class="blob-num js-line-number" data-line-number="4131"></td>
        <td id="LC4131" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (cLinkNode <span class="pl-k">!==</span> originalWidgetNode) {</td>
      </tr>
      <tr>
        <td id="L4132" class="blob-num js-line-number" data-line-number="4132"></td>
        <td id="LC4132" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// it was cloned therefore we have to clone as well.</span></td>
      </tr>
      <tr>
        <td id="L4133" class="blob-num js-line-number" data-line-number="4133"></td>
        <td id="LC4133" class="blob-code blob-code-inner js-file-line">              node <span class="pl-k">=</span> JQLiteClone(templateNode);</td>
      </tr>
      <tr>
        <td id="L4134" class="blob-num js-line-number" data-line-number="4134"></td>
        <td id="LC4134" class="blob-code blob-code-inner js-file-line">              replaceWith(linkRootElement, jqLite(cLinkNode), node);</td>
      </tr>
      <tr>
        <td id="L4135" class="blob-num js-line-number" data-line-number="4135"></td>
        <td id="LC4135" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4136" class="blob-num js-line-number" data-line-number="4136"></td>
        <td id="LC4136" class="blob-code blob-code-inner js-file-line">            afterWidgetLinkFn(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4137" class="blob-num js-line-number" data-line-number="4137"></td>
        <td id="LC4137" class="blob-code blob-code-inner js-file-line">              beforeWidgetLinkFn(afterWidgetChildrenLinkFn, scope, node, rootElement, controller);</td>
      </tr>
      <tr>
        <td id="L4138" class="blob-num js-line-number" data-line-number="4138"></td>
        <td id="LC4138" class="blob-code blob-code-inner js-file-line">            }, scope, node, rootElement, controller);</td>
      </tr>
      <tr>
        <td id="L4139" class="blob-num js-line-number" data-line-number="4139"></td>
        <td id="LC4139" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4140" class="blob-num js-line-number" data-line-number="4140"></td>
        <td id="LC4140" class="blob-code blob-code-inner js-file-line">          linkQueue <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L4141" class="blob-num js-line-number" data-line-number="4141"></td>
        <td id="LC4141" class="blob-code blob-code-inner js-file-line">        }).</td>
      </tr>
      <tr>
        <td id="L4142" class="blob-num js-line-number" data-line-number="4142"></td>
        <td id="LC4142" class="blob-code blob-code-inner js-file-line">        error(<span class="pl-k">function</span>(<span class="pl-smi">response</span>, <span class="pl-smi">code</span>, <span class="pl-smi">headers</span>, <span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L4143" class="blob-num js-line-number" data-line-number="4143"></td>
        <td id="LC4143" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Failed to load template: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> config.url);</td>
      </tr>
      <tr>
        <td id="L4144" class="blob-num js-line-number" data-line-number="4144"></td>
        <td id="LC4144" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4145" class="blob-num js-line-number" data-line-number="4145"></td>
        <td id="LC4145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4146" class="blob-num js-line-number" data-line-number="4146"></td>
        <td id="LC4146" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c">/* directiveLinkingFn */</span> <span class="pl-k">function</span>(<span class="pl-smi">ignoreChildLinkingFn</span>, <span class="pl-smi">scope</span>, <span class="pl-smi">node</span>, <span class="pl-smi">rootElement</span>,</td>
      </tr>
      <tr>
        <td id="L4147" class="blob-num js-line-number" data-line-number="4147"></td>
        <td id="LC4147" class="blob-code blob-code-inner js-file-line">                                               <span class="pl-smi">controller</span>) {</td>
      </tr>
      <tr>
        <td id="L4148" class="blob-num js-line-number" data-line-number="4148"></td>
        <td id="LC4148" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (linkQueue) {</td>
      </tr>
      <tr>
        <td id="L4149" class="blob-num js-line-number" data-line-number="4149"></td>
        <td id="LC4149" class="blob-code blob-code-inner js-file-line">          linkQueue.<span class="pl-c1">push</span>(scope);</td>
      </tr>
      <tr>
        <td id="L4150" class="blob-num js-line-number" data-line-number="4150"></td>
        <td id="LC4150" class="blob-code blob-code-inner js-file-line">          linkQueue.<span class="pl-c1">push</span>(node);</td>
      </tr>
      <tr>
        <td id="L4151" class="blob-num js-line-number" data-line-number="4151"></td>
        <td id="LC4151" class="blob-code blob-code-inner js-file-line">          linkQueue.<span class="pl-c1">push</span>(rootElement);</td>
      </tr>
      <tr>
        <td id="L4152" class="blob-num js-line-number" data-line-number="4152"></td>
        <td id="LC4152" class="blob-code blob-code-inner js-file-line">          linkQueue.<span class="pl-c1">push</span>(controller);</td>
      </tr>
      <tr>
        <td id="L4153" class="blob-num js-line-number" data-line-number="4153"></td>
        <td id="LC4153" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4154" class="blob-num js-line-number" data-line-number="4154"></td>
        <td id="LC4154" class="blob-code blob-code-inner js-file-line">          afterWidgetLinkFn(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4155" class="blob-num js-line-number" data-line-number="4155"></td>
        <td id="LC4155" class="blob-code blob-code-inner js-file-line">            beforeWidgetLinkFn(afterWidgetChildrenLinkFn, scope, node, rootElement, controller);</td>
      </tr>
      <tr>
        <td id="L4156" class="blob-num js-line-number" data-line-number="4156"></td>
        <td id="LC4156" class="blob-code blob-code-inner js-file-line">          }, scope, node, rootElement, controller);</td>
      </tr>
      <tr>
        <td id="L4157" class="blob-num js-line-number" data-line-number="4157"></td>
        <td id="LC4157" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4158" class="blob-num js-line-number" data-line-number="4158"></td>
        <td id="LC4158" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L4159" class="blob-num js-line-number" data-line-number="4159"></td>
        <td id="LC4159" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4160" class="blob-num js-line-number" data-line-number="4160"></td>
        <td id="LC4160" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4161" class="blob-num js-line-number" data-line-number="4161"></td>
        <td id="LC4161" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4162" class="blob-num js-line-number" data-line-number="4162"></td>
        <td id="LC4162" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4163" class="blob-num js-line-number" data-line-number="4163"></td>
        <td id="LC4163" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Sorting function for bound directives.</span></td>
      </tr>
      <tr>
        <td id="L4164" class="blob-num js-line-number" data-line-number="4164"></td>
        <td id="LC4164" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4165" class="blob-num js-line-number" data-line-number="4165"></td>
        <td id="LC4165" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">byPriority</span>(<span class="pl-smi">a</span>, <span class="pl-smi">b</span>) {</td>
      </tr>
      <tr>
        <td id="L4166" class="blob-num js-line-number" data-line-number="4166"></td>
        <td id="LC4166" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> b.priority <span class="pl-k">-</span> a.priority;</td>
      </tr>
      <tr>
        <td id="L4167" class="blob-num js-line-number" data-line-number="4167"></td>
        <td id="LC4167" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4168" class="blob-num js-line-number" data-line-number="4168"></td>
        <td id="LC4168" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4169" class="blob-num js-line-number" data-line-number="4169"></td>
        <td id="LC4169" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4170" class="blob-num js-line-number" data-line-number="4170"></td>
        <td id="LC4170" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">assertNoDuplicate</span>(<span class="pl-smi">what</span>, <span class="pl-smi">previousDirective</span>, <span class="pl-smi">directive</span>, <span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L4171" class="blob-num js-line-number" data-line-number="4171"></td>
        <td id="LC4171" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (previousDirective) {</td>
      </tr>
      <tr>
        <td id="L4172" class="blob-num js-line-number" data-line-number="4172"></td>
        <td id="LC4172" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>Multiple directives [<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> previousDirective.<span class="pl-c1">name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L4173" class="blob-num js-line-number" data-line-number="4173"></td>
        <td id="LC4173" class="blob-code blob-code-inner js-file-line">          directive.<span class="pl-c1">name</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>] asking for <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> what <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> on: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span>  startingTag(element));</td>
      </tr>
      <tr>
        <td id="L4174" class="blob-num js-line-number" data-line-number="4174"></td>
        <td id="LC4174" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4175" class="blob-num js-line-number" data-line-number="4175"></td>
        <td id="LC4175" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4176" class="blob-num js-line-number" data-line-number="4176"></td>
        <td id="LC4176" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4177" class="blob-num js-line-number" data-line-number="4177"></td>
        <td id="LC4177" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4178" class="blob-num js-line-number" data-line-number="4178"></td>
        <td id="LC4178" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">addTextInterpolateDirective</span>(<span class="pl-smi">directives</span>, <span class="pl-smi">text</span>) {</td>
      </tr>
      <tr>
        <td id="L4179" class="blob-num js-line-number" data-line-number="4179"></td>
        <td id="LC4179" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> interpolateFn <span class="pl-k">=</span> $interpolate(text, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4180" class="blob-num js-line-number" data-line-number="4180"></td>
        <td id="LC4180" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (interpolateFn) {</td>
      </tr>
      <tr>
        <td id="L4181" class="blob-num js-line-number" data-line-number="4181"></td>
        <td id="LC4181" class="blob-code blob-code-inner js-file-line">        directives.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L4182" class="blob-num js-line-number" data-line-number="4182"></td>
        <td id="LC4182" class="blob-code blob-code-inner js-file-line">          priority<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4183" class="blob-num js-line-number" data-line-number="4183"></td>
        <td id="LC4183" class="blob-code blob-code-inner js-file-line">          compile<span class="pl-k">:</span> valueFn(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">node</span>) {</td>
      </tr>
      <tr>
        <td id="L4184" class="blob-num js-line-number" data-line-number="4184"></td>
        <td id="LC4184" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> parent <span class="pl-k">=</span> node.<span class="pl-c1">parent</span>(),</td>
      </tr>
      <tr>
        <td id="L4185" class="blob-num js-line-number" data-line-number="4185"></td>
        <td id="LC4185" class="blob-code blob-code-inner js-file-line">                bindings <span class="pl-k">=</span> parent.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$binding<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> [];</td>
      </tr>
      <tr>
        <td id="L4186" class="blob-num js-line-number" data-line-number="4186"></td>
        <td id="LC4186" class="blob-code blob-code-inner js-file-line">            bindings.<span class="pl-c1">push</span>(interpolateFn);</td>
      </tr>
      <tr>
        <td id="L4187" class="blob-num js-line-number" data-line-number="4187"></td>
        <td id="LC4187" class="blob-code blob-code-inner js-file-line">            safeAddClass(parent.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$binding<span class="pl-pds">&#39;</span></span>, bindings), <span class="pl-s"><span class="pl-pds">&#39;</span>ng-binding<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4188" class="blob-num js-line-number" data-line-number="4188"></td>
        <td id="LC4188" class="blob-code blob-code-inner js-file-line">            scope.$<span class="pl-c1">watch</span>(interpolateFn, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4189" class="blob-num js-line-number" data-line-number="4189"></td>
        <td id="LC4189" class="blob-code blob-code-inner js-file-line">              node[<span class="pl-c1">0</span>].<span class="pl-c1">nodeValue</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L4190" class="blob-num js-line-number" data-line-number="4190"></td>
        <td id="LC4190" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L4191" class="blob-num js-line-number" data-line-number="4191"></td>
        <td id="LC4191" class="blob-code blob-code-inner js-file-line">          })</td>
      </tr>
      <tr>
        <td id="L4192" class="blob-num js-line-number" data-line-number="4192"></td>
        <td id="LC4192" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L4193" class="blob-num js-line-number" data-line-number="4193"></td>
        <td id="LC4193" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4194" class="blob-num js-line-number" data-line-number="4194"></td>
        <td id="LC4194" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4195" class="blob-num js-line-number" data-line-number="4195"></td>
        <td id="LC4195" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4196" class="blob-num js-line-number" data-line-number="4196"></td>
        <td id="LC4196" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4197" class="blob-num js-line-number" data-line-number="4197"></td>
        <td id="LC4197" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">addAttrInterpolateDirective</span>(<span class="pl-smi">node</span>, <span class="pl-smi">directives</span>, <span class="pl-smi">value</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L4198" class="blob-num js-line-number" data-line-number="4198"></td>
        <td id="LC4198" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> interpolateFn <span class="pl-k">=</span> $interpolate(value, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4199" class="blob-num js-line-number" data-line-number="4199"></td>
        <td id="LC4199" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4200" class="blob-num js-line-number" data-line-number="4200"></td>
        <td id="LC4200" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4201" class="blob-num js-line-number" data-line-number="4201"></td>
        <td id="LC4201" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// no interpolation found -&gt; ignore</span></td>
      </tr>
      <tr>
        <td id="L4202" class="blob-num js-line-number" data-line-number="4202"></td>
        <td id="LC4202" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>interpolateFn) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L4203" class="blob-num js-line-number" data-line-number="4203"></td>
        <td id="LC4203" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4204" class="blob-num js-line-number" data-line-number="4204"></td>
        <td id="LC4204" class="blob-code blob-code-inner js-file-line">      directives.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L4205" class="blob-num js-line-number" data-line-number="4205"></td>
        <td id="LC4205" class="blob-code blob-code-inner js-file-line">        priority<span class="pl-k">:</span> <span class="pl-c1">100</span>,</td>
      </tr>
      <tr>
        <td id="L4206" class="blob-num js-line-number" data-line-number="4206"></td>
        <td id="LC4206" class="blob-code blob-code-inner js-file-line">        compile<span class="pl-k">:</span> valueFn(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L4207" class="blob-num js-line-number" data-line-number="4207"></td>
        <td id="LC4207" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (name <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>class<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4208" class="blob-num js-line-number" data-line-number="4208"></td>
        <td id="LC4208" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// we need to interpolate classes again, in the case the element was replaced</span></td>
      </tr>
      <tr>
        <td id="L4209" class="blob-num js-line-number" data-line-number="4209"></td>
        <td id="LC4209" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// and therefore the two class attrs got merged - we want to interpolate the result</span></td>
      </tr>
      <tr>
        <td id="L4210" class="blob-num js-line-number" data-line-number="4210"></td>
        <td id="LC4210" class="blob-code blob-code-inner js-file-line">            interpolateFn <span class="pl-k">=</span> $interpolate(attr[name], <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4211" class="blob-num js-line-number" data-line-number="4211"></td>
        <td id="LC4211" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4212" class="blob-num js-line-number" data-line-number="4212"></td>
        <td id="LC4212" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4213" class="blob-num js-line-number" data-line-number="4213"></td>
        <td id="LC4213" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// we define observers array only for interpolated attrs</span></td>
      </tr>
      <tr>
        <td id="L4214" class="blob-num js-line-number" data-line-number="4214"></td>
        <td id="LC4214" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// and ignore observers for non interpolated attrs to save some memory</span></td>
      </tr>
      <tr>
        <td id="L4215" class="blob-num js-line-number" data-line-number="4215"></td>
        <td id="LC4215" class="blob-code blob-code-inner js-file-line">          attr.$$observers[name] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4216" class="blob-num js-line-number" data-line-number="4216"></td>
        <td id="LC4216" class="blob-code blob-code-inner js-file-line">          attr[name] <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L4217" class="blob-num js-line-number" data-line-number="4217"></td>
        <td id="LC4217" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">watch</span>(interpolateFn, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4218" class="blob-num js-line-number" data-line-number="4218"></td>
        <td id="LC4218" class="blob-code blob-code-inner js-file-line">            attr.$set(name, value);</td>
      </tr>
      <tr>
        <td id="L4219" class="blob-num js-line-number" data-line-number="4219"></td>
        <td id="LC4219" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L4220" class="blob-num js-line-number" data-line-number="4220"></td>
        <td id="LC4220" class="blob-code blob-code-inner js-file-line">        })</td>
      </tr>
      <tr>
        <td id="L4221" class="blob-num js-line-number" data-line-number="4221"></td>
        <td id="LC4221" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L4222" class="blob-num js-line-number" data-line-number="4222"></td>
        <td id="LC4222" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4223" class="blob-num js-line-number" data-line-number="4223"></td>
        <td id="LC4223" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4224" class="blob-num js-line-number" data-line-number="4224"></td>
        <td id="LC4224" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4225" class="blob-num js-line-number" data-line-number="4225"></td>
        <td id="LC4225" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4226" class="blob-num js-line-number" data-line-number="4226"></td>
        <td id="LC4226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * This is a special jqLite.replaceWith, which can replace items which</span></td>
      </tr>
      <tr>
        <td id="L4227" class="blob-num js-line-number" data-line-number="4227"></td>
        <td id="LC4227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * have no parents, provided that the containing jqLite collection is provided.</span></td>
      </tr>
      <tr>
        <td id="L4228" class="blob-num js-line-number" data-line-number="4228"></td>
        <td id="LC4228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4229" class="blob-num js-line-number" data-line-number="4229"></td>
        <td id="LC4229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {JqLite=} rootElement The root of the compile tree. Used so that we can replace nodes</span></td>
      </tr>
      <tr>
        <td id="L4230" class="blob-num js-line-number" data-line-number="4230"></td>
        <td id="LC4230" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    in the root of the tree.</span></td>
      </tr>
      <tr>
        <td id="L4231" class="blob-num js-line-number" data-line-number="4231"></td>
        <td id="LC4231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {JqLite} element The jqLite element which we are going to replace. We keep the shell,</span></td>
      </tr>
      <tr>
        <td id="L4232" class="blob-num js-line-number" data-line-number="4232"></td>
        <td id="LC4232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    but replace its DOM node reference.</span></td>
      </tr>
      <tr>
        <td id="L4233" class="blob-num js-line-number" data-line-number="4233"></td>
        <td id="LC4233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Node} newNode The new DOM node.</span></td>
      </tr>
      <tr>
        <td id="L4234" class="blob-num js-line-number" data-line-number="4234"></td>
        <td id="LC4234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4235" class="blob-num js-line-number" data-line-number="4235"></td>
        <td id="LC4235" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">replaceWith</span>(<span class="pl-smi">rootElement</span>, <span class="pl-smi">element</span>, <span class="pl-smi">newNode</span>) {</td>
      </tr>
      <tr>
        <td id="L4236" class="blob-num js-line-number" data-line-number="4236"></td>
        <td id="LC4236" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> oldNode <span class="pl-k">=</span> element[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L4237" class="blob-num js-line-number" data-line-number="4237"></td>
        <td id="LC4237" class="blob-code blob-code-inner js-file-line">          parent <span class="pl-k">=</span> oldNode.<span class="pl-c1">parentNode</span>,</td>
      </tr>
      <tr>
        <td id="L4238" class="blob-num js-line-number" data-line-number="4238"></td>
        <td id="LC4238" class="blob-code blob-code-inner js-file-line">          i, ii;</td>
      </tr>
      <tr>
        <td id="L4239" class="blob-num js-line-number" data-line-number="4239"></td>
        <td id="LC4239" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4240" class="blob-num js-line-number" data-line-number="4240"></td>
        <td id="LC4240" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (rootElement) {</td>
      </tr>
      <tr>
        <td id="L4241" class="blob-num js-line-number" data-line-number="4241"></td>
        <td id="LC4241" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span>(i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> rootElement.<span class="pl-c1">length</span>; i<span class="pl-k">&lt;</span>ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4242" class="blob-num js-line-number" data-line-number="4242"></td>
        <td id="LC4242" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (rootElement[i] <span class="pl-k">==</span> oldNode) {</td>
      </tr>
      <tr>
        <td id="L4243" class="blob-num js-line-number" data-line-number="4243"></td>
        <td id="LC4243" class="blob-code blob-code-inner js-file-line">            rootElement[i] <span class="pl-k">=</span> newNode;</td>
      </tr>
      <tr>
        <td id="L4244" class="blob-num js-line-number" data-line-number="4244"></td>
        <td id="LC4244" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4245" class="blob-num js-line-number" data-line-number="4245"></td>
        <td id="LC4245" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4246" class="blob-num js-line-number" data-line-number="4246"></td>
        <td id="LC4246" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4247" class="blob-num js-line-number" data-line-number="4247"></td>
        <td id="LC4247" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (parent) {</td>
      </tr>
      <tr>
        <td id="L4248" class="blob-num js-line-number" data-line-number="4248"></td>
        <td id="LC4248" class="blob-code blob-code-inner js-file-line">        parent.<span class="pl-c1">replaceChild</span>(newNode, oldNode);</td>
      </tr>
      <tr>
        <td id="L4249" class="blob-num js-line-number" data-line-number="4249"></td>
        <td id="LC4249" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4250" class="blob-num js-line-number" data-line-number="4250"></td>
        <td id="LC4250" class="blob-code blob-code-inner js-file-line">      element[<span class="pl-c1">0</span>] <span class="pl-k">=</span> newNode;</td>
      </tr>
      <tr>
        <td id="L4251" class="blob-num js-line-number" data-line-number="4251"></td>
        <td id="LC4251" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4252" class="blob-num js-line-number" data-line-number="4252"></td>
        <td id="LC4252" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4253" class="blob-num js-line-number" data-line-number="4253"></td>
        <td id="LC4253" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4254" class="blob-num js-line-number" data-line-number="4254"></td>
        <td id="LC4254" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4255" class="blob-num js-line-number" data-line-number="4255"></td>
        <td id="LC4255" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">PREFIX_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(x<span class="pl-c1">[<span class="pl-cce">\:</span><span class="pl-c1">\-_</span>]</span><span class="pl-k">|</span>data<span class="pl-c1">[<span class="pl-cce">\:</span><span class="pl-c1">\-_</span>]</span>)<span class="pl-pds">/</span>i</span>;</td>
      </tr>
      <tr>
        <td id="L4256" class="blob-num js-line-number" data-line-number="4256"></td>
        <td id="LC4256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4257" class="blob-num js-line-number" data-line-number="4257"></td>
        <td id="LC4257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Converts all accepted directives format into proper directive name.</span></td>
      </tr>
      <tr>
        <td id="L4258" class="blob-num js-line-number" data-line-number="4258"></td>
        <td id="LC4258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * All of these will become &#39;myDirective&#39;:</span></td>
      </tr>
      <tr>
        <td id="L4259" class="blob-num js-line-number" data-line-number="4259"></td>
        <td id="LC4259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   my:DiRective</span></td>
      </tr>
      <tr>
        <td id="L4260" class="blob-num js-line-number" data-line-number="4260"></td>
        <td id="LC4260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   my-directive</span></td>
      </tr>
      <tr>
        <td id="L4261" class="blob-num js-line-number" data-line-number="4261"></td>
        <td id="LC4261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   x-my-directive</span></td>
      </tr>
      <tr>
        <td id="L4262" class="blob-num js-line-number" data-line-number="4262"></td>
        <td id="LC4262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   data-my:directive</span></td>
      </tr>
      <tr>
        <td id="L4263" class="blob-num js-line-number" data-line-number="4263"></td>
        <td id="LC4263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4264" class="blob-num js-line-number" data-line-number="4264"></td>
        <td id="LC4264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Also there is special case for Moz prefix starting with upper case letter.</span></td>
      </tr>
      <tr>
        <td id="L4265" class="blob-num js-line-number" data-line-number="4265"></td>
        <td id="LC4265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> name Name to normalize</span></td>
      </tr>
      <tr>
        <td id="L4266" class="blob-num js-line-number" data-line-number="4266"></td>
        <td id="LC4266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4267" class="blob-num js-line-number" data-line-number="4267"></td>
        <td id="LC4267" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">directiveNormalize</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L4268" class="blob-num js-line-number" data-line-number="4268"></td>
        <td id="LC4268" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> camelCase(name.<span class="pl-c1">replace</span>(<span class="pl-c1">PREFIX_REGEXP</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L4269" class="blob-num js-line-number" data-line-number="4269"></td>
        <td id="LC4269" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4270" class="blob-num js-line-number" data-line-number="4270"></td>
        <td id="LC4270" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4271" class="blob-num js-line-number" data-line-number="4271"></td>
        <td id="LC4271" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4272" class="blob-num js-line-number" data-line-number="4272"></td>
        <td id="LC4272" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4273" class="blob-num js-line-number" data-line-number="4273"></td>
        <td id="LC4273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4274" class="blob-num js-line-number" data-line-number="4274"></td>
        <td id="LC4274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Closure compiler type information</span></td>
      </tr>
      <tr>
        <td id="L4275" class="blob-num js-line-number" data-line-number="4275"></td>
        <td id="LC4275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4276" class="blob-num js-line-number" data-line-number="4276"></td>
        <td id="LC4276" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4277" class="blob-num js-line-number" data-line-number="4277"></td>
        <td id="LC4277" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">nodesetLinkingFn</span>(</td>
      </tr>
      <tr>
        <td id="L4278" class="blob-num js-line-number" data-line-number="4278"></td>
        <td id="LC4278" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* angular.Scope */</span> <span class="pl-smi">scope</span>,</td>
      </tr>
      <tr>
        <td id="L4279" class="blob-num js-line-number" data-line-number="4279"></td>
        <td id="LC4279" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* NodeList */</span> <span class="pl-smi">nodeList</span>,</td>
      </tr>
      <tr>
        <td id="L4280" class="blob-num js-line-number" data-line-number="4280"></td>
        <td id="LC4280" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Element */</span> <span class="pl-smi">rootElement</span>,</td>
      </tr>
      <tr>
        <td id="L4281" class="blob-num js-line-number" data-line-number="4281"></td>
        <td id="LC4281" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* function(Function) */</span> <span class="pl-smi">boundTranscludeFn</span></td>
      </tr>
      <tr>
        <td id="L4282" class="blob-num js-line-number" data-line-number="4282"></td>
        <td id="LC4282" class="blob-code blob-code-inner js-file-line">){}</td>
      </tr>
      <tr>
        <td id="L4283" class="blob-num js-line-number" data-line-number="4283"></td>
        <td id="LC4283" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4284" class="blob-num js-line-number" data-line-number="4284"></td>
        <td id="LC4284" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">directiveLinkingFn</span>(</td>
      </tr>
      <tr>
        <td id="L4285" class="blob-num js-line-number" data-line-number="4285"></td>
        <td id="LC4285" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* nodesetLinkingFn */</span> <span class="pl-smi">nodesetLinkingFn</span>,</td>
      </tr>
      <tr>
        <td id="L4286" class="blob-num js-line-number" data-line-number="4286"></td>
        <td id="LC4286" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* angular.Scope */</span> <span class="pl-smi">scope</span>,</td>
      </tr>
      <tr>
        <td id="L4287" class="blob-num js-line-number" data-line-number="4287"></td>
        <td id="LC4287" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Node */</span> <span class="pl-smi">node</span>,</td>
      </tr>
      <tr>
        <td id="L4288" class="blob-num js-line-number" data-line-number="4288"></td>
        <td id="LC4288" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* Element */</span> <span class="pl-smi">rootElement</span>,</td>
      </tr>
      <tr>
        <td id="L4289" class="blob-num js-line-number" data-line-number="4289"></td>
        <td id="LC4289" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/* function(Function) */</span> <span class="pl-smi">boundTranscludeFn</span></td>
      </tr>
      <tr>
        <td id="L4290" class="blob-num js-line-number" data-line-number="4290"></td>
        <td id="LC4290" class="blob-code blob-code-inner js-file-line">){}</td>
      </tr>
      <tr>
        <td id="L4291" class="blob-num js-line-number" data-line-number="4291"></td>
        <td id="LC4291" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4292" class="blob-num js-line-number" data-line-number="4292"></td>
        <td id="LC4292" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4293" class="blob-num js-line-number" data-line-number="4293"></td>
        <td id="LC4293" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L4294" class="blob-num js-line-number" data-line-number="4294"></td>
        <td id="LC4294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$controllerProvider</span></td>
      </tr>
      <tr>
        <td id="L4295" class="blob-num js-line-number" data-line-number="4295"></td>
        <td id="LC4295" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4296" class="blob-num js-line-number" data-line-number="4296"></td>
        <td id="LC4296" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The {@link angular.module.ng.$controller $controller service} is used by Angular to create new</span></td>
      </tr>
      <tr>
        <td id="L4297" class="blob-num js-line-number" data-line-number="4297"></td>
        <td id="LC4297" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * controllers.</span></td>
      </tr>
      <tr>
        <td id="L4298" class="blob-num js-line-number" data-line-number="4298"></td>
        <td id="LC4298" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4299" class="blob-num js-line-number" data-line-number="4299"></td>
        <td id="LC4299" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This provider allows controller registration via the</span></td>
      </tr>
      <tr>
        <td id="L4300" class="blob-num js-line-number" data-line-number="4300"></td>
        <td id="LC4300" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$controllerProvider#register register} method.</span></td>
      </tr>
      <tr>
        <td id="L4301" class="blob-num js-line-number" data-line-number="4301"></td>
        <td id="LC4301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4302" class="blob-num js-line-number" data-line-number="4302"></td>
        <td id="LC4302" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$ControllerProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L4303" class="blob-num js-line-number" data-line-number="4303"></td>
        <td id="LC4303" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> controllers <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L4304" class="blob-num js-line-number" data-line-number="4304"></td>
        <td id="LC4304" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4305" class="blob-num js-line-number" data-line-number="4305"></td>
        <td id="LC4305" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4306" class="blob-num js-line-number" data-line-number="4306"></td>
        <td id="LC4306" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4307" class="blob-num js-line-number" data-line-number="4307"></td>
        <td id="LC4307" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4308" class="blob-num js-line-number" data-line-number="4308"></td>
        <td id="LC4308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$controllerProvider#register</span></td>
      </tr>
      <tr>
        <td id="L4309" class="blob-num js-line-number" data-line-number="4309"></td>
        <td id="LC4309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$controllerProvider</span></td>
      </tr>
      <tr>
        <td id="L4310" class="blob-num js-line-number" data-line-number="4310"></td>
        <td id="LC4310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} name Controller name</span></td>
      </tr>
      <tr>
        <td id="L4311" class="blob-num js-line-number" data-line-number="4311"></td>
        <td id="LC4311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {Function|Array} constructor Controller constructor fn (optionally decorated with DI</span></td>
      </tr>
      <tr>
        <td id="L4312" class="blob-num js-line-number" data-line-number="4312"></td>
        <td id="LC4312" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    annotations in the array notation).</span></td>
      </tr>
      <tr>
        <td id="L4313" class="blob-num js-line-number" data-line-number="4313"></td>
        <td id="LC4313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4314" class="blob-num js-line-number" data-line-number="4314"></td>
        <td id="LC4314" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">register</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">constructor</span>) {</td>
      </tr>
      <tr>
        <td id="L4315" class="blob-num js-line-number" data-line-number="4315"></td>
        <td id="LC4315" class="blob-code blob-code-inner js-file-line">    controllers[name] <span class="pl-k">=</span> constructor;</td>
      </tr>
      <tr>
        <td id="L4316" class="blob-num js-line-number" data-line-number="4316"></td>
        <td id="LC4316" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4317" class="blob-num js-line-number" data-line-number="4317"></td>
        <td id="LC4317" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4318" class="blob-num js-line-number" data-line-number="4318"></td>
        <td id="LC4318" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4319" class="blob-num js-line-number" data-line-number="4319"></td>
        <td id="LC4319" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$injector</span>, <span class="pl-smi">$window</span>) {</td>
      </tr>
      <tr>
        <td id="L4320" class="blob-num js-line-number" data-line-number="4320"></td>
        <td id="LC4320" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4321" class="blob-num js-line-number" data-line-number="4321"></td>
        <td id="LC4321" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4322" class="blob-num js-line-number" data-line-number="4322"></td>
        <td id="LC4322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4323" class="blob-num js-line-number" data-line-number="4323"></td>
        <td id="LC4323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$controller</span></td>
      </tr>
      <tr>
        <td id="L4324" class="blob-num js-line-number" data-line-number="4324"></td>
        <td id="LC4324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $injector</span></td>
      </tr>
      <tr>
        <td id="L4325" class="blob-num js-line-number" data-line-number="4325"></td>
        <td id="LC4325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4326" class="blob-num js-line-number" data-line-number="4326"></td>
        <td id="LC4326" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Function|string} constructor If called with a function then it&#39;s considered to be the</span></td>
      </tr>
      <tr>
        <td id="L4327" class="blob-num js-line-number" data-line-number="4327"></td>
        <td id="LC4327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    controller constructor function. Otherwise it&#39;s considered to be a string which is used</span></td>
      </tr>
      <tr>
        <td id="L4328" class="blob-num js-line-number" data-line-number="4328"></td>
        <td id="LC4328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    to retrieve the controller constructor using the following steps:</span></td>
      </tr>
      <tr>
        <td id="L4329" class="blob-num js-line-number" data-line-number="4329"></td>
        <td id="LC4329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4330" class="blob-num js-line-number" data-line-number="4330"></td>
        <td id="LC4330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    * check if a controller with given name is registered via `$controllerProvider`</span></td>
      </tr>
      <tr>
        <td id="L4331" class="blob-num js-line-number" data-line-number="4331"></td>
        <td id="LC4331" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    * check if evaluating the string on the current scope returns a constructor</span></td>
      </tr>
      <tr>
        <td id="L4332" class="blob-num js-line-number" data-line-number="4332"></td>
        <td id="LC4332" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    * check `window[constructor]` on the global `window` object</span></td>
      </tr>
      <tr>
        <td id="L4333" class="blob-num js-line-number" data-line-number="4333"></td>
        <td id="LC4333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4334" class="blob-num js-line-number" data-line-number="4334"></td>
        <td id="LC4334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object} locals Injection locals for Controller.</span></td>
      </tr>
      <tr>
        <td id="L4335" class="blob-num js-line-number" data-line-number="4335"></td>
        <td id="LC4335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@return</span> {Object} Instance of given controller.</span></td>
      </tr>
      <tr>
        <td id="L4336" class="blob-num js-line-number" data-line-number="4336"></td>
        <td id="LC4336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4337" class="blob-num js-line-number" data-line-number="4337"></td>
        <td id="LC4337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4338" class="blob-num js-line-number" data-line-number="4338"></td>
        <td id="LC4338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * `$controller` service is responsible for instantiating controllers.</span></td>
      </tr>
      <tr>
        <td id="L4339" class="blob-num js-line-number" data-line-number="4339"></td>
        <td id="LC4339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4340" class="blob-num js-line-number" data-line-number="4340"></td>
        <td id="LC4340" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * It&#39;s just simple call to {@link angular.module.AUTO.$injector $injector}, but extracted into</span></td>
      </tr>
      <tr>
        <td id="L4341" class="blob-num js-line-number" data-line-number="4341"></td>
        <td id="LC4341" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * a service, so that one can override this service with {@link https://gist.github.com/1649788</span></td>
      </tr>
      <tr>
        <td id="L4342" class="blob-num js-line-number" data-line-number="4342"></td>
        <td id="LC4342" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * BC version}.</span></td>
      </tr>
      <tr>
        <td id="L4343" class="blob-num js-line-number" data-line-number="4343"></td>
        <td id="LC4343" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4344" class="blob-num js-line-number" data-line-number="4344"></td>
        <td id="LC4344" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">constructor</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L4345" class="blob-num js-line-number" data-line-number="4345"></td>
        <td id="LC4345" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span>(isString(constructor)) {</td>
      </tr>
      <tr>
        <td id="L4346" class="blob-num js-line-number" data-line-number="4346"></td>
        <td id="LC4346" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> name <span class="pl-k">=</span> constructor;</td>
      </tr>
      <tr>
        <td id="L4347" class="blob-num js-line-number" data-line-number="4347"></td>
        <td id="LC4347" class="blob-code blob-code-inner js-file-line">        constructor <span class="pl-k">=</span> controllers.hasOwnProperty(name)</td>
      </tr>
      <tr>
        <td id="L4348" class="blob-num js-line-number" data-line-number="4348"></td>
        <td id="LC4348" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> controllers[name]</td>
      </tr>
      <tr>
        <td id="L4349" class="blob-num js-line-number" data-line-number="4349"></td>
        <td id="LC4349" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> getter(locals.$scope, name, <span class="pl-c1">true</span>) <span class="pl-k">||</span> getter($window, name, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4350" class="blob-num js-line-number" data-line-number="4350"></td>
        <td id="LC4350" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4351" class="blob-num js-line-number" data-line-number="4351"></td>
        <td id="LC4351" class="blob-code blob-code-inner js-file-line">        assertArgFn(constructor, name, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L4352" class="blob-num js-line-number" data-line-number="4352"></td>
        <td id="LC4352" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4353" class="blob-num js-line-number" data-line-number="4353"></td>
        <td id="LC4353" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4354" class="blob-num js-line-number" data-line-number="4354"></td>
        <td id="LC4354" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> $injector.instantiate(constructor, locals);</td>
      </tr>
      <tr>
        <td id="L4355" class="blob-num js-line-number" data-line-number="4355"></td>
        <td id="LC4355" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4356" class="blob-num js-line-number" data-line-number="4356"></td>
        <td id="LC4356" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4357" class="blob-num js-line-number" data-line-number="4357"></td>
        <td id="LC4357" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4358" class="blob-num js-line-number" data-line-number="4358"></td>
        <td id="LC4358" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4359" class="blob-num js-line-number" data-line-number="4359"></td>
        <td id="LC4359" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4360" class="blob-num js-line-number" data-line-number="4360"></td>
        <td id="LC4360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4361" class="blob-num js-line-number" data-line-number="4361"></td>
        <td id="LC4361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$defer</span></td>
      </tr>
      <tr>
        <td id="L4362" class="blob-num js-line-number" data-line-number="4362"></td>
        <td id="LC4362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $browser</span></td>
      </tr>
      <tr>
        <td id="L4363" class="blob-num js-line-number" data-line-number="4363"></td>
        <td id="LC4363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4364" class="blob-num js-line-number" data-line-number="4364"></td>
        <td id="LC4364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4365" class="blob-num js-line-number" data-line-number="4365"></td>
        <td id="LC4365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Delegates to {@link angular.module.ng.$browser#defer $browser.defer}, but wraps the `fn` function</span></td>
      </tr>
      <tr>
        <td id="L4366" class="blob-num js-line-number" data-line-number="4366"></td>
        <td id="LC4366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * into a try/catch block and delegates any exceptions to</span></td>
      </tr>
      <tr>
        <td id="L4367" class="blob-num js-line-number" data-line-number="4367"></td>
        <td id="LC4367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$exceptionHandler $exceptionHandler} service.</span></td>
      </tr>
      <tr>
        <td id="L4368" class="blob-num js-line-number" data-line-number="4368"></td>
        <td id="LC4368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4369" class="blob-num js-line-number" data-line-number="4369"></td>
        <td id="LC4369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In tests you can use `$browser.defer.flush()` to flush the queue of deferred functions.</span></td>
      </tr>
      <tr>
        <td id="L4370" class="blob-num js-line-number" data-line-number="4370"></td>
        <td id="LC4370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4371" class="blob-num js-line-number" data-line-number="4371"></td>
        <td id="LC4371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function()} fn A function, who&#39;s execution should be deferred.</span></td>
      </tr>
      <tr>
        <td id="L4372" class="blob-num js-line-number" data-line-number="4372"></td>
        <td id="LC4372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} [delay=0] of milliseconds to defer the function execution.</span></td>
      </tr>
      <tr>
        <td id="L4373" class="blob-num js-line-number" data-line-number="4373"></td>
        <td id="LC4373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {*} DeferId that can be used to cancel the task via `$defer.cancel()`.</span></td>
      </tr>
      <tr>
        <td id="L4374" class="blob-num js-line-number" data-line-number="4374"></td>
        <td id="LC4374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4375" class="blob-num js-line-number" data-line-number="4375"></td>
        <td id="LC4375" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4376" class="blob-num js-line-number" data-line-number="4376"></td>
        <td id="LC4376" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4377" class="blob-num js-line-number" data-line-number="4377"></td>
        <td id="LC4377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4378" class="blob-num js-line-number" data-line-number="4378"></td>
        <td id="LC4378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$defer#cancel</span></td>
      </tr>
      <tr>
        <td id="L4379" class="blob-num js-line-number" data-line-number="4379"></td>
        <td id="LC4379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.ng.$defer</span></td>
      </tr>
      <tr>
        <td id="L4380" class="blob-num js-line-number" data-line-number="4380"></td>
        <td id="LC4380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4381" class="blob-num js-line-number" data-line-number="4381"></td>
        <td id="LC4381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4382" class="blob-num js-line-number" data-line-number="4382"></td>
        <td id="LC4382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Cancels a defered task identified with `deferId`.</span></td>
      </tr>
      <tr>
        <td id="L4383" class="blob-num js-line-number" data-line-number="4383"></td>
        <td id="LC4383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4384" class="blob-num js-line-number" data-line-number="4384"></td>
        <td id="LC4384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} deferId Token returned by the `$defer` function.</span></td>
      </tr>
      <tr>
        <td id="L4385" class="blob-num js-line-number" data-line-number="4385"></td>
        <td id="LC4385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {boolean} Returns `true` if the task hasn&#39;t executed yet and was successfuly canceled.</span></td>
      </tr>
      <tr>
        <td id="L4386" class="blob-num js-line-number" data-line-number="4386"></td>
        <td id="LC4386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4387" class="blob-num js-line-number" data-line-number="4387"></td>
        <td id="LC4387" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$DeferProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L4388" class="blob-num js-line-number" data-line-number="4388"></td>
        <td id="LC4388" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$browser<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$rootScope</span>, <span class="pl-smi">$browser</span>) {</td>
      </tr>
      <tr>
        <td id="L4389" class="blob-num js-line-number" data-line-number="4389"></td>
        <td id="LC4389" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">defer</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">delay</span>) {</td>
      </tr>
      <tr>
        <td id="L4390" class="blob-num js-line-number" data-line-number="4390"></td>
        <td id="LC4390" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> $browser.<span class="pl-c1">defer</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4391" class="blob-num js-line-number" data-line-number="4391"></td>
        <td id="LC4391" class="blob-code blob-code-inner js-file-line">        $rootScope.$<span class="pl-c1">apply</span>(fn);</td>
      </tr>
      <tr>
        <td id="L4392" class="blob-num js-line-number" data-line-number="4392"></td>
        <td id="LC4392" class="blob-code blob-code-inner js-file-line">      }, delay);</td>
      </tr>
      <tr>
        <td id="L4393" class="blob-num js-line-number" data-line-number="4393"></td>
        <td id="LC4393" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4394" class="blob-num js-line-number" data-line-number="4394"></td>
        <td id="LC4394" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4395" class="blob-num js-line-number" data-line-number="4395"></td>
        <td id="LC4395" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">defer</span>.<span class="pl-en">cancel</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">deferId</span>) {</td>
      </tr>
      <tr>
        <td id="L4396" class="blob-num js-line-number" data-line-number="4396"></td>
        <td id="LC4396" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> $browser.<span class="pl-c1">defer</span>.cancel(deferId);</td>
      </tr>
      <tr>
        <td id="L4397" class="blob-num js-line-number" data-line-number="4397"></td>
        <td id="LC4397" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4398" class="blob-num js-line-number" data-line-number="4398"></td>
        <td id="LC4398" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4399" class="blob-num js-line-number" data-line-number="4399"></td>
        <td id="LC4399" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> defer;</td>
      </tr>
      <tr>
        <td id="L4400" class="blob-num js-line-number" data-line-number="4400"></td>
        <td id="LC4400" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4401" class="blob-num js-line-number" data-line-number="4401"></td>
        <td id="LC4401" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4402" class="blob-num js-line-number" data-line-number="4402"></td>
        <td id="LC4402" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4403" class="blob-num js-line-number" data-line-number="4403"></td>
        <td id="LC4403" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4404" class="blob-num js-line-number" data-line-number="4404"></td>
        <td id="LC4404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L4405" class="blob-num js-line-number" data-line-number="4405"></td>
        <td id="LC4405" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$document</span></td>
      </tr>
      <tr>
        <td id="L4406" class="blob-num js-line-number" data-line-number="4406"></td>
        <td id="LC4406" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $window</span></td>
      </tr>
      <tr>
        <td id="L4407" class="blob-num js-line-number" data-line-number="4407"></td>
        <td id="LC4407" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4408" class="blob-num js-line-number" data-line-number="4408"></td>
        <td id="LC4408" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4409" class="blob-num js-line-number" data-line-number="4409"></td>
        <td id="LC4409" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A {@link angular.element jQuery (lite)}-wrapped reference to the browser&#39;s `window.document`</span></td>
      </tr>
      <tr>
        <td id="L4410" class="blob-num js-line-number" data-line-number="4410"></td>
        <td id="LC4410" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * element.</span></td>
      </tr>
      <tr>
        <td id="L4411" class="blob-num js-line-number" data-line-number="4411"></td>
        <td id="LC4411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4412" class="blob-num js-line-number" data-line-number="4412"></td>
        <td id="LC4412" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$DocumentProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L4413" class="blob-num js-line-number" data-line-number="4413"></td>
        <td id="LC4413" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">window</span>){</td>
      </tr>
      <tr>
        <td id="L4414" class="blob-num js-line-number" data-line-number="4414"></td>
        <td id="LC4414" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> jqLite(<span class="pl-c1">window</span>.<span class="pl-c1">document</span>);</td>
      </tr>
      <tr>
        <td id="L4415" class="blob-num js-line-number" data-line-number="4415"></td>
        <td id="LC4415" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4416" class="blob-num js-line-number" data-line-number="4416"></td>
        <td id="LC4416" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4417" class="blob-num js-line-number" data-line-number="4417"></td>
        <td id="LC4417" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4418" class="blob-num js-line-number" data-line-number="4418"></td>
        <td id="LC4418" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4419" class="blob-num js-line-number" data-line-number="4419"></td>
        <td id="LC4419" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4420" class="blob-num js-line-number" data-line-number="4420"></td>
        <td id="LC4420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$exceptionHandler</span></td>
      </tr>
      <tr>
        <td id="L4421" class="blob-num js-line-number" data-line-number="4421"></td>
        <td id="LC4421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $log</span></td>
      </tr>
      <tr>
        <td id="L4422" class="blob-num js-line-number" data-line-number="4422"></td>
        <td id="LC4422" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4423" class="blob-num js-line-number" data-line-number="4423"></td>
        <td id="LC4423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4424" class="blob-num js-line-number" data-line-number="4424"></td>
        <td id="LC4424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Any uncaught exception in angular expressions is delegated to this service.</span></td>
      </tr>
      <tr>
        <td id="L4425" class="blob-num js-line-number" data-line-number="4425"></td>
        <td id="LC4425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The default implementation simply delegates to `$log.error` which logs it into</span></td>
      </tr>
      <tr>
        <td id="L4426" class="blob-num js-line-number" data-line-number="4426"></td>
        <td id="LC4426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the browser console.</span></td>
      </tr>
      <tr>
        <td id="L4427" class="blob-num js-line-number" data-line-number="4427"></td>
        <td id="LC4427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4428" class="blob-num js-line-number" data-line-number="4428"></td>
        <td id="LC4428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In unit tests, if `angular-mocks.js` is loaded, this service is overridden by</span></td>
      </tr>
      <tr>
        <td id="L4429" class="blob-num js-line-number" data-line-number="4429"></td>
        <td id="LC4429" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ngMock.$exceptionHandler mock $exceptionHandler}</span></td>
      </tr>
      <tr>
        <td id="L4430" class="blob-num js-line-number" data-line-number="4430"></td>
        <td id="LC4430" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4431" class="blob-num js-line-number" data-line-number="4431"></td>
        <td id="LC4431" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Error} exception Exception associated with the error.</span></td>
      </tr>
      <tr>
        <td id="L4432" class="blob-num js-line-number" data-line-number="4432"></td>
        <td id="LC4432" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} cause optional information about the context in which</span></td>
      </tr>
      <tr>
        <td id="L4433" class="blob-num js-line-number" data-line-number="4433"></td>
        <td id="LC4433" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       the error was thrown.</span></td>
      </tr>
      <tr>
        <td id="L4434" class="blob-num js-line-number" data-line-number="4434"></td>
        <td id="LC4434" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4435" class="blob-num js-line-number" data-line-number="4435"></td>
        <td id="LC4435" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$ExceptionHandlerProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L4436" class="blob-num js-line-number" data-line-number="4436"></td>
        <td id="LC4436" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$log<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$log</span>){</td>
      </tr>
      <tr>
        <td id="L4437" class="blob-num js-line-number" data-line-number="4437"></td>
        <td id="LC4437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">exception</span>, <span class="pl-smi">cause</span>) {</td>
      </tr>
      <tr>
        <td id="L4438" class="blob-num js-line-number" data-line-number="4438"></td>
        <td id="LC4438" class="blob-code blob-code-inner js-file-line">      $log<span class="pl-c1">.error</span>.<span class="pl-c1">apply</span>($log, arguments);</td>
      </tr>
      <tr>
        <td id="L4439" class="blob-num js-line-number" data-line-number="4439"></td>
        <td id="LC4439" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4440" class="blob-num js-line-number" data-line-number="4440"></td>
        <td id="LC4440" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4441" class="blob-num js-line-number" data-line-number="4441"></td>
        <td id="LC4441" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4442" class="blob-num js-line-number" data-line-number="4442"></td>
        <td id="LC4442" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4443" class="blob-num js-line-number" data-line-number="4443"></td>
        <td id="LC4443" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4444" class="blob-num js-line-number" data-line-number="4444"></td>
        <td id="LC4444" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4445" class="blob-num js-line-number" data-line-number="4445"></td>
        <td id="LC4445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$interpolateProvider</span></td>
      </tr>
      <tr>
        <td id="L4446" class="blob-num js-line-number" data-line-number="4446"></td>
        <td id="LC4446" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L4447" class="blob-num js-line-number" data-line-number="4447"></td>
        <td id="LC4447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4448" class="blob-num js-line-number" data-line-number="4448"></td>
        <td id="LC4448" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4449" class="blob-num js-line-number" data-line-number="4449"></td>
        <td id="LC4449" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4450" class="blob-num js-line-number" data-line-number="4450"></td>
        <td id="LC4450" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Used for configuring the interpolation markup. Deafults to `{{` and `}}`.</span></td>
      </tr>
      <tr>
        <td id="L4451" class="blob-num js-line-number" data-line-number="4451"></td>
        <td id="LC4451" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4452" class="blob-num js-line-number" data-line-number="4452"></td>
        <td id="LC4452" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$InterpolateProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L4453" class="blob-num js-line-number" data-line-number="4453"></td>
        <td id="LC4453" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> startSymbol <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>{{<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4454" class="blob-num js-line-number" data-line-number="4454"></td>
        <td id="LC4454" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> endSymbol <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>}}<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4455" class="blob-num js-line-number" data-line-number="4455"></td>
        <td id="LC4455" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4456" class="blob-num js-line-number" data-line-number="4456"></td>
        <td id="LC4456" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4457" class="blob-num js-line-number" data-line-number="4457"></td>
        <td id="LC4457" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4458" class="blob-num js-line-number" data-line-number="4458"></td>
        <td id="LC4458" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$interpolateProvider#startSymbol</span></td>
      </tr>
      <tr>
        <td id="L4459" class="blob-num js-line-number" data-line-number="4459"></td>
        <td id="LC4459" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$interpolateProvider</span></td>
      </tr>
      <tr>
        <td id="L4460" class="blob-num js-line-number" data-line-number="4460"></td>
        <td id="LC4460" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4461" class="blob-num js-line-number" data-line-number="4461"></td>
        <td id="LC4461" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Symbol to denote start of expression in the interpolated string. Defaults to `{{`.</span></td>
      </tr>
      <tr>
        <td id="L4462" class="blob-num js-line-number" data-line-number="4462"></td>
        <td id="LC4462" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4463" class="blob-num js-line-number" data-line-number="4463"></td>
        <td id="LC4463" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@prop</span> {string=} value new value to set the starting symbol to.</span></td>
      </tr>
      <tr>
        <td id="L4464" class="blob-num js-line-number" data-line-number="4464"></td>
        <td id="LC4464" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4465" class="blob-num js-line-number" data-line-number="4465"></td>
        <td id="LC4465" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">startSymbol</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L4466" class="blob-num js-line-number" data-line-number="4466"></td>
        <td id="LC4466" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L4467" class="blob-num js-line-number" data-line-number="4467"></td>
        <td id="LC4467" class="blob-code blob-code-inner js-file-line">      startSymbol <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L4468" class="blob-num js-line-number" data-line-number="4468"></td>
        <td id="LC4468" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4469" class="blob-num js-line-number" data-line-number="4469"></td>
        <td id="LC4469" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4470" class="blob-num js-line-number" data-line-number="4470"></td>
        <td id="LC4470" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> startSymbol;</td>
      </tr>
      <tr>
        <td id="L4471" class="blob-num js-line-number" data-line-number="4471"></td>
        <td id="LC4471" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4472" class="blob-num js-line-number" data-line-number="4472"></td>
        <td id="LC4472" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4473" class="blob-num js-line-number" data-line-number="4473"></td>
        <td id="LC4473" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4474" class="blob-num js-line-number" data-line-number="4474"></td>
        <td id="LC4474" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4475" class="blob-num js-line-number" data-line-number="4475"></td>
        <td id="LC4475" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4476" class="blob-num js-line-number" data-line-number="4476"></td>
        <td id="LC4476" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$interpolateProvider#endSymbol</span></td>
      </tr>
      <tr>
        <td id="L4477" class="blob-num js-line-number" data-line-number="4477"></td>
        <td id="LC4477" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$interpolateProvider</span></td>
      </tr>
      <tr>
        <td id="L4478" class="blob-num js-line-number" data-line-number="4478"></td>
        <td id="LC4478" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4479" class="blob-num js-line-number" data-line-number="4479"></td>
        <td id="LC4479" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.</span></td>
      </tr>
      <tr>
        <td id="L4480" class="blob-num js-line-number" data-line-number="4480"></td>
        <td id="LC4480" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4481" class="blob-num js-line-number" data-line-number="4481"></td>
        <td id="LC4481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@prop</span> {string=} value new value to set the ending symbol to.</span></td>
      </tr>
      <tr>
        <td id="L4482" class="blob-num js-line-number" data-line-number="4482"></td>
        <td id="LC4482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4483" class="blob-num js-line-number" data-line-number="4483"></td>
        <td id="LC4483" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">endSymbol</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L4484" class="blob-num js-line-number" data-line-number="4484"></td>
        <td id="LC4484" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value) {</td>
      </tr>
      <tr>
        <td id="L4485" class="blob-num js-line-number" data-line-number="4485"></td>
        <td id="LC4485" class="blob-code blob-code-inner js-file-line">      endSymbol <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L4486" class="blob-num js-line-number" data-line-number="4486"></td>
        <td id="LC4486" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4487" class="blob-num js-line-number" data-line-number="4487"></td>
        <td id="LC4487" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4488" class="blob-num js-line-number" data-line-number="4488"></td>
        <td id="LC4488" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> startSymbol;</td>
      </tr>
      <tr>
        <td id="L4489" class="blob-num js-line-number" data-line-number="4489"></td>
        <td id="LC4489" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4490" class="blob-num js-line-number" data-line-number="4490"></td>
        <td id="LC4490" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4491" class="blob-num js-line-number" data-line-number="4491"></td>
        <td id="LC4491" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4492" class="blob-num js-line-number" data-line-number="4492"></td>
        <td id="LC4492" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4493" class="blob-num js-line-number" data-line-number="4493"></td>
        <td id="LC4493" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$parse</span>) {</td>
      </tr>
      <tr>
        <td id="L4494" class="blob-num js-line-number" data-line-number="4494"></td>
        <td id="LC4494" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> startSymbolLength <span class="pl-k">=</span> startSymbol.<span class="pl-c1">length</span>,</td>
      </tr>
      <tr>
        <td id="L4495" class="blob-num js-line-number" data-line-number="4495"></td>
        <td id="LC4495" class="blob-code blob-code-inner js-file-line">        endSymbolLength <span class="pl-k">=</span> endSymbol.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L4496" class="blob-num js-line-number" data-line-number="4496"></td>
        <td id="LC4496" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4497" class="blob-num js-line-number" data-line-number="4497"></td>
        <td id="LC4497" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4498" class="blob-num js-line-number" data-line-number="4498"></td>
        <td id="LC4498" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L4499" class="blob-num js-line-number" data-line-number="4499"></td>
        <td id="LC4499" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$interpolate</span></td>
      </tr>
      <tr>
        <td id="L4500" class="blob-num js-line-number" data-line-number="4500"></td>
        <td id="LC4500" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L4501" class="blob-num js-line-number" data-line-number="4501"></td>
        <td id="LC4501" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4502" class="blob-num js-line-number" data-line-number="4502"></td>
        <td id="LC4502" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $parse</span></td>
      </tr>
      <tr>
        <td id="L4503" class="blob-num js-line-number" data-line-number="4503"></td>
        <td id="LC4503" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4504" class="blob-num js-line-number" data-line-number="4504"></td>
        <td id="LC4504" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4505" class="blob-num js-line-number" data-line-number="4505"></td>
        <td id="LC4505" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4506" class="blob-num js-line-number" data-line-number="4506"></td>
        <td id="LC4506" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Compiles a string with markup into an interpolation function. This service is used by the</span></td>
      </tr>
      <tr>
        <td id="L4507" class="blob-num js-line-number" data-line-number="4507"></td>
        <td id="LC4507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * HTML {@link angular.module.ng.$compile $compile} service for data binding. See</span></td>
      </tr>
      <tr>
        <td id="L4508" class="blob-num js-line-number" data-line-number="4508"></td>
        <td id="LC4508" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.ng.$interpolateProvider $interpolateProvider} for configuring the</span></td>
      </tr>
      <tr>
        <td id="L4509" class="blob-num js-line-number" data-line-number="4509"></td>
        <td id="LC4509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * interpolation markup.</span></td>
      </tr>
      <tr>
        <td id="L4510" class="blob-num js-line-number" data-line-number="4510"></td>
        <td id="LC4510" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4511" class="blob-num js-line-number" data-line-number="4511"></td>
        <td id="LC4511" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4512" class="blob-num js-line-number" data-line-number="4512"></td>
        <td id="LC4512" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L4513" class="blob-num js-line-number" data-line-number="4513"></td>
        <td id="LC4513" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         var $interpolate = ...; // injected</span></td>
      </tr>
      <tr>
        <td id="L4514" class="blob-num js-line-number" data-line-number="4514"></td>
        <td id="LC4514" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         var exp = $interpolate(&#39;Hello {{name}}!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L4515" class="blob-num js-line-number" data-line-number="4515"></td>
        <td id="LC4515" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(exp({name:&#39;Angular&#39;}).toEqual(&#39;Hello Angular!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L4516" class="blob-num js-line-number" data-line-number="4516"></td>
        <td id="LC4516" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L4517" class="blob-num js-line-number" data-line-number="4517"></td>
        <td id="LC4517" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4518" class="blob-num js-line-number" data-line-number="4518"></td>
        <td id="LC4518" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4519" class="blob-num js-line-number" data-line-number="4519"></td>
        <td id="LC4519" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} text The text with markup to interpolate.</span></td>
      </tr>
      <tr>
        <td id="L4520" class="blob-num js-line-number" data-line-number="4520"></td>
        <td id="LC4520" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {boolean=} mustHaveExpression if set to true then the interpolation string must have</span></td>
      </tr>
      <tr>
        <td id="L4521" class="blob-num js-line-number" data-line-number="4521"></td>
        <td id="LC4521" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    embedded expression in order to return an interpolation function. Strings with no</span></td>
      </tr>
      <tr>
        <td id="L4522" class="blob-num js-line-number" data-line-number="4522"></td>
        <td id="LC4522" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    embedded expression will return null for the interpolation function.</span></td>
      </tr>
      <tr>
        <td id="L4523" class="blob-num js-line-number" data-line-number="4523"></td>
        <td id="LC4523" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {function(context)} an interpolation function which is used to compute the interpolated</span></td>
      </tr>
      <tr>
        <td id="L4524" class="blob-num js-line-number" data-line-number="4524"></td>
        <td id="LC4524" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    string. The function has these parameters:</span></td>
      </tr>
      <tr>
        <td id="L4525" class="blob-num js-line-number" data-line-number="4525"></td>
        <td id="LC4525" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4526" class="blob-num js-line-number" data-line-number="4526"></td>
        <td id="LC4526" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    * `context`: an object against which any expressions embedded in the strings are evaluated</span></td>
      </tr>
      <tr>
        <td id="L4527" class="blob-num js-line-number" data-line-number="4527"></td>
        <td id="LC4527" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      against.</span></td>
      </tr>
      <tr>
        <td id="L4528" class="blob-num js-line-number" data-line-number="4528"></td>
        <td id="LC4528" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L4529" class="blob-num js-line-number" data-line-number="4529"></td>
        <td id="LC4529" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L4530" class="blob-num js-line-number" data-line-number="4530"></td>
        <td id="LC4530" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">text</span>, <span class="pl-smi">mustHaveExpression</span>) {</td>
      </tr>
      <tr>
        <td id="L4531" class="blob-num js-line-number" data-line-number="4531"></td>
        <td id="LC4531" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> startIndex,</td>
      </tr>
      <tr>
        <td id="L4532" class="blob-num js-line-number" data-line-number="4532"></td>
        <td id="LC4532" class="blob-code blob-code-inner js-file-line">          endIndex,</td>
      </tr>
      <tr>
        <td id="L4533" class="blob-num js-line-number" data-line-number="4533"></td>
        <td id="LC4533" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4534" class="blob-num js-line-number" data-line-number="4534"></td>
        <td id="LC4534" class="blob-code blob-code-inner js-file-line">          parts <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L4535" class="blob-num js-line-number" data-line-number="4535"></td>
        <td id="LC4535" class="blob-code blob-code-inner js-file-line">          length <span class="pl-k">=</span> text.<span class="pl-c1">length</span>,</td>
      </tr>
      <tr>
        <td id="L4536" class="blob-num js-line-number" data-line-number="4536"></td>
        <td id="LC4536" class="blob-code blob-code-inner js-file-line">          hasInterpolation <span class="pl-k">=</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L4537" class="blob-num js-line-number" data-line-number="4537"></td>
        <td id="LC4537" class="blob-code blob-code-inner js-file-line">          fn,</td>
      </tr>
      <tr>
        <td id="L4538" class="blob-num js-line-number" data-line-number="4538"></td>
        <td id="LC4538" class="blob-code blob-code-inner js-file-line">          exp,</td>
      </tr>
      <tr>
        <td id="L4539" class="blob-num js-line-number" data-line-number="4539"></td>
        <td id="LC4539" class="blob-code blob-code-inner js-file-line">          concat <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L4540" class="blob-num js-line-number" data-line-number="4540"></td>
        <td id="LC4540" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4541" class="blob-num js-line-number" data-line-number="4541"></td>
        <td id="LC4541" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span>(index <span class="pl-k">&lt;</span> length) {</td>
      </tr>
      <tr>
        <td id="L4542" class="blob-num js-line-number" data-line-number="4542"></td>
        <td id="LC4542" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ( ((startIndex <span class="pl-k">=</span> text.<span class="pl-c1">indexOf</span>(startSymbol, index)) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L4543" class="blob-num js-line-number" data-line-number="4543"></td>
        <td id="LC4543" class="blob-code blob-code-inner js-file-line">             ((endIndex <span class="pl-k">=</span> text.<span class="pl-c1">indexOf</span>(endSymbol, startIndex <span class="pl-k">+</span> startSymbolLength)) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) ) {</td>
      </tr>
      <tr>
        <td id="L4544" class="blob-num js-line-number" data-line-number="4544"></td>
        <td id="LC4544" class="blob-code blob-code-inner js-file-line">          (index <span class="pl-k">!=</span> startIndex) <span class="pl-k">&amp;&amp;</span> parts.<span class="pl-c1">push</span>(text.<span class="pl-c1">substring</span>(index, startIndex));</td>
      </tr>
      <tr>
        <td id="L4545" class="blob-num js-line-number" data-line-number="4545"></td>
        <td id="LC4545" class="blob-code blob-code-inner js-file-line">          parts.<span class="pl-c1">push</span>(fn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(exp <span class="pl-k">=</span> text.<span class="pl-c1">substring</span>(startIndex <span class="pl-k">+</span> startSymbolLength, endIndex)));</td>
      </tr>
      <tr>
        <td id="L4546" class="blob-num js-line-number" data-line-number="4546"></td>
        <td id="LC4546" class="blob-code blob-code-inner js-file-line">          fn.exp <span class="pl-k">=</span> exp;</td>
      </tr>
      <tr>
        <td id="L4547" class="blob-num js-line-number" data-line-number="4547"></td>
        <td id="LC4547" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> endIndex <span class="pl-k">+</span> endSymbolLength;</td>
      </tr>
      <tr>
        <td id="L4548" class="blob-num js-line-number" data-line-number="4548"></td>
        <td id="LC4548" class="blob-code blob-code-inner js-file-line">          hasInterpolation <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4549" class="blob-num js-line-number" data-line-number="4549"></td>
        <td id="LC4549" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4550" class="blob-num js-line-number" data-line-number="4550"></td>
        <td id="LC4550" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// we did not find anything, so we have to add the remainder to the parts array</span></td>
      </tr>
      <tr>
        <td id="L4551" class="blob-num js-line-number" data-line-number="4551"></td>
        <td id="LC4551" class="blob-code blob-code-inner js-file-line">          (index <span class="pl-k">!=</span> length) <span class="pl-k">&amp;&amp;</span> parts.<span class="pl-c1">push</span>(text.<span class="pl-c1">substring</span>(index));</td>
      </tr>
      <tr>
        <td id="L4552" class="blob-num js-line-number" data-line-number="4552"></td>
        <td id="LC4552" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> length;</td>
      </tr>
      <tr>
        <td id="L4553" class="blob-num js-line-number" data-line-number="4553"></td>
        <td id="LC4553" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L4554" class="blob-num js-line-number" data-line-number="4554"></td>
        <td id="LC4554" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4555" class="blob-num js-line-number" data-line-number="4555"></td>
        <td id="LC4555" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4556" class="blob-num js-line-number" data-line-number="4556"></td>
        <td id="LC4556" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>(length <span class="pl-k">=</span> parts.<span class="pl-c1">length</span>)) {</td>
      </tr>
      <tr>
        <td id="L4557" class="blob-num js-line-number" data-line-number="4557"></td>
        <td id="LC4557" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we added, nothing, must have been an empty string.</span></td>
      </tr>
      <tr>
        <td id="L4558" class="blob-num js-line-number" data-line-number="4558"></td>
        <td id="LC4558" class="blob-code blob-code-inner js-file-line">        parts.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4559" class="blob-num js-line-number" data-line-number="4559"></td>
        <td id="LC4559" class="blob-code blob-code-inner js-file-line">        length <span class="pl-k">=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L4560" class="blob-num js-line-number" data-line-number="4560"></td>
        <td id="LC4560" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4561" class="blob-num js-line-number" data-line-number="4561"></td>
        <td id="LC4561" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4562" class="blob-num js-line-number" data-line-number="4562"></td>
        <td id="LC4562" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>mustHaveExpression  <span class="pl-k">||</span> hasInterpolation) {</td>
      </tr>
      <tr>
        <td id="L4563" class="blob-num js-line-number" data-line-number="4563"></td>
        <td id="LC4563" class="blob-code blob-code-inner js-file-line">        concat.<span class="pl-c1">length</span> <span class="pl-k">=</span> length;</td>
      </tr>
      <tr>
        <td id="L4564" class="blob-num js-line-number" data-line-number="4564"></td>
        <td id="LC4564" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">fn</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">context</span>) {</td>
      </tr>
      <tr>
        <td id="L4565" class="blob-num js-line-number" data-line-number="4565"></td>
        <td id="LC4565" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> length, part; i<span class="pl-k">&lt;</span>ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L4566" class="blob-num js-line-number" data-line-number="4566"></td>
        <td id="LC4566" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">typeof</span> (part <span class="pl-k">=</span> parts[i]) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4567" class="blob-num js-line-number" data-line-number="4567"></td>
        <td id="LC4567" class="blob-code blob-code-inner js-file-line">              part <span class="pl-k">=</span> part(context);</td>
      </tr>
      <tr>
        <td id="L4568" class="blob-num js-line-number" data-line-number="4568"></td>
        <td id="LC4568" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (part <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> part <span class="pl-k">==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L4569" class="blob-num js-line-number" data-line-number="4569"></td>
        <td id="LC4569" class="blob-code blob-code-inner js-file-line">                part <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4570" class="blob-num js-line-number" data-line-number="4570"></td>
        <td id="LC4570" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">else</span> <span class="pl-k">if</span> (<span class="pl-k">typeof</span> part <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L4571" class="blob-num js-line-number" data-line-number="4571"></td>
        <td id="LC4571" class="blob-code blob-code-inner js-file-line">                part <span class="pl-k">=</span> toJson(part);</td>
      </tr>
      <tr>
        <td id="L4572" class="blob-num js-line-number" data-line-number="4572"></td>
        <td id="LC4572" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L4573" class="blob-num js-line-number" data-line-number="4573"></td>
        <td id="LC4573" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L4574" class="blob-num js-line-number" data-line-number="4574"></td>
        <td id="LC4574" class="blob-code blob-code-inner js-file-line">            concat[i] <span class="pl-k">=</span> part;</td>
      </tr>
      <tr>
        <td id="L4575" class="blob-num js-line-number" data-line-number="4575"></td>
        <td id="LC4575" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L4576" class="blob-num js-line-number" data-line-number="4576"></td>
        <td id="LC4576" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> concat.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4577" class="blob-num js-line-number" data-line-number="4577"></td>
        <td id="LC4577" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L4578" class="blob-num js-line-number" data-line-number="4578"></td>
        <td id="LC4578" class="blob-code blob-code-inner js-file-line">        fn.exp <span class="pl-k">=</span> text;</td>
      </tr>
      <tr>
        <td id="L4579" class="blob-num js-line-number" data-line-number="4579"></td>
        <td id="LC4579" class="blob-code blob-code-inner js-file-line">        fn.parts <span class="pl-k">=</span> parts;</td>
      </tr>
      <tr>
        <td id="L4580" class="blob-num js-line-number" data-line-number="4580"></td>
        <td id="LC4580" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L4581" class="blob-num js-line-number" data-line-number="4581"></td>
        <td id="LC4581" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4582" class="blob-num js-line-number" data-line-number="4582"></td>
        <td id="LC4582" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4583" class="blob-num js-line-number" data-line-number="4583"></td>
        <td id="LC4583" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L4584" class="blob-num js-line-number" data-line-number="4584"></td>
        <td id="LC4584" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4585" class="blob-num js-line-number" data-line-number="4585"></td>
        <td id="LC4585" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4586" class="blob-num js-line-number" data-line-number="4586"></td>
        <td id="LC4586" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">URL_MATCH</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(file<span class="pl-k">|</span>ftp<span class="pl-k">|</span>http<span class="pl-k">|</span>https):<span class="pl-cce">\/\/</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>:<span class="pl-k">{0,1}</span><span class="pl-c1">\w</span><span class="pl-k">*</span>@)<span class="pl-k">?</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\.</span>-]</span><span class="pl-k">*</span>)(:(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>))<span class="pl-k">?</span>(<span class="pl-cce">\/</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\?</span>#]</span><span class="pl-k">*</span>)<span class="pl-k">?</span>(<span class="pl-cce">\?</span>(<span class="pl-c1">[<span class="pl-k">^</span>#]</span><span class="pl-k">*</span>))<span class="pl-k">?</span>(#(<span class="pl-c1">.</span><span class="pl-k">*</span>))<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L4587" class="blob-num js-line-number" data-line-number="4587"></td>
        <td id="LC4587" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">PATH_MATCH</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\?</span>#]</span><span class="pl-k">*</span>)<span class="pl-k">?</span>(<span class="pl-cce">\?</span>(<span class="pl-c1">[<span class="pl-k">^</span>#]</span><span class="pl-k">*</span>))<span class="pl-k">?</span>(#(<span class="pl-c1">.</span><span class="pl-k">*</span>))<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L4588" class="blob-num js-line-number" data-line-number="4588"></td>
        <td id="LC4588" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">HASH_MATCH</span> <span class="pl-k">=</span> <span class="pl-c1">PATH_MATCH</span>,</td>
      </tr>
      <tr>
        <td id="L4589" class="blob-num js-line-number" data-line-number="4589"></td>
        <td id="LC4589" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">DEFAULT_PORTS</span> <span class="pl-k">=</span> {<span class="pl-s"><span class="pl-pds">&#39;</span>http<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">80</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>https<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">443</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ftp<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-c1">21</span>};</td>
      </tr>
      <tr>
        <td id="L4590" class="blob-num js-line-number" data-line-number="4590"></td>
        <td id="LC4590" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4591" class="blob-num js-line-number" data-line-number="4591"></td>
        <td id="LC4591" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4592" class="blob-num js-line-number" data-line-number="4592"></td>
        <td id="LC4592" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4593" class="blob-num js-line-number" data-line-number="4593"></td>
        <td id="LC4593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Encode path using encodeUriSegment, ignoring forward slashes</span></td>
      </tr>
      <tr>
        <td id="L4594" class="blob-num js-line-number" data-line-number="4594"></td>
        <td id="LC4594" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4595" class="blob-num js-line-number" data-line-number="4595"></td>
        <td id="LC4595" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} path Path to encode</span></td>
      </tr>
      <tr>
        <td id="L4596" class="blob-num js-line-number" data-line-number="4596"></td>
        <td id="LC4596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4597" class="blob-num js-line-number" data-line-number="4597"></td>
        <td id="LC4597" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4598" class="blob-num js-line-number" data-line-number="4598"></td>
        <td id="LC4598" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">encodePath</span>(<span class="pl-smi">path</span>) {</td>
      </tr>
      <tr>
        <td id="L4599" class="blob-num js-line-number" data-line-number="4599"></td>
        <td id="LC4599" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> segments <span class="pl-k">=</span> path.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4600" class="blob-num js-line-number" data-line-number="4600"></td>
        <td id="LC4600" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> segments.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L4601" class="blob-num js-line-number" data-line-number="4601"></td>
        <td id="LC4601" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4602" class="blob-num js-line-number" data-line-number="4602"></td>
        <td id="LC4602" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span> (i<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L4603" class="blob-num js-line-number" data-line-number="4603"></td>
        <td id="LC4603" class="blob-code blob-code-inner js-file-line">    segments[i] <span class="pl-k">=</span> encodeUriSegment(segments[i]);</td>
      </tr>
      <tr>
        <td id="L4604" class="blob-num js-line-number" data-line-number="4604"></td>
        <td id="LC4604" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4605" class="blob-num js-line-number" data-line-number="4605"></td>
        <td id="LC4605" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4606" class="blob-num js-line-number" data-line-number="4606"></td>
        <td id="LC4606" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> segments.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4607" class="blob-num js-line-number" data-line-number="4607"></td>
        <td id="LC4607" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4608" class="blob-num js-line-number" data-line-number="4608"></td>
        <td id="LC4608" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4609" class="blob-num js-line-number" data-line-number="4609"></td>
        <td id="LC4609" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4610" class="blob-num js-line-number" data-line-number="4610"></td>
        <td id="LC4610" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">matchUrl</span>(<span class="pl-smi">url</span>, <span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L4611" class="blob-num js-line-number" data-line-number="4611"></td>
        <td id="LC4611" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> match <span class="pl-k">=</span> <span class="pl-c1">URL_MATCH</span>.<span class="pl-c1">exec</span>(url);</td>
      </tr>
      <tr>
        <td id="L4612" class="blob-num js-line-number" data-line-number="4612"></td>
        <td id="LC4612" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4613" class="blob-num js-line-number" data-line-number="4613"></td>
        <td id="LC4613" class="blob-code blob-code-inner js-file-line">  match <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4614" class="blob-num js-line-number" data-line-number="4614"></td>
        <td id="LC4614" class="blob-code blob-code-inner js-file-line">      protocol<span class="pl-k">:</span> match[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L4615" class="blob-num js-line-number" data-line-number="4615"></td>
        <td id="LC4615" class="blob-code blob-code-inner js-file-line">      host<span class="pl-k">:</span> match[<span class="pl-c1">3</span>],</td>
      </tr>
      <tr>
        <td id="L4616" class="blob-num js-line-number" data-line-number="4616"></td>
        <td id="LC4616" class="blob-code blob-code-inner js-file-line">      port<span class="pl-k">:</span> int(match[<span class="pl-c1">5</span>]) <span class="pl-k">||</span> <span class="pl-c1">DEFAULT_PORTS</span>[match[<span class="pl-c1">1</span>]] <span class="pl-k">||</span> <span class="pl-c1">null</span>,</td>
      </tr>
      <tr>
        <td id="L4617" class="blob-num js-line-number" data-line-number="4617"></td>
        <td id="LC4617" class="blob-code blob-code-inner js-file-line">      path<span class="pl-k">:</span> match[<span class="pl-c1">6</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4618" class="blob-num js-line-number" data-line-number="4618"></td>
        <td id="LC4618" class="blob-code blob-code-inner js-file-line">      search<span class="pl-k">:</span> match[<span class="pl-c1">8</span>],</td>
      </tr>
      <tr>
        <td id="L4619" class="blob-num js-line-number" data-line-number="4619"></td>
        <td id="LC4619" class="blob-code blob-code-inner js-file-line">      hash<span class="pl-k">:</span> match[<span class="pl-c1">10</span>]</td>
      </tr>
      <tr>
        <td id="L4620" class="blob-num js-line-number" data-line-number="4620"></td>
        <td id="LC4620" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L4621" class="blob-num js-line-number" data-line-number="4621"></td>
        <td id="LC4621" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4622" class="blob-num js-line-number" data-line-number="4622"></td>
        <td id="LC4622" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (obj) {</td>
      </tr>
      <tr>
        <td id="L4623" class="blob-num js-line-number" data-line-number="4623"></td>
        <td id="LC4623" class="blob-code blob-code-inner js-file-line">    obj.$$protocol <span class="pl-k">=</span> match.<span class="pl-c1">protocol</span>;</td>
      </tr>
      <tr>
        <td id="L4624" class="blob-num js-line-number" data-line-number="4624"></td>
        <td id="LC4624" class="blob-code blob-code-inner js-file-line">    obj.$$host <span class="pl-k">=</span> match.<span class="pl-c1">host</span>;</td>
      </tr>
      <tr>
        <td id="L4625" class="blob-num js-line-number" data-line-number="4625"></td>
        <td id="LC4625" class="blob-code blob-code-inner js-file-line">    obj.$$port <span class="pl-k">=</span> match.<span class="pl-c1">port</span>;</td>
      </tr>
      <tr>
        <td id="L4626" class="blob-num js-line-number" data-line-number="4626"></td>
        <td id="LC4626" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4627" class="blob-num js-line-number" data-line-number="4627"></td>
        <td id="LC4627" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4628" class="blob-num js-line-number" data-line-number="4628"></td>
        <td id="LC4628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> match;</td>
      </tr>
      <tr>
        <td id="L4629" class="blob-num js-line-number" data-line-number="4629"></td>
        <td id="LC4629" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4630" class="blob-num js-line-number" data-line-number="4630"></td>
        <td id="LC4630" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4631" class="blob-num js-line-number" data-line-number="4631"></td>
        <td id="LC4631" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4632" class="blob-num js-line-number" data-line-number="4632"></td>
        <td id="LC4632" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">composeProtocolHostPort</span>(<span class="pl-smi">protocol</span>, <span class="pl-smi">host</span>, <span class="pl-smi">port</span>) {</td>
      </tr>
      <tr>
        <td id="L4633" class="blob-num js-line-number" data-line-number="4633"></td>
        <td id="LC4633" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> protocol <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>://<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> host <span class="pl-k">+</span> (port <span class="pl-k">==</span> <span class="pl-c1">DEFAULT_PORTS</span>[protocol] <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> port);</td>
      </tr>
      <tr>
        <td id="L4634" class="blob-num js-line-number" data-line-number="4634"></td>
        <td id="LC4634" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4635" class="blob-num js-line-number" data-line-number="4635"></td>
        <td id="LC4635" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4636" class="blob-num js-line-number" data-line-number="4636"></td>
        <td id="LC4636" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4637" class="blob-num js-line-number" data-line-number="4637"></td>
        <td id="LC4637" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">pathPrefixFromBase</span>(<span class="pl-smi">basePath</span>) {</td>
      </tr>
      <tr>
        <td id="L4638" class="blob-num js-line-number" data-line-number="4638"></td>
        <td id="LC4638" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> basePath.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, basePath.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L4639" class="blob-num js-line-number" data-line-number="4639"></td>
        <td id="LC4639" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4640" class="blob-num js-line-number" data-line-number="4640"></td>
        <td id="LC4640" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4641" class="blob-num js-line-number" data-line-number="4641"></td>
        <td id="LC4641" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4642" class="blob-num js-line-number" data-line-number="4642"></td>
        <td id="LC4642" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">convertToHtml5Url</span>(<span class="pl-smi">url</span>, <span class="pl-smi">basePath</span>, <span class="pl-smi">hashPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4643" class="blob-num js-line-number" data-line-number="4643"></td>
        <td id="LC4643" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> match <span class="pl-k">=</span> matchUrl(url);</td>
      </tr>
      <tr>
        <td id="L4644" class="blob-num js-line-number" data-line-number="4644"></td>
        <td id="LC4644" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4645" class="blob-num js-line-number" data-line-number="4645"></td>
        <td id="LC4645" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// already html5 url</span></td>
      </tr>
      <tr>
        <td id="L4646" class="blob-num js-line-number" data-line-number="4646"></td>
        <td id="LC4646" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (decodeURIComponent(match.path) <span class="pl-k">!=</span> basePath <span class="pl-k">||</span> isUndefined(match.<span class="pl-c1">hash</span>) <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L4647" class="blob-num js-line-number" data-line-number="4647"></td>
        <td id="LC4647" class="blob-code blob-code-inner js-file-line">      match.<span class="pl-c1">hash</span>.<span class="pl-c1">indexOf</span>(hashPrefix) <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4648" class="blob-num js-line-number" data-line-number="4648"></td>
        <td id="LC4648" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> url;</td>
      </tr>
      <tr>
        <td id="L4649" class="blob-num js-line-number" data-line-number="4649"></td>
        <td id="LC4649" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// convert hashbang url -&gt; html5 url</span></td>
      </tr>
      <tr>
        <td id="L4650" class="blob-num js-line-number" data-line-number="4650"></td>
        <td id="LC4650" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4651" class="blob-num js-line-number" data-line-number="4651"></td>
        <td id="LC4651" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> composeProtocolHostPort(match.<span class="pl-c1">protocol</span>, match.<span class="pl-c1">host</span>, match.<span class="pl-c1">port</span>) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L4652" class="blob-num js-line-number" data-line-number="4652"></td>
        <td id="LC4652" class="blob-code blob-code-inner js-file-line">           pathPrefixFromBase(basePath) <span class="pl-k">+</span> match.<span class="pl-c1">hash</span>.<span class="pl-c1">substr</span>(hashPrefix.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L4653" class="blob-num js-line-number" data-line-number="4653"></td>
        <td id="LC4653" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4654" class="blob-num js-line-number" data-line-number="4654"></td>
        <td id="LC4654" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4655" class="blob-num js-line-number" data-line-number="4655"></td>
        <td id="LC4655" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4656" class="blob-num js-line-number" data-line-number="4656"></td>
        <td id="LC4656" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4657" class="blob-num js-line-number" data-line-number="4657"></td>
        <td id="LC4657" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">convertToHashbangUrl</span>(<span class="pl-smi">url</span>, <span class="pl-smi">basePath</span>, <span class="pl-smi">hashPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4658" class="blob-num js-line-number" data-line-number="4658"></td>
        <td id="LC4658" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> match <span class="pl-k">=</span> matchUrl(url);</td>
      </tr>
      <tr>
        <td id="L4659" class="blob-num js-line-number" data-line-number="4659"></td>
        <td id="LC4659" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4660" class="blob-num js-line-number" data-line-number="4660"></td>
        <td id="LC4660" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// already hashbang url</span></td>
      </tr>
      <tr>
        <td id="L4661" class="blob-num js-line-number" data-line-number="4661"></td>
        <td id="LC4661" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (decodeURIComponent(match.path) <span class="pl-k">==</span> basePath) {</td>
      </tr>
      <tr>
        <td id="L4662" class="blob-num js-line-number" data-line-number="4662"></td>
        <td id="LC4662" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> url;</td>
      </tr>
      <tr>
        <td id="L4663" class="blob-num js-line-number" data-line-number="4663"></td>
        <td id="LC4663" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// convert html5 url -&gt; hashbang url</span></td>
      </tr>
      <tr>
        <td id="L4664" class="blob-num js-line-number" data-line-number="4664"></td>
        <td id="LC4664" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4665" class="blob-num js-line-number" data-line-number="4665"></td>
        <td id="LC4665" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> search <span class="pl-k">=</span> match.search <span class="pl-k">&amp;&amp;</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> match.search <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4666" class="blob-num js-line-number" data-line-number="4666"></td>
        <td id="LC4666" class="blob-code blob-code-inner js-file-line">        hash <span class="pl-k">=</span> match.<span class="pl-c1">hash</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> match.<span class="pl-c1">hash</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L4667" class="blob-num js-line-number" data-line-number="4667"></td>
        <td id="LC4667" class="blob-code blob-code-inner js-file-line">        pathPrefix <span class="pl-k">=</span> pathPrefixFromBase(basePath),</td>
      </tr>
      <tr>
        <td id="L4668" class="blob-num js-line-number" data-line-number="4668"></td>
        <td id="LC4668" class="blob-code blob-code-inner js-file-line">        path <span class="pl-k">=</span> match.path.<span class="pl-c1">substr</span>(pathPrefix.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L4669" class="blob-num js-line-number" data-line-number="4669"></td>
        <td id="LC4669" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4670" class="blob-num js-line-number" data-line-number="4670"></td>
        <td id="LC4670" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match.path.<span class="pl-c1">indexOf</span>(pathPrefix) <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4671" class="blob-num js-line-number" data-line-number="4671"></td>
        <td id="LC4671" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Invalid url &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> url <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;, missing path prefix &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> pathPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot; !<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4672" class="blob-num js-line-number" data-line-number="4672"></td>
        <td id="LC4672" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4673" class="blob-num js-line-number" data-line-number="4673"></td>
        <td id="LC4673" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4674" class="blob-num js-line-number" data-line-number="4674"></td>
        <td id="LC4674" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> composeProtocolHostPort(match.<span class="pl-c1">protocol</span>, match.<span class="pl-c1">host</span>, match.<span class="pl-c1">port</span>) <span class="pl-k">+</span> basePath <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L4675" class="blob-num js-line-number" data-line-number="4675"></td>
        <td id="LC4675" class="blob-code blob-code-inner js-file-line">           <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> hashPrefix <span class="pl-k">+</span> path <span class="pl-k">+</span> search <span class="pl-k">+</span> hash;</td>
      </tr>
      <tr>
        <td id="L4676" class="blob-num js-line-number" data-line-number="4676"></td>
        <td id="LC4676" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4677" class="blob-num js-line-number" data-line-number="4677"></td>
        <td id="LC4677" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4678" class="blob-num js-line-number" data-line-number="4678"></td>
        <td id="LC4678" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4679" class="blob-num js-line-number" data-line-number="4679"></td>
        <td id="LC4679" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4680" class="blob-num js-line-number" data-line-number="4680"></td>
        <td id="LC4680" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4681" class="blob-num js-line-number" data-line-number="4681"></td>
        <td id="LC4681" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * LocationUrl represents an url</span></td>
      </tr>
      <tr>
        <td id="L4682" class="blob-num js-line-number" data-line-number="4682"></td>
        <td id="LC4682" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This object is exposed as $location service when HTML5 mode is enabled and supported</span></td>
      </tr>
      <tr>
        <td id="L4683" class="blob-num js-line-number" data-line-number="4683"></td>
        <td id="LC4683" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4684" class="blob-num js-line-number" data-line-number="4684"></td>
        <td id="LC4684" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@constructor</span></span></td>
      </tr>
      <tr>
        <td id="L4685" class="blob-num js-line-number" data-line-number="4685"></td>
        <td id="LC4685" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} url HTML5 url</span></td>
      </tr>
      <tr>
        <td id="L4686" class="blob-num js-line-number" data-line-number="4686"></td>
        <td id="LC4686" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} pathPrefix</span></td>
      </tr>
      <tr>
        <td id="L4687" class="blob-num js-line-number" data-line-number="4687"></td>
        <td id="LC4687" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4688" class="blob-num js-line-number" data-line-number="4688"></td>
        <td id="LC4688" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">LocationUrl</span>(<span class="pl-smi">url</span>, <span class="pl-smi">pathPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4689" class="blob-num js-line-number" data-line-number="4689"></td>
        <td id="LC4689" class="blob-code blob-code-inner js-file-line">  pathPrefix <span class="pl-k">=</span> pathPrefix <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4690" class="blob-num js-line-number" data-line-number="4690"></td>
        <td id="LC4690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4691" class="blob-num js-line-number" data-line-number="4691"></td>
        <td id="LC4691" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4692" class="blob-num js-line-number" data-line-number="4692"></td>
        <td id="LC4692" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Parse given html5 (regular) url string into properties</span></td>
      </tr>
      <tr>
        <td id="L4693" class="blob-num js-line-number" data-line-number="4693"></td>
        <td id="LC4693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} url HTML5 url</span></td>
      </tr>
      <tr>
        <td id="L4694" class="blob-num js-line-number" data-line-number="4694"></td>
        <td id="LC4694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4695" class="blob-num js-line-number" data-line-number="4695"></td>
        <td id="LC4695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4696" class="blob-num js-line-number" data-line-number="4696"></td>
        <td id="LC4696" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$$parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>) {</td>
      </tr>
      <tr>
        <td id="L4697" class="blob-num js-line-number" data-line-number="4697"></td>
        <td id="LC4697" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> match <span class="pl-k">=</span> matchUrl(url, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L4698" class="blob-num js-line-number" data-line-number="4698"></td>
        <td id="LC4698" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4699" class="blob-num js-line-number" data-line-number="4699"></td>
        <td id="LC4699" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match.path.<span class="pl-c1">indexOf</span>(pathPrefix) <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4700" class="blob-num js-line-number" data-line-number="4700"></td>
        <td id="LC4700" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Invalid url &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> url <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;, missing path prefix &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> pathPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot; !<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4701" class="blob-num js-line-number" data-line-number="4701"></td>
        <td id="LC4701" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4702" class="blob-num js-line-number" data-line-number="4702"></td>
        <td id="LC4702" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4703" class="blob-num js-line-number" data-line-number="4703"></td>
        <td id="LC4703" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$path <span class="pl-k">=</span> decodeURIComponent(match.path.<span class="pl-c1">substr</span>(pathPrefix.<span class="pl-c1">length</span>));</td>
      </tr>
      <tr>
        <td id="L4704" class="blob-num js-line-number" data-line-number="4704"></td>
        <td id="LC4704" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$search <span class="pl-k">=</span> parseKeyValue(match.search);</td>
      </tr>
      <tr>
        <td id="L4705" class="blob-num js-line-number" data-line-number="4705"></td>
        <td id="LC4705" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$hash <span class="pl-k">=</span> match.<span class="pl-c1">hash</span> <span class="pl-k">&amp;&amp;</span> decodeURIComponent(match.<span class="pl-c1">hash</span>) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4706" class="blob-num js-line-number" data-line-number="4706"></td>
        <td id="LC4706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4707" class="blob-num js-line-number" data-line-number="4707"></td>
        <td id="LC4707" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$compose();</td>
      </tr>
      <tr>
        <td id="L4708" class="blob-num js-line-number" data-line-number="4708"></td>
        <td id="LC4708" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4709" class="blob-num js-line-number" data-line-number="4709"></td>
        <td id="LC4709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4710" class="blob-num js-line-number" data-line-number="4710"></td>
        <td id="LC4710" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4711" class="blob-num js-line-number" data-line-number="4711"></td>
        <td id="LC4711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Compose url and update `absUrl` property</span></td>
      </tr>
      <tr>
        <td id="L4712" class="blob-num js-line-number" data-line-number="4712"></td>
        <td id="LC4712" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4713" class="blob-num js-line-number" data-line-number="4713"></td>
        <td id="LC4713" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4714" class="blob-num js-line-number" data-line-number="4714"></td>
        <td id="LC4714" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$$compose</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4715" class="blob-num js-line-number" data-line-number="4715"></td>
        <td id="LC4715" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> search <span class="pl-k">=</span> toKeyValue(<span class="pl-v">this</span>.$$search),</td>
      </tr>
      <tr>
        <td id="L4716" class="blob-num js-line-number" data-line-number="4716"></td>
        <td id="LC4716" class="blob-code blob-code-inner js-file-line">        hash <span class="pl-k">=</span> <span class="pl-v">this</span>.$$hash <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encodeUriSegment(<span class="pl-v">this</span>.$$hash) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4717" class="blob-num js-line-number" data-line-number="4717"></td>
        <td id="LC4717" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4718" class="blob-num js-line-number" data-line-number="4718"></td>
        <td id="LC4718" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$url <span class="pl-k">=</span> encodePath(<span class="pl-v">this</span>.$$path) <span class="pl-k">+</span> (search <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> search <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> hash;</td>
      </tr>
      <tr>
        <td id="L4719" class="blob-num js-line-number" data-line-number="4719"></td>
        <td id="LC4719" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$absUrl <span class="pl-k">=</span> composeProtocolHostPort(<span class="pl-v">this</span>.$$protocol, <span class="pl-v">this</span>.$$host, <span class="pl-v">this</span>.$$port) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L4720" class="blob-num js-line-number" data-line-number="4720"></td>
        <td id="LC4720" class="blob-code blob-code-inner js-file-line">                    pathPrefix <span class="pl-k">+</span> <span class="pl-v">this</span>.$$url;</td>
      </tr>
      <tr>
        <td id="L4721" class="blob-num js-line-number" data-line-number="4721"></td>
        <td id="LC4721" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4722" class="blob-num js-line-number" data-line-number="4722"></td>
        <td id="LC4722" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4723" class="blob-num js-line-number" data-line-number="4723"></td>
        <td id="LC4723" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$$<span class="pl-c1">parse</span>(url);</td>
      </tr>
      <tr>
        <td id="L4724" class="blob-num js-line-number" data-line-number="4724"></td>
        <td id="LC4724" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4725" class="blob-num js-line-number" data-line-number="4725"></td>
        <td id="LC4725" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4726" class="blob-num js-line-number" data-line-number="4726"></td>
        <td id="LC4726" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4727" class="blob-num js-line-number" data-line-number="4727"></td>
        <td id="LC4727" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4728" class="blob-num js-line-number" data-line-number="4728"></td>
        <td id="LC4728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * LocationHashbangUrl represents url</span></td>
      </tr>
      <tr>
        <td id="L4729" class="blob-num js-line-number" data-line-number="4729"></td>
        <td id="LC4729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This object is exposed as $location service when html5 history api is disabled or not supported</span></td>
      </tr>
      <tr>
        <td id="L4730" class="blob-num js-line-number" data-line-number="4730"></td>
        <td id="LC4730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4731" class="blob-num js-line-number" data-line-number="4731"></td>
        <td id="LC4731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@constructor</span></span></td>
      </tr>
      <tr>
        <td id="L4732" class="blob-num js-line-number" data-line-number="4732"></td>
        <td id="LC4732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} url Legacy url</span></td>
      </tr>
      <tr>
        <td id="L4733" class="blob-num js-line-number" data-line-number="4733"></td>
        <td id="LC4733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} hashPrefix Prefix for hash part (containing path and search)</span></td>
      </tr>
      <tr>
        <td id="L4734" class="blob-num js-line-number" data-line-number="4734"></td>
        <td id="LC4734" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L4735" class="blob-num js-line-number" data-line-number="4735"></td>
        <td id="LC4735" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">LocationHashbangUrl</span>(<span class="pl-smi">url</span>, <span class="pl-smi">hashPrefix</span>) {</td>
      </tr>
      <tr>
        <td id="L4736" class="blob-num js-line-number" data-line-number="4736"></td>
        <td id="LC4736" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> basePath;</td>
      </tr>
      <tr>
        <td id="L4737" class="blob-num js-line-number" data-line-number="4737"></td>
        <td id="LC4737" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4738" class="blob-num js-line-number" data-line-number="4738"></td>
        <td id="LC4738" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4739" class="blob-num js-line-number" data-line-number="4739"></td>
        <td id="LC4739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Parse given hashbang url into properties</span></td>
      </tr>
      <tr>
        <td id="L4740" class="blob-num js-line-number" data-line-number="4740"></td>
        <td id="LC4740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} url Hashbang url</span></td>
      </tr>
      <tr>
        <td id="L4741" class="blob-num js-line-number" data-line-number="4741"></td>
        <td id="LC4741" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4742" class="blob-num js-line-number" data-line-number="4742"></td>
        <td id="LC4742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4743" class="blob-num js-line-number" data-line-number="4743"></td>
        <td id="LC4743" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$$parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>) {</td>
      </tr>
      <tr>
        <td id="L4744" class="blob-num js-line-number" data-line-number="4744"></td>
        <td id="LC4744" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> match <span class="pl-k">=</span> matchUrl(url, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L4745" class="blob-num js-line-number" data-line-number="4745"></td>
        <td id="LC4745" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4746" class="blob-num js-line-number" data-line-number="4746"></td>
        <td id="LC4746" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match.<span class="pl-c1">hash</span> <span class="pl-k">&amp;&amp;</span> match.<span class="pl-c1">hash</span>.<span class="pl-c1">indexOf</span>(hashPrefix) <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L4747" class="blob-num js-line-number" data-line-number="4747"></td>
        <td id="LC4747" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Invalid url &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> url <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;, missing hash prefix &quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> hashPrefix <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot; !<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4748" class="blob-num js-line-number" data-line-number="4748"></td>
        <td id="LC4748" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4749" class="blob-num js-line-number" data-line-number="4749"></td>
        <td id="LC4749" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4750" class="blob-num js-line-number" data-line-number="4750"></td>
        <td id="LC4750" class="blob-code blob-code-inner js-file-line">    basePath <span class="pl-k">=</span> match.path <span class="pl-k">+</span> (match.search <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> match.search <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4751" class="blob-num js-line-number" data-line-number="4751"></td>
        <td id="LC4751" class="blob-code blob-code-inner js-file-line">    match <span class="pl-k">=</span> <span class="pl-c1">HASH_MATCH</span>.<span class="pl-c1">exec</span>((match.<span class="pl-c1">hash</span> <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">substr</span>(hashPrefix.<span class="pl-c1">length</span>));</td>
      </tr>
      <tr>
        <td id="L4752" class="blob-num js-line-number" data-line-number="4752"></td>
        <td id="LC4752" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match[<span class="pl-c1">1</span>]) {</td>
      </tr>
      <tr>
        <td id="L4753" class="blob-num js-line-number" data-line-number="4753"></td>
        <td id="LC4753" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$path <span class="pl-k">=</span> (match[<span class="pl-c1">1</span>].<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> decodeURIComponent(match[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L4754" class="blob-num js-line-number" data-line-number="4754"></td>
        <td id="LC4754" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4755" class="blob-num js-line-number" data-line-number="4755"></td>
        <td id="LC4755" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$path <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4756" class="blob-num js-line-number" data-line-number="4756"></td>
        <td id="LC4756" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4757" class="blob-num js-line-number" data-line-number="4757"></td>
        <td id="LC4757" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4758" class="blob-num js-line-number" data-line-number="4758"></td>
        <td id="LC4758" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$search <span class="pl-k">=</span> parseKeyValue(match[<span class="pl-c1">3</span>]);</td>
      </tr>
      <tr>
        <td id="L4759" class="blob-num js-line-number" data-line-number="4759"></td>
        <td id="LC4759" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$hash <span class="pl-k">=</span> match[<span class="pl-c1">5</span>] <span class="pl-k">&amp;&amp;</span> decodeURIComponent(match[<span class="pl-c1">5</span>]) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4760" class="blob-num js-line-number" data-line-number="4760"></td>
        <td id="LC4760" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4761" class="blob-num js-line-number" data-line-number="4761"></td>
        <td id="LC4761" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$compose();</td>
      </tr>
      <tr>
        <td id="L4762" class="blob-num js-line-number" data-line-number="4762"></td>
        <td id="LC4762" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4763" class="blob-num js-line-number" data-line-number="4763"></td>
        <td id="LC4763" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4764" class="blob-num js-line-number" data-line-number="4764"></td>
        <td id="LC4764" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4765" class="blob-num js-line-number" data-line-number="4765"></td>
        <td id="LC4765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Compose hashbang url and update `absUrl` property</span></td>
      </tr>
      <tr>
        <td id="L4766" class="blob-num js-line-number" data-line-number="4766"></td>
        <td id="LC4766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4767" class="blob-num js-line-number" data-line-number="4767"></td>
        <td id="LC4767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4768" class="blob-num js-line-number" data-line-number="4768"></td>
        <td id="LC4768" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$$compose</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4769" class="blob-num js-line-number" data-line-number="4769"></td>
        <td id="LC4769" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> search <span class="pl-k">=</span> toKeyValue(<span class="pl-v">this</span>.$$search),</td>
      </tr>
      <tr>
        <td id="L4770" class="blob-num js-line-number" data-line-number="4770"></td>
        <td id="LC4770" class="blob-code blob-code-inner js-file-line">        hash <span class="pl-k">=</span> <span class="pl-v">this</span>.$$hash <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encodeUriSegment(<span class="pl-v">this</span>.$$hash) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L4771" class="blob-num js-line-number" data-line-number="4771"></td>
        <td id="LC4771" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4772" class="blob-num js-line-number" data-line-number="4772"></td>
        <td id="LC4772" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$url <span class="pl-k">=</span> encodePath(<span class="pl-v">this</span>.$$path) <span class="pl-k">+</span> (search <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> search <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> hash;</td>
      </tr>
      <tr>
        <td id="L4773" class="blob-num js-line-number" data-line-number="4773"></td>
        <td id="LC4773" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$absUrl <span class="pl-k">=</span> composeProtocolHostPort(<span class="pl-v">this</span>.$$protocol, <span class="pl-v">this</span>.$$host, <span class="pl-v">this</span>.$$port) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L4774" class="blob-num js-line-number" data-line-number="4774"></td>
        <td id="LC4774" class="blob-code blob-code-inner js-file-line">                    basePath <span class="pl-k">+</span> (<span class="pl-v">this</span>.$$url <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>#<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> hashPrefix <span class="pl-k">+</span> <span class="pl-v">this</span>.$$url <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4775" class="blob-num js-line-number" data-line-number="4775"></td>
        <td id="LC4775" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4776" class="blob-num js-line-number" data-line-number="4776"></td>
        <td id="LC4776" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4777" class="blob-num js-line-number" data-line-number="4777"></td>
        <td id="LC4777" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$$<span class="pl-c1">parse</span>(url);</td>
      </tr>
      <tr>
        <td id="L4778" class="blob-num js-line-number" data-line-number="4778"></td>
        <td id="LC4778" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4779" class="blob-num js-line-number" data-line-number="4779"></td>
        <td id="LC4779" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4780" class="blob-num js-line-number" data-line-number="4780"></td>
        <td id="LC4780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4781" class="blob-num js-line-number" data-line-number="4781"></td>
        <td id="LC4781" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">LocationUrl</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L4782" class="blob-num js-line-number" data-line-number="4782"></td>
        <td id="LC4782" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4783" class="blob-num js-line-number" data-line-number="4783"></td>
        <td id="LC4783" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4784" class="blob-num js-line-number" data-line-number="4784"></td>
        <td id="LC4784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Has any change been replacing ?</span></td>
      </tr>
      <tr>
        <td id="L4785" class="blob-num js-line-number" data-line-number="4785"></td>
        <td id="LC4785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@private</span></span></td>
      </tr>
      <tr>
        <td id="L4786" class="blob-num js-line-number" data-line-number="4786"></td>
        <td id="LC4786" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4787" class="blob-num js-line-number" data-line-number="4787"></td>
        <td id="LC4787" class="blob-code blob-code-inner js-file-line">  $$replace<span class="pl-k">:</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L4788" class="blob-num js-line-number" data-line-number="4788"></td>
        <td id="LC4788" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4789" class="blob-num js-line-number" data-line-number="4789"></td>
        <td id="LC4789" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4790" class="blob-num js-line-number" data-line-number="4790"></td>
        <td id="LC4790" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4791" class="blob-num js-line-number" data-line-number="4791"></td>
        <td id="LC4791" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#absUrl</span></td>
      </tr>
      <tr>
        <td id="L4792" class="blob-num js-line-number" data-line-number="4792"></td>
        <td id="LC4792" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4793" class="blob-num js-line-number" data-line-number="4793"></td>
        <td id="LC4793" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4794" class="blob-num js-line-number" data-line-number="4794"></td>
        <td id="LC4794" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4795" class="blob-num js-line-number" data-line-number="4795"></td>
        <td id="LC4795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter only.</span></td>
      </tr>
      <tr>
        <td id="L4796" class="blob-num js-line-number" data-line-number="4796"></td>
        <td id="LC4796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4797" class="blob-num js-line-number" data-line-number="4797"></td>
        <td id="LC4797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return full url representation with all segments encoded according to rules specified in</span></td>
      </tr>
      <tr>
        <td id="L4798" class="blob-num js-line-number" data-line-number="4798"></td>
        <td id="LC4798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * {@link http://www.ietf.org/rfc/rfc3986.txt RFC 3986}.</span></td>
      </tr>
      <tr>
        <td id="L4799" class="blob-num js-line-number" data-line-number="4799"></td>
        <td id="LC4799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4800" class="blob-num js-line-number" data-line-number="4800"></td>
        <td id="LC4800" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4801" class="blob-num js-line-number" data-line-number="4801"></td>
        <td id="LC4801" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4802" class="blob-num js-line-number" data-line-number="4802"></td>
        <td id="LC4802" class="blob-code blob-code-inner js-file-line">  absUrl<span class="pl-k">:</span> locationGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$absUrl<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4803" class="blob-num js-line-number" data-line-number="4803"></td>
        <td id="LC4803" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4804" class="blob-num js-line-number" data-line-number="4804"></td>
        <td id="LC4804" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4805" class="blob-num js-line-number" data-line-number="4805"></td>
        <td id="LC4805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4806" class="blob-num js-line-number" data-line-number="4806"></td>
        <td id="LC4806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#url</span></td>
      </tr>
      <tr>
        <td id="L4807" class="blob-num js-line-number" data-line-number="4807"></td>
        <td id="LC4807" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4808" class="blob-num js-line-number" data-line-number="4808"></td>
        <td id="LC4808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4809" class="blob-num js-line-number" data-line-number="4809"></td>
        <td id="LC4809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4810" class="blob-num js-line-number" data-line-number="4810"></td>
        <td id="LC4810" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter / setter.</span></td>
      </tr>
      <tr>
        <td id="L4811" class="blob-num js-line-number" data-line-number="4811"></td>
        <td id="LC4811" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4812" class="blob-num js-line-number" data-line-number="4812"></td>
        <td id="LC4812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return url (e.g. `/path?a=b#hash`) when called without any parameter.</span></td>
      </tr>
      <tr>
        <td id="L4813" class="blob-num js-line-number" data-line-number="4813"></td>
        <td id="LC4813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4814" class="blob-num js-line-number" data-line-number="4814"></td>
        <td id="LC4814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Change path, search and hash, when called with parameter and return `$location`.</span></td>
      </tr>
      <tr>
        <td id="L4815" class="blob-num js-line-number" data-line-number="4815"></td>
        <td id="LC4815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4816" class="blob-num js-line-number" data-line-number="4816"></td>
        <td id="LC4816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} url New url without base prefix (e.g. `/path?a=b#hash`)</span></td>
      </tr>
      <tr>
        <td id="L4817" class="blob-num js-line-number" data-line-number="4817"></td>
        <td id="LC4817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4818" class="blob-num js-line-number" data-line-number="4818"></td>
        <td id="LC4818" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4819" class="blob-num js-line-number" data-line-number="4819"></td>
        <td id="LC4819" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">url</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">replace</span>) {</td>
      </tr>
      <tr>
        <td id="L4820" class="blob-num js-line-number" data-line-number="4820"></td>
        <td id="LC4820" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(url))</td>
      </tr>
      <tr>
        <td id="L4821" class="blob-num js-line-number" data-line-number="4821"></td>
        <td id="LC4821" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.$$url;</td>
      </tr>
      <tr>
        <td id="L4822" class="blob-num js-line-number" data-line-number="4822"></td>
        <td id="LC4822" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4823" class="blob-num js-line-number" data-line-number="4823"></td>
        <td id="LC4823" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> match <span class="pl-k">=</span> <span class="pl-c1">PATH_MATCH</span>.<span class="pl-c1">exec</span>(url);</td>
      </tr>
      <tr>
        <td id="L4824" class="blob-num js-line-number" data-line-number="4824"></td>
        <td id="LC4824" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match[<span class="pl-c1">1</span>]) <span class="pl-v">this</span>.path(decodeURIComponent(match[<span class="pl-c1">1</span>]));</td>
      </tr>
      <tr>
        <td id="L4825" class="blob-num js-line-number" data-line-number="4825"></td>
        <td id="LC4825" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match[<span class="pl-c1">2</span>] <span class="pl-k">||</span> match[<span class="pl-c1">1</span>]) <span class="pl-v">this</span>.<span class="pl-c1">search</span>(match[<span class="pl-c1">3</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L4826" class="blob-num js-line-number" data-line-number="4826"></td>
        <td id="LC4826" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.<span class="pl-c1">hash</span>(match[<span class="pl-c1">5</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, replace);</td>
      </tr>
      <tr>
        <td id="L4827" class="blob-num js-line-number" data-line-number="4827"></td>
        <td id="LC4827" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4828" class="blob-num js-line-number" data-line-number="4828"></td>
        <td id="LC4828" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4829" class="blob-num js-line-number" data-line-number="4829"></td>
        <td id="LC4829" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L4830" class="blob-num js-line-number" data-line-number="4830"></td>
        <td id="LC4830" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4831" class="blob-num js-line-number" data-line-number="4831"></td>
        <td id="LC4831" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4832" class="blob-num js-line-number" data-line-number="4832"></td>
        <td id="LC4832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4833" class="blob-num js-line-number" data-line-number="4833"></td>
        <td id="LC4833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#protocol</span></td>
      </tr>
      <tr>
        <td id="L4834" class="blob-num js-line-number" data-line-number="4834"></td>
        <td id="LC4834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4835" class="blob-num js-line-number" data-line-number="4835"></td>
        <td id="LC4835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4836" class="blob-num js-line-number" data-line-number="4836"></td>
        <td id="LC4836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4837" class="blob-num js-line-number" data-line-number="4837"></td>
        <td id="LC4837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter only.</span></td>
      </tr>
      <tr>
        <td id="L4838" class="blob-num js-line-number" data-line-number="4838"></td>
        <td id="LC4838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4839" class="blob-num js-line-number" data-line-number="4839"></td>
        <td id="LC4839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return protocol of current url.</span></td>
      </tr>
      <tr>
        <td id="L4840" class="blob-num js-line-number" data-line-number="4840"></td>
        <td id="LC4840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4841" class="blob-num js-line-number" data-line-number="4841"></td>
        <td id="LC4841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4842" class="blob-num js-line-number" data-line-number="4842"></td>
        <td id="LC4842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4843" class="blob-num js-line-number" data-line-number="4843"></td>
        <td id="LC4843" class="blob-code blob-code-inner js-file-line">  protocol<span class="pl-k">:</span> locationGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$protocol<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4844" class="blob-num js-line-number" data-line-number="4844"></td>
        <td id="LC4844" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4845" class="blob-num js-line-number" data-line-number="4845"></td>
        <td id="LC4845" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4846" class="blob-num js-line-number" data-line-number="4846"></td>
        <td id="LC4846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4847" class="blob-num js-line-number" data-line-number="4847"></td>
        <td id="LC4847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#host</span></td>
      </tr>
      <tr>
        <td id="L4848" class="blob-num js-line-number" data-line-number="4848"></td>
        <td id="LC4848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4849" class="blob-num js-line-number" data-line-number="4849"></td>
        <td id="LC4849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4850" class="blob-num js-line-number" data-line-number="4850"></td>
        <td id="LC4850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4851" class="blob-num js-line-number" data-line-number="4851"></td>
        <td id="LC4851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter only.</span></td>
      </tr>
      <tr>
        <td id="L4852" class="blob-num js-line-number" data-line-number="4852"></td>
        <td id="LC4852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4853" class="blob-num js-line-number" data-line-number="4853"></td>
        <td id="LC4853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return host of current url.</span></td>
      </tr>
      <tr>
        <td id="L4854" class="blob-num js-line-number" data-line-number="4854"></td>
        <td id="LC4854" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4855" class="blob-num js-line-number" data-line-number="4855"></td>
        <td id="LC4855" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4856" class="blob-num js-line-number" data-line-number="4856"></td>
        <td id="LC4856" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4857" class="blob-num js-line-number" data-line-number="4857"></td>
        <td id="LC4857" class="blob-code blob-code-inner js-file-line">  host<span class="pl-k">:</span> locationGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$host<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4858" class="blob-num js-line-number" data-line-number="4858"></td>
        <td id="LC4858" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4859" class="blob-num js-line-number" data-line-number="4859"></td>
        <td id="LC4859" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4860" class="blob-num js-line-number" data-line-number="4860"></td>
        <td id="LC4860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4861" class="blob-num js-line-number" data-line-number="4861"></td>
        <td id="LC4861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#port</span></td>
      </tr>
      <tr>
        <td id="L4862" class="blob-num js-line-number" data-line-number="4862"></td>
        <td id="LC4862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4863" class="blob-num js-line-number" data-line-number="4863"></td>
        <td id="LC4863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4864" class="blob-num js-line-number" data-line-number="4864"></td>
        <td id="LC4864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4865" class="blob-num js-line-number" data-line-number="4865"></td>
        <td id="LC4865" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter only.</span></td>
      </tr>
      <tr>
        <td id="L4866" class="blob-num js-line-number" data-line-number="4866"></td>
        <td id="LC4866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4867" class="blob-num js-line-number" data-line-number="4867"></td>
        <td id="LC4867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return port of current url.</span></td>
      </tr>
      <tr>
        <td id="L4868" class="blob-num js-line-number" data-line-number="4868"></td>
        <td id="LC4868" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4869" class="blob-num js-line-number" data-line-number="4869"></td>
        <td id="LC4869" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {Number}</span></td>
      </tr>
      <tr>
        <td id="L4870" class="blob-num js-line-number" data-line-number="4870"></td>
        <td id="LC4870" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4871" class="blob-num js-line-number" data-line-number="4871"></td>
        <td id="LC4871" class="blob-code blob-code-inner js-file-line">  port<span class="pl-k">:</span> locationGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$port<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L4872" class="blob-num js-line-number" data-line-number="4872"></td>
        <td id="LC4872" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4873" class="blob-num js-line-number" data-line-number="4873"></td>
        <td id="LC4873" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4874" class="blob-num js-line-number" data-line-number="4874"></td>
        <td id="LC4874" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4875" class="blob-num js-line-number" data-line-number="4875"></td>
        <td id="LC4875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#path</span></td>
      </tr>
      <tr>
        <td id="L4876" class="blob-num js-line-number" data-line-number="4876"></td>
        <td id="LC4876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4877" class="blob-num js-line-number" data-line-number="4877"></td>
        <td id="LC4877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4878" class="blob-num js-line-number" data-line-number="4878"></td>
        <td id="LC4878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4879" class="blob-num js-line-number" data-line-number="4879"></td>
        <td id="LC4879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter / setter.</span></td>
      </tr>
      <tr>
        <td id="L4880" class="blob-num js-line-number" data-line-number="4880"></td>
        <td id="LC4880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4881" class="blob-num js-line-number" data-line-number="4881"></td>
        <td id="LC4881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return path of current url when called without any parameter.</span></td>
      </tr>
      <tr>
        <td id="L4882" class="blob-num js-line-number" data-line-number="4882"></td>
        <td id="LC4882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4883" class="blob-num js-line-number" data-line-number="4883"></td>
        <td id="LC4883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Change path when called with parameter and return `$location`.</span></td>
      </tr>
      <tr>
        <td id="L4884" class="blob-num js-line-number" data-line-number="4884"></td>
        <td id="LC4884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4885" class="blob-num js-line-number" data-line-number="4885"></td>
        <td id="LC4885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Note: Path should always begin with forward slash (/), this method will add the forward slash</span></td>
      </tr>
      <tr>
        <td id="L4886" class="blob-num js-line-number" data-line-number="4886"></td>
        <td id="LC4886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * if it is missing.</span></td>
      </tr>
      <tr>
        <td id="L4887" class="blob-num js-line-number" data-line-number="4887"></td>
        <td id="LC4887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4888" class="blob-num js-line-number" data-line-number="4888"></td>
        <td id="LC4888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} path New path</span></td>
      </tr>
      <tr>
        <td id="L4889" class="blob-num js-line-number" data-line-number="4889"></td>
        <td id="LC4889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4890" class="blob-num js-line-number" data-line-number="4890"></td>
        <td id="LC4890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4891" class="blob-num js-line-number" data-line-number="4891"></td>
        <td id="LC4891" class="blob-code blob-code-inner js-file-line">  path<span class="pl-k">:</span> locationGetterSetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$path<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">path</span>) {</td>
      </tr>
      <tr>
        <td id="L4892" class="blob-num js-line-number" data-line-number="4892"></td>
        <td id="LC4892" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> path.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> path <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> path;</td>
      </tr>
      <tr>
        <td id="L4893" class="blob-num js-line-number" data-line-number="4893"></td>
        <td id="LC4893" class="blob-code blob-code-inner js-file-line">  }),</td>
      </tr>
      <tr>
        <td id="L4894" class="blob-num js-line-number" data-line-number="4894"></td>
        <td id="LC4894" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4895" class="blob-num js-line-number" data-line-number="4895"></td>
        <td id="LC4895" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4896" class="blob-num js-line-number" data-line-number="4896"></td>
        <td id="LC4896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4897" class="blob-num js-line-number" data-line-number="4897"></td>
        <td id="LC4897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#search</span></td>
      </tr>
      <tr>
        <td id="L4898" class="blob-num js-line-number" data-line-number="4898"></td>
        <td id="LC4898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4899" class="blob-num js-line-number" data-line-number="4899"></td>
        <td id="LC4899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4900" class="blob-num js-line-number" data-line-number="4900"></td>
        <td id="LC4900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4901" class="blob-num js-line-number" data-line-number="4901"></td>
        <td id="LC4901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter / setter.</span></td>
      </tr>
      <tr>
        <td id="L4902" class="blob-num js-line-number" data-line-number="4902"></td>
        <td id="LC4902" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4903" class="blob-num js-line-number" data-line-number="4903"></td>
        <td id="LC4903" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return search part (as object) of current url when called without any parameter.</span></td>
      </tr>
      <tr>
        <td id="L4904" class="blob-num js-line-number" data-line-number="4904"></td>
        <td id="LC4904" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4905" class="blob-num js-line-number" data-line-number="4905"></td>
        <td id="LC4905" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Change search part when called with parameter and return `$location`.</span></td>
      </tr>
      <tr>
        <td id="L4906" class="blob-num js-line-number" data-line-number="4906"></td>
        <td id="LC4906" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4907" class="blob-num js-line-number" data-line-number="4907"></td>
        <td id="LC4907" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string|object&lt;string,string&gt;=} search New search params - string or hash object</span></td>
      </tr>
      <tr>
        <td id="L4908" class="blob-num js-line-number" data-line-number="4908"></td>
        <td id="LC4908" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} paramValue If `search` is a string, then `paramValue` will override only a</span></td>
      </tr>
      <tr>
        <td id="L4909" class="blob-num js-line-number" data-line-number="4909"></td>
        <td id="LC4909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    single search parameter. If the value is `null`, the parameter will be deleted.</span></td>
      </tr>
      <tr>
        <td id="L4910" class="blob-num js-line-number" data-line-number="4910"></td>
        <td id="LC4910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4911" class="blob-num js-line-number" data-line-number="4911"></td>
        <td id="LC4911" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4912" class="blob-num js-line-number" data-line-number="4912"></td>
        <td id="LC4912" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4913" class="blob-num js-line-number" data-line-number="4913"></td>
        <td id="LC4913" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">search</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">search</span>, <span class="pl-smi">paramValue</span>) {</td>
      </tr>
      <tr>
        <td id="L4914" class="blob-num js-line-number" data-line-number="4914"></td>
        <td id="LC4914" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(search))</td>
      </tr>
      <tr>
        <td id="L4915" class="blob-num js-line-number" data-line-number="4915"></td>
        <td id="LC4915" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>.$$search;</td>
      </tr>
      <tr>
        <td id="L4916" class="blob-num js-line-number" data-line-number="4916"></td>
        <td id="LC4916" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4917" class="blob-num js-line-number" data-line-number="4917"></td>
        <td id="LC4917" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isDefined(paramValue)) {</td>
      </tr>
      <tr>
        <td id="L4918" class="blob-num js-line-number" data-line-number="4918"></td>
        <td id="LC4918" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (paramValue <span class="pl-k">===</span> <span class="pl-c1">null</span>) {</td>
      </tr>
      <tr>
        <td id="L4919" class="blob-num js-line-number" data-line-number="4919"></td>
        <td id="LC4919" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> <span class="pl-v">this</span>.$$search[search];</td>
      </tr>
      <tr>
        <td id="L4920" class="blob-num js-line-number" data-line-number="4920"></td>
        <td id="LC4920" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4921" class="blob-num js-line-number" data-line-number="4921"></td>
        <td id="LC4921" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$$search[search] <span class="pl-k">=</span> paramValue;</td>
      </tr>
      <tr>
        <td id="L4922" class="blob-num js-line-number" data-line-number="4922"></td>
        <td id="LC4922" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L4923" class="blob-num js-line-number" data-line-number="4923"></td>
        <td id="LC4923" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L4924" class="blob-num js-line-number" data-line-number="4924"></td>
        <td id="LC4924" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$search <span class="pl-k">=</span> isString(search) <span class="pl-k">?</span> parseKeyValue(search) <span class="pl-k">:</span> search;</td>
      </tr>
      <tr>
        <td id="L4925" class="blob-num js-line-number" data-line-number="4925"></td>
        <td id="LC4925" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L4926" class="blob-num js-line-number" data-line-number="4926"></td>
        <td id="LC4926" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4927" class="blob-num js-line-number" data-line-number="4927"></td>
        <td id="LC4927" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$compose();</td>
      </tr>
      <tr>
        <td id="L4928" class="blob-num js-line-number" data-line-number="4928"></td>
        <td id="LC4928" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4929" class="blob-num js-line-number" data-line-number="4929"></td>
        <td id="LC4929" class="blob-code blob-code-inner js-file-line">  },</td>
      </tr>
      <tr>
        <td id="L4930" class="blob-num js-line-number" data-line-number="4930"></td>
        <td id="LC4930" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4931" class="blob-num js-line-number" data-line-number="4931"></td>
        <td id="LC4931" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4932" class="blob-num js-line-number" data-line-number="4932"></td>
        <td id="LC4932" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4933" class="blob-num js-line-number" data-line-number="4933"></td>
        <td id="LC4933" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#hash</span></td>
      </tr>
      <tr>
        <td id="L4934" class="blob-num js-line-number" data-line-number="4934"></td>
        <td id="LC4934" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4935" class="blob-num js-line-number" data-line-number="4935"></td>
        <td id="LC4935" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4936" class="blob-num js-line-number" data-line-number="4936"></td>
        <td id="LC4936" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4937" class="blob-num js-line-number" data-line-number="4937"></td>
        <td id="LC4937" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method is getter / setter.</span></td>
      </tr>
      <tr>
        <td id="L4938" class="blob-num js-line-number" data-line-number="4938"></td>
        <td id="LC4938" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4939" class="blob-num js-line-number" data-line-number="4939"></td>
        <td id="LC4939" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Return hash fragment when called without any parameter.</span></td>
      </tr>
      <tr>
        <td id="L4940" class="blob-num js-line-number" data-line-number="4940"></td>
        <td id="LC4940" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4941" class="blob-num js-line-number" data-line-number="4941"></td>
        <td id="LC4941" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Change hash fragment when called with parameter and return `$location`.</span></td>
      </tr>
      <tr>
        <td id="L4942" class="blob-num js-line-number" data-line-number="4942"></td>
        <td id="LC4942" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4943" class="blob-num js-line-number" data-line-number="4943"></td>
        <td id="LC4943" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} hash New hash fragment</span></td>
      </tr>
      <tr>
        <td id="L4944" class="blob-num js-line-number" data-line-number="4944"></td>
        <td id="LC4944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@return</span> {string}</span></td>
      </tr>
      <tr>
        <td id="L4945" class="blob-num js-line-number" data-line-number="4945"></td>
        <td id="LC4945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4946" class="blob-num js-line-number" data-line-number="4946"></td>
        <td id="LC4946" class="blob-code blob-code-inner js-file-line">  hash<span class="pl-k">:</span> locationGetterSetter(<span class="pl-s"><span class="pl-pds">&#39;</span>$$hash<span class="pl-pds">&#39;</span></span>, identity),</td>
      </tr>
      <tr>
        <td id="L4947" class="blob-num js-line-number" data-line-number="4947"></td>
        <td id="LC4947" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4948" class="blob-num js-line-number" data-line-number="4948"></td>
        <td id="LC4948" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4949" class="blob-num js-line-number" data-line-number="4949"></td>
        <td id="LC4949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L4950" class="blob-num js-line-number" data-line-number="4950"></td>
        <td id="LC4950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$location#replace</span></td>
      </tr>
      <tr>
        <td id="L4951" class="blob-num js-line-number" data-line-number="4951"></td>
        <td id="LC4951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4952" class="blob-num js-line-number" data-line-number="4952"></td>
        <td id="LC4952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L4953" class="blob-num js-line-number" data-line-number="4953"></td>
        <td id="LC4953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4954" class="blob-num js-line-number" data-line-number="4954"></td>
        <td id="LC4954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * If called, all changes to $location during current `$digest` will be replacing current history</span></td>
      </tr>
      <tr>
        <td id="L4955" class="blob-num js-line-number" data-line-number="4955"></td>
        <td id="LC4955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * record, instead of adding new one.</span></td>
      </tr>
      <tr>
        <td id="L4956" class="blob-num js-line-number" data-line-number="4956"></td>
        <td id="LC4956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L4957" class="blob-num js-line-number" data-line-number="4957"></td>
        <td id="LC4957" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">replace</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4958" class="blob-num js-line-number" data-line-number="4958"></td>
        <td id="LC4958" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$replace <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L4959" class="blob-num js-line-number" data-line-number="4959"></td>
        <td id="LC4959" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4960" class="blob-num js-line-number" data-line-number="4960"></td>
        <td id="LC4960" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L4961" class="blob-num js-line-number" data-line-number="4961"></td>
        <td id="LC4961" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L4962" class="blob-num js-line-number" data-line-number="4962"></td>
        <td id="LC4962" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4963" class="blob-num js-line-number" data-line-number="4963"></td>
        <td id="LC4963" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">LocationHashbangUrl</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> inherit(LocationUrl.<span class="pl-c1">prototype</span>);</td>
      </tr>
      <tr>
        <td id="L4964" class="blob-num js-line-number" data-line-number="4964"></td>
        <td id="LC4964" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4965" class="blob-num js-line-number" data-line-number="4965"></td>
        <td id="LC4965" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">locationGetter</span>(<span class="pl-smi">property</span>) {</td>
      </tr>
      <tr>
        <td id="L4966" class="blob-num js-line-number" data-line-number="4966"></td>
        <td id="LC4966" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L4967" class="blob-num js-line-number" data-line-number="4967"></td>
        <td id="LC4967" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>[property];</td>
      </tr>
      <tr>
        <td id="L4968" class="blob-num js-line-number" data-line-number="4968"></td>
        <td id="LC4968" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4969" class="blob-num js-line-number" data-line-number="4969"></td>
        <td id="LC4969" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4970" class="blob-num js-line-number" data-line-number="4970"></td>
        <td id="LC4970" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4971" class="blob-num js-line-number" data-line-number="4971"></td>
        <td id="LC4971" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4972" class="blob-num js-line-number" data-line-number="4972"></td>
        <td id="LC4972" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">locationGetterSetter</span>(<span class="pl-smi">property</span>, <span class="pl-smi">preprocess</span>) {</td>
      </tr>
      <tr>
        <td id="L4973" class="blob-num js-line-number" data-line-number="4973"></td>
        <td id="LC4973" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L4974" class="blob-num js-line-number" data-line-number="4974"></td>
        <td id="LC4974" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(value))</td>
      </tr>
      <tr>
        <td id="L4975" class="blob-num js-line-number" data-line-number="4975"></td>
        <td id="LC4975" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>[property];</td>
      </tr>
      <tr>
        <td id="L4976" class="blob-num js-line-number" data-line-number="4976"></td>
        <td id="LC4976" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4977" class="blob-num js-line-number" data-line-number="4977"></td>
        <td id="LC4977" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>[property] <span class="pl-k">=</span> preprocess(value);</td>
      </tr>
      <tr>
        <td id="L4978" class="blob-num js-line-number" data-line-number="4978"></td>
        <td id="LC4978" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$$compose();</td>
      </tr>
      <tr>
        <td id="L4979" class="blob-num js-line-number" data-line-number="4979"></td>
        <td id="LC4979" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4980" class="blob-num js-line-number" data-line-number="4980"></td>
        <td id="LC4980" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L4981" class="blob-num js-line-number" data-line-number="4981"></td>
        <td id="LC4981" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L4982" class="blob-num js-line-number" data-line-number="4982"></td>
        <td id="LC4982" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L4983" class="blob-num js-line-number" data-line-number="4983"></td>
        <td id="LC4983" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4984" class="blob-num js-line-number" data-line-number="4984"></td>
        <td id="LC4984" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L4985" class="blob-num js-line-number" data-line-number="4985"></td>
        <td id="LC4985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L4986" class="blob-num js-line-number" data-line-number="4986"></td>
        <td id="LC4986" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L4987" class="blob-num js-line-number" data-line-number="4987"></td>
        <td id="LC4987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$location</span></td>
      </tr>
      <tr>
        <td id="L4988" class="blob-num js-line-number" data-line-number="4988"></td>
        <td id="LC4988" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4989" class="blob-num js-line-number" data-line-number="4989"></td>
        <td id="LC4989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $browser</span></td>
      </tr>
      <tr>
        <td id="L4990" class="blob-num js-line-number" data-line-number="4990"></td>
        <td id="LC4990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $sniffer</span></td>
      </tr>
      <tr>
        <td id="L4991" class="blob-num js-line-number" data-line-number="4991"></td>
        <td id="LC4991" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $document</span></td>
      </tr>
      <tr>
        <td id="L4992" class="blob-num js-line-number" data-line-number="4992"></td>
        <td id="LC4992" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4993" class="blob-num js-line-number" data-line-number="4993"></td>
        <td id="LC4993" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L4994" class="blob-num js-line-number" data-line-number="4994"></td>
        <td id="LC4994" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The $location service parses the URL in the browser address bar (based on the {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL available to your application. Changes to the URL in the address bar are reflected into $location service and changes to $location are reflected into the browser address bar.</span></td>
      </tr>
      <tr>
        <td id="L4995" class="blob-num js-line-number" data-line-number="4995"></td>
        <td id="LC4995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4996" class="blob-num js-line-number" data-line-number="4996"></td>
        <td id="LC4996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * **The $location service:**</span></td>
      </tr>
      <tr>
        <td id="L4997" class="blob-num js-line-number" data-line-number="4997"></td>
        <td id="LC4997" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L4998" class="blob-num js-line-number" data-line-number="4998"></td>
        <td id="LC4998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - Exposes the current URL in the browser address bar, so you can</span></td>
      </tr>
      <tr>
        <td id="L4999" class="blob-num js-line-number" data-line-number="4999"></td>
        <td id="LC4999" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Watch and observe the URL.</span></td>
      </tr>
      <tr>
        <td id="L5000" class="blob-num js-line-number" data-line-number="5000"></td>
        <td id="LC5000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Change the URL.</span></td>
      </tr>
      <tr>
        <td id="L5001" class="blob-num js-line-number" data-line-number="5001"></td>
        <td id="LC5001" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - Synchronizes the URL with the browser when the user</span></td>
      </tr>
      <tr>
        <td id="L5002" class="blob-num js-line-number" data-line-number="5002"></td>
        <td id="LC5002" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Changes the address bar.</span></td>
      </tr>
      <tr>
        <td id="L5003" class="blob-num js-line-number" data-line-number="5003"></td>
        <td id="LC5003" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Clicks the back or forward button (or clicks a History link).</span></td>
      </tr>
      <tr>
        <td id="L5004" class="blob-num js-line-number" data-line-number="5004"></td>
        <td id="LC5004" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Clicks on a link.</span></td>
      </tr>
      <tr>
        <td id="L5005" class="blob-num js-line-number" data-line-number="5005"></td>
        <td id="LC5005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).</span></td>
      </tr>
      <tr>
        <td id="L5006" class="blob-num js-line-number" data-line-number="5006"></td>
        <td id="LC5006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5007" class="blob-num js-line-number" data-line-number="5007"></td>
        <td id="LC5007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular Services: Using $location}</span></td>
      </tr>
      <tr>
        <td id="L5008" class="blob-num js-line-number" data-line-number="5008"></td>
        <td id="LC5008" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5009" class="blob-num js-line-number" data-line-number="5009"></td>
        <td id="LC5009" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5010" class="blob-num js-line-number" data-line-number="5010"></td>
        <td id="LC5010" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5011" class="blob-num js-line-number" data-line-number="5011"></td>
        <td id="LC5011" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L5012" class="blob-num js-line-number" data-line-number="5012"></td>
        <td id="LC5012" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$locationProvider</span></td>
      </tr>
      <tr>
        <td id="L5013" class="blob-num js-line-number" data-line-number="5013"></td>
        <td id="LC5013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5014" class="blob-num js-line-number" data-line-number="5014"></td>
        <td id="LC5014" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Use the `$locationProvider` to configure how the application deep linking paths are stored.</span></td>
      </tr>
      <tr>
        <td id="L5015" class="blob-num js-line-number" data-line-number="5015"></td>
        <td id="LC5015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5016" class="blob-num js-line-number" data-line-number="5016"></td>
        <td id="LC5016" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$LocationProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L5017" class="blob-num js-line-number" data-line-number="5017"></td>
        <td id="LC5017" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> hashPrefix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L5018" class="blob-num js-line-number" data-line-number="5018"></td>
        <td id="LC5018" class="blob-code blob-code-inner js-file-line">      html5Mode <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5019" class="blob-num js-line-number" data-line-number="5019"></td>
        <td id="LC5019" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5020" class="blob-num js-line-number" data-line-number="5020"></td>
        <td id="LC5020" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5021" class="blob-num js-line-number" data-line-number="5021"></td>
        <td id="LC5021" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L5022" class="blob-num js-line-number" data-line-number="5022"></td>
        <td id="LC5022" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$locationProvider#hashPrefix</span></td>
      </tr>
      <tr>
        <td id="L5023" class="blob-num js-line-number" data-line-number="5023"></td>
        <td id="LC5023" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$locationProvider</span></td>
      </tr>
      <tr>
        <td id="L5024" class="blob-num js-line-number" data-line-number="5024"></td>
        <td id="LC5024" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5025" class="blob-num js-line-number" data-line-number="5025"></td>
        <td id="LC5025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} prefix Prefix for hash part (containing path and search)</span></td>
      </tr>
      <tr>
        <td id="L5026" class="blob-num js-line-number" data-line-number="5026"></td>
        <td id="LC5026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {*} current value if used as getter or itself (chaining) if used as setter</span></td>
      </tr>
      <tr>
        <td id="L5027" class="blob-num js-line-number" data-line-number="5027"></td>
        <td id="LC5027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L5028" class="blob-num js-line-number" data-line-number="5028"></td>
        <td id="LC5028" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">hashPrefix</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">prefix</span>) {</td>
      </tr>
      <tr>
        <td id="L5029" class="blob-num js-line-number" data-line-number="5029"></td>
        <td id="LC5029" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isDefined(prefix)) {</td>
      </tr>
      <tr>
        <td id="L5030" class="blob-num js-line-number" data-line-number="5030"></td>
        <td id="LC5030" class="blob-code blob-code-inner js-file-line">      hashPrefix <span class="pl-k">=</span> prefix;</td>
      </tr>
      <tr>
        <td id="L5031" class="blob-num js-line-number" data-line-number="5031"></td>
        <td id="LC5031" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L5032" class="blob-num js-line-number" data-line-number="5032"></td>
        <td id="LC5032" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5033" class="blob-num js-line-number" data-line-number="5033"></td>
        <td id="LC5033" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> hashPrefix;</td>
      </tr>
      <tr>
        <td id="L5034" class="blob-num js-line-number" data-line-number="5034"></td>
        <td id="LC5034" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5035" class="blob-num js-line-number" data-line-number="5035"></td>
        <td id="LC5035" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5036" class="blob-num js-line-number" data-line-number="5036"></td>
        <td id="LC5036" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5037" class="blob-num js-line-number" data-line-number="5037"></td>
        <td id="LC5037" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5038" class="blob-num js-line-number" data-line-number="5038"></td>
        <td id="LC5038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L5039" class="blob-num js-line-number" data-line-number="5039"></td>
        <td id="LC5039" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$locationProvider#html5Mode</span></td>
      </tr>
      <tr>
        <td id="L5040" class="blob-num js-line-number" data-line-number="5040"></td>
        <td id="LC5040" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$locationProvider</span></td>
      </tr>
      <tr>
        <td id="L5041" class="blob-num js-line-number" data-line-number="5041"></td>
        <td id="LC5041" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5042" class="blob-num js-line-number" data-line-number="5042"></td>
        <td id="LC5042" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} mode Use HTML5 strategy if available.</span></td>
      </tr>
      <tr>
        <td id="L5043" class="blob-num js-line-number" data-line-number="5043"></td>
        <td id="LC5043" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {*} current value if used as getter or itself (chaining) if used as setter</span></td>
      </tr>
      <tr>
        <td id="L5044" class="blob-num js-line-number" data-line-number="5044"></td>
        <td id="LC5044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L5045" class="blob-num js-line-number" data-line-number="5045"></td>
        <td id="LC5045" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">html5Mode</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">mode</span>) {</td>
      </tr>
      <tr>
        <td id="L5046" class="blob-num js-line-number" data-line-number="5046"></td>
        <td id="LC5046" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isDefined(mode)) {</td>
      </tr>
      <tr>
        <td id="L5047" class="blob-num js-line-number" data-line-number="5047"></td>
        <td id="LC5047" class="blob-code blob-code-inner js-file-line">      html5Mode <span class="pl-k">=</span> mode;</td>
      </tr>
      <tr>
        <td id="L5048" class="blob-num js-line-number" data-line-number="5048"></td>
        <td id="LC5048" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L5049" class="blob-num js-line-number" data-line-number="5049"></td>
        <td id="LC5049" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5050" class="blob-num js-line-number" data-line-number="5050"></td>
        <td id="LC5050" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> html5Mode;</td>
      </tr>
      <tr>
        <td id="L5051" class="blob-num js-line-number" data-line-number="5051"></td>
        <td id="LC5051" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5052" class="blob-num js-line-number" data-line-number="5052"></td>
        <td id="LC5052" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L5053" class="blob-num js-line-number" data-line-number="5053"></td>
        <td id="LC5053" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5054" class="blob-num js-line-number" data-line-number="5054"></td>
        <td id="LC5054" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$browser<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$sniffer<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$document<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L5055" class="blob-num js-line-number" data-line-number="5055"></td>
        <td id="LC5055" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>( <span class="pl-smi">$rootScope</span>,   <span class="pl-smi">$browser</span>,   <span class="pl-smi">$sniffer</span>,   <span class="pl-smi">$document</span>) {</td>
      </tr>
      <tr>
        <td id="L5056" class="blob-num js-line-number" data-line-number="5056"></td>
        <td id="LC5056" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> currentUrl,</td>
      </tr>
      <tr>
        <td id="L5057" class="blob-num js-line-number" data-line-number="5057"></td>
        <td id="LC5057" class="blob-code blob-code-inner js-file-line">        basePath <span class="pl-k">=</span> $browser.baseHref() <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L5058" class="blob-num js-line-number" data-line-number="5058"></td>
        <td id="LC5058" class="blob-code blob-code-inner js-file-line">        pathPrefix <span class="pl-k">=</span> pathPrefixFromBase(basePath),</td>
      </tr>
      <tr>
        <td id="L5059" class="blob-num js-line-number" data-line-number="5059"></td>
        <td id="LC5059" class="blob-code blob-code-inner js-file-line">        initUrl <span class="pl-k">=</span> $browser.url();</td>
      </tr>
      <tr>
        <td id="L5060" class="blob-num js-line-number" data-line-number="5060"></td>
        <td id="LC5060" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5061" class="blob-num js-line-number" data-line-number="5061"></td>
        <td id="LC5061" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (html5Mode) {</td>
      </tr>
      <tr>
        <td id="L5062" class="blob-num js-line-number" data-line-number="5062"></td>
        <td id="LC5062" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($sniffer.<span class="pl-c1">history</span>) {</td>
      </tr>
      <tr>
        <td id="L5063" class="blob-num js-line-number" data-line-number="5063"></td>
        <td id="LC5063" class="blob-code blob-code-inner js-file-line">        currentUrl <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">LocationUrl</span>(convertToHtml5Url(initUrl, basePath, hashPrefix), pathPrefix);</td>
      </tr>
      <tr>
        <td id="L5064" class="blob-num js-line-number" data-line-number="5064"></td>
        <td id="LC5064" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5065" class="blob-num js-line-number" data-line-number="5065"></td>
        <td id="LC5065" class="blob-code blob-code-inner js-file-line">        currentUrl <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">LocationHashbangUrl</span>(convertToHashbangUrl(initUrl, basePath, hashPrefix),</td>
      </tr>
      <tr>
        <td id="L5066" class="blob-num js-line-number" data-line-number="5066"></td>
        <td id="LC5066" class="blob-code blob-code-inner js-file-line">                                             hashPrefix);</td>
      </tr>
      <tr>
        <td id="L5067" class="blob-num js-line-number" data-line-number="5067"></td>
        <td id="LC5067" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5068" class="blob-num js-line-number" data-line-number="5068"></td>
        <td id="LC5068" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5069" class="blob-num js-line-number" data-line-number="5069"></td>
        <td id="LC5069" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// link rewriting</span></td>
      </tr>
      <tr>
        <td id="L5070" class="blob-num js-line-number" data-line-number="5070"></td>
        <td id="LC5070" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> u <span class="pl-k">=</span> currentUrl,</td>
      </tr>
      <tr>
        <td id="L5071" class="blob-num js-line-number" data-line-number="5071"></td>
        <td id="LC5071" class="blob-code blob-code-inner js-file-line">          absUrlPrefix <span class="pl-k">=</span> composeProtocolHostPort(u.<span class="pl-c1">protocol</span>(), u.<span class="pl-c1">host</span>(), u.<span class="pl-c1">port</span>()) <span class="pl-k">+</span> pathPrefix;</td>
      </tr>
      <tr>
        <td id="L5072" class="blob-num js-line-number" data-line-number="5072"></td>
        <td id="LC5072" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5073" class="blob-num js-line-number" data-line-number="5073"></td>
        <td id="LC5073" class="blob-code blob-code-inner js-file-line">      $document.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L5074" class="blob-num js-line-number" data-line-number="5074"></td>
        <td id="LC5074" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// TODO(vojta): rewrite link when opening in new tab/window (in legacy browser)</span></td>
      </tr>
      <tr>
        <td id="L5075" class="blob-num js-line-number" data-line-number="5075"></td>
        <td id="LC5075" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// currently we open nice url link and redirect then</span></td>
      </tr>
      <tr>
        <td id="L5076" class="blob-num js-line-number" data-line-number="5076"></td>
        <td id="LC5076" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5077" class="blob-num js-line-number" data-line-number="5077"></td>
        <td id="LC5077" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">event</span>.ctrlKey <span class="pl-k">||</span> <span class="pl-c1">event</span>.metaKey <span class="pl-k">||</span> <span class="pl-c1">event</span>.which <span class="pl-k">==</span> <span class="pl-c1">2</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5078" class="blob-num js-line-number" data-line-number="5078"></td>
        <td id="LC5078" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5079" class="blob-num js-line-number" data-line-number="5079"></td>
        <td id="LC5079" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> elm <span class="pl-k">=</span> jqLite(<span class="pl-c1">event</span>.<span class="pl-c1">target</span>);</td>
      </tr>
      <tr>
        <td id="L5080" class="blob-num js-line-number" data-line-number="5080"></td>
        <td id="LC5080" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5081" class="blob-num js-line-number" data-line-number="5081"></td>
        <td id="LC5081" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// traverse the DOM up to find first A tag</span></td>
      </tr>
      <tr>
        <td id="L5082" class="blob-num js-line-number" data-line-number="5082"></td>
        <td id="LC5082" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">while</span> (elm.<span class="pl-c1">length</span> <span class="pl-k">&amp;&amp;</span> lowercase(elm[<span class="pl-c1">0</span>].<span class="pl-c1">nodeName</span>) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5083" class="blob-num js-line-number" data-line-number="5083"></td>
        <td id="LC5083" class="blob-code blob-code-inner js-file-line">          elm <span class="pl-k">=</span> elm.<span class="pl-c1">parent</span>();</td>
      </tr>
      <tr>
        <td id="L5084" class="blob-num js-line-number" data-line-number="5084"></td>
        <td id="LC5084" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5085" class="blob-num js-line-number" data-line-number="5085"></td>
        <td id="LC5085" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5086" class="blob-num js-line-number" data-line-number="5086"></td>
        <td id="LC5086" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> absHref <span class="pl-k">=</span> elm.prop(<span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5087" class="blob-num js-line-number" data-line-number="5087"></td>
        <td id="LC5087" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5088" class="blob-num js-line-number" data-line-number="5088"></td>
        <td id="LC5088" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>absHref <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5089" class="blob-num js-line-number" data-line-number="5089"></td>
        <td id="LC5089" class="blob-code blob-code-inner js-file-line">            elm.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>target<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5090" class="blob-num js-line-number" data-line-number="5090"></td>
        <td id="LC5090" class="blob-code blob-code-inner js-file-line">            absHref.<span class="pl-c1">indexOf</span>(absUrlPrefix) <span class="pl-k">!==</span> <span class="pl-c1">0</span>) { <span class="pl-c">// link to different domain or base path</span></td>
      </tr>
      <tr>
        <td id="L5091" class="blob-num js-line-number" data-line-number="5091"></td>
        <td id="LC5091" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5092" class="blob-num js-line-number" data-line-number="5092"></td>
        <td id="LC5092" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5093" class="blob-num js-line-number" data-line-number="5093"></td>
        <td id="LC5093" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5094" class="blob-num js-line-number" data-line-number="5094"></td>
        <td id="LC5094" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// update location with href without the prefix</span></td>
      </tr>
      <tr>
        <td id="L5095" class="blob-num js-line-number" data-line-number="5095"></td>
        <td id="LC5095" class="blob-code blob-code-inner js-file-line">        currentUrl.url(absHref.<span class="pl-c1">substr</span>(absUrlPrefix.<span class="pl-c1">length</span>));</td>
      </tr>
      <tr>
        <td id="L5096" class="blob-num js-line-number" data-line-number="5096"></td>
        <td id="LC5096" class="blob-code blob-code-inner js-file-line">        $rootScope.$<span class="pl-c1">apply</span>();</td>
      </tr>
      <tr>
        <td id="L5097" class="blob-num js-line-number" data-line-number="5097"></td>
        <td id="LC5097" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L5098" class="blob-num js-line-number" data-line-number="5098"></td>
        <td id="LC5098" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// hack to work around FF6 bug 684208 when scenario runner clicks on links</span></td>
      </tr>
      <tr>
        <td id="L5099" class="blob-num js-line-number" data-line-number="5099"></td>
        <td id="LC5099" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">window</span>.angular[<span class="pl-s"><span class="pl-pds">&#39;</span>ff-684208-preventDefault<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5100" class="blob-num js-line-number" data-line-number="5100"></td>
        <td id="LC5100" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5101" class="blob-num js-line-number" data-line-number="5101"></td>
        <td id="LC5101" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5102" class="blob-num js-line-number" data-line-number="5102"></td>
        <td id="LC5102" class="blob-code blob-code-inner js-file-line">      currentUrl <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">LocationHashbangUrl</span>(initUrl, hashPrefix);</td>
      </tr>
      <tr>
        <td id="L5103" class="blob-num js-line-number" data-line-number="5103"></td>
        <td id="LC5103" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5104" class="blob-num js-line-number" data-line-number="5104"></td>
        <td id="LC5104" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5105" class="blob-num js-line-number" data-line-number="5105"></td>
        <td id="LC5105" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// rewrite hashbang url &lt;&gt; html5 url</span></td>
      </tr>
      <tr>
        <td id="L5106" class="blob-num js-line-number" data-line-number="5106"></td>
        <td id="LC5106" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (currentUrl.absUrl() <span class="pl-k">!=</span> initUrl) {</td>
      </tr>
      <tr>
        <td id="L5107" class="blob-num js-line-number" data-line-number="5107"></td>
        <td id="LC5107" class="blob-code blob-code-inner js-file-line">      $browser.url(currentUrl.absUrl(), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L5108" class="blob-num js-line-number" data-line-number="5108"></td>
        <td id="LC5108" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5109" class="blob-num js-line-number" data-line-number="5109"></td>
        <td id="LC5109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5110" class="blob-num js-line-number" data-line-number="5110"></td>
        <td id="LC5110" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// update $location when $browser url changes</span></td>
      </tr>
      <tr>
        <td id="L5111" class="blob-num js-line-number" data-line-number="5111"></td>
        <td id="LC5111" class="blob-code blob-code-inner js-file-line">    $browser.onUrlChange(<span class="pl-k">function</span>(<span class="pl-smi">newUrl</span>) {</td>
      </tr>
      <tr>
        <td id="L5112" class="blob-num js-line-number" data-line-number="5112"></td>
        <td id="LC5112" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (currentUrl.absUrl() <span class="pl-k">!=</span> newUrl) {</td>
      </tr>
      <tr>
        <td id="L5113" class="blob-num js-line-number" data-line-number="5113"></td>
        <td id="LC5113" class="blob-code blob-code-inner js-file-line">        $rootScope.$evalAsync(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5114" class="blob-num js-line-number" data-line-number="5114"></td>
        <td id="LC5114" class="blob-code blob-code-inner js-file-line">          currentUrl.$$<span class="pl-c1">parse</span>(newUrl);</td>
      </tr>
      <tr>
        <td id="L5115" class="blob-num js-line-number" data-line-number="5115"></td>
        <td id="LC5115" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5116" class="blob-num js-line-number" data-line-number="5116"></td>
        <td id="LC5116" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>$rootScope.$$phase) $rootScope.$digest();</td>
      </tr>
      <tr>
        <td id="L5117" class="blob-num js-line-number" data-line-number="5117"></td>
        <td id="LC5117" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5118" class="blob-num js-line-number" data-line-number="5118"></td>
        <td id="LC5118" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L5119" class="blob-num js-line-number" data-line-number="5119"></td>
        <td id="LC5119" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5120" class="blob-num js-line-number" data-line-number="5120"></td>
        <td id="LC5120" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// update browser</span></td>
      </tr>
      <tr>
        <td id="L5121" class="blob-num js-line-number" data-line-number="5121"></td>
        <td id="LC5121" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> changeCounter <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L5122" class="blob-num js-line-number" data-line-number="5122"></td>
        <td id="LC5122" class="blob-code blob-code-inner js-file-line">    $rootScope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span> <span class="pl-en">$locationWatch</span>() {</td>
      </tr>
      <tr>
        <td id="L5123" class="blob-num js-line-number" data-line-number="5123"></td>
        <td id="LC5123" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($browser.url() <span class="pl-k">!=</span> currentUrl.absUrl()) {</td>
      </tr>
      <tr>
        <td id="L5124" class="blob-num js-line-number" data-line-number="5124"></td>
        <td id="LC5124" class="blob-code blob-code-inner js-file-line">        changeCounter<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5125" class="blob-num js-line-number" data-line-number="5125"></td>
        <td id="LC5125" class="blob-code blob-code-inner js-file-line">        $rootScope.$evalAsync(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5126" class="blob-num js-line-number" data-line-number="5126"></td>
        <td id="LC5126" class="blob-code blob-code-inner js-file-line">          $browser.url(currentUrl.absUrl(), currentUrl.$$replace);</td>
      </tr>
      <tr>
        <td id="L5127" class="blob-num js-line-number" data-line-number="5127"></td>
        <td id="LC5127" class="blob-code blob-code-inner js-file-line">          currentUrl.$$replace <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5128" class="blob-num js-line-number" data-line-number="5128"></td>
        <td id="LC5128" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5129" class="blob-num js-line-number" data-line-number="5129"></td>
        <td id="LC5129" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5130" class="blob-num js-line-number" data-line-number="5130"></td>
        <td id="LC5130" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5131" class="blob-num js-line-number" data-line-number="5131"></td>
        <td id="LC5131" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> changeCounter;</td>
      </tr>
      <tr>
        <td id="L5132" class="blob-num js-line-number" data-line-number="5132"></td>
        <td id="LC5132" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L5133" class="blob-num js-line-number" data-line-number="5133"></td>
        <td id="LC5133" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5134" class="blob-num js-line-number" data-line-number="5134"></td>
        <td id="LC5134" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> currentUrl;</td>
      </tr>
      <tr>
        <td id="L5135" class="blob-num js-line-number" data-line-number="5135"></td>
        <td id="LC5135" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L5136" class="blob-num js-line-number" data-line-number="5136"></td>
        <td id="LC5136" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5137" class="blob-num js-line-number" data-line-number="5137"></td>
        <td id="LC5137" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5138" class="blob-num js-line-number" data-line-number="5138"></td>
        <td id="LC5138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5139" class="blob-num js-line-number" data-line-number="5139"></td>
        <td id="LC5139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L5140" class="blob-num js-line-number" data-line-number="5140"></td>
        <td id="LC5140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$log</span></td>
      </tr>
      <tr>
        <td id="L5141" class="blob-num js-line-number" data-line-number="5141"></td>
        <td id="LC5141" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $window</span></td>
      </tr>
      <tr>
        <td id="L5142" class="blob-num js-line-number" data-line-number="5142"></td>
        <td id="LC5142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5143" class="blob-num js-line-number" data-line-number="5143"></td>
        <td id="LC5143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5144" class="blob-num js-line-number" data-line-number="5144"></td>
        <td id="LC5144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Simple service for logging. Default implementation writes the message</span></td>
      </tr>
      <tr>
        <td id="L5145" class="blob-num js-line-number" data-line-number="5145"></td>
        <td id="LC5145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * into the browser&#39;s console (if present).</span></td>
      </tr>
      <tr>
        <td id="L5146" class="blob-num js-line-number" data-line-number="5146"></td>
        <td id="LC5146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5147" class="blob-num js-line-number" data-line-number="5147"></td>
        <td id="LC5147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The main purpose of this service is to simplify debugging and troubleshooting.</span></td>
      </tr>
      <tr>
        <td id="L5148" class="blob-num js-line-number" data-line-number="5148"></td>
        <td id="LC5148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5149" class="blob-num js-line-number" data-line-number="5149"></td>
        <td id="LC5149" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L5150" class="blob-num js-line-number" data-line-number="5150"></td>
        <td id="LC5150" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L5151" class="blob-num js-line-number" data-line-number="5151"></td>
        <td id="LC5151" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L5152" class="blob-num js-line-number" data-line-number="5152"></td>
        <td id="LC5152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L5153" class="blob-num js-line-number" data-line-number="5153"></td>
        <td id="LC5153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function LogCtrl($log) {</span></td>
      </tr>
      <tr>
        <td id="L5154" class="blob-num js-line-number" data-line-number="5154"></td>
        <td id="LC5154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             this.$log = $log;</span></td>
      </tr>
      <tr>
        <td id="L5155" class="blob-num js-line-number" data-line-number="5155"></td>
        <td id="LC5155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             this.message = &#39;Hello World!&#39;;</span></td>
      </tr>
      <tr>
        <td id="L5156" class="blob-num js-line-number" data-line-number="5156"></td>
        <td id="LC5156" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L5157" class="blob-num js-line-number" data-line-number="5157"></td>
        <td id="LC5157" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L5158" class="blob-num js-line-number" data-line-number="5158"></td>
        <td id="LC5158" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;div ng-controller=&quot;LogCtrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L5159" class="blob-num js-line-number" data-line-number="5159"></td>
        <td id="LC5159" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;p&gt;Reload this page with open console, enter text and hit the log button...&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L5160" class="blob-num js-line-number" data-line-number="5160"></td>
        <td id="LC5160" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Message:</span></td>
      </tr>
      <tr>
        <td id="L5161" class="blob-num js-line-number" data-line-number="5161"></td>
        <td id="LC5161" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;input type=&quot;text&quot; ng-model=&quot;message&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L5162" class="blob-num js-line-number" data-line-number="5162"></td>
        <td id="LC5162" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;button ng-click=&quot;$log.log(message)&quot;&gt;log&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L5163" class="blob-num js-line-number" data-line-number="5163"></td>
        <td id="LC5163" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;button ng-click=&quot;$log.warn(message)&quot;&gt;warn&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L5164" class="blob-num js-line-number" data-line-number="5164"></td>
        <td id="LC5164" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;button ng-click=&quot;$log.info(message)&quot;&gt;info&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L5165" class="blob-num js-line-number" data-line-number="5165"></td>
        <td id="LC5165" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;button ng-click=&quot;$log.error(message)&quot;&gt;error&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L5166" class="blob-num js-line-number" data-line-number="5166"></td>
        <td id="LC5166" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L5167" class="blob-num js-line-number" data-line-number="5167"></td>
        <td id="LC5167" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L5168" class="blob-num js-line-number" data-line-number="5168"></td>
        <td id="LC5168" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L5169" class="blob-num js-line-number" data-line-number="5169"></td>
        <td id="LC5169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L5170" class="blob-num js-line-number" data-line-number="5170"></td>
        <td id="LC5170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L5171" class="blob-num js-line-number" data-line-number="5171"></td>
        <td id="LC5171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5172" class="blob-num js-line-number" data-line-number="5172"></td>
        <td id="LC5172" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5173" class="blob-num js-line-number" data-line-number="5173"></td>
        <td id="LC5173" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$LogProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L5174" class="blob-num js-line-number" data-line-number="5174"></td>
        <td id="LC5174" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$window</span>){</td>
      </tr>
      <tr>
        <td id="L5175" class="blob-num js-line-number" data-line-number="5175"></td>
        <td id="LC5175" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L5176" class="blob-num js-line-number" data-line-number="5176"></td>
        <td id="LC5176" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5177" class="blob-num js-line-number" data-line-number="5177"></td>
        <td id="LC5177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L5178" class="blob-num js-line-number" data-line-number="5178"></td>
        <td id="LC5178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$log#log</span></td>
      </tr>
      <tr>
        <td id="L5179" class="blob-num js-line-number" data-line-number="5179"></td>
        <td id="LC5179" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$log</span></td>
      </tr>
      <tr>
        <td id="L5180" class="blob-num js-line-number" data-line-number="5180"></td>
        <td id="LC5180" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L5181" class="blob-num js-line-number" data-line-number="5181"></td>
        <td id="LC5181" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5182" class="blob-num js-line-number" data-line-number="5182"></td>
        <td id="LC5182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Write a log message</span></td>
      </tr>
      <tr>
        <td id="L5183" class="blob-num js-line-number" data-line-number="5183"></td>
        <td id="LC5183" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L5184" class="blob-num js-line-number" data-line-number="5184"></td>
        <td id="LC5184" class="blob-code blob-code-inner js-file-line">      log<span class="pl-k">:</span> consoleLog(<span class="pl-s"><span class="pl-pds">&#39;</span>log<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L5185" class="blob-num js-line-number" data-line-number="5185"></td>
        <td id="LC5185" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5186" class="blob-num js-line-number" data-line-number="5186"></td>
        <td id="LC5186" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5187" class="blob-num js-line-number" data-line-number="5187"></td>
        <td id="LC5187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L5188" class="blob-num js-line-number" data-line-number="5188"></td>
        <td id="LC5188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$log#warn</span></td>
      </tr>
      <tr>
        <td id="L5189" class="blob-num js-line-number" data-line-number="5189"></td>
        <td id="LC5189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$log</span></td>
      </tr>
      <tr>
        <td id="L5190" class="blob-num js-line-number" data-line-number="5190"></td>
        <td id="LC5190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L5191" class="blob-num js-line-number" data-line-number="5191"></td>
        <td id="LC5191" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5192" class="blob-num js-line-number" data-line-number="5192"></td>
        <td id="LC5192" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Write a warning message</span></td>
      </tr>
      <tr>
        <td id="L5193" class="blob-num js-line-number" data-line-number="5193"></td>
        <td id="LC5193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L5194" class="blob-num js-line-number" data-line-number="5194"></td>
        <td id="LC5194" class="blob-code blob-code-inner js-file-line">      warn<span class="pl-k">:</span> consoleLog(<span class="pl-s"><span class="pl-pds">&#39;</span>warn<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L5195" class="blob-num js-line-number" data-line-number="5195"></td>
        <td id="LC5195" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5196" class="blob-num js-line-number" data-line-number="5196"></td>
        <td id="LC5196" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5197" class="blob-num js-line-number" data-line-number="5197"></td>
        <td id="LC5197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L5198" class="blob-num js-line-number" data-line-number="5198"></td>
        <td id="LC5198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$log#info</span></td>
      </tr>
      <tr>
        <td id="L5199" class="blob-num js-line-number" data-line-number="5199"></td>
        <td id="LC5199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$log</span></td>
      </tr>
      <tr>
        <td id="L5200" class="blob-num js-line-number" data-line-number="5200"></td>
        <td id="LC5200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L5201" class="blob-num js-line-number" data-line-number="5201"></td>
        <td id="LC5201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5202" class="blob-num js-line-number" data-line-number="5202"></td>
        <td id="LC5202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Write an information message</span></td>
      </tr>
      <tr>
        <td id="L5203" class="blob-num js-line-number" data-line-number="5203"></td>
        <td id="LC5203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L5204" class="blob-num js-line-number" data-line-number="5204"></td>
        <td id="LC5204" class="blob-code blob-code-inner js-file-line">      info<span class="pl-k">:</span> consoleLog(<span class="pl-s"><span class="pl-pds">&#39;</span>info<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L5205" class="blob-num js-line-number" data-line-number="5205"></td>
        <td id="LC5205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5206" class="blob-num js-line-number" data-line-number="5206"></td>
        <td id="LC5206" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5207" class="blob-num js-line-number" data-line-number="5207"></td>
        <td id="LC5207" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L5208" class="blob-num js-line-number" data-line-number="5208"></td>
        <td id="LC5208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$log#error</span></td>
      </tr>
      <tr>
        <td id="L5209" class="blob-num js-line-number" data-line-number="5209"></td>
        <td id="LC5209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$log</span></td>
      </tr>
      <tr>
        <td id="L5210" class="blob-num js-line-number" data-line-number="5210"></td>
        <td id="LC5210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L5211" class="blob-num js-line-number" data-line-number="5211"></td>
        <td id="LC5211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5212" class="blob-num js-line-number" data-line-number="5212"></td>
        <td id="LC5212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Write an error message</span></td>
      </tr>
      <tr>
        <td id="L5213" class="blob-num js-line-number" data-line-number="5213"></td>
        <td id="LC5213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L5214" class="blob-num js-line-number" data-line-number="5214"></td>
        <td id="LC5214" class="blob-code blob-code-inner js-file-line">      error<span class="pl-k">:</span> consoleLog(<span class="pl-s"><span class="pl-pds">&#39;</span>error<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L5215" class="blob-num js-line-number" data-line-number="5215"></td>
        <td id="LC5215" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5216" class="blob-num js-line-number" data-line-number="5216"></td>
        <td id="LC5216" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5217" class="blob-num js-line-number" data-line-number="5217"></td>
        <td id="LC5217" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">formatError</span>(<span class="pl-smi">arg</span>) {</td>
      </tr>
      <tr>
        <td id="L5218" class="blob-num js-line-number" data-line-number="5218"></td>
        <td id="LC5218" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (arg <span class="pl-k">instanceof</span> Error) {</td>
      </tr>
      <tr>
        <td id="L5219" class="blob-num js-line-number" data-line-number="5219"></td>
        <td id="LC5219" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (arg.stack) {</td>
      </tr>
      <tr>
        <td id="L5220" class="blob-num js-line-number" data-line-number="5220"></td>
        <td id="LC5220" class="blob-code blob-code-inner js-file-line">          arg <span class="pl-k">=</span> (arg.message <span class="pl-k">&amp;&amp;</span> arg.stack.<span class="pl-c1">indexOf</span>(arg.message) <span class="pl-k">===</span> <span class="pl-k">-</span><span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L5221" class="blob-num js-line-number" data-line-number="5221"></td>
        <td id="LC5221" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Error: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> arg.message <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> arg.stack</td>
      </tr>
      <tr>
        <td id="L5222" class="blob-num js-line-number" data-line-number="5222"></td>
        <td id="LC5222" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">:</span> arg.stack;</td>
      </tr>
      <tr>
        <td id="L5223" class="blob-num js-line-number" data-line-number="5223"></td>
        <td id="LC5223" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (arg.sourceURL) {</td>
      </tr>
      <tr>
        <td id="L5224" class="blob-num js-line-number" data-line-number="5224"></td>
        <td id="LC5224" class="blob-code blob-code-inner js-file-line">          arg <span class="pl-k">=</span> arg.message <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> arg.sourceURL <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> arg.line;</td>
      </tr>
      <tr>
        <td id="L5225" class="blob-num js-line-number" data-line-number="5225"></td>
        <td id="LC5225" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5226" class="blob-num js-line-number" data-line-number="5226"></td>
        <td id="LC5226" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5227" class="blob-num js-line-number" data-line-number="5227"></td>
        <td id="LC5227" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> arg;</td>
      </tr>
      <tr>
        <td id="L5228" class="blob-num js-line-number" data-line-number="5228"></td>
        <td id="LC5228" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5229" class="blob-num js-line-number" data-line-number="5229"></td>
        <td id="LC5229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5230" class="blob-num js-line-number" data-line-number="5230"></td>
        <td id="LC5230" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">consoleLog</span>(<span class="pl-smi">type</span>) {</td>
      </tr>
      <tr>
        <td id="L5231" class="blob-num js-line-number" data-line-number="5231"></td>
        <td id="LC5231" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-en">console</span> <span class="pl-k">=</span> $window.<span class="pl-en">console</span> <span class="pl-k">||</span> {},</td>
      </tr>
      <tr>
        <td id="L5232" class="blob-num js-line-number" data-line-number="5232"></td>
        <td id="LC5232" class="blob-code blob-code-inner js-file-line">          logFn <span class="pl-k">=</span> <span class="pl-en">console</span>[type] <span class="pl-k">||</span> <span class="pl-en">console</span><span class="pl-c1">.log</span> <span class="pl-k">||</span> noop;</td>
      </tr>
      <tr>
        <td id="L5233" class="blob-num js-line-number" data-line-number="5233"></td>
        <td id="LC5233" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5234" class="blob-num js-line-number" data-line-number="5234"></td>
        <td id="LC5234" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (logFn.apply) {</td>
      </tr>
      <tr>
        <td id="L5235" class="blob-num js-line-number" data-line-number="5235"></td>
        <td id="LC5235" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5236" class="blob-num js-line-number" data-line-number="5236"></td>
        <td id="LC5236" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> args <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5237" class="blob-num js-line-number" data-line-number="5237"></td>
        <td id="LC5237" class="blob-code blob-code-inner js-file-line">          forEach(arguments, <span class="pl-k">function</span>(<span class="pl-smi">arg</span>) {</td>
      </tr>
      <tr>
        <td id="L5238" class="blob-num js-line-number" data-line-number="5238"></td>
        <td id="LC5238" class="blob-code blob-code-inner js-file-line">            args.<span class="pl-c1">push</span>(formatError(arg));</td>
      </tr>
      <tr>
        <td id="L5239" class="blob-num js-line-number" data-line-number="5239"></td>
        <td id="LC5239" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L5240" class="blob-num js-line-number" data-line-number="5240"></td>
        <td id="LC5240" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> logFn.<span class="pl-c1">apply</span>(<span class="pl-en">console</span>, args);</td>
      </tr>
      <tr>
        <td id="L5241" class="blob-num js-line-number" data-line-number="5241"></td>
        <td id="LC5241" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5242" class="blob-num js-line-number" data-line-number="5242"></td>
        <td id="LC5242" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5243" class="blob-num js-line-number" data-line-number="5243"></td>
        <td id="LC5243" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5244" class="blob-num js-line-number" data-line-number="5244"></td>
        <td id="LC5244" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// we are IE which either doesn&#39;t have window.console =&gt; this is noop and we do nothing,</span></td>
      </tr>
      <tr>
        <td id="L5245" class="blob-num js-line-number" data-line-number="5245"></td>
        <td id="LC5245" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// or we are IE where console.log doesn&#39;t have apply so we log at least first 2 args</span></td>
      </tr>
      <tr>
        <td id="L5246" class="blob-num js-line-number" data-line-number="5246"></td>
        <td id="LC5246" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">arg1</span>, <span class="pl-smi">arg2</span>) {</td>
      </tr>
      <tr>
        <td id="L5247" class="blob-num js-line-number" data-line-number="5247"></td>
        <td id="LC5247" class="blob-code blob-code-inner js-file-line">        logFn(arg1, arg2);</td>
      </tr>
      <tr>
        <td id="L5248" class="blob-num js-line-number" data-line-number="5248"></td>
        <td id="LC5248" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5249" class="blob-num js-line-number" data-line-number="5249"></td>
        <td id="LC5249" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5250" class="blob-num js-line-number" data-line-number="5250"></td>
        <td id="LC5250" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L5251" class="blob-num js-line-number" data-line-number="5251"></td>
        <td id="LC5251" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5252" class="blob-num js-line-number" data-line-number="5252"></td>
        <td id="LC5252" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5253" class="blob-num js-line-number" data-line-number="5253"></td>
        <td id="LC5253" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">OPERATORS</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5254" class="blob-num js-line-number" data-line-number="5254"></td>
        <td id="LC5254" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">null</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">null</span>;},</td>
      </tr>
      <tr>
        <td id="L5255" class="blob-num js-line-number" data-line-number="5255"></td>
        <td id="LC5255" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">true</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">true</span>;},</td>
      </tr>
      <tr>
        <td id="L5256" class="blob-num js-line-number" data-line-number="5256"></td>
        <td id="LC5256" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">false</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">false</span>;},</td>
      </tr>
      <tr>
        <td id="L5257" class="blob-num js-line-number" data-line-number="5257"></td>
        <td id="LC5257" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">undefined</span><span class="pl-k">:</span>noop,</td>
      </tr>
      <tr>
        <td id="L5258" class="blob-num js-line-number" data-line-number="5258"></td>
        <td id="LC5258" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">+</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span>a(self, locals); b<span class="pl-k">=</span>b(self, locals); <span class="pl-k">return</span> (isDefined(a)<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">+</span>(isDefined(b)<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>);},</td>
      </tr>
      <tr>
        <td id="L5259" class="blob-num js-line-number" data-line-number="5259"></td>
        <td id="LC5259" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">-</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span>a(self, locals); b<span class="pl-k">=</span>b(self, locals); <span class="pl-k">return</span> (isDefined(a)<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">-</span>(isDefined(b)<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-c1">0</span>);},</td>
      </tr>
      <tr>
        <td id="L5260" class="blob-num js-line-number" data-line-number="5260"></td>
        <td id="LC5260" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">*</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">*</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5261" class="blob-num js-line-number" data-line-number="5261"></td>
        <td id="LC5261" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">/</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)/b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5262" class="blob-num js-line-number" data-line-number="5262"></td>
        <td id="LC5262" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">%</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">%</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5263" class="blob-num js-line-number" data-line-number="5263"></td>
        <td id="LC5263" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">^</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">^</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5264" class="blob-num js-line-number" data-line-number="5264"></td>
        <td id="LC5264" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span>noop,</td>
      </tr>
      <tr>
        <td id="L5265" class="blob-num js-line-number" data-line-number="5265"></td>
        <td id="LC5265" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">==</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">==</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5266" class="blob-num js-line-number" data-line-number="5266"></td>
        <td id="LC5266" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">!=</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">!=</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5267" class="blob-num js-line-number" data-line-number="5267"></td>
        <td id="LC5267" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&lt;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&lt;</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5268" class="blob-num js-line-number" data-line-number="5268"></td>
        <td id="LC5268" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&gt;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&gt;</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5269" class="blob-num js-line-number" data-line-number="5269"></td>
        <td id="LC5269" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&lt;=</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&lt;=</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5270" class="blob-num js-line-number" data-line-number="5270"></td>
        <td id="LC5270" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&gt;=</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&gt;=</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5271" class="blob-num js-line-number" data-line-number="5271"></td>
        <td id="LC5271" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&amp;&amp;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&amp;&amp;</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5272" class="blob-num js-line-number" data-line-number="5272"></td>
        <td id="LC5272" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">||</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">||</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5273" class="blob-num js-line-number" data-line-number="5273"></td>
        <td id="LC5273" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">&amp;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a(self, locals)<span class="pl-k">&amp;</span>b(self, locals);},</td>
      </tr>
      <tr>
        <td id="L5274" class="blob-num js-line-number" data-line-number="5274"></td>
        <td id="LC5274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//    &#39;|&#39;:function(self, locals, a,b){return a|b;},</span></td>
      </tr>
      <tr>
        <td id="L5275" class="blob-num js-line-number" data-line-number="5275"></td>
        <td id="LC5275" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">|</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b(self, locals)(self, locals, a(self, locals));},</td>
      </tr>
      <tr>
        <td id="L5276" class="blob-num js-line-number" data-line-number="5276"></td>
        <td id="LC5276" class="blob-code blob-code-inner js-file-line">    <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-en">!</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">!</span>a(self, locals);}</td>
      </tr>
      <tr>
        <td id="L5277" class="blob-num js-line-number" data-line-number="5277"></td>
        <td id="LC5277" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L5278" class="blob-num js-line-number" data-line-number="5278"></td>
        <td id="LC5278" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">ESCAPE</span> <span class="pl-k">=</span> {<span class="pl-s"><span class="pl-pds">&quot;</span>n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\f</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\v</span><span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>};</td>
      </tr>
      <tr>
        <td id="L5279" class="blob-num js-line-number" data-line-number="5279"></td>
        <td id="LC5279" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5280" class="blob-num js-line-number" data-line-number="5280"></td>
        <td id="LC5280" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">lex</span>(<span class="pl-smi">text</span>){</td>
      </tr>
      <tr>
        <td id="L5281" class="blob-num js-line-number" data-line-number="5281"></td>
        <td id="LC5281" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> tokens <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L5282" class="blob-num js-line-number" data-line-number="5282"></td>
        <td id="LC5282" class="blob-code blob-code-inner js-file-line">      token,</td>
      </tr>
      <tr>
        <td id="L5283" class="blob-num js-line-number" data-line-number="5283"></td>
        <td id="LC5283" class="blob-code blob-code-inner js-file-line">      index <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L5284" class="blob-num js-line-number" data-line-number="5284"></td>
        <td id="LC5284" class="blob-code blob-code-inner js-file-line">      json <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L5285" class="blob-num js-line-number" data-line-number="5285"></td>
        <td id="LC5285" class="blob-code blob-code-inner js-file-line">      ch,</td>
      </tr>
      <tr>
        <td id="L5286" class="blob-num js-line-number" data-line-number="5286"></td>
        <td id="LC5286" class="blob-code blob-code-inner js-file-line">      lastCh <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>; <span class="pl-c">// can start regexp</span></td>
      </tr>
      <tr>
        <td id="L5287" class="blob-num js-line-number" data-line-number="5287"></td>
        <td id="LC5287" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5288" class="blob-num js-line-number" data-line-number="5288"></td>
        <td id="LC5288" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span> (index <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5289" class="blob-num js-line-number" data-line-number="5289"></td>
        <td id="LC5289" class="blob-code blob-code-inner js-file-line">    ch <span class="pl-k">=</span> text.<span class="pl-c1">charAt</span>(index);</td>
      </tr>
      <tr>
        <td id="L5290" class="blob-num js-line-number" data-line-number="5290"></td>
        <td id="LC5290" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (is(<span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-cce">\&#39;</span><span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5291" class="blob-num js-line-number" data-line-number="5291"></td>
        <td id="LC5291" class="blob-code blob-code-inner js-file-line">      readString(ch);</td>
      </tr>
      <tr>
        <td id="L5292" class="blob-num js-line-number" data-line-number="5292"></td>
        <td id="LC5292" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (isNumber(ch) <span class="pl-k">||</span> is(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>) <span class="pl-k">&amp;&amp;</span> isNumber(peek())) {</td>
      </tr>
      <tr>
        <td id="L5293" class="blob-num js-line-number" data-line-number="5293"></td>
        <td id="LC5293" class="blob-code blob-code-inner js-file-line">      readNumber();</td>
      </tr>
      <tr>
        <td id="L5294" class="blob-num js-line-number" data-line-number="5294"></td>
        <td id="LC5294" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (isIdent(ch)) {</td>
      </tr>
      <tr>
        <td id="L5295" class="blob-num js-line-number" data-line-number="5295"></td>
        <td id="LC5295" class="blob-code blob-code-inner js-file-line">      readIdent();</td>
      </tr>
      <tr>
        <td id="L5296" class="blob-num js-line-number" data-line-number="5296"></td>
        <td id="LC5296" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// identifiers can only be if the preceding char was a { or ,</span></td>
      </tr>
      <tr>
        <td id="L5297" class="blob-num js-line-number" data-line-number="5297"></td>
        <td id="LC5297" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (was(<span class="pl-s"><span class="pl-pds">&#39;</span>{,<span class="pl-pds">&#39;</span></span>) <span class="pl-k">&amp;&amp;</span> json[<span class="pl-c1">0</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5298" class="blob-num js-line-number" data-line-number="5298"></td>
        <td id="LC5298" class="blob-code blob-code-inner js-file-line">         (token<span class="pl-k">=</span>tokens[tokens.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L5299" class="blob-num js-line-number" data-line-number="5299"></td>
        <td id="LC5299" class="blob-code blob-code-inner js-file-line">        token.json <span class="pl-k">=</span> token.<span class="pl-c1">text</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>) <span class="pl-k">==</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5300" class="blob-num js-line-number" data-line-number="5300"></td>
        <td id="LC5300" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5301" class="blob-num js-line-number" data-line-number="5301"></td>
        <td id="LC5301" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (is(<span class="pl-s"><span class="pl-pds">&#39;</span>(){}[].,;:<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5302" class="blob-num js-line-number" data-line-number="5302"></td>
        <td id="LC5302" class="blob-code blob-code-inner js-file-line">      tokens.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5303" class="blob-num js-line-number" data-line-number="5303"></td>
        <td id="LC5303" class="blob-code blob-code-inner js-file-line">        index<span class="pl-k">:</span>index,</td>
      </tr>
      <tr>
        <td id="L5304" class="blob-num js-line-number" data-line-number="5304"></td>
        <td id="LC5304" class="blob-code blob-code-inner js-file-line">        text<span class="pl-k">:</span>ch,</td>
      </tr>
      <tr>
        <td id="L5305" class="blob-num js-line-number" data-line-number="5305"></td>
        <td id="LC5305" class="blob-code blob-code-inner js-file-line">        json<span class="pl-k">:</span>(was(<span class="pl-s"><span class="pl-pds">&#39;</span>:[,<span class="pl-pds">&#39;</span></span>) <span class="pl-k">&amp;&amp;</span> is(<span class="pl-s"><span class="pl-pds">&#39;</span>{[<span class="pl-pds">&#39;</span></span>)) <span class="pl-k">||</span> is(<span class="pl-s"><span class="pl-pds">&#39;</span>}]:,<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L5306" class="blob-num js-line-number" data-line-number="5306"></td>
        <td id="LC5306" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5307" class="blob-num js-line-number" data-line-number="5307"></td>
        <td id="LC5307" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (is(<span class="pl-s"><span class="pl-pds">&#39;</span>{[<span class="pl-pds">&#39;</span></span>)) json.<span class="pl-c1">unshift</span>(ch);</td>
      </tr>
      <tr>
        <td id="L5308" class="blob-num js-line-number" data-line-number="5308"></td>
        <td id="LC5308" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (is(<span class="pl-s"><span class="pl-pds">&#39;</span>}]<span class="pl-pds">&#39;</span></span>)) json.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L5309" class="blob-num js-line-number" data-line-number="5309"></td>
        <td id="LC5309" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5310" class="blob-num js-line-number" data-line-number="5310"></td>
        <td id="LC5310" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (isWhitespace(ch)) {</td>
      </tr>
      <tr>
        <td id="L5311" class="blob-num js-line-number" data-line-number="5311"></td>
        <td id="LC5311" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5312" class="blob-num js-line-number" data-line-number="5312"></td>
        <td id="LC5312" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">continue</span>;</td>
      </tr>
      <tr>
        <td id="L5313" class="blob-num js-line-number" data-line-number="5313"></td>
        <td id="LC5313" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5314" class="blob-num js-line-number" data-line-number="5314"></td>
        <td id="LC5314" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ch2 <span class="pl-k">=</span> ch <span class="pl-k">+</span> peek(),</td>
      </tr>
      <tr>
        <td id="L5315" class="blob-num js-line-number" data-line-number="5315"></td>
        <td id="LC5315" class="blob-code blob-code-inner js-file-line">          fn <span class="pl-k">=</span> <span class="pl-c1">OPERATORS</span>[ch],</td>
      </tr>
      <tr>
        <td id="L5316" class="blob-num js-line-number" data-line-number="5316"></td>
        <td id="LC5316" class="blob-code blob-code-inner js-file-line">          fn2 <span class="pl-k">=</span> <span class="pl-c1">OPERATORS</span>[ch2];</td>
      </tr>
      <tr>
        <td id="L5317" class="blob-num js-line-number" data-line-number="5317"></td>
        <td id="LC5317" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (fn2) {</td>
      </tr>
      <tr>
        <td id="L5318" class="blob-num js-line-number" data-line-number="5318"></td>
        <td id="LC5318" class="blob-code blob-code-inner js-file-line">        tokens.<span class="pl-c1">push</span>({index<span class="pl-k">:</span>index, text<span class="pl-k">:</span>ch2, fn<span class="pl-k">:</span>fn2});</td>
      </tr>
      <tr>
        <td id="L5319" class="blob-num js-line-number" data-line-number="5319"></td>
        <td id="LC5319" class="blob-code blob-code-inner js-file-line">        index <span class="pl-k">+=</span> <span class="pl-c1">2</span>;</td>
      </tr>
      <tr>
        <td id="L5320" class="blob-num js-line-number" data-line-number="5320"></td>
        <td id="LC5320" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (fn) {</td>
      </tr>
      <tr>
        <td id="L5321" class="blob-num js-line-number" data-line-number="5321"></td>
        <td id="LC5321" class="blob-code blob-code-inner js-file-line">        tokens.<span class="pl-c1">push</span>({index<span class="pl-k">:</span>index, text<span class="pl-k">:</span>ch, fn<span class="pl-k">:</span>fn, json<span class="pl-k">:</span> was(<span class="pl-s"><span class="pl-pds">&#39;</span>[,:<span class="pl-pds">&#39;</span></span>) <span class="pl-k">&amp;&amp;</span> is(<span class="pl-s"><span class="pl-pds">&#39;</span>+-<span class="pl-pds">&#39;</span></span>)});</td>
      </tr>
      <tr>
        <td id="L5322" class="blob-num js-line-number" data-line-number="5322"></td>
        <td id="LC5322" class="blob-code blob-code-inner js-file-line">        index <span class="pl-k">+=</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5323" class="blob-num js-line-number" data-line-number="5323"></td>
        <td id="LC5323" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5324" class="blob-num js-line-number" data-line-number="5324"></td>
        <td id="LC5324" class="blob-code blob-code-inner js-file-line">        throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>Unexpected next character <span class="pl-pds">&quot;</span></span>, index, index<span class="pl-k">+</span><span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5325" class="blob-num js-line-number" data-line-number="5325"></td>
        <td id="LC5325" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5326" class="blob-num js-line-number" data-line-number="5326"></td>
        <td id="LC5326" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5327" class="blob-num js-line-number" data-line-number="5327"></td>
        <td id="LC5327" class="blob-code blob-code-inner js-file-line">    lastCh <span class="pl-k">=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5328" class="blob-num js-line-number" data-line-number="5328"></td>
        <td id="LC5328" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5329" class="blob-num js-line-number" data-line-number="5329"></td>
        <td id="LC5329" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> tokens;</td>
      </tr>
      <tr>
        <td id="L5330" class="blob-num js-line-number" data-line-number="5330"></td>
        <td id="LC5330" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5331" class="blob-num js-line-number" data-line-number="5331"></td>
        <td id="LC5331" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">is</span>(<span class="pl-smi">chars</span>) {</td>
      </tr>
      <tr>
        <td id="L5332" class="blob-num js-line-number" data-line-number="5332"></td>
        <td id="LC5332" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> chars.<span class="pl-c1">indexOf</span>(ch) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5333" class="blob-num js-line-number" data-line-number="5333"></td>
        <td id="LC5333" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5334" class="blob-num js-line-number" data-line-number="5334"></td>
        <td id="LC5334" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5335" class="blob-num js-line-number" data-line-number="5335"></td>
        <td id="LC5335" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">was</span>(<span class="pl-smi">chars</span>) {</td>
      </tr>
      <tr>
        <td id="L5336" class="blob-num js-line-number" data-line-number="5336"></td>
        <td id="LC5336" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> chars.<span class="pl-c1">indexOf</span>(lastCh) <span class="pl-k">!=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L5337" class="blob-num js-line-number" data-line-number="5337"></td>
        <td id="LC5337" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5338" class="blob-num js-line-number" data-line-number="5338"></td>
        <td id="LC5338" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5339" class="blob-num js-line-number" data-line-number="5339"></td>
        <td id="LC5339" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">peek</span>() {</td>
      </tr>
      <tr>
        <td id="L5340" class="blob-num js-line-number" data-line-number="5340"></td>
        <td id="LC5340" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> index <span class="pl-k">+</span> <span class="pl-c1">1</span> <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span> <span class="pl-k">?</span> text.<span class="pl-c1">charAt</span>(index <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">:</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5341" class="blob-num js-line-number" data-line-number="5341"></td>
        <td id="LC5341" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5342" class="blob-num js-line-number" data-line-number="5342"></td>
        <td id="LC5342" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">isNumber</span>(<span class="pl-smi">ch</span>) {</td>
      </tr>
      <tr>
        <td id="L5343" class="blob-num js-line-number" data-line-number="5343"></td>
        <td id="LC5343" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> <span class="pl-k">&lt;=</span> ch <span class="pl-k">&amp;&amp;</span> ch <span class="pl-k">&lt;=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>9<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5344" class="blob-num js-line-number" data-line-number="5344"></td>
        <td id="LC5344" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5345" class="blob-num js-line-number" data-line-number="5345"></td>
        <td id="LC5345" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">isWhitespace</span>(<span class="pl-smi">ch</span>) {</td>
      </tr>
      <tr>
        <td id="L5346" class="blob-num js-line-number" data-line-number="5346"></td>
        <td id="LC5346" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\r</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\t</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5347" class="blob-num js-line-number" data-line-number="5347"></td>
        <td id="LC5347" class="blob-code blob-code-inner js-file-line">           ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\v</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\u</span>00A0<span class="pl-pds">&#39;</span></span>; <span class="pl-c">// IE treats non-breaking space as \u00A0</span></td>
      </tr>
      <tr>
        <td id="L5348" class="blob-num js-line-number" data-line-number="5348"></td>
        <td id="LC5348" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5349" class="blob-num js-line-number" data-line-number="5349"></td>
        <td id="LC5349" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">isIdent</span>(<span class="pl-smi">ch</span>) {</td>
      </tr>
      <tr>
        <td id="L5350" class="blob-num js-line-number" data-line-number="5350"></td>
        <td id="LC5350" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>a<span class="pl-pds">&#39;</span></span> <span class="pl-k">&lt;=</span> ch <span class="pl-k">&amp;&amp;</span> ch <span class="pl-k">&lt;=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>z<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5351" class="blob-num js-line-number" data-line-number="5351"></td>
        <td id="LC5351" class="blob-code blob-code-inner js-file-line">           <span class="pl-s"><span class="pl-pds">&#39;</span>A<span class="pl-pds">&#39;</span></span> <span class="pl-k">&lt;=</span> ch <span class="pl-k">&amp;&amp;</span> ch <span class="pl-k">&lt;=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Z<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5352" class="blob-num js-line-number" data-line-number="5352"></td>
        <td id="LC5352" class="blob-code blob-code-inner js-file-line">           <span class="pl-s"><span class="pl-pds">&#39;</span>_<span class="pl-pds">&#39;</span></span> <span class="pl-k">==</span> ch <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5353" class="blob-num js-line-number" data-line-number="5353"></td>
        <td id="LC5353" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5354" class="blob-num js-line-number" data-line-number="5354"></td>
        <td id="LC5354" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">isExpOperator</span>(<span class="pl-smi">ch</span>) {</td>
      </tr>
      <tr>
        <td id="L5355" class="blob-num js-line-number" data-line-number="5355"></td>
        <td id="LC5355" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> isNumber(ch);</td>
      </tr>
      <tr>
        <td id="L5356" class="blob-num js-line-number" data-line-number="5356"></td>
        <td id="LC5356" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5357" class="blob-num js-line-number" data-line-number="5357"></td>
        <td id="LC5357" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5358" class="blob-num js-line-number" data-line-number="5358"></td>
        <td id="LC5358" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">throwError</span>(<span class="pl-smi">error</span>, <span class="pl-smi">start</span>, <span class="pl-smi">end</span>) {</td>
      </tr>
      <tr>
        <td id="L5359" class="blob-num js-line-number" data-line-number="5359"></td>
        <td id="LC5359" class="blob-code blob-code-inner js-file-line">    end <span class="pl-k">=</span> end <span class="pl-k">||</span> index;</td>
      </tr>
      <tr>
        <td id="L5360" class="blob-num js-line-number" data-line-number="5360"></td>
        <td id="LC5360" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Lexer Error: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> error <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> at column<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5361" class="blob-num js-line-number" data-line-number="5361"></td>
        <td id="LC5361" class="blob-code blob-code-inner js-file-line">        (isDefined(start)</td>
      </tr>
      <tr>
        <td id="L5362" class="blob-num js-line-number" data-line-number="5362"></td>
        <td id="LC5362" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&quot;</span>s <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> start <span class="pl-k">+</span>  <span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> index <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> text.<span class="pl-c1">substring</span>(start, end) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L5363" class="blob-num js-line-number" data-line-number="5363"></td>
        <td id="LC5363" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> end) <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5364" class="blob-num js-line-number" data-line-number="5364"></td>
        <td id="LC5364" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&quot;</span> in expression [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> text <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>].<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5365" class="blob-num js-line-number" data-line-number="5365"></td>
        <td id="LC5365" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5366" class="blob-num js-line-number" data-line-number="5366"></td>
        <td id="LC5366" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5367" class="blob-num js-line-number" data-line-number="5367"></td>
        <td id="LC5367" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">readNumber</span>() {</td>
      </tr>
      <tr>
        <td id="L5368" class="blob-num js-line-number" data-line-number="5368"></td>
        <td id="LC5368" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> number <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5369" class="blob-num js-line-number" data-line-number="5369"></td>
        <td id="LC5369" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> start <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L5370" class="blob-num js-line-number" data-line-number="5370"></td>
        <td id="LC5370" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (index <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5371" class="blob-num js-line-number" data-line-number="5371"></td>
        <td id="LC5371" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ch <span class="pl-k">=</span> lowercase(text.<span class="pl-c1">charAt</span>(index));</td>
      </tr>
      <tr>
        <td id="L5372" class="blob-num js-line-number" data-line-number="5372"></td>
        <td id="LC5372" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> isNumber(ch)) {</td>
      </tr>
      <tr>
        <td id="L5373" class="blob-num js-line-number" data-line-number="5373"></td>
        <td id="LC5373" class="blob-code blob-code-inner js-file-line">        number <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5374" class="blob-num js-line-number" data-line-number="5374"></td>
        <td id="LC5374" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5375" class="blob-num js-line-number" data-line-number="5375"></td>
        <td id="LC5375" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> peekCh <span class="pl-k">=</span> peek();</td>
      </tr>
      <tr>
        <td id="L5376" class="blob-num js-line-number" data-line-number="5376"></td>
        <td id="LC5376" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> isExpOperator(peekCh)) {</td>
      </tr>
      <tr>
        <td id="L5377" class="blob-num js-line-number" data-line-number="5377"></td>
        <td id="LC5377" class="blob-code blob-code-inner js-file-line">          number <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5378" class="blob-num js-line-number" data-line-number="5378"></td>
        <td id="LC5378" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (isExpOperator(ch) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5379" class="blob-num js-line-number" data-line-number="5379"></td>
        <td id="LC5379" class="blob-code blob-code-inner js-file-line">            peekCh <span class="pl-k">&amp;&amp;</span> isNumber(peekCh) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5380" class="blob-num js-line-number" data-line-number="5380"></td>
        <td id="LC5380" class="blob-code blob-code-inner js-file-line">            number.<span class="pl-c1">charAt</span>(number.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5381" class="blob-num js-line-number" data-line-number="5381"></td>
        <td id="LC5381" class="blob-code blob-code-inner js-file-line">          number <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5382" class="blob-num js-line-number" data-line-number="5382"></td>
        <td id="LC5382" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> <span class="pl-k">if</span> (isExpOperator(ch) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5383" class="blob-num js-line-number" data-line-number="5383"></td>
        <td id="LC5383" class="blob-code blob-code-inner js-file-line">            (<span class="pl-k">!</span>peekCh <span class="pl-k">||</span> <span class="pl-k">!</span>isNumber(peekCh)) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5384" class="blob-num js-line-number" data-line-number="5384"></td>
        <td id="LC5384" class="blob-code blob-code-inner js-file-line">            number.<span class="pl-c1">charAt</span>(number.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">1</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5385" class="blob-num js-line-number" data-line-number="5385"></td>
        <td id="LC5385" class="blob-code blob-code-inner js-file-line">          throwError(<span class="pl-s"><span class="pl-pds">&#39;</span>Invalid exponent<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5386" class="blob-num js-line-number" data-line-number="5386"></td>
        <td id="LC5386" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5387" class="blob-num js-line-number" data-line-number="5387"></td>
        <td id="LC5387" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5388" class="blob-num js-line-number" data-line-number="5388"></td>
        <td id="LC5388" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5389" class="blob-num js-line-number" data-line-number="5389"></td>
        <td id="LC5389" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5390" class="blob-num js-line-number" data-line-number="5390"></td>
        <td id="LC5390" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5391" class="blob-num js-line-number" data-line-number="5391"></td>
        <td id="LC5391" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5392" class="blob-num js-line-number" data-line-number="5392"></td>
        <td id="LC5392" class="blob-code blob-code-inner js-file-line">    number <span class="pl-k">=</span> <span class="pl-c1">1</span> <span class="pl-k">*</span> number;</td>
      </tr>
      <tr>
        <td id="L5393" class="blob-num js-line-number" data-line-number="5393"></td>
        <td id="LC5393" class="blob-code blob-code-inner js-file-line">    tokens.<span class="pl-c1">push</span>({index<span class="pl-k">:</span>start, text<span class="pl-k">:</span>number, json<span class="pl-k">:</span><span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5394" class="blob-num js-line-number" data-line-number="5394"></td>
        <td id="LC5394" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">fn</span><span class="pl-k">:</span><span class="pl-k">function</span>() {<span class="pl-k">return</span> number;}});</td>
      </tr>
      <tr>
        <td id="L5395" class="blob-num js-line-number" data-line-number="5395"></td>
        <td id="LC5395" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5396" class="blob-num js-line-number" data-line-number="5396"></td>
        <td id="LC5396" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">readIdent</span>() {</td>
      </tr>
      <tr>
        <td id="L5397" class="blob-num js-line-number" data-line-number="5397"></td>
        <td id="LC5397" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> ident <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L5398" class="blob-num js-line-number" data-line-number="5398"></td>
        <td id="LC5398" class="blob-code blob-code-inner js-file-line">        start <span class="pl-k">=</span> index,</td>
      </tr>
      <tr>
        <td id="L5399" class="blob-num js-line-number" data-line-number="5399"></td>
        <td id="LC5399" class="blob-code blob-code-inner js-file-line">        lastDot, peekIndex, methodName;</td>
      </tr>
      <tr>
        <td id="L5400" class="blob-num js-line-number" data-line-number="5400"></td>
        <td id="LC5400" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5401" class="blob-num js-line-number" data-line-number="5401"></td>
        <td id="LC5401" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (index <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5402" class="blob-num js-line-number" data-line-number="5402"></td>
        <td id="LC5402" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ch <span class="pl-k">=</span> text.<span class="pl-c1">charAt</span>(index);</td>
      </tr>
      <tr>
        <td id="L5403" class="blob-num js-line-number" data-line-number="5403"></td>
        <td id="LC5403" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> isIdent(ch) <span class="pl-k">||</span> isNumber(ch)) {</td>
      </tr>
      <tr>
        <td id="L5404" class="blob-num js-line-number" data-line-number="5404"></td>
        <td id="LC5404" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>) lastDot <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L5405" class="blob-num js-line-number" data-line-number="5405"></td>
        <td id="LC5405" class="blob-code blob-code-inner js-file-line">        ident <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5406" class="blob-num js-line-number" data-line-number="5406"></td>
        <td id="LC5406" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5407" class="blob-num js-line-number" data-line-number="5407"></td>
        <td id="LC5407" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5408" class="blob-num js-line-number" data-line-number="5408"></td>
        <td id="LC5408" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5409" class="blob-num js-line-number" data-line-number="5409"></td>
        <td id="LC5409" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5410" class="blob-num js-line-number" data-line-number="5410"></td>
        <td id="LC5410" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5411" class="blob-num js-line-number" data-line-number="5411"></td>
        <td id="LC5411" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5412" class="blob-num js-line-number" data-line-number="5412"></td>
        <td id="LC5412" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">//check if this is not a method invocation and if it is back out to last dot</span></td>
      </tr>
      <tr>
        <td id="L5413" class="blob-num js-line-number" data-line-number="5413"></td>
        <td id="LC5413" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (lastDot) {</td>
      </tr>
      <tr>
        <td id="L5414" class="blob-num js-line-number" data-line-number="5414"></td>
        <td id="LC5414" class="blob-code blob-code-inner js-file-line">      peekIndex <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L5415" class="blob-num js-line-number" data-line-number="5415"></td>
        <td id="LC5415" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">while</span>(peekIndex <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5416" class="blob-num js-line-number" data-line-number="5416"></td>
        <td id="LC5416" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> ch <span class="pl-k">=</span> text.<span class="pl-c1">charAt</span>(peekIndex);</td>
      </tr>
      <tr>
        <td id="L5417" class="blob-num js-line-number" data-line-number="5417"></td>
        <td id="LC5417" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5418" class="blob-num js-line-number" data-line-number="5418"></td>
        <td id="LC5418" class="blob-code blob-code-inner js-file-line">          methodName <span class="pl-k">=</span> ident.<span class="pl-c1">substr</span>(lastDot <span class="pl-k">-</span> start <span class="pl-k">+</span> <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L5419" class="blob-num js-line-number" data-line-number="5419"></td>
        <td id="LC5419" class="blob-code blob-code-inner js-file-line">          ident <span class="pl-k">=</span> ident.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, lastDot <span class="pl-k">-</span> start);</td>
      </tr>
      <tr>
        <td id="L5420" class="blob-num js-line-number" data-line-number="5420"></td>
        <td id="LC5420" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">=</span> peekIndex;</td>
      </tr>
      <tr>
        <td id="L5421" class="blob-num js-line-number" data-line-number="5421"></td>
        <td id="LC5421" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5422" class="blob-num js-line-number" data-line-number="5422"></td>
        <td id="LC5422" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5423" class="blob-num js-line-number" data-line-number="5423"></td>
        <td id="LC5423" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>(isWhitespace(ch)) {</td>
      </tr>
      <tr>
        <td id="L5424" class="blob-num js-line-number" data-line-number="5424"></td>
        <td id="LC5424" class="blob-code blob-code-inner js-file-line">          peekIndex<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5425" class="blob-num js-line-number" data-line-number="5425"></td>
        <td id="LC5425" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5426" class="blob-num js-line-number" data-line-number="5426"></td>
        <td id="LC5426" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L5427" class="blob-num js-line-number" data-line-number="5427"></td>
        <td id="LC5427" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5428" class="blob-num js-line-number" data-line-number="5428"></td>
        <td id="LC5428" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5429" class="blob-num js-line-number" data-line-number="5429"></td>
        <td id="LC5429" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5430" class="blob-num js-line-number" data-line-number="5430"></td>
        <td id="LC5430" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5431" class="blob-num js-line-number" data-line-number="5431"></td>
        <td id="LC5431" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5432" class="blob-num js-line-number" data-line-number="5432"></td>
        <td id="LC5432" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L5433" class="blob-num js-line-number" data-line-number="5433"></td>
        <td id="LC5433" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">:</span>start,</td>
      </tr>
      <tr>
        <td id="L5434" class="blob-num js-line-number" data-line-number="5434"></td>
        <td id="LC5434" class="blob-code blob-code-inner js-file-line">      text<span class="pl-k">:</span>ident</td>
      </tr>
      <tr>
        <td id="L5435" class="blob-num js-line-number" data-line-number="5435"></td>
        <td id="LC5435" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5436" class="blob-num js-line-number" data-line-number="5436"></td>
        <td id="LC5436" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5437" class="blob-num js-line-number" data-line-number="5437"></td>
        <td id="LC5437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-c1">OPERATORS</span>.hasOwnProperty(ident)) {</td>
      </tr>
      <tr>
        <td id="L5438" class="blob-num js-line-number" data-line-number="5438"></td>
        <td id="LC5438" class="blob-code blob-code-inner js-file-line">      token.fn <span class="pl-k">=</span> token.json <span class="pl-k">=</span> <span class="pl-c1">OPERATORS</span>[ident];</td>
      </tr>
      <tr>
        <td id="L5439" class="blob-num js-line-number" data-line-number="5439"></td>
        <td id="LC5439" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5440" class="blob-num js-line-number" data-line-number="5440"></td>
        <td id="LC5440" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> getter <span class="pl-k">=</span> getterFn(ident);</td>
      </tr>
      <tr>
        <td id="L5441" class="blob-num js-line-number" data-line-number="5441"></td>
        <td id="LC5441" class="blob-code blob-code-inner js-file-line">      token.fn <span class="pl-k">=</span> extend(<span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L5442" class="blob-num js-line-number" data-line-number="5442"></td>
        <td id="LC5442" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (getter(self, locals));</td>
      </tr>
      <tr>
        <td id="L5443" class="blob-num js-line-number" data-line-number="5443"></td>
        <td id="LC5443" class="blob-code blob-code-inner js-file-line">      }, {</td>
      </tr>
      <tr>
        <td id="L5444" class="blob-num js-line-number" data-line-number="5444"></td>
        <td id="LC5444" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">assign</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L5445" class="blob-num js-line-number" data-line-number="5445"></td>
        <td id="LC5445" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> setter(self, ident, value);</td>
      </tr>
      <tr>
        <td id="L5446" class="blob-num js-line-number" data-line-number="5446"></td>
        <td id="LC5446" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5447" class="blob-num js-line-number" data-line-number="5447"></td>
        <td id="LC5447" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5448" class="blob-num js-line-number" data-line-number="5448"></td>
        <td id="LC5448" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5449" class="blob-num js-line-number" data-line-number="5449"></td>
        <td id="LC5449" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5450" class="blob-num js-line-number" data-line-number="5450"></td>
        <td id="LC5450" class="blob-code blob-code-inner js-file-line">    tokens.<span class="pl-c1">push</span>(token);</td>
      </tr>
      <tr>
        <td id="L5451" class="blob-num js-line-number" data-line-number="5451"></td>
        <td id="LC5451" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5452" class="blob-num js-line-number" data-line-number="5452"></td>
        <td id="LC5452" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (methodName) {</td>
      </tr>
      <tr>
        <td id="L5453" class="blob-num js-line-number" data-line-number="5453"></td>
        <td id="LC5453" class="blob-code blob-code-inner js-file-line">      tokens.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5454" class="blob-num js-line-number" data-line-number="5454"></td>
        <td id="LC5454" class="blob-code blob-code-inner js-file-line">        index<span class="pl-k">:</span>lastDot,</td>
      </tr>
      <tr>
        <td id="L5455" class="blob-num js-line-number" data-line-number="5455"></td>
        <td id="LC5455" class="blob-code blob-code-inner js-file-line">        text<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L5456" class="blob-num js-line-number" data-line-number="5456"></td>
        <td id="LC5456" class="blob-code blob-code-inner js-file-line">        json<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L5457" class="blob-num js-line-number" data-line-number="5457"></td>
        <td id="LC5457" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5458" class="blob-num js-line-number" data-line-number="5458"></td>
        <td id="LC5458" class="blob-code blob-code-inner js-file-line">      tokens.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5459" class="blob-num js-line-number" data-line-number="5459"></td>
        <td id="LC5459" class="blob-code blob-code-inner js-file-line">        index<span class="pl-k">:</span> lastDot <span class="pl-k">+</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L5460" class="blob-num js-line-number" data-line-number="5460"></td>
        <td id="LC5460" class="blob-code blob-code-inner js-file-line">        text<span class="pl-k">:</span> methodName,</td>
      </tr>
      <tr>
        <td id="L5461" class="blob-num js-line-number" data-line-number="5461"></td>
        <td id="LC5461" class="blob-code blob-code-inner js-file-line">        json<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L5462" class="blob-num js-line-number" data-line-number="5462"></td>
        <td id="LC5462" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5463" class="blob-num js-line-number" data-line-number="5463"></td>
        <td id="LC5463" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5464" class="blob-num js-line-number" data-line-number="5464"></td>
        <td id="LC5464" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5465" class="blob-num js-line-number" data-line-number="5465"></td>
        <td id="LC5465" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5466" class="blob-num js-line-number" data-line-number="5466"></td>
        <td id="LC5466" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">readString</span>(<span class="pl-smi">quote</span>) {</td>
      </tr>
      <tr>
        <td id="L5467" class="blob-num js-line-number" data-line-number="5467"></td>
        <td id="LC5467" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> start <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L5468" class="blob-num js-line-number" data-line-number="5468"></td>
        <td id="LC5468" class="blob-code blob-code-inner js-file-line">    index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5469" class="blob-num js-line-number" data-line-number="5469"></td>
        <td id="LC5469" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> string <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5470" class="blob-num js-line-number" data-line-number="5470"></td>
        <td id="LC5470" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> rawString <span class="pl-k">=</span> quote;</td>
      </tr>
      <tr>
        <td id="L5471" class="blob-num js-line-number" data-line-number="5471"></td>
        <td id="LC5471" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> escape <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5472" class="blob-num js-line-number" data-line-number="5472"></td>
        <td id="LC5472" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> (index <span class="pl-k">&lt;</span> text.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L5473" class="blob-num js-line-number" data-line-number="5473"></td>
        <td id="LC5473" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> ch <span class="pl-k">=</span> text.<span class="pl-c1">charAt</span>(index);</td>
      </tr>
      <tr>
        <td id="L5474" class="blob-num js-line-number" data-line-number="5474"></td>
        <td id="LC5474" class="blob-code blob-code-inner js-file-line">      rawString <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5475" class="blob-num js-line-number" data-line-number="5475"></td>
        <td id="LC5475" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (escape) {</td>
      </tr>
      <tr>
        <td id="L5476" class="blob-num js-line-number" data-line-number="5476"></td>
        <td id="LC5476" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>u<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5477" class="blob-num js-line-number" data-line-number="5477"></td>
        <td id="LC5477" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> hex <span class="pl-k">=</span> text.<span class="pl-c1">substring</span>(index <span class="pl-k">+</span> <span class="pl-c1">1</span>, index <span class="pl-k">+</span> <span class="pl-c1">5</span>);</td>
      </tr>
      <tr>
        <td id="L5478" class="blob-num js-line-number" data-line-number="5478"></td>
        <td id="LC5478" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>hex.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\d</span><span class="pl-c1">a-f</span>]</span><span class="pl-k">{4}</span><span class="pl-pds">/</span>i</span>))</td>
      </tr>
      <tr>
        <td id="L5479" class="blob-num js-line-number" data-line-number="5479"></td>
        <td id="LC5479" class="blob-code blob-code-inner js-file-line">            throwError( <span class="pl-s"><span class="pl-pds">&quot;</span>Invalid unicode escape [<span class="pl-cce">\\</span>u<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> hex <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5480" class="blob-num js-line-number" data-line-number="5480"></td>
        <td id="LC5480" class="blob-code blob-code-inner js-file-line">          index <span class="pl-k">+=</span> <span class="pl-c1">4</span>;</td>
      </tr>
      <tr>
        <td id="L5481" class="blob-num js-line-number" data-line-number="5481"></td>
        <td id="LC5481" class="blob-code blob-code-inner js-file-line">          string <span class="pl-k">+=</span> <span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">parseInt</span>(hex, <span class="pl-c1">16</span>));</td>
      </tr>
      <tr>
        <td id="L5482" class="blob-num js-line-number" data-line-number="5482"></td>
        <td id="LC5482" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5483" class="blob-num js-line-number" data-line-number="5483"></td>
        <td id="LC5483" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> rep <span class="pl-k">=</span> <span class="pl-c1">ESCAPE</span>[ch];</td>
      </tr>
      <tr>
        <td id="L5484" class="blob-num js-line-number" data-line-number="5484"></td>
        <td id="LC5484" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (rep) {</td>
      </tr>
      <tr>
        <td id="L5485" class="blob-num js-line-number" data-line-number="5485"></td>
        <td id="LC5485" class="blob-code blob-code-inner js-file-line">            string <span class="pl-k">+=</span> rep;</td>
      </tr>
      <tr>
        <td id="L5486" class="blob-num js-line-number" data-line-number="5486"></td>
        <td id="LC5486" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5487" class="blob-num js-line-number" data-line-number="5487"></td>
        <td id="LC5487" class="blob-code blob-code-inner js-file-line">            string <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5488" class="blob-num js-line-number" data-line-number="5488"></td>
        <td id="LC5488" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5489" class="blob-num js-line-number" data-line-number="5489"></td>
        <td id="LC5489" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5490" class="blob-num js-line-number" data-line-number="5490"></td>
        <td id="LC5490" class="blob-code blob-code-inner js-file-line">        escape <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5491" class="blob-num js-line-number" data-line-number="5491"></td>
        <td id="LC5491" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (ch <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\\</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5492" class="blob-num js-line-number" data-line-number="5492"></td>
        <td id="LC5492" class="blob-code blob-code-inner js-file-line">        escape <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L5493" class="blob-num js-line-number" data-line-number="5493"></td>
        <td id="LC5493" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (ch <span class="pl-k">==</span> quote) {</td>
      </tr>
      <tr>
        <td id="L5494" class="blob-num js-line-number" data-line-number="5494"></td>
        <td id="LC5494" class="blob-code blob-code-inner js-file-line">        index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5495" class="blob-num js-line-number" data-line-number="5495"></td>
        <td id="LC5495" class="blob-code blob-code-inner js-file-line">        tokens.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L5496" class="blob-num js-line-number" data-line-number="5496"></td>
        <td id="LC5496" class="blob-code blob-code-inner js-file-line">          index<span class="pl-k">:</span>start,</td>
      </tr>
      <tr>
        <td id="L5497" class="blob-num js-line-number" data-line-number="5497"></td>
        <td id="LC5497" class="blob-code blob-code-inner js-file-line">          text<span class="pl-k">:</span>rawString,</td>
      </tr>
      <tr>
        <td id="L5498" class="blob-num js-line-number" data-line-number="5498"></td>
        <td id="LC5498" class="blob-code blob-code-inner js-file-line">          string<span class="pl-k">:</span>string,</td>
      </tr>
      <tr>
        <td id="L5499" class="blob-num js-line-number" data-line-number="5499"></td>
        <td id="LC5499" class="blob-code blob-code-inner js-file-line">          json<span class="pl-k">:</span><span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L5500" class="blob-num js-line-number" data-line-number="5500"></td>
        <td id="LC5500" class="blob-code blob-code-inner js-file-line">          <span class="pl-en">fn</span><span class="pl-k">:</span><span class="pl-k">function</span>() { <span class="pl-k">return</span> string; }</td>
      </tr>
      <tr>
        <td id="L5501" class="blob-num js-line-number" data-line-number="5501"></td>
        <td id="LC5501" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L5502" class="blob-num js-line-number" data-line-number="5502"></td>
        <td id="LC5502" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L5503" class="blob-num js-line-number" data-line-number="5503"></td>
        <td id="LC5503" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5504" class="blob-num js-line-number" data-line-number="5504"></td>
        <td id="LC5504" class="blob-code blob-code-inner js-file-line">        string <span class="pl-k">+=</span> ch;</td>
      </tr>
      <tr>
        <td id="L5505" class="blob-num js-line-number" data-line-number="5505"></td>
        <td id="LC5505" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5506" class="blob-num js-line-number" data-line-number="5506"></td>
        <td id="LC5506" class="blob-code blob-code-inner js-file-line">      index<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L5507" class="blob-num js-line-number" data-line-number="5507"></td>
        <td id="LC5507" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5508" class="blob-num js-line-number" data-line-number="5508"></td>
        <td id="LC5508" class="blob-code blob-code-inner js-file-line">    throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>Unterminated quote<span class="pl-pds">&quot;</span></span>, start);</td>
      </tr>
      <tr>
        <td id="L5509" class="blob-num js-line-number" data-line-number="5509"></td>
        <td id="LC5509" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5510" class="blob-num js-line-number" data-line-number="5510"></td>
        <td id="LC5510" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5511" class="blob-num js-line-number" data-line-number="5511"></td>
        <td id="LC5511" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5512" class="blob-num js-line-number" data-line-number="5512"></td>
        <td id="LC5512" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L5513" class="blob-num js-line-number" data-line-number="5513"></td>
        <td id="LC5513" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5514" class="blob-num js-line-number" data-line-number="5514"></td>
        <td id="LC5514" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">parser</span>(<span class="pl-smi">text</span>, <span class="pl-smi">json</span>, <span class="pl-smi">$filter</span>){</td>
      </tr>
      <tr>
        <td id="L5515" class="blob-num js-line-number" data-line-number="5515"></td>
        <td id="LC5515" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">ZERO</span> <span class="pl-k">=</span> valueFn(<span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L5516" class="blob-num js-line-number" data-line-number="5516"></td>
        <td id="LC5516" class="blob-code blob-code-inner js-file-line">      value,</td>
      </tr>
      <tr>
        <td id="L5517" class="blob-num js-line-number" data-line-number="5517"></td>
        <td id="LC5517" class="blob-code blob-code-inner js-file-line">      tokens <span class="pl-k">=</span> lex(text),</td>
      </tr>
      <tr>
        <td id="L5518" class="blob-num js-line-number" data-line-number="5518"></td>
        <td id="LC5518" class="blob-code blob-code-inner js-file-line">      assignment <span class="pl-k">=</span> _assignment,</td>
      </tr>
      <tr>
        <td id="L5519" class="blob-num js-line-number" data-line-number="5519"></td>
        <td id="LC5519" class="blob-code blob-code-inner js-file-line">      functionCall <span class="pl-k">=</span> _functionCall,</td>
      </tr>
      <tr>
        <td id="L5520" class="blob-num js-line-number" data-line-number="5520"></td>
        <td id="LC5520" class="blob-code blob-code-inner js-file-line">      fieldAccess <span class="pl-k">=</span> _fieldAccess,</td>
      </tr>
      <tr>
        <td id="L5521" class="blob-num js-line-number" data-line-number="5521"></td>
        <td id="LC5521" class="blob-code blob-code-inner js-file-line">      objectIndex <span class="pl-k">=</span> _objectIndex,</td>
      </tr>
      <tr>
        <td id="L5522" class="blob-num js-line-number" data-line-number="5522"></td>
        <td id="LC5522" class="blob-code blob-code-inner js-file-line">      filterChain <span class="pl-k">=</span> _filterChain;</td>
      </tr>
      <tr>
        <td id="L5523" class="blob-num js-line-number" data-line-number="5523"></td>
        <td id="LC5523" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5524" class="blob-num js-line-number" data-line-number="5524"></td>
        <td id="LC5524" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span>(json){</td>
      </tr>
      <tr>
        <td id="L5525" class="blob-num js-line-number" data-line-number="5525"></td>
        <td id="LC5525" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// The extra level of aliasing is here, just in case the lexer misses something, so that</span></td>
      </tr>
      <tr>
        <td id="L5526" class="blob-num js-line-number" data-line-number="5526"></td>
        <td id="LC5526" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// we prevent any accidental execution in JSON.</span></td>
      </tr>
      <tr>
        <td id="L5527" class="blob-num js-line-number" data-line-number="5527"></td>
        <td id="LC5527" class="blob-code blob-code-inner js-file-line">    assignment <span class="pl-k">=</span> logicalOR;</td>
      </tr>
      <tr>
        <td id="L5528" class="blob-num js-line-number" data-line-number="5528"></td>
        <td id="LC5528" class="blob-code blob-code-inner js-file-line">    functionCall <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L5529" class="blob-num js-line-number" data-line-number="5529"></td>
        <td id="LC5529" class="blob-code blob-code-inner js-file-line">      fieldAccess <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L5530" class="blob-num js-line-number" data-line-number="5530"></td>
        <td id="LC5530" class="blob-code blob-code-inner js-file-line">      objectIndex <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L5531" class="blob-num js-line-number" data-line-number="5531"></td>
        <td id="LC5531" class="blob-code blob-code-inner js-file-line">      filterChain <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L5532" class="blob-num js-line-number" data-line-number="5532"></td>
        <td id="LC5532" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span>() { throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>is not valid json<span class="pl-pds">&quot;</span></span>, {text<span class="pl-k">:</span>text, index<span class="pl-k">:</span><span class="pl-c1">0</span>}); };</td>
      </tr>
      <tr>
        <td id="L5533" class="blob-num js-line-number" data-line-number="5533"></td>
        <td id="LC5533" class="blob-code blob-code-inner js-file-line">    value <span class="pl-k">=</span> primary();</td>
      </tr>
      <tr>
        <td id="L5534" class="blob-num js-line-number" data-line-number="5534"></td>
        <td id="LC5534" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5535" class="blob-num js-line-number" data-line-number="5535"></td>
        <td id="LC5535" class="blob-code blob-code-inner js-file-line">    value <span class="pl-k">=</span> statements();</td>
      </tr>
      <tr>
        <td id="L5536" class="blob-num js-line-number" data-line-number="5536"></td>
        <td id="LC5536" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5537" class="blob-num js-line-number" data-line-number="5537"></td>
        <td id="LC5537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (tokens.<span class="pl-c1">length</span> <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5538" class="blob-num js-line-number" data-line-number="5538"></td>
        <td id="LC5538" class="blob-code blob-code-inner js-file-line">    throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>is an unexpected token<span class="pl-pds">&quot;</span></span>, tokens[<span class="pl-c1">0</span>]);</td>
      </tr>
      <tr>
        <td id="L5539" class="blob-num js-line-number" data-line-number="5539"></td>
        <td id="LC5539" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5540" class="blob-num js-line-number" data-line-number="5540"></td>
        <td id="LC5540" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L5541" class="blob-num js-line-number" data-line-number="5541"></td>
        <td id="LC5541" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5542" class="blob-num js-line-number" data-line-number="5542"></td>
        <td id="LC5542" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">///////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L5543" class="blob-num js-line-number" data-line-number="5543"></td>
        <td id="LC5543" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">throwError</span>(<span class="pl-smi">msg</span>, <span class="pl-smi">token</span>) {</td>
      </tr>
      <tr>
        <td id="L5544" class="blob-num js-line-number" data-line-number="5544"></td>
        <td id="LC5544" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Syntax Error: Token &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> token.<span class="pl-c1">text</span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5545" class="blob-num js-line-number" data-line-number="5545"></td>
        <td id="LC5545" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&quot;</span>&#39; <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> msg <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> at column <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5546" class="blob-num js-line-number" data-line-number="5546"></td>
        <td id="LC5546" class="blob-code blob-code-inner js-file-line">      (token.<span class="pl-c1">index</span> <span class="pl-k">+</span> <span class="pl-c1">1</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span> of the expression [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5547" class="blob-num js-line-number" data-line-number="5547"></td>
        <td id="LC5547" class="blob-code blob-code-inner js-file-line">      text <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>] starting at [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> text.<span class="pl-c1">substring</span>(token.<span class="pl-c1">index</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>].<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5548" class="blob-num js-line-number" data-line-number="5548"></td>
        <td id="LC5548" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5549" class="blob-num js-line-number" data-line-number="5549"></td>
        <td id="LC5549" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5550" class="blob-num js-line-number" data-line-number="5550"></td>
        <td id="LC5550" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">peekToken</span>() {</td>
      </tr>
      <tr>
        <td id="L5551" class="blob-num js-line-number" data-line-number="5551"></td>
        <td id="LC5551" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (tokens.<span class="pl-c1">length</span> <span class="pl-k">===</span> <span class="pl-c1">0</span>)</td>
      </tr>
      <tr>
        <td id="L5552" class="blob-num js-line-number" data-line-number="5552"></td>
        <td id="LC5552" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Unexpected end of expression: <span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> text);</td>
      </tr>
      <tr>
        <td id="L5553" class="blob-num js-line-number" data-line-number="5553"></td>
        <td id="LC5553" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> tokens[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5554" class="blob-num js-line-number" data-line-number="5554"></td>
        <td id="LC5554" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5555" class="blob-num js-line-number" data-line-number="5555"></td>
        <td id="LC5555" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5556" class="blob-num js-line-number" data-line-number="5556"></td>
        <td id="LC5556" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">peek</span>(<span class="pl-smi">e1</span>, <span class="pl-smi">e2</span>, <span class="pl-smi">e3</span>, <span class="pl-smi">e4</span>) {</td>
      </tr>
      <tr>
        <td id="L5557" class="blob-num js-line-number" data-line-number="5557"></td>
        <td id="LC5557" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (tokens.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L5558" class="blob-num js-line-number" data-line-number="5558"></td>
        <td id="LC5558" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> token <span class="pl-k">=</span> tokens[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L5559" class="blob-num js-line-number" data-line-number="5559"></td>
        <td id="LC5559" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> t <span class="pl-k">=</span> token.<span class="pl-c1">text</span>;</td>
      </tr>
      <tr>
        <td id="L5560" class="blob-num js-line-number" data-line-number="5560"></td>
        <td id="LC5560" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t<span class="pl-k">==</span>e1 <span class="pl-k">||</span> t<span class="pl-k">==</span>e2 <span class="pl-k">||</span> t<span class="pl-k">==</span>e3 <span class="pl-k">||</span> t<span class="pl-k">==</span>e4 <span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L5561" class="blob-num js-line-number" data-line-number="5561"></td>
        <td id="LC5561" class="blob-code blob-code-inner js-file-line">          (<span class="pl-k">!</span>e1 <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>e2 <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>e3 <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>e4)) {</td>
      </tr>
      <tr>
        <td id="L5562" class="blob-num js-line-number" data-line-number="5562"></td>
        <td id="LC5562" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> token;</td>
      </tr>
      <tr>
        <td id="L5563" class="blob-num js-line-number" data-line-number="5563"></td>
        <td id="LC5563" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5564" class="blob-num js-line-number" data-line-number="5564"></td>
        <td id="LC5564" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5565" class="blob-num js-line-number" data-line-number="5565"></td>
        <td id="LC5565" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5566" class="blob-num js-line-number" data-line-number="5566"></td>
        <td id="LC5566" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5567" class="blob-num js-line-number" data-line-number="5567"></td>
        <td id="LC5567" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5568" class="blob-num js-line-number" data-line-number="5568"></td>
        <td id="LC5568" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">expect</span>(<span class="pl-smi">e1</span>, <span class="pl-smi">e2</span>, <span class="pl-smi">e3</span>, <span class="pl-smi">e4</span>){</td>
      </tr>
      <tr>
        <td id="L5569" class="blob-num js-line-number" data-line-number="5569"></td>
        <td id="LC5569" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token <span class="pl-k">=</span> peek(e1, e2, e3, e4);</td>
      </tr>
      <tr>
        <td id="L5570" class="blob-num js-line-number" data-line-number="5570"></td>
        <td id="LC5570" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (token) {</td>
      </tr>
      <tr>
        <td id="L5571" class="blob-num js-line-number" data-line-number="5571"></td>
        <td id="LC5571" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (json <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>token.json) {</td>
      </tr>
      <tr>
        <td id="L5572" class="blob-num js-line-number" data-line-number="5572"></td>
        <td id="LC5572" class="blob-code blob-code-inner js-file-line">        throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>is not valid json<span class="pl-pds">&quot;</span></span>, token);</td>
      </tr>
      <tr>
        <td id="L5573" class="blob-num js-line-number" data-line-number="5573"></td>
        <td id="LC5573" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5574" class="blob-num js-line-number" data-line-number="5574"></td>
        <td id="LC5574" class="blob-code blob-code-inner js-file-line">      tokens.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L5575" class="blob-num js-line-number" data-line-number="5575"></td>
        <td id="LC5575" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> token;</td>
      </tr>
      <tr>
        <td id="L5576" class="blob-num js-line-number" data-line-number="5576"></td>
        <td id="LC5576" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5577" class="blob-num js-line-number" data-line-number="5577"></td>
        <td id="LC5577" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L5578" class="blob-num js-line-number" data-line-number="5578"></td>
        <td id="LC5578" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5579" class="blob-num js-line-number" data-line-number="5579"></td>
        <td id="LC5579" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5580" class="blob-num js-line-number" data-line-number="5580"></td>
        <td id="LC5580" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">consume</span>(<span class="pl-smi">e1</span>){</td>
      </tr>
      <tr>
        <td id="L5581" class="blob-num js-line-number" data-line-number="5581"></td>
        <td id="LC5581" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>expect(e1)) {</td>
      </tr>
      <tr>
        <td id="L5582" class="blob-num js-line-number" data-line-number="5582"></td>
        <td id="LC5582" class="blob-code blob-code-inner js-file-line">      throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>is unexpected, expecting [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> e1 <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>, peek());</td>
      </tr>
      <tr>
        <td id="L5583" class="blob-num js-line-number" data-line-number="5583"></td>
        <td id="LC5583" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5584" class="blob-num js-line-number" data-line-number="5584"></td>
        <td id="LC5584" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5585" class="blob-num js-line-number" data-line-number="5585"></td>
        <td id="LC5585" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5586" class="blob-num js-line-number" data-line-number="5586"></td>
        <td id="LC5586" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">unaryFn</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">right</span>) {</td>
      </tr>
      <tr>
        <td id="L5587" class="blob-num js-line-number" data-line-number="5587"></td>
        <td id="LC5587" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L5588" class="blob-num js-line-number" data-line-number="5588"></td>
        <td id="LC5588" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> fn(self, locals, right);</td>
      </tr>
      <tr>
        <td id="L5589" class="blob-num js-line-number" data-line-number="5589"></td>
        <td id="LC5589" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5590" class="blob-num js-line-number" data-line-number="5590"></td>
        <td id="LC5590" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5591" class="blob-num js-line-number" data-line-number="5591"></td>
        <td id="LC5591" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5592" class="blob-num js-line-number" data-line-number="5592"></td>
        <td id="LC5592" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">binaryFn</span>(<span class="pl-smi">left</span>, <span class="pl-smi">fn</span>, <span class="pl-smi">right</span>) {</td>
      </tr>
      <tr>
        <td id="L5593" class="blob-num js-line-number" data-line-number="5593"></td>
        <td id="LC5593" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L5594" class="blob-num js-line-number" data-line-number="5594"></td>
        <td id="LC5594" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> fn(self, locals, left, right);</td>
      </tr>
      <tr>
        <td id="L5595" class="blob-num js-line-number" data-line-number="5595"></td>
        <td id="LC5595" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5596" class="blob-num js-line-number" data-line-number="5596"></td>
        <td id="LC5596" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5597" class="blob-num js-line-number" data-line-number="5597"></td>
        <td id="LC5597" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5598" class="blob-num js-line-number" data-line-number="5598"></td>
        <td id="LC5598" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">statements</span>() {</td>
      </tr>
      <tr>
        <td id="L5599" class="blob-num js-line-number" data-line-number="5599"></td>
        <td id="LC5599" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> statements <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5600" class="blob-num js-line-number" data-line-number="5600"></td>
        <td id="LC5600" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L5601" class="blob-num js-line-number" data-line-number="5601"></td>
        <td id="LC5601" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (tokens.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>peek(<span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>;<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>))</td>
      </tr>
      <tr>
        <td id="L5602" class="blob-num js-line-number" data-line-number="5602"></td>
        <td id="LC5602" class="blob-code blob-code-inner js-file-line">        statements.<span class="pl-c1">push</span>(filterChain());</td>
      </tr>
      <tr>
        <td id="L5603" class="blob-num js-line-number" data-line-number="5603"></td>
        <td id="LC5603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>expect(<span class="pl-s"><span class="pl-pds">&#39;</span>;<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5604" class="blob-num js-line-number" data-line-number="5604"></td>
        <td id="LC5604" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// optimize for the common case where there is only one statement.</span></td>
      </tr>
      <tr>
        <td id="L5605" class="blob-num js-line-number" data-line-number="5605"></td>
        <td id="LC5605" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// TODO(size): maybe we should not support multiple statements?</span></td>
      </tr>
      <tr>
        <td id="L5606" class="blob-num js-line-number" data-line-number="5606"></td>
        <td id="LC5606" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> statements.<span class="pl-c1">length</span> <span class="pl-k">==</span> <span class="pl-c1">1</span></td>
      </tr>
      <tr>
        <td id="L5607" class="blob-num js-line-number" data-line-number="5607"></td>
        <td id="LC5607" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> statements[<span class="pl-c1">0</span>]</td>
      </tr>
      <tr>
        <td id="L5608" class="blob-num js-line-number" data-line-number="5608"></td>
        <td id="LC5608" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5609" class="blob-num js-line-number" data-line-number="5609"></td>
        <td id="LC5609" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> value;</td>
      </tr>
      <tr>
        <td id="L5610" class="blob-num js-line-number" data-line-number="5610"></td>
        <td id="LC5610" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> statements.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5611" class="blob-num js-line-number" data-line-number="5611"></td>
        <td id="LC5611" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> statement <span class="pl-k">=</span> statements[i];</td>
      </tr>
      <tr>
        <td id="L5612" class="blob-num js-line-number" data-line-number="5612"></td>
        <td id="LC5612" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (statement)</td>
      </tr>
      <tr>
        <td id="L5613" class="blob-num js-line-number" data-line-number="5613"></td>
        <td id="LC5613" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> statement(self, locals);</td>
      </tr>
      <tr>
        <td id="L5614" class="blob-num js-line-number" data-line-number="5614"></td>
        <td id="LC5614" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L5615" class="blob-num js-line-number" data-line-number="5615"></td>
        <td id="LC5615" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L5616" class="blob-num js-line-number" data-line-number="5616"></td>
        <td id="LC5616" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L5617" class="blob-num js-line-number" data-line-number="5617"></td>
        <td id="LC5617" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5618" class="blob-num js-line-number" data-line-number="5618"></td>
        <td id="LC5618" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5619" class="blob-num js-line-number" data-line-number="5619"></td>
        <td id="LC5619" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5620" class="blob-num js-line-number" data-line-number="5620"></td>
        <td id="LC5620" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5621" class="blob-num js-line-number" data-line-number="5621"></td>
        <td id="LC5621" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">_filterChain</span>() {</td>
      </tr>
      <tr>
        <td id="L5622" class="blob-num js-line-number" data-line-number="5622"></td>
        <td id="LC5622" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> expression();</td>
      </tr>
      <tr>
        <td id="L5623" class="blob-num js-line-number" data-line-number="5623"></td>
        <td id="LC5623" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5624" class="blob-num js-line-number" data-line-number="5624"></td>
        <td id="LC5624" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L5625" class="blob-num js-line-number" data-line-number="5625"></td>
        <td id="LC5625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>|<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5626" class="blob-num js-line-number" data-line-number="5626"></td>
        <td id="LC5626" class="blob-code blob-code-inner js-file-line">        left <span class="pl-k">=</span> binaryFn(left, token.fn, filter());</td>
      </tr>
      <tr>
        <td id="L5627" class="blob-num js-line-number" data-line-number="5627"></td>
        <td id="LC5627" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5628" class="blob-num js-line-number" data-line-number="5628"></td>
        <td id="LC5628" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5629" class="blob-num js-line-number" data-line-number="5629"></td>
        <td id="LC5629" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5630" class="blob-num js-line-number" data-line-number="5630"></td>
        <td id="LC5630" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5631" class="blob-num js-line-number" data-line-number="5631"></td>
        <td id="LC5631" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5632" class="blob-num js-line-number" data-line-number="5632"></td>
        <td id="LC5632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5633" class="blob-num js-line-number" data-line-number="5633"></td>
        <td id="LC5633" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">filter</span>() {</td>
      </tr>
      <tr>
        <td id="L5634" class="blob-num js-line-number" data-line-number="5634"></td>
        <td id="LC5634" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token <span class="pl-k">=</span> expect();</td>
      </tr>
      <tr>
        <td id="L5635" class="blob-num js-line-number" data-line-number="5635"></td>
        <td id="LC5635" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> fn <span class="pl-k">=</span> $filter(token.<span class="pl-c1">text</span>);</td>
      </tr>
      <tr>
        <td id="L5636" class="blob-num js-line-number" data-line-number="5636"></td>
        <td id="LC5636" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> argsFn <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5637" class="blob-num js-line-number" data-line-number="5637"></td>
        <td id="LC5637" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L5638" class="blob-num js-line-number" data-line-number="5638"></td>
        <td id="LC5638" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5639" class="blob-num js-line-number" data-line-number="5639"></td>
        <td id="LC5639" class="blob-code blob-code-inner js-file-line">        argsFn.<span class="pl-c1">push</span>(expression());</td>
      </tr>
      <tr>
        <td id="L5640" class="blob-num js-line-number" data-line-number="5640"></td>
        <td id="LC5640" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5641" class="blob-num js-line-number" data-line-number="5641"></td>
        <td id="LC5641" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">fnInvoke</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>, <span class="pl-smi">input</span>){</td>
      </tr>
      <tr>
        <td id="L5642" class="blob-num js-line-number" data-line-number="5642"></td>
        <td id="LC5642" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> args <span class="pl-k">=</span> [input];</td>
      </tr>
      <tr>
        <td id="L5643" class="blob-num js-line-number" data-line-number="5643"></td>
        <td id="LC5643" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> argsFn.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5644" class="blob-num js-line-number" data-line-number="5644"></td>
        <td id="LC5644" class="blob-code blob-code-inner js-file-line">            args.<span class="pl-c1">push</span>(argsFn[i](self, locals));</td>
      </tr>
      <tr>
        <td id="L5645" class="blob-num js-line-number" data-line-number="5645"></td>
        <td id="LC5645" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5646" class="blob-num js-line-number" data-line-number="5646"></td>
        <td id="LC5646" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> fn.<span class="pl-c1">apply</span>(self, args);</td>
      </tr>
      <tr>
        <td id="L5647" class="blob-num js-line-number" data-line-number="5647"></td>
        <td id="LC5647" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5648" class="blob-num js-line-number" data-line-number="5648"></td>
        <td id="LC5648" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L5649" class="blob-num js-line-number" data-line-number="5649"></td>
        <td id="LC5649" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> fnInvoke;</td>
      </tr>
      <tr>
        <td id="L5650" class="blob-num js-line-number" data-line-number="5650"></td>
        <td id="LC5650" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L5651" class="blob-num js-line-number" data-line-number="5651"></td>
        <td id="LC5651" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5652" class="blob-num js-line-number" data-line-number="5652"></td>
        <td id="LC5652" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5653" class="blob-num js-line-number" data-line-number="5653"></td>
        <td id="LC5653" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5654" class="blob-num js-line-number" data-line-number="5654"></td>
        <td id="LC5654" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5655" class="blob-num js-line-number" data-line-number="5655"></td>
        <td id="LC5655" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">expression</span>() {</td>
      </tr>
      <tr>
        <td id="L5656" class="blob-num js-line-number" data-line-number="5656"></td>
        <td id="LC5656" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> assignment();</td>
      </tr>
      <tr>
        <td id="L5657" class="blob-num js-line-number" data-line-number="5657"></td>
        <td id="LC5657" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5658" class="blob-num js-line-number" data-line-number="5658"></td>
        <td id="LC5658" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5659" class="blob-num js-line-number" data-line-number="5659"></td>
        <td id="LC5659" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">_assignment</span>() {</td>
      </tr>
      <tr>
        <td id="L5660" class="blob-num js-line-number" data-line-number="5660"></td>
        <td id="LC5660" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> logicalOR();</td>
      </tr>
      <tr>
        <td id="L5661" class="blob-num js-line-number" data-line-number="5661"></td>
        <td id="LC5661" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> right;</td>
      </tr>
      <tr>
        <td id="L5662" class="blob-num js-line-number" data-line-number="5662"></td>
        <td id="LC5662" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5663" class="blob-num js-line-number" data-line-number="5663"></td>
        <td id="LC5663" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5664" class="blob-num js-line-number" data-line-number="5664"></td>
        <td id="LC5664" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>left.assign) {</td>
      </tr>
      <tr>
        <td id="L5665" class="blob-num js-line-number" data-line-number="5665"></td>
        <td id="LC5665" class="blob-code blob-code-inner js-file-line">        throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>implies assignment but [<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5666" class="blob-num js-line-number" data-line-number="5666"></td>
        <td id="LC5666" class="blob-code blob-code-inner js-file-line">          text.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>, token.<span class="pl-c1">index</span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>] can not be assigned to<span class="pl-pds">&quot;</span></span>, token);</td>
      </tr>
      <tr>
        <td id="L5667" class="blob-num js-line-number" data-line-number="5667"></td>
        <td id="LC5667" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5668" class="blob-num js-line-number" data-line-number="5668"></td>
        <td id="LC5668" class="blob-code blob-code-inner js-file-line">      right <span class="pl-k">=</span> logicalOR();</td>
      </tr>
      <tr>
        <td id="L5669" class="blob-num js-line-number" data-line-number="5669"></td>
        <td id="LC5669" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5670" class="blob-num js-line-number" data-line-number="5670"></td>
        <td id="LC5670" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> left.assign(self, right(self, locals), locals);</td>
      </tr>
      <tr>
        <td id="L5671" class="blob-num js-line-number" data-line-number="5671"></td>
        <td id="LC5671" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L5672" class="blob-num js-line-number" data-line-number="5672"></td>
        <td id="LC5672" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5673" class="blob-num js-line-number" data-line-number="5673"></td>
        <td id="LC5673" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5674" class="blob-num js-line-number" data-line-number="5674"></td>
        <td id="LC5674" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5675" class="blob-num js-line-number" data-line-number="5675"></td>
        <td id="LC5675" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5676" class="blob-num js-line-number" data-line-number="5676"></td>
        <td id="LC5676" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5677" class="blob-num js-line-number" data-line-number="5677"></td>
        <td id="LC5677" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">logicalOR</span>() {</td>
      </tr>
      <tr>
        <td id="L5678" class="blob-num js-line-number" data-line-number="5678"></td>
        <td id="LC5678" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> logicalAND();</td>
      </tr>
      <tr>
        <td id="L5679" class="blob-num js-line-number" data-line-number="5679"></td>
        <td id="LC5679" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5680" class="blob-num js-line-number" data-line-number="5680"></td>
        <td id="LC5680" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(<span class="pl-c1">true</span>) {</td>
      </tr>
      <tr>
        <td id="L5681" class="blob-num js-line-number" data-line-number="5681"></td>
        <td id="LC5681" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>||<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5682" class="blob-num js-line-number" data-line-number="5682"></td>
        <td id="LC5682" class="blob-code blob-code-inner js-file-line">        left <span class="pl-k">=</span> binaryFn(left, token.fn, logicalAND());</td>
      </tr>
      <tr>
        <td id="L5683" class="blob-num js-line-number" data-line-number="5683"></td>
        <td id="LC5683" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5684" class="blob-num js-line-number" data-line-number="5684"></td>
        <td id="LC5684" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5685" class="blob-num js-line-number" data-line-number="5685"></td>
        <td id="LC5685" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5686" class="blob-num js-line-number" data-line-number="5686"></td>
        <td id="LC5686" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5687" class="blob-num js-line-number" data-line-number="5687"></td>
        <td id="LC5687" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5688" class="blob-num js-line-number" data-line-number="5688"></td>
        <td id="LC5688" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5689" class="blob-num js-line-number" data-line-number="5689"></td>
        <td id="LC5689" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">logicalAND</span>() {</td>
      </tr>
      <tr>
        <td id="L5690" class="blob-num js-line-number" data-line-number="5690"></td>
        <td id="LC5690" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> equality();</td>
      </tr>
      <tr>
        <td id="L5691" class="blob-num js-line-number" data-line-number="5691"></td>
        <td id="LC5691" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5692" class="blob-num js-line-number" data-line-number="5692"></td>
        <td id="LC5692" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>&amp;&amp;<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5693" class="blob-num js-line-number" data-line-number="5693"></td>
        <td id="LC5693" class="blob-code blob-code-inner js-file-line">      left <span class="pl-k">=</span> binaryFn(left, token.fn, logicalAND());</td>
      </tr>
      <tr>
        <td id="L5694" class="blob-num js-line-number" data-line-number="5694"></td>
        <td id="LC5694" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5695" class="blob-num js-line-number" data-line-number="5695"></td>
        <td id="LC5695" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5696" class="blob-num js-line-number" data-line-number="5696"></td>
        <td id="LC5696" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5697" class="blob-num js-line-number" data-line-number="5697"></td>
        <td id="LC5697" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5698" class="blob-num js-line-number" data-line-number="5698"></td>
        <td id="LC5698" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">equality</span>() {</td>
      </tr>
      <tr>
        <td id="L5699" class="blob-num js-line-number" data-line-number="5699"></td>
        <td id="LC5699" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> relational();</td>
      </tr>
      <tr>
        <td id="L5700" class="blob-num js-line-number" data-line-number="5700"></td>
        <td id="LC5700" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5701" class="blob-num js-line-number" data-line-number="5701"></td>
        <td id="LC5701" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>==<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>!=<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5702" class="blob-num js-line-number" data-line-number="5702"></td>
        <td id="LC5702" class="blob-code blob-code-inner js-file-line">      left <span class="pl-k">=</span> binaryFn(left, token.fn, equality());</td>
      </tr>
      <tr>
        <td id="L5703" class="blob-num js-line-number" data-line-number="5703"></td>
        <td id="LC5703" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5704" class="blob-num js-line-number" data-line-number="5704"></td>
        <td id="LC5704" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5705" class="blob-num js-line-number" data-line-number="5705"></td>
        <td id="LC5705" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5706" class="blob-num js-line-number" data-line-number="5706"></td>
        <td id="LC5706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5707" class="blob-num js-line-number" data-line-number="5707"></td>
        <td id="LC5707" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">relational</span>() {</td>
      </tr>
      <tr>
        <td id="L5708" class="blob-num js-line-number" data-line-number="5708"></td>
        <td id="LC5708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> additive();</td>
      </tr>
      <tr>
        <td id="L5709" class="blob-num js-line-number" data-line-number="5709"></td>
        <td id="LC5709" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5710" class="blob-num js-line-number" data-line-number="5710"></td>
        <td id="LC5710" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&gt;<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&lt;=<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>&gt;=<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5711" class="blob-num js-line-number" data-line-number="5711"></td>
        <td id="LC5711" class="blob-code blob-code-inner js-file-line">      left <span class="pl-k">=</span> binaryFn(left, token.fn, relational());</td>
      </tr>
      <tr>
        <td id="L5712" class="blob-num js-line-number" data-line-number="5712"></td>
        <td id="LC5712" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5713" class="blob-num js-line-number" data-line-number="5713"></td>
        <td id="LC5713" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5714" class="blob-num js-line-number" data-line-number="5714"></td>
        <td id="LC5714" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5715" class="blob-num js-line-number" data-line-number="5715"></td>
        <td id="LC5715" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5716" class="blob-num js-line-number" data-line-number="5716"></td>
        <td id="LC5716" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">additive</span>() {</td>
      </tr>
      <tr>
        <td id="L5717" class="blob-num js-line-number" data-line-number="5717"></td>
        <td id="LC5717" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> multiplicative();</td>
      </tr>
      <tr>
        <td id="L5718" class="blob-num js-line-number" data-line-number="5718"></td>
        <td id="LC5718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5719" class="blob-num js-line-number" data-line-number="5719"></td>
        <td id="LC5719" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5720" class="blob-num js-line-number" data-line-number="5720"></td>
        <td id="LC5720" class="blob-code blob-code-inner js-file-line">      left <span class="pl-k">=</span> binaryFn(left, token.fn, multiplicative());</td>
      </tr>
      <tr>
        <td id="L5721" class="blob-num js-line-number" data-line-number="5721"></td>
        <td id="LC5721" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5722" class="blob-num js-line-number" data-line-number="5722"></td>
        <td id="LC5722" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5723" class="blob-num js-line-number" data-line-number="5723"></td>
        <td id="LC5723" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5724" class="blob-num js-line-number" data-line-number="5724"></td>
        <td id="LC5724" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5725" class="blob-num js-line-number" data-line-number="5725"></td>
        <td id="LC5725" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">multiplicative</span>() {</td>
      </tr>
      <tr>
        <td id="L5726" class="blob-num js-line-number" data-line-number="5726"></td>
        <td id="LC5726" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> left <span class="pl-k">=</span> unary();</td>
      </tr>
      <tr>
        <td id="L5727" class="blob-num js-line-number" data-line-number="5727"></td>
        <td id="LC5727" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5728" class="blob-num js-line-number" data-line-number="5728"></td>
        <td id="LC5728" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>*<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>%<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5729" class="blob-num js-line-number" data-line-number="5729"></td>
        <td id="LC5729" class="blob-code blob-code-inner js-file-line">      left <span class="pl-k">=</span> binaryFn(left, token.fn, unary());</td>
      </tr>
      <tr>
        <td id="L5730" class="blob-num js-line-number" data-line-number="5730"></td>
        <td id="LC5730" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5731" class="blob-num js-line-number" data-line-number="5731"></td>
        <td id="LC5731" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> left;</td>
      </tr>
      <tr>
        <td id="L5732" class="blob-num js-line-number" data-line-number="5732"></td>
        <td id="LC5732" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5733" class="blob-num js-line-number" data-line-number="5733"></td>
        <td id="LC5733" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5734" class="blob-num js-line-number" data-line-number="5734"></td>
        <td id="LC5734" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">unary</span>() {</td>
      </tr>
      <tr>
        <td id="L5735" class="blob-num js-line-number" data-line-number="5735"></td>
        <td id="LC5735" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> token;</td>
      </tr>
      <tr>
        <td id="L5736" class="blob-num js-line-number" data-line-number="5736"></td>
        <td id="LC5736" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5737" class="blob-num js-line-number" data-line-number="5737"></td>
        <td id="LC5737" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> primary();</td>
      </tr>
      <tr>
        <td id="L5738" class="blob-num js-line-number" data-line-number="5738"></td>
        <td id="LC5738" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5739" class="blob-num js-line-number" data-line-number="5739"></td>
        <td id="LC5739" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> binaryFn(<span class="pl-c1">ZERO</span>, token.fn, unary());</td>
      </tr>
      <tr>
        <td id="L5740" class="blob-num js-line-number" data-line-number="5740"></td>
        <td id="LC5740" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> ((token <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5741" class="blob-num js-line-number" data-line-number="5741"></td>
        <td id="LC5741" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> unaryFn(token.fn, unary());</td>
      </tr>
      <tr>
        <td id="L5742" class="blob-num js-line-number" data-line-number="5742"></td>
        <td id="LC5742" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5743" class="blob-num js-line-number" data-line-number="5743"></td>
        <td id="LC5743" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> primary();</td>
      </tr>
      <tr>
        <td id="L5744" class="blob-num js-line-number" data-line-number="5744"></td>
        <td id="LC5744" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5745" class="blob-num js-line-number" data-line-number="5745"></td>
        <td id="LC5745" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5746" class="blob-num js-line-number" data-line-number="5746"></td>
        <td id="LC5746" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5747" class="blob-num js-line-number" data-line-number="5747"></td>
        <td id="LC5747" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5748" class="blob-num js-line-number" data-line-number="5748"></td>
        <td id="LC5748" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">primary</span>() {</td>
      </tr>
      <tr>
        <td id="L5749" class="blob-num js-line-number" data-line-number="5749"></td>
        <td id="LC5749" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> primary;</td>
      </tr>
      <tr>
        <td id="L5750" class="blob-num js-line-number" data-line-number="5750"></td>
        <td id="LC5750" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5751" class="blob-num js-line-number" data-line-number="5751"></td>
        <td id="LC5751" class="blob-code blob-code-inner js-file-line">      primary <span class="pl-k">=</span> filterChain();</td>
      </tr>
      <tr>
        <td id="L5752" class="blob-num js-line-number" data-line-number="5752"></td>
        <td id="LC5752" class="blob-code blob-code-inner js-file-line">      consume(<span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5753" class="blob-num js-line-number" data-line-number="5753"></td>
        <td id="LC5753" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5754" class="blob-num js-line-number" data-line-number="5754"></td>
        <td id="LC5754" class="blob-code blob-code-inner js-file-line">      primary <span class="pl-k">=</span> arrayDeclaration();</td>
      </tr>
      <tr>
        <td id="L5755" class="blob-num js-line-number" data-line-number="5755"></td>
        <td id="LC5755" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> <span class="pl-k">if</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>{<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L5756" class="blob-num js-line-number" data-line-number="5756"></td>
        <td id="LC5756" class="blob-code blob-code-inner js-file-line">      primary <span class="pl-k">=</span> object();</td>
      </tr>
      <tr>
        <td id="L5757" class="blob-num js-line-number" data-line-number="5757"></td>
        <td id="LC5757" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5758" class="blob-num js-line-number" data-line-number="5758"></td>
        <td id="LC5758" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> token <span class="pl-k">=</span> expect();</td>
      </tr>
      <tr>
        <td id="L5759" class="blob-num js-line-number" data-line-number="5759"></td>
        <td id="LC5759" class="blob-code blob-code-inner js-file-line">      primary <span class="pl-k">=</span> token.fn;</td>
      </tr>
      <tr>
        <td id="L5760" class="blob-num js-line-number" data-line-number="5760"></td>
        <td id="LC5760" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>primary) {</td>
      </tr>
      <tr>
        <td id="L5761" class="blob-num js-line-number" data-line-number="5761"></td>
        <td id="LC5761" class="blob-code blob-code-inner js-file-line">        throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>not a primary expression<span class="pl-pds">&quot;</span></span>, token);</td>
      </tr>
      <tr>
        <td id="L5762" class="blob-num js-line-number" data-line-number="5762"></td>
        <td id="LC5762" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5763" class="blob-num js-line-number" data-line-number="5763"></td>
        <td id="LC5763" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5764" class="blob-num js-line-number" data-line-number="5764"></td>
        <td id="LC5764" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5765" class="blob-num js-line-number" data-line-number="5765"></td>
        <td id="LC5765" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> next, context;</td>
      </tr>
      <tr>
        <td id="L5766" class="blob-num js-line-number" data-line-number="5766"></td>
        <td id="LC5766" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span> ((next <span class="pl-k">=</span> expect(<span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>))) {</td>
      </tr>
      <tr>
        <td id="L5767" class="blob-num js-line-number" data-line-number="5767"></td>
        <td id="LC5767" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (next.<span class="pl-c1">text</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5768" class="blob-num js-line-number" data-line-number="5768"></td>
        <td id="LC5768" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">primary</span> <span class="pl-k">=</span> <span class="pl-k">function</span><span class="pl-en">Call</span>(<span class="pl-smi">primary</span>, <span class="pl-smi">context</span>);</td>
      </tr>
      <tr>
        <td id="L5769" class="blob-num js-line-number" data-line-number="5769"></td>
        <td id="LC5769" class="blob-code blob-code-inner js-file-line">        context <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L5770" class="blob-num js-line-number" data-line-number="5770"></td>
        <td id="LC5770" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (next.<span class="pl-c1">text</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5771" class="blob-num js-line-number" data-line-number="5771"></td>
        <td id="LC5771" class="blob-code blob-code-inner js-file-line">        context <span class="pl-k">=</span> primary;</td>
      </tr>
      <tr>
        <td id="L5772" class="blob-num js-line-number" data-line-number="5772"></td>
        <td id="LC5772" class="blob-code blob-code-inner js-file-line">        primary <span class="pl-k">=</span> objectIndex(primary);</td>
      </tr>
      <tr>
        <td id="L5773" class="blob-num js-line-number" data-line-number="5773"></td>
        <td id="LC5773" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (next.<span class="pl-c1">text</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5774" class="blob-num js-line-number" data-line-number="5774"></td>
        <td id="LC5774" class="blob-code blob-code-inner js-file-line">        context <span class="pl-k">=</span> primary;</td>
      </tr>
      <tr>
        <td id="L5775" class="blob-num js-line-number" data-line-number="5775"></td>
        <td id="LC5775" class="blob-code blob-code-inner js-file-line">        primary <span class="pl-k">=</span> fieldAccess(primary);</td>
      </tr>
      <tr>
        <td id="L5776" class="blob-num js-line-number" data-line-number="5776"></td>
        <td id="LC5776" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L5777" class="blob-num js-line-number" data-line-number="5777"></td>
        <td id="LC5777" class="blob-code blob-code-inner js-file-line">        throwError(<span class="pl-s"><span class="pl-pds">&quot;</span>IMPOSSIBLE<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5778" class="blob-num js-line-number" data-line-number="5778"></td>
        <td id="LC5778" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5779" class="blob-num js-line-number" data-line-number="5779"></td>
        <td id="LC5779" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5780" class="blob-num js-line-number" data-line-number="5780"></td>
        <td id="LC5780" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> primary;</td>
      </tr>
      <tr>
        <td id="L5781" class="blob-num js-line-number" data-line-number="5781"></td>
        <td id="LC5781" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5782" class="blob-num js-line-number" data-line-number="5782"></td>
        <td id="LC5782" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5783" class="blob-num js-line-number" data-line-number="5783"></td>
        <td id="LC5783" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">_fieldAccess</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L5784" class="blob-num js-line-number" data-line-number="5784"></td>
        <td id="LC5784" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> field <span class="pl-k">=</span> expect().<span class="pl-c1">text</span>;</td>
      </tr>
      <tr>
        <td id="L5785" class="blob-num js-line-number" data-line-number="5785"></td>
        <td id="LC5785" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> getter <span class="pl-k">=</span> getterFn(field);</td>
      </tr>
      <tr>
        <td id="L5786" class="blob-num js-line-number" data-line-number="5786"></td>
        <td id="LC5786" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> extend(</td>
      </tr>
      <tr>
        <td id="L5787" class="blob-num js-line-number" data-line-number="5787"></td>
        <td id="LC5787" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L5788" class="blob-num js-line-number" data-line-number="5788"></td>
        <td id="LC5788" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> getter(object(self, locals), locals);</td>
      </tr>
      <tr>
        <td id="L5789" class="blob-num js-line-number" data-line-number="5789"></td>
        <td id="LC5789" class="blob-code blob-code-inner js-file-line">        },</td>
      </tr>
      <tr>
        <td id="L5790" class="blob-num js-line-number" data-line-number="5790"></td>
        <td id="LC5790" class="blob-code blob-code-inner js-file-line">        {</td>
      </tr>
      <tr>
        <td id="L5791" class="blob-num js-line-number" data-line-number="5791"></td>
        <td id="LC5791" class="blob-code blob-code-inner js-file-line">          <span class="pl-en">assign</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">value</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L5792" class="blob-num js-line-number" data-line-number="5792"></td>
        <td id="LC5792" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> setter(object(self, locals), field, value);</td>
      </tr>
      <tr>
        <td id="L5793" class="blob-num js-line-number" data-line-number="5793"></td>
        <td id="LC5793" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5794" class="blob-num js-line-number" data-line-number="5794"></td>
        <td id="LC5794" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5795" class="blob-num js-line-number" data-line-number="5795"></td>
        <td id="LC5795" class="blob-code blob-code-inner js-file-line">    );</td>
      </tr>
      <tr>
        <td id="L5796" class="blob-num js-line-number" data-line-number="5796"></td>
        <td id="LC5796" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5797" class="blob-num js-line-number" data-line-number="5797"></td>
        <td id="LC5797" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5798" class="blob-num js-line-number" data-line-number="5798"></td>
        <td id="LC5798" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">_objectIndex</span>(<span class="pl-smi">obj</span>) {</td>
      </tr>
      <tr>
        <td id="L5799" class="blob-num js-line-number" data-line-number="5799"></td>
        <td id="LC5799" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> indexFn <span class="pl-k">=</span> expression();</td>
      </tr>
      <tr>
        <td id="L5800" class="blob-num js-line-number" data-line-number="5800"></td>
        <td id="LC5800" class="blob-code blob-code-inner js-file-line">    consume(<span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5801" class="blob-num js-line-number" data-line-number="5801"></td>
        <td id="LC5801" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> extend(</td>
      </tr>
      <tr>
        <td id="L5802" class="blob-num js-line-number" data-line-number="5802"></td>
        <td id="LC5802" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5803" class="blob-num js-line-number" data-line-number="5803"></td>
        <td id="LC5803" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> o <span class="pl-k">=</span> obj(self, locals),</td>
      </tr>
      <tr>
        <td id="L5804" class="blob-num js-line-number" data-line-number="5804"></td>
        <td id="LC5804" class="blob-code blob-code-inner js-file-line">            i <span class="pl-k">=</span> indexFn(self, locals),</td>
      </tr>
      <tr>
        <td id="L5805" class="blob-num js-line-number" data-line-number="5805"></td>
        <td id="LC5805" class="blob-code blob-code-inner js-file-line">            v, p;</td>
      </tr>
      <tr>
        <td id="L5806" class="blob-num js-line-number" data-line-number="5806"></td>
        <td id="LC5806" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5807" class="blob-num js-line-number" data-line-number="5807"></td>
        <td id="LC5807" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>o) <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L5808" class="blob-num js-line-number" data-line-number="5808"></td>
        <td id="LC5808" class="blob-code blob-code-inner js-file-line">        v <span class="pl-k">=</span> o[i];</td>
      </tr>
      <tr>
        <td id="L5809" class="blob-num js-line-number" data-line-number="5809"></td>
        <td id="LC5809" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (v <span class="pl-k">&amp;&amp;</span> v.then) {</td>
      </tr>
      <tr>
        <td id="L5810" class="blob-num js-line-number" data-line-number="5810"></td>
        <td id="LC5810" class="blob-code blob-code-inner js-file-line">          p <span class="pl-k">=</span> v;</td>
      </tr>
      <tr>
        <td id="L5811" class="blob-num js-line-number" data-line-number="5811"></td>
        <td id="LC5811" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$$v<span class="pl-pds">&#39;</span></span> <span class="pl-k">in</span> v)) {</td>
      </tr>
      <tr>
        <td id="L5812" class="blob-num js-line-number" data-line-number="5812"></td>
        <td id="LC5812" class="blob-code blob-code-inner js-file-line">            p.$$v <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L5813" class="blob-num js-line-number" data-line-number="5813"></td>
        <td id="LC5813" class="blob-code blob-code-inner js-file-line">            p.then(<span class="pl-k">function</span>(<span class="pl-smi">val</span>) { p.$$v <span class="pl-k">=</span> val; });</td>
      </tr>
      <tr>
        <td id="L5814" class="blob-num js-line-number" data-line-number="5814"></td>
        <td id="LC5814" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L5815" class="blob-num js-line-number" data-line-number="5815"></td>
        <td id="LC5815" class="blob-code blob-code-inner js-file-line">          v <span class="pl-k">=</span> v.$$v;</td>
      </tr>
      <tr>
        <td id="L5816" class="blob-num js-line-number" data-line-number="5816"></td>
        <td id="LC5816" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5817" class="blob-num js-line-number" data-line-number="5817"></td>
        <td id="LC5817" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> v;</td>
      </tr>
      <tr>
        <td id="L5818" class="blob-num js-line-number" data-line-number="5818"></td>
        <td id="LC5818" class="blob-code blob-code-inner js-file-line">      }, {</td>
      </tr>
      <tr>
        <td id="L5819" class="blob-num js-line-number" data-line-number="5819"></td>
        <td id="LC5819" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">assign</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">value</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5820" class="blob-num js-line-number" data-line-number="5820"></td>
        <td id="LC5820" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> obj(self, locals)[indexFn(self, locals)] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L5821" class="blob-num js-line-number" data-line-number="5821"></td>
        <td id="LC5821" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L5822" class="blob-num js-line-number" data-line-number="5822"></td>
        <td id="LC5822" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L5823" class="blob-num js-line-number" data-line-number="5823"></td>
        <td id="LC5823" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5824" class="blob-num js-line-number" data-line-number="5824"></td>
        <td id="LC5824" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5825" class="blob-num js-line-number" data-line-number="5825"></td>
        <td id="LC5825" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">_functionCall</span>(<span class="pl-smi">fn</span>, <span class="pl-smi">contextGetter</span>) {</td>
      </tr>
      <tr>
        <td id="L5826" class="blob-num js-line-number" data-line-number="5826"></td>
        <td id="LC5826" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> argsFn <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5827" class="blob-num js-line-number" data-line-number="5827"></td>
        <td id="LC5827" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (peekToken().<span class="pl-c1">text</span> <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5828" class="blob-num js-line-number" data-line-number="5828"></td>
        <td id="LC5828" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L5829" class="blob-num js-line-number" data-line-number="5829"></td>
        <td id="LC5829" class="blob-code blob-code-inner js-file-line">        argsFn.<span class="pl-c1">push</span>(expression());</td>
      </tr>
      <tr>
        <td id="L5830" class="blob-num js-line-number" data-line-number="5830"></td>
        <td id="LC5830" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L5831" class="blob-num js-line-number" data-line-number="5831"></td>
        <td id="LC5831" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5832" class="blob-num js-line-number" data-line-number="5832"></td>
        <td id="LC5832" class="blob-code blob-code-inner js-file-line">    consume(<span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5833" class="blob-num js-line-number" data-line-number="5833"></td>
        <td id="LC5833" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5834" class="blob-num js-line-number" data-line-number="5834"></td>
        <td id="LC5834" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> args <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L5835" class="blob-num js-line-number" data-line-number="5835"></td>
        <td id="LC5835" class="blob-code blob-code-inner js-file-line">          context <span class="pl-k">=</span> contextGetter <span class="pl-k">?</span> contextGetter(self, locals) <span class="pl-k">:</span> self;</td>
      </tr>
      <tr>
        <td id="L5836" class="blob-num js-line-number" data-line-number="5836"></td>
        <td id="LC5836" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5837" class="blob-num js-line-number" data-line-number="5837"></td>
        <td id="LC5837" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> argsFn.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5838" class="blob-num js-line-number" data-line-number="5838"></td>
        <td id="LC5838" class="blob-code blob-code-inner js-file-line">        args.<span class="pl-c1">push</span>(argsFn[i](self, locals));</td>
      </tr>
      <tr>
        <td id="L5839" class="blob-num js-line-number" data-line-number="5839"></td>
        <td id="LC5839" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5840" class="blob-num js-line-number" data-line-number="5840"></td>
        <td id="LC5840" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> fnPtr <span class="pl-k">=</span> fn(self, locals) <span class="pl-k">||</span> noop;</td>
      </tr>
      <tr>
        <td id="L5841" class="blob-num js-line-number" data-line-number="5841"></td>
        <td id="LC5841" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// IE stupidity!</span></td>
      </tr>
      <tr>
        <td id="L5842" class="blob-num js-line-number" data-line-number="5842"></td>
        <td id="LC5842" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> fnPtr.apply</td>
      </tr>
      <tr>
        <td id="L5843" class="blob-num js-line-number" data-line-number="5843"></td>
        <td id="LC5843" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> fnPtr.<span class="pl-c1">apply</span>(context, args)</td>
      </tr>
      <tr>
        <td id="L5844" class="blob-num js-line-number" data-line-number="5844"></td>
        <td id="LC5844" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> fnPtr(args[<span class="pl-c1">0</span>], args[<span class="pl-c1">1</span>], args[<span class="pl-c1">2</span>], args[<span class="pl-c1">3</span>], args[<span class="pl-c1">4</span>]);</td>
      </tr>
      <tr>
        <td id="L5845" class="blob-num js-line-number" data-line-number="5845"></td>
        <td id="LC5845" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5846" class="blob-num js-line-number" data-line-number="5846"></td>
        <td id="LC5846" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5847" class="blob-num js-line-number" data-line-number="5847"></td>
        <td id="LC5847" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5848" class="blob-num js-line-number" data-line-number="5848"></td>
        <td id="LC5848" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// This is used with json array declaration</span></td>
      </tr>
      <tr>
        <td id="L5849" class="blob-num js-line-number" data-line-number="5849"></td>
        <td id="LC5849" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">arrayDeclaration</span> () {</td>
      </tr>
      <tr>
        <td id="L5850" class="blob-num js-line-number" data-line-number="5850"></td>
        <td id="LC5850" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> elementFns <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5851" class="blob-num js-line-number" data-line-number="5851"></td>
        <td id="LC5851" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (peekToken().<span class="pl-c1">text</span> <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5852" class="blob-num js-line-number" data-line-number="5852"></td>
        <td id="LC5852" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L5853" class="blob-num js-line-number" data-line-number="5853"></td>
        <td id="LC5853" class="blob-code blob-code-inner js-file-line">        elementFns.<span class="pl-c1">push</span>(expression());</td>
      </tr>
      <tr>
        <td id="L5854" class="blob-num js-line-number" data-line-number="5854"></td>
        <td id="LC5854" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L5855" class="blob-num js-line-number" data-line-number="5855"></td>
        <td id="LC5855" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5856" class="blob-num js-line-number" data-line-number="5856"></td>
        <td id="LC5856" class="blob-code blob-code-inner js-file-line">    consume(<span class="pl-s"><span class="pl-pds">&#39;</span>]<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5857" class="blob-num js-line-number" data-line-number="5857"></td>
        <td id="LC5857" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5858" class="blob-num js-line-number" data-line-number="5858"></td>
        <td id="LC5858" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> array <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5859" class="blob-num js-line-number" data-line-number="5859"></td>
        <td id="LC5859" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> elementFns.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5860" class="blob-num js-line-number" data-line-number="5860"></td>
        <td id="LC5860" class="blob-code blob-code-inner js-file-line">        array.<span class="pl-c1">push</span>(elementFns[i](self, locals));</td>
      </tr>
      <tr>
        <td id="L5861" class="blob-num js-line-number" data-line-number="5861"></td>
        <td id="LC5861" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5862" class="blob-num js-line-number" data-line-number="5862"></td>
        <td id="LC5862" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L5863" class="blob-num js-line-number" data-line-number="5863"></td>
        <td id="LC5863" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5864" class="blob-num js-line-number" data-line-number="5864"></td>
        <td id="LC5864" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5865" class="blob-num js-line-number" data-line-number="5865"></td>
        <td id="LC5865" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5866" class="blob-num js-line-number" data-line-number="5866"></td>
        <td id="LC5866" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">object</span> () {</td>
      </tr>
      <tr>
        <td id="L5867" class="blob-num js-line-number" data-line-number="5867"></td>
        <td id="LC5867" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> keyValues <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L5868" class="blob-num js-line-number" data-line-number="5868"></td>
        <td id="LC5868" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (peekToken().<span class="pl-c1">text</span> <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L5869" class="blob-num js-line-number" data-line-number="5869"></td>
        <td id="LC5869" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L5870" class="blob-num js-line-number" data-line-number="5870"></td>
        <td id="LC5870" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> token <span class="pl-k">=</span> expect(),</td>
      </tr>
      <tr>
        <td id="L5871" class="blob-num js-line-number" data-line-number="5871"></td>
        <td id="LC5871" class="blob-code blob-code-inner js-file-line">        key <span class="pl-k">=</span> token.string <span class="pl-k">||</span> token.<span class="pl-c1">text</span>;</td>
      </tr>
      <tr>
        <td id="L5872" class="blob-num js-line-number" data-line-number="5872"></td>
        <td id="LC5872" class="blob-code blob-code-inner js-file-line">        consume(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5873" class="blob-num js-line-number" data-line-number="5873"></td>
        <td id="LC5873" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> value <span class="pl-k">=</span> expression();</td>
      </tr>
      <tr>
        <td id="L5874" class="blob-num js-line-number" data-line-number="5874"></td>
        <td id="LC5874" class="blob-code blob-code-inner js-file-line">        keyValues.<span class="pl-c1">push</span>({key<span class="pl-k">:</span>key, value<span class="pl-k">:</span>value});</td>
      </tr>
      <tr>
        <td id="L5875" class="blob-num js-line-number" data-line-number="5875"></td>
        <td id="LC5875" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">while</span> (expect(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L5876" class="blob-num js-line-number" data-line-number="5876"></td>
        <td id="LC5876" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5877" class="blob-num js-line-number" data-line-number="5877"></td>
        <td id="LC5877" class="blob-code blob-code-inner js-file-line">    consume(<span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5878" class="blob-num js-line-number" data-line-number="5878"></td>
        <td id="LC5878" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">self</span>, <span class="pl-smi">locals</span>){</td>
      </tr>
      <tr>
        <td id="L5879" class="blob-num js-line-number" data-line-number="5879"></td>
        <td id="LC5879" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> object <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5880" class="blob-num js-line-number" data-line-number="5880"></td>
        <td id="LC5880" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> keyValues.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5881" class="blob-num js-line-number" data-line-number="5881"></td>
        <td id="LC5881" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> keyValue <span class="pl-k">=</span> keyValues[i];</td>
      </tr>
      <tr>
        <td id="L5882" class="blob-num js-line-number" data-line-number="5882"></td>
        <td id="LC5882" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> value <span class="pl-k">=</span> keyValue.<span class="pl-c1">value</span>(self, locals);</td>
      </tr>
      <tr>
        <td id="L5883" class="blob-num js-line-number" data-line-number="5883"></td>
        <td id="LC5883" class="blob-code blob-code-inner js-file-line">        object[keyValue.key] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L5884" class="blob-num js-line-number" data-line-number="5884"></td>
        <td id="LC5884" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5885" class="blob-num js-line-number" data-line-number="5885"></td>
        <td id="LC5885" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> object;</td>
      </tr>
      <tr>
        <td id="L5886" class="blob-num js-line-number" data-line-number="5886"></td>
        <td id="LC5886" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5887" class="blob-num js-line-number" data-line-number="5887"></td>
        <td id="LC5887" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5888" class="blob-num js-line-number" data-line-number="5888"></td>
        <td id="LC5888" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5889" class="blob-num js-line-number" data-line-number="5889"></td>
        <td id="LC5889" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5890" class="blob-num js-line-number" data-line-number="5890"></td>
        <td id="LC5890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L5891" class="blob-num js-line-number" data-line-number="5891"></td>
        <td id="LC5891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// Parser helper functions</span></td>
      </tr>
      <tr>
        <td id="L5892" class="blob-num js-line-number" data-line-number="5892"></td>
        <td id="LC5892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L5893" class="blob-num js-line-number" data-line-number="5893"></td>
        <td id="LC5893" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5894" class="blob-num js-line-number" data-line-number="5894"></td>
        <td id="LC5894" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">setter</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">path</span>, <span class="pl-smi">setValue</span>) {</td>
      </tr>
      <tr>
        <td id="L5895" class="blob-num js-line-number" data-line-number="5895"></td>
        <td id="LC5895" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> element <span class="pl-k">=</span> path.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5896" class="blob-num js-line-number" data-line-number="5896"></td>
        <td id="LC5896" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; element.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> <span class="pl-c1">1</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5897" class="blob-num js-line-number" data-line-number="5897"></td>
        <td id="LC5897" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> key <span class="pl-k">=</span> element.<span class="pl-c1">shift</span>();</td>
      </tr>
      <tr>
        <td id="L5898" class="blob-num js-line-number" data-line-number="5898"></td>
        <td id="LC5898" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> propertyObj <span class="pl-k">=</span> obj[key];</td>
      </tr>
      <tr>
        <td id="L5899" class="blob-num js-line-number" data-line-number="5899"></td>
        <td id="LC5899" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>propertyObj) {</td>
      </tr>
      <tr>
        <td id="L5900" class="blob-num js-line-number" data-line-number="5900"></td>
        <td id="LC5900" class="blob-code blob-code-inner js-file-line">      propertyObj <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5901" class="blob-num js-line-number" data-line-number="5901"></td>
        <td id="LC5901" class="blob-code blob-code-inner js-file-line">      obj[key] <span class="pl-k">=</span> propertyObj;</td>
      </tr>
      <tr>
        <td id="L5902" class="blob-num js-line-number" data-line-number="5902"></td>
        <td id="LC5902" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5903" class="blob-num js-line-number" data-line-number="5903"></td>
        <td id="LC5903" class="blob-code blob-code-inner js-file-line">    obj <span class="pl-k">=</span> propertyObj;</td>
      </tr>
      <tr>
        <td id="L5904" class="blob-num js-line-number" data-line-number="5904"></td>
        <td id="LC5904" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5905" class="blob-num js-line-number" data-line-number="5905"></td>
        <td id="LC5905" class="blob-code blob-code-inner js-file-line">  obj[element.<span class="pl-c1">shift</span>()] <span class="pl-k">=</span> setValue;</td>
      </tr>
      <tr>
        <td id="L5906" class="blob-num js-line-number" data-line-number="5906"></td>
        <td id="LC5906" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> setValue;</td>
      </tr>
      <tr>
        <td id="L5907" class="blob-num js-line-number" data-line-number="5907"></td>
        <td id="LC5907" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5908" class="blob-num js-line-number" data-line-number="5908"></td>
        <td id="LC5908" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5909" class="blob-num js-line-number" data-line-number="5909"></td>
        <td id="LC5909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5910" class="blob-num js-line-number" data-line-number="5910"></td>
        <td id="LC5910" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Return the value accesible from the object by path. Any undefined traversals are ignored</span></td>
      </tr>
      <tr>
        <td id="L5911" class="blob-num js-line-number" data-line-number="5911"></td>
        <td id="LC5911" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Object} obj starting object</span></td>
      </tr>
      <tr>
        <td id="L5912" class="blob-num js-line-number" data-line-number="5912"></td>
        <td id="LC5912" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} path path to traverse</span></td>
      </tr>
      <tr>
        <td id="L5913" class="blob-num js-line-number" data-line-number="5913"></td>
        <td id="LC5913" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {boolean=true} bindFnToScope</span></td>
      </tr>
      <tr>
        <td id="L5914" class="blob-num js-line-number" data-line-number="5914"></td>
        <td id="LC5914" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> value as accesbile by path</span></td>
      </tr>
      <tr>
        <td id="L5915" class="blob-num js-line-number" data-line-number="5915"></td>
        <td id="LC5915" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L5916" class="blob-num js-line-number" data-line-number="5916"></td>
        <td id="LC5916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//TODO(misko): this function needs to be removed</span></td>
      </tr>
      <tr>
        <td id="L5917" class="blob-num js-line-number" data-line-number="5917"></td>
        <td id="LC5917" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">getter</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">path</span>, <span class="pl-smi">bindFnToScope</span>) {</td>
      </tr>
      <tr>
        <td id="L5918" class="blob-num js-line-number" data-line-number="5918"></td>
        <td id="LC5918" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>path) <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L5919" class="blob-num js-line-number" data-line-number="5919"></td>
        <td id="LC5919" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> keys <span class="pl-k">=</span> path.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L5920" class="blob-num js-line-number" data-line-number="5920"></td>
        <td id="LC5920" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> key;</td>
      </tr>
      <tr>
        <td id="L5921" class="blob-num js-line-number" data-line-number="5921"></td>
        <td id="LC5921" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> lastInstance <span class="pl-k">=</span> obj;</td>
      </tr>
      <tr>
        <td id="L5922" class="blob-num js-line-number" data-line-number="5922"></td>
        <td id="LC5922" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> len <span class="pl-k">=</span> keys.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L5923" class="blob-num js-line-number" data-line-number="5923"></td>
        <td id="LC5923" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5924" class="blob-num js-line-number" data-line-number="5924"></td>
        <td id="LC5924" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> len; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L5925" class="blob-num js-line-number" data-line-number="5925"></td>
        <td id="LC5925" class="blob-code blob-code-inner js-file-line">    key <span class="pl-k">=</span> keys[i];</td>
      </tr>
      <tr>
        <td id="L5926" class="blob-num js-line-number" data-line-number="5926"></td>
        <td id="LC5926" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (obj) {</td>
      </tr>
      <tr>
        <td id="L5927" class="blob-num js-line-number" data-line-number="5927"></td>
        <td id="LC5927" class="blob-code blob-code-inner js-file-line">      obj <span class="pl-k">=</span> (lastInstance <span class="pl-k">=</span> obj)[key];</td>
      </tr>
      <tr>
        <td id="L5928" class="blob-num js-line-number" data-line-number="5928"></td>
        <td id="LC5928" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L5929" class="blob-num js-line-number" data-line-number="5929"></td>
        <td id="LC5929" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5930" class="blob-num js-line-number" data-line-number="5930"></td>
        <td id="LC5930" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>bindFnToScope <span class="pl-k">&amp;&amp;</span> isFunction(obj)) {</td>
      </tr>
      <tr>
        <td id="L5931" class="blob-num js-line-number" data-line-number="5931"></td>
        <td id="LC5931" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> bind(lastInstance, obj);</td>
      </tr>
      <tr>
        <td id="L5932" class="blob-num js-line-number" data-line-number="5932"></td>
        <td id="LC5932" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5933" class="blob-num js-line-number" data-line-number="5933"></td>
        <td id="LC5933" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> obj;</td>
      </tr>
      <tr>
        <td id="L5934" class="blob-num js-line-number" data-line-number="5934"></td>
        <td id="LC5934" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5935" class="blob-num js-line-number" data-line-number="5935"></td>
        <td id="LC5935" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5936" class="blob-num js-line-number" data-line-number="5936"></td>
        <td id="LC5936" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> getterFnCache <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5937" class="blob-num js-line-number" data-line-number="5937"></td>
        <td id="LC5937" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5938" class="blob-num js-line-number" data-line-number="5938"></td>
        <td id="LC5938" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">getterFn</span>(<span class="pl-smi">path</span>) {</td>
      </tr>
      <tr>
        <td id="L5939" class="blob-num js-line-number" data-line-number="5939"></td>
        <td id="LC5939" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (getterFnCache.hasOwnProperty(path)) {</td>
      </tr>
      <tr>
        <td id="L5940" class="blob-num js-line-number" data-line-number="5940"></td>
        <td id="LC5940" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> getterFnCache[path];</td>
      </tr>
      <tr>
        <td id="L5941" class="blob-num js-line-number" data-line-number="5941"></td>
        <td id="LC5941" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L5942" class="blob-num js-line-number" data-line-number="5942"></td>
        <td id="LC5942" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5943" class="blob-num js-line-number" data-line-number="5943"></td>
        <td id="LC5943" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> fn, code <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>var l, fn, p;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5944" class="blob-num js-line-number" data-line-number="5944"></td>
        <td id="LC5944" class="blob-code blob-code-inner js-file-line">  forEach(path.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">key</span>, <span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L5945" class="blob-num js-line-number" data-line-number="5945"></td>
        <td id="LC5945" class="blob-code blob-code-inner js-file-line">    code <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>if(!s) return s;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5946" class="blob-num js-line-number" data-line-number="5946"></td>
        <td id="LC5946" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>l=s;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5947" class="blob-num js-line-number" data-line-number="5947"></td>
        <td id="LC5947" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>s=<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span> (index</td>
      </tr>
      <tr>
        <td id="L5948" class="blob-num js-line-number" data-line-number="5948"></td>
        <td id="LC5948" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// we simply direference &#39;s&#39; on any .dot notation</span></td>
      </tr>
      <tr>
        <td id="L5949" class="blob-num js-line-number" data-line-number="5949"></td>
        <td id="LC5949" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L5950" class="blob-num js-line-number" data-line-number="5950"></td>
        <td id="LC5950" class="blob-code blob-code-inner js-file-line">                    <span class="pl-c">// but if we are first then we check locals firs, and if so read it first</span></td>
      </tr>
      <tr>
        <td id="L5951" class="blob-num js-line-number" data-line-number="5951"></td>
        <td id="LC5951" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>((k&amp;&amp;k.hasOwnProperty(&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> key <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;))?k:s)<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>[&quot;<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> key <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;]<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5952" class="blob-num js-line-number" data-line-number="5952"></td>
        <td id="LC5952" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>if (s &amp;&amp; s.then) {<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5953" class="blob-num js-line-number" data-line-number="5953"></td>
        <td id="LC5953" class="blob-code blob-code-inner js-file-line">              <span class="pl-s"><span class="pl-pds">&#39;</span> if (!(&quot;$$v&quot; in s)) {<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5954" class="blob-num js-line-number" data-line-number="5954"></td>
        <td id="LC5954" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span> p=s;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5955" class="blob-num js-line-number" data-line-number="5955"></td>
        <td id="LC5955" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span> p.$$v = undefined;<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5956" class="blob-num js-line-number" data-line-number="5956"></td>
        <td id="LC5956" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span> p.then(function(v) {p.$$v=v;});<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5957" class="blob-num js-line-number" data-line-number="5957"></td>
        <td id="LC5957" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5958" class="blob-num js-line-number" data-line-number="5958"></td>
        <td id="LC5958" class="blob-code blob-code-inner js-file-line">              <span class="pl-s"><span class="pl-pds">&#39;</span> s=s.$$v<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L5959" class="blob-num js-line-number" data-line-number="5959"></td>
        <td id="LC5959" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&#39;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5960" class="blob-num js-line-number" data-line-number="5960"></td>
        <td id="LC5960" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L5961" class="blob-num js-line-number" data-line-number="5961"></td>
        <td id="LC5961" class="blob-code blob-code-inner js-file-line">  code <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>return s;<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L5962" class="blob-num js-line-number" data-line-number="5962"></td>
        <td id="LC5962" class="blob-code blob-code-inner js-file-line">  fn <span class="pl-k">=</span> <span class="pl-c1">Function</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>s<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>k<span class="pl-pds">&#39;</span></span>, code);</td>
      </tr>
      <tr>
        <td id="L5963" class="blob-num js-line-number" data-line-number="5963"></td>
        <td id="LC5963" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">fn</span>.<span class="pl-en">toString</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() { <span class="pl-k">return</span> code; };</td>
      </tr>
      <tr>
        <td id="L5964" class="blob-num js-line-number" data-line-number="5964"></td>
        <td id="LC5964" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5965" class="blob-num js-line-number" data-line-number="5965"></td>
        <td id="LC5965" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> getterFnCache[path] <span class="pl-k">=</span> fn;</td>
      </tr>
      <tr>
        <td id="L5966" class="blob-num js-line-number" data-line-number="5966"></td>
        <td id="LC5966" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5967" class="blob-num js-line-number" data-line-number="5967"></td>
        <td id="LC5967" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5968" class="blob-num js-line-number" data-line-number="5968"></td>
        <td id="LC5968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">///////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L5969" class="blob-num js-line-number" data-line-number="5969"></td>
        <td id="LC5969" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5970" class="blob-num js-line-number" data-line-number="5970"></td>
        <td id="LC5970" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$ParseProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L5971" class="blob-num js-line-number" data-line-number="5971"></td>
        <td id="LC5971" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> cache <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L5972" class="blob-num js-line-number" data-line-number="5972"></td>
        <td id="LC5972" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$filter<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$filter</span>) {</td>
      </tr>
      <tr>
        <td id="L5973" class="blob-num js-line-number" data-line-number="5973"></td>
        <td id="LC5973" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">exp</span>) {</td>
      </tr>
      <tr>
        <td id="L5974" class="blob-num js-line-number" data-line-number="5974"></td>
        <td id="LC5974" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span>(<span class="pl-k">typeof</span> exp) {</td>
      </tr>
      <tr>
        <td id="L5975" class="blob-num js-line-number" data-line-number="5975"></td>
        <td id="LC5975" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>string<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5976" class="blob-num js-line-number" data-line-number="5976"></td>
        <td id="LC5976" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> cache.hasOwnProperty(exp)</td>
      </tr>
      <tr>
        <td id="L5977" class="blob-num js-line-number" data-line-number="5977"></td>
        <td id="LC5977" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">?</span> cache[exp]</td>
      </tr>
      <tr>
        <td id="L5978" class="blob-num js-line-number" data-line-number="5978"></td>
        <td id="LC5978" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">:</span> cache[exp] <span class="pl-k">=</span>  parser(exp, <span class="pl-c1">false</span>, $filter);</td>
      </tr>
      <tr>
        <td id="L5979" class="blob-num js-line-number" data-line-number="5979"></td>
        <td id="LC5979" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5980" class="blob-num js-line-number" data-line-number="5980"></td>
        <td id="LC5980" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> exp;</td>
      </tr>
      <tr>
        <td id="L5981" class="blob-num js-line-number" data-line-number="5981"></td>
        <td id="LC5981" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L5982" class="blob-num js-line-number" data-line-number="5982"></td>
        <td id="LC5982" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> noop;</td>
      </tr>
      <tr>
        <td id="L5983" class="blob-num js-line-number" data-line-number="5983"></td>
        <td id="LC5983" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L5984" class="blob-num js-line-number" data-line-number="5984"></td>
        <td id="LC5984" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L5985" class="blob-num js-line-number" data-line-number="5985"></td>
        <td id="LC5985" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L5986" class="blob-num js-line-number" data-line-number="5986"></td>
        <td id="LC5986" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L5987" class="blob-num js-line-number" data-line-number="5987"></td>
        <td id="LC5987" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5988" class="blob-num js-line-number" data-line-number="5988"></td>
        <td id="LC5988" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L5989" class="blob-num js-line-number" data-line-number="5989"></td>
        <td id="LC5989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc service</span></td>
      </tr>
      <tr>
        <td id="L5990" class="blob-num js-line-number" data-line-number="5990"></td>
        <td id="LC5990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L5991" class="blob-num js-line-number" data-line-number="5991"></td>
        <td id="LC5991" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $rootScope</span></td>
      </tr>
      <tr>
        <td id="L5992" class="blob-num js-line-number" data-line-number="5992"></td>
        <td id="LC5992" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5993" class="blob-num js-line-number" data-line-number="5993"></td>
        <td id="LC5993" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L5994" class="blob-num js-line-number" data-line-number="5994"></td>
        <td id="LC5994" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A promise/deferred implementation inspired by [Kris Kowal&#39;s Q](https://github.com/kriskowal/q).</span></td>
      </tr>
      <tr>
        <td id="L5995" class="blob-num js-line-number" data-line-number="5995"></td>
        <td id="LC5995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L5996" class="blob-num js-line-number" data-line-number="5996"></td>
        <td id="LC5996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * [The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an</span></td>
      </tr>
      <tr>
        <td id="L5997" class="blob-num js-line-number" data-line-number="5997"></td>
        <td id="LC5997" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * interface for interacting with an object that represents the result of an action that is</span></td>
      </tr>
      <tr>
        <td id="L5998" class="blob-num js-line-number" data-line-number="5998"></td>
        <td id="LC5998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * performed asynchronously, and may or may not be finished at any given point in time.</span></td>
      </tr>
      <tr>
        <td id="L5999" class="blob-num js-line-number" data-line-number="5999"></td>
        <td id="LC5999" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6000" class="blob-num js-line-number" data-line-number="6000"></td>
        <td id="LC6000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * From the perspective of dealing with error handling, deferred and promise apis are to</span></td>
      </tr>
      <tr>
        <td id="L6001" class="blob-num js-line-number" data-line-number="6001"></td>
        <td id="LC6001" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * asynchronous programing what `try`, `catch` and `throw` keywords are to synchronous programing.</span></td>
      </tr>
      <tr>
        <td id="L6002" class="blob-num js-line-number" data-line-number="6002"></td>
        <td id="LC6002" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6003" class="blob-num js-line-number" data-line-number="6003"></td>
        <td id="LC6003" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6004" class="blob-num js-line-number" data-line-number="6004"></td>
        <td id="LC6004" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // for the purpose of this example let&#39;s assume that variables `$q` and `scope` are</span></td>
      </tr>
      <tr>
        <td id="L6005" class="blob-num js-line-number" data-line-number="6005"></td>
        <td id="LC6005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // available in the current lexical scope (they could have been injected or passed in).</span></td>
      </tr>
      <tr>
        <td id="L6006" class="blob-num js-line-number" data-line-number="6006"></td>
        <td id="LC6006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6007" class="blob-num js-line-number" data-line-number="6007"></td>
        <td id="LC6007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   function asyncGreet(name) {</span></td>
      </tr>
      <tr>
        <td id="L6008" class="blob-num js-line-number" data-line-number="6008"></td>
        <td id="LC6008" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     var deferred = $q.defer();</span></td>
      </tr>
      <tr>
        <td id="L6009" class="blob-num js-line-number" data-line-number="6009"></td>
        <td id="LC6009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6010" class="blob-num js-line-number" data-line-number="6010"></td>
        <td id="LC6010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     setTimeout(function() {</span></td>
      </tr>
      <tr>
        <td id="L6011" class="blob-num js-line-number" data-line-number="6011"></td>
        <td id="LC6011" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       // since this fn executes async in a future turn of the event loop, we need to wrap</span></td>
      </tr>
      <tr>
        <td id="L6012" class="blob-num js-line-number" data-line-number="6012"></td>
        <td id="LC6012" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       // our code into an $apply call so that the model changes are properly observed.</span></td>
      </tr>
      <tr>
        <td id="L6013" class="blob-num js-line-number" data-line-number="6013"></td>
        <td id="LC6013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       scope.$apply(function() {</span></td>
      </tr>
      <tr>
        <td id="L6014" class="blob-num js-line-number" data-line-number="6014"></td>
        <td id="LC6014" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         if (okToGreet(name)) {</span></td>
      </tr>
      <tr>
        <td id="L6015" class="blob-num js-line-number" data-line-number="6015"></td>
        <td id="LC6015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *           deferred.resolve(&#39;Hello, &#39; + name + &#39;!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6016" class="blob-num js-line-number" data-line-number="6016"></td>
        <td id="LC6016" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         } else {</span></td>
      </tr>
      <tr>
        <td id="L6017" class="blob-num js-line-number" data-line-number="6017"></td>
        <td id="LC6017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *           deferred.reject(&#39;Greeting &#39; + name + &#39; is not allowed.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6018" class="blob-num js-line-number" data-line-number="6018"></td>
        <td id="LC6018" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         }</span></td>
      </tr>
      <tr>
        <td id="L6019" class="blob-num js-line-number" data-line-number="6019"></td>
        <td id="LC6019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       });</span></td>
      </tr>
      <tr>
        <td id="L6020" class="blob-num js-line-number" data-line-number="6020"></td>
        <td id="LC6020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     }, 1000);</span></td>
      </tr>
      <tr>
        <td id="L6021" class="blob-num js-line-number" data-line-number="6021"></td>
        <td id="LC6021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6022" class="blob-num js-line-number" data-line-number="6022"></td>
        <td id="LC6022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     return deferred.promise;</span></td>
      </tr>
      <tr>
        <td id="L6023" class="blob-num js-line-number" data-line-number="6023"></td>
        <td id="LC6023" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   }</span></td>
      </tr>
      <tr>
        <td id="L6024" class="blob-num js-line-number" data-line-number="6024"></td>
        <td id="LC6024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6025" class="blob-num js-line-number" data-line-number="6025"></td>
        <td id="LC6025" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   var promise = asyncGreet(&#39;Robin Hood&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6026" class="blob-num js-line-number" data-line-number="6026"></td>
        <td id="LC6026" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   promise.then(function(greeting) {</span></td>
      </tr>
      <tr>
        <td id="L6027" class="blob-num js-line-number" data-line-number="6027"></td>
        <td id="LC6027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     alert(&#39;Success: &#39; + greeting);</span></td>
      </tr>
      <tr>
        <td id="L6028" class="blob-num js-line-number" data-line-number="6028"></td>
        <td id="LC6028" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   }, function(reason) {</span></td>
      </tr>
      <tr>
        <td id="L6029" class="blob-num js-line-number" data-line-number="6029"></td>
        <td id="LC6029" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     alert(&#39;Failed: &#39; + reason);</span></td>
      </tr>
      <tr>
        <td id="L6030" class="blob-num js-line-number" data-line-number="6030"></td>
        <td id="LC6030" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   );</span></td>
      </tr>
      <tr>
        <td id="L6031" class="blob-num js-line-number" data-line-number="6031"></td>
        <td id="LC6031" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6032" class="blob-num js-line-number" data-line-number="6032"></td>
        <td id="LC6032" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6033" class="blob-num js-line-number" data-line-number="6033"></td>
        <td id="LC6033" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * At first it might not be obvious why this extra complexity is worth the trouble. The payoff</span></td>
      </tr>
      <tr>
        <td id="L6034" class="blob-num js-line-number" data-line-number="6034"></td>
        <td id="LC6034" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * comes in the way of</span></td>
      </tr>
      <tr>
        <td id="L6035" class="blob-num js-line-number" data-line-number="6035"></td>
        <td id="LC6035" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * [guarantees that promise and deferred apis make](https://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md).</span></td>
      </tr>
      <tr>
        <td id="L6036" class="blob-num js-line-number" data-line-number="6036"></td>
        <td id="LC6036" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6037" class="blob-num js-line-number" data-line-number="6037"></td>
        <td id="LC6037" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Additionally the promise api allows for composition that is very hard to do with the</span></td>
      </tr>
      <tr>
        <td id="L6038" class="blob-num js-line-number" data-line-number="6038"></td>
        <td id="LC6038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * traditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.</span></td>
      </tr>
      <tr>
        <td id="L6039" class="blob-num js-line-number" data-line-number="6039"></td>
        <td id="LC6039" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the</span></td>
      </tr>
      <tr>
        <td id="L6040" class="blob-num js-line-number" data-line-number="6040"></td>
        <td id="LC6040" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * section on serial or parallel joining of promises.</span></td>
      </tr>
      <tr>
        <td id="L6041" class="blob-num js-line-number" data-line-number="6041"></td>
        <td id="LC6041" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6042" class="blob-num js-line-number" data-line-number="6042"></td>
        <td id="LC6042" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6043" class="blob-num js-line-number" data-line-number="6043"></td>
        <td id="LC6043" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # The Deferred API</span></td>
      </tr>
      <tr>
        <td id="L6044" class="blob-num js-line-number" data-line-number="6044"></td>
        <td id="LC6044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6045" class="blob-num js-line-number" data-line-number="6045"></td>
        <td id="LC6045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A new instance of deferred is constructed by calling `$q.defer()`.</span></td>
      </tr>
      <tr>
        <td id="L6046" class="blob-num js-line-number" data-line-number="6046"></td>
        <td id="LC6046" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6047" class="blob-num js-line-number" data-line-number="6047"></td>
        <td id="LC6047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The purpose of the deferred object is to expose the associated Promise instance as well as apis</span></td>
      </tr>
      <tr>
        <td id="L6048" class="blob-num js-line-number" data-line-number="6048"></td>
        <td id="LC6048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * that can be used for signaling the successful or unsuccessful completion of the task.</span></td>
      </tr>
      <tr>
        <td id="L6049" class="blob-num js-line-number" data-line-number="6049"></td>
        <td id="LC6049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6050" class="blob-num js-line-number" data-line-number="6050"></td>
        <td id="LC6050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * **Methods**</span></td>
      </tr>
      <tr>
        <td id="L6051" class="blob-num js-line-number" data-line-number="6051"></td>
        <td id="LC6051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6052" class="blob-num js-line-number" data-line-number="6052"></td>
        <td id="LC6052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `resolve(value)` â resolves the derived promise with the `value`. If the value is a rejection</span></td>
      </tr>
      <tr>
        <td id="L6053" class="blob-num js-line-number" data-line-number="6053"></td>
        <td id="LC6053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   constructed via `$q.reject`, the promise will be rejected instead.</span></td>
      </tr>
      <tr>
        <td id="L6054" class="blob-num js-line-number" data-line-number="6054"></td>
        <td id="LC6054" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `reject(reason)` â rejects the derived promise with the `reason`. This is equivalent to</span></td>
      </tr>
      <tr>
        <td id="L6055" class="blob-num js-line-number" data-line-number="6055"></td>
        <td id="LC6055" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   resolving it with a rejection constructed via `$q.reject`.</span></td>
      </tr>
      <tr>
        <td id="L6056" class="blob-num js-line-number" data-line-number="6056"></td>
        <td id="LC6056" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6057" class="blob-num js-line-number" data-line-number="6057"></td>
        <td id="LC6057" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * **Properties**</span></td>
      </tr>
      <tr>
        <td id="L6058" class="blob-num js-line-number" data-line-number="6058"></td>
        <td id="LC6058" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6059" class="blob-num js-line-number" data-line-number="6059"></td>
        <td id="LC6059" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - promise â `{Promise}` â promise object associated with this deferred.</span></td>
      </tr>
      <tr>
        <td id="L6060" class="blob-num js-line-number" data-line-number="6060"></td>
        <td id="LC6060" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6061" class="blob-num js-line-number" data-line-number="6061"></td>
        <td id="LC6061" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6062" class="blob-num js-line-number" data-line-number="6062"></td>
        <td id="LC6062" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # The Promise API</span></td>
      </tr>
      <tr>
        <td id="L6063" class="blob-num js-line-number" data-line-number="6063"></td>
        <td id="LC6063" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6064" class="blob-num js-line-number" data-line-number="6064"></td>
        <td id="LC6064" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A new promise instance is created when a deferred instance is created and can be retrieved by</span></td>
      </tr>
      <tr>
        <td id="L6065" class="blob-num js-line-number" data-line-number="6065"></td>
        <td id="LC6065" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * calling `deferred.promise`.</span></td>
      </tr>
      <tr>
        <td id="L6066" class="blob-num js-line-number" data-line-number="6066"></td>
        <td id="LC6066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6067" class="blob-num js-line-number" data-line-number="6067"></td>
        <td id="LC6067" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The purpose of the promise object is to allow for interested parties to get access to the result</span></td>
      </tr>
      <tr>
        <td id="L6068" class="blob-num js-line-number" data-line-number="6068"></td>
        <td id="LC6068" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * of the deferred task when it completes.</span></td>
      </tr>
      <tr>
        <td id="L6069" class="blob-num js-line-number" data-line-number="6069"></td>
        <td id="LC6069" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6070" class="blob-num js-line-number" data-line-number="6070"></td>
        <td id="LC6070" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * **Methods**</span></td>
      </tr>
      <tr>
        <td id="L6071" class="blob-num js-line-number" data-line-number="6071"></td>
        <td id="LC6071" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6072" class="blob-num js-line-number" data-line-number="6072"></td>
        <td id="LC6072" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - `then(successCallback, errorCallback)` â regardless of when the promise was or will be resolved</span></td>
      </tr>
      <tr>
        <td id="L6073" class="blob-num js-line-number" data-line-number="6073"></td>
        <td id="LC6073" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   or rejected calls one of the success or error callbacks asynchronously as soon as the result</span></td>
      </tr>
      <tr>
        <td id="L6074" class="blob-num js-line-number" data-line-number="6074"></td>
        <td id="LC6074" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   is available. The callbacks are called with a single argument the result or rejection reason.</span></td>
      </tr>
      <tr>
        <td id="L6075" class="blob-num js-line-number" data-line-number="6075"></td>
        <td id="LC6075" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6076" class="blob-num js-line-number" data-line-number="6076"></td>
        <td id="LC6076" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   This method *returns a new promise* which is resolved or rejected via the return value of the</span></td>
      </tr>
      <tr>
        <td id="L6077" class="blob-num js-line-number" data-line-number="6077"></td>
        <td id="LC6077" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `successCallback` or `errorCallback`.</span></td>
      </tr>
      <tr>
        <td id="L6078" class="blob-num js-line-number" data-line-number="6078"></td>
        <td id="LC6078" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6079" class="blob-num js-line-number" data-line-number="6079"></td>
        <td id="LC6079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6080" class="blob-num js-line-number" data-line-number="6080"></td>
        <td id="LC6080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Chaining promises</span></td>
      </tr>
      <tr>
        <td id="L6081" class="blob-num js-line-number" data-line-number="6081"></td>
        <td id="LC6081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6082" class="blob-num js-line-number" data-line-number="6082"></td>
        <td id="LC6082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Because calling `then` api of a promise returns a new derived promise, it is easily possible</span></td>
      </tr>
      <tr>
        <td id="L6083" class="blob-num js-line-number" data-line-number="6083"></td>
        <td id="LC6083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * to create a chain of promises:</span></td>
      </tr>
      <tr>
        <td id="L6084" class="blob-num js-line-number" data-line-number="6084"></td>
        <td id="LC6084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6085" class="blob-num js-line-number" data-line-number="6085"></td>
        <td id="LC6085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6086" class="blob-num js-line-number" data-line-number="6086"></td>
        <td id="LC6086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   promiseB = promiseA.then(function(result) {</span></td>
      </tr>
      <tr>
        <td id="L6087" class="blob-num js-line-number" data-line-number="6087"></td>
        <td id="LC6087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     return result + 1;</span></td>
      </tr>
      <tr>
        <td id="L6088" class="blob-num js-line-number" data-line-number="6088"></td>
        <td id="LC6088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   });</span></td>
      </tr>
      <tr>
        <td id="L6089" class="blob-num js-line-number" data-line-number="6089"></td>
        <td id="LC6089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6090" class="blob-num js-line-number" data-line-number="6090"></td>
        <td id="LC6090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // promiseB will be resolved immediately after promiseA is resolved and it&#39;s value will be</span></td>
      </tr>
      <tr>
        <td id="L6091" class="blob-num js-line-number" data-line-number="6091"></td>
        <td id="LC6091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // the result of promiseA incremented by 1</span></td>
      </tr>
      <tr>
        <td id="L6092" class="blob-num js-line-number" data-line-number="6092"></td>
        <td id="LC6092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6093" class="blob-num js-line-number" data-line-number="6093"></td>
        <td id="LC6093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6094" class="blob-num js-line-number" data-line-number="6094"></td>
        <td id="LC6094" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * It is possible to create chains of any length and since a promise can be resolved with another</span></td>
      </tr>
      <tr>
        <td id="L6095" class="blob-num js-line-number" data-line-number="6095"></td>
        <td id="LC6095" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * promise (which will defer its resolution further), it is possible to pause/defer resolution of</span></td>
      </tr>
      <tr>
        <td id="L6096" class="blob-num js-line-number" data-line-number="6096"></td>
        <td id="LC6096" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the promises at any point in the chain. This makes it possible to implement powerful apis like</span></td>
      </tr>
      <tr>
        <td id="L6097" class="blob-num js-line-number" data-line-number="6097"></td>
        <td id="LC6097" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * $http&#39;s response interceptors.</span></td>
      </tr>
      <tr>
        <td id="L6098" class="blob-num js-line-number" data-line-number="6098"></td>
        <td id="LC6098" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6099" class="blob-num js-line-number" data-line-number="6099"></td>
        <td id="LC6099" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6100" class="blob-num js-line-number" data-line-number="6100"></td>
        <td id="LC6100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Differences between Kris Kowal&#39;s Q and $q</span></td>
      </tr>
      <tr>
        <td id="L6101" class="blob-num js-line-number" data-line-number="6101"></td>
        <td id="LC6101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6102" class="blob-num js-line-number" data-line-number="6102"></td>
        <td id="LC6102" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  There are three main differences:</span></td>
      </tr>
      <tr>
        <td id="L6103" class="blob-num js-line-number" data-line-number="6103"></td>
        <td id="LC6103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6104" class="blob-num js-line-number" data-line-number="6104"></td>
        <td id="LC6104" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - $q is integrated with the {@link angular.module.ng.$rootScope.Scope} Scope model observation</span></td>
      </tr>
      <tr>
        <td id="L6105" class="blob-num js-line-number" data-line-number="6105"></td>
        <td id="LC6105" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   mechanism in angular, which means faster propagation of resolution or rejection into your</span></td>
      </tr>
      <tr>
        <td id="L6106" class="blob-num js-line-number" data-line-number="6106"></td>
        <td id="LC6106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   models and avoiding unnecessary browser repaints, which would result in flickering UI.</span></td>
      </tr>
      <tr>
        <td id="L6107" class="blob-num js-line-number" data-line-number="6107"></td>
        <td id="LC6107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - $q promises are recognized by the templating engine in angular, which means that in templates</span></td>
      </tr>
      <tr>
        <td id="L6108" class="blob-num js-line-number" data-line-number="6108"></td>
        <td id="LC6108" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   you can treat promises attached to a scope as if they were the resulting values.</span></td>
      </tr>
      <tr>
        <td id="L6109" class="blob-num js-line-number" data-line-number="6109"></td>
        <td id="LC6109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - Q has many more features that $q, but that comes at a cost of bytes. $q is tiny, but contains</span></td>
      </tr>
      <tr>
        <td id="L6110" class="blob-num js-line-number" data-line-number="6110"></td>
        <td id="LC6110" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   all the important functionality needed for common async tasks.</span></td>
      </tr>
      <tr>
        <td id="L6111" class="blob-num js-line-number" data-line-number="6111"></td>
        <td id="LC6111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6112" class="blob-num js-line-number" data-line-number="6112"></td>
        <td id="LC6112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$QProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L6113" class="blob-num js-line-number" data-line-number="6113"></td>
        <td id="LC6113" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6114" class="blob-num js-line-number" data-line-number="6114"></td>
        <td id="LC6114" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$exceptionHandler<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$rootScope</span>, <span class="pl-smi">$exceptionHandler</span>) {</td>
      </tr>
      <tr>
        <td id="L6115" class="blob-num js-line-number" data-line-number="6115"></td>
        <td id="LC6115" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> qFactory(<span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L6116" class="blob-num js-line-number" data-line-number="6116"></td>
        <td id="LC6116" class="blob-code blob-code-inner js-file-line">      $rootScope.$evalAsync(callback);</td>
      </tr>
      <tr>
        <td id="L6117" class="blob-num js-line-number" data-line-number="6117"></td>
        <td id="LC6117" class="blob-code blob-code-inner js-file-line">    }, $exceptionHandler);</td>
      </tr>
      <tr>
        <td id="L6118" class="blob-num js-line-number" data-line-number="6118"></td>
        <td id="LC6118" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L6119" class="blob-num js-line-number" data-line-number="6119"></td>
        <td id="LC6119" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L6120" class="blob-num js-line-number" data-line-number="6120"></td>
        <td id="LC6120" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6121" class="blob-num js-line-number" data-line-number="6121"></td>
        <td id="LC6121" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6122" class="blob-num js-line-number" data-line-number="6122"></td>
        <td id="LC6122" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6123" class="blob-num js-line-number" data-line-number="6123"></td>
        <td id="LC6123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Constructs a promise manager.</span></td>
      </tr>
      <tr>
        <td id="L6124" class="blob-num js-line-number" data-line-number="6124"></td>
        <td id="LC6124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6125" class="blob-num js-line-number" data-line-number="6125"></td>
        <td id="LC6125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(function)} nextTick Function for executing functions in the next turn.</span></td>
      </tr>
      <tr>
        <td id="L6126" class="blob-num js-line-number" data-line-number="6126"></td>
        <td id="LC6126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(...*)} exceptionHandler Function into which unexpected exceptions are passed for</span></td>
      </tr>
      <tr>
        <td id="L6127" class="blob-num js-line-number" data-line-number="6127"></td>
        <td id="LC6127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     debugging purposes.</span></td>
      </tr>
      <tr>
        <td id="L6128" class="blob-num js-line-number" data-line-number="6128"></td>
        <td id="LC6128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {object} Promise manager.</span></td>
      </tr>
      <tr>
        <td id="L6129" class="blob-num js-line-number" data-line-number="6129"></td>
        <td id="LC6129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6130" class="blob-num js-line-number" data-line-number="6130"></td>
        <td id="LC6130" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">qFactory</span>(<span class="pl-smi">nextTick</span>, <span class="pl-smi">exceptionHandler</span>) {</td>
      </tr>
      <tr>
        <td id="L6131" class="blob-num js-line-number" data-line-number="6131"></td>
        <td id="LC6131" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6132" class="blob-num js-line-number" data-line-number="6132"></td>
        <td id="LC6132" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6133" class="blob-num js-line-number" data-line-number="6133"></td>
        <td id="LC6133" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc</span></td>
      </tr>
      <tr>
        <td id="L6134" class="blob-num js-line-number" data-line-number="6134"></td>
        <td id="LC6134" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$q#defer</span></td>
      </tr>
      <tr>
        <td id="L6135" class="blob-num js-line-number" data-line-number="6135"></td>
        <td id="LC6135" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L6136" class="blob-num js-line-number" data-line-number="6136"></td>
        <td id="LC6136" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6137" class="blob-num js-line-number" data-line-number="6137"></td>
        <td id="LC6137" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Creates a `Deferred` object which represents a task which will finish in the future.</span></td>
      </tr>
      <tr>
        <td id="L6138" class="blob-num js-line-number" data-line-number="6138"></td>
        <td id="LC6138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6139" class="blob-num js-line-number" data-line-number="6139"></td>
        <td id="LC6139" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Deferred} Returns a new instance of deferred.</span></td>
      </tr>
      <tr>
        <td id="L6140" class="blob-num js-line-number" data-line-number="6140"></td>
        <td id="LC6140" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6141" class="blob-num js-line-number" data-line-number="6141"></td>
        <td id="LC6141" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">defer</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6142" class="blob-num js-line-number" data-line-number="6142"></td>
        <td id="LC6142" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pending <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L6143" class="blob-num js-line-number" data-line-number="6143"></td>
        <td id="LC6143" class="blob-code blob-code-inner js-file-line">        value, deferred;</td>
      </tr>
      <tr>
        <td id="L6144" class="blob-num js-line-number" data-line-number="6144"></td>
        <td id="LC6144" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6145" class="blob-num js-line-number" data-line-number="6145"></td>
        <td id="LC6145" class="blob-code blob-code-inner js-file-line">    deferred <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6146" class="blob-num js-line-number" data-line-number="6146"></td>
        <td id="LC6146" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6147" class="blob-num js-line-number" data-line-number="6147"></td>
        <td id="LC6147" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">resolve</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">val</span>) {</td>
      </tr>
      <tr>
        <td id="L6148" class="blob-num js-line-number" data-line-number="6148"></td>
        <td id="LC6148" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (pending) {</td>
      </tr>
      <tr>
        <td id="L6149" class="blob-num js-line-number" data-line-number="6149"></td>
        <td id="LC6149" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> callbacks <span class="pl-k">=</span> pending;</td>
      </tr>
      <tr>
        <td id="L6150" class="blob-num js-line-number" data-line-number="6150"></td>
        <td id="LC6150" class="blob-code blob-code-inner js-file-line">          pending <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L6151" class="blob-num js-line-number" data-line-number="6151"></td>
        <td id="LC6151" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> ref(val);</td>
      </tr>
      <tr>
        <td id="L6152" class="blob-num js-line-number" data-line-number="6152"></td>
        <td id="LC6152" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6153" class="blob-num js-line-number" data-line-number="6153"></td>
        <td id="LC6153" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (callbacks.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L6154" class="blob-num js-line-number" data-line-number="6154"></td>
        <td id="LC6154" class="blob-code blob-code-inner js-file-line">            nextTick(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6155" class="blob-num js-line-number" data-line-number="6155"></td>
        <td id="LC6155" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> callback;</td>
      </tr>
      <tr>
        <td id="L6156" class="blob-num js-line-number" data-line-number="6156"></td>
        <td id="LC6156" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, ii <span class="pl-k">=</span> callbacks.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L6157" class="blob-num js-line-number" data-line-number="6157"></td>
        <td id="LC6157" class="blob-code blob-code-inner js-file-line">                callback <span class="pl-k">=</span> callbacks[i];</td>
      </tr>
      <tr>
        <td id="L6158" class="blob-num js-line-number" data-line-number="6158"></td>
        <td id="LC6158" class="blob-code blob-code-inner js-file-line">                value.then(callback[<span class="pl-c1">0</span>], callback[<span class="pl-c1">1</span>]);</td>
      </tr>
      <tr>
        <td id="L6159" class="blob-num js-line-number" data-line-number="6159"></td>
        <td id="LC6159" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L6160" class="blob-num js-line-number" data-line-number="6160"></td>
        <td id="LC6160" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L6161" class="blob-num js-line-number" data-line-number="6161"></td>
        <td id="LC6161" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6162" class="blob-num js-line-number" data-line-number="6162"></td>
        <td id="LC6162" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6163" class="blob-num js-line-number" data-line-number="6163"></td>
        <td id="LC6163" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L6164" class="blob-num js-line-number" data-line-number="6164"></td>
        <td id="LC6164" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6165" class="blob-num js-line-number" data-line-number="6165"></td>
        <td id="LC6165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6166" class="blob-num js-line-number" data-line-number="6166"></td>
        <td id="LC6166" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">reject</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6167" class="blob-num js-line-number" data-line-number="6167"></td>
        <td id="LC6167" class="blob-code blob-code-inner js-file-line">        deferred.resolve(reject(reason));</td>
      </tr>
      <tr>
        <td id="L6168" class="blob-num js-line-number" data-line-number="6168"></td>
        <td id="LC6168" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L6169" class="blob-num js-line-number" data-line-number="6169"></td>
        <td id="LC6169" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6170" class="blob-num js-line-number" data-line-number="6170"></td>
        <td id="LC6170" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6171" class="blob-num js-line-number" data-line-number="6171"></td>
        <td id="LC6171" class="blob-code blob-code-inner js-file-line">      promise<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L6172" class="blob-num js-line-number" data-line-number="6172"></td>
        <td id="LC6172" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">then</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>, <span class="pl-smi">errback</span>) {</td>
      </tr>
      <tr>
        <td id="L6173" class="blob-num js-line-number" data-line-number="6173"></td>
        <td id="LC6173" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> result <span class="pl-k">=</span> defer();</td>
      </tr>
      <tr>
        <td id="L6174" class="blob-num js-line-number" data-line-number="6174"></td>
        <td id="LC6174" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6175" class="blob-num js-line-number" data-line-number="6175"></td>
        <td id="LC6175" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> <span class="pl-en">wrappedCallback</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6176" class="blob-num js-line-number" data-line-number="6176"></td>
        <td id="LC6176" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L6177" class="blob-num js-line-number" data-line-number="6177"></td>
        <td id="LC6177" class="blob-code blob-code-inner js-file-line">              result.resolve((callback <span class="pl-k">||</span> defaultCallback)(value));</td>
      </tr>
      <tr>
        <td id="L6178" class="blob-num js-line-number" data-line-number="6178"></td>
        <td id="LC6178" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L6179" class="blob-num js-line-number" data-line-number="6179"></td>
        <td id="LC6179" class="blob-code blob-code-inner js-file-line">              exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L6180" class="blob-num js-line-number" data-line-number="6180"></td>
        <td id="LC6180" class="blob-code blob-code-inner js-file-line">              result.reject(e);</td>
      </tr>
      <tr>
        <td id="L6181" class="blob-num js-line-number" data-line-number="6181"></td>
        <td id="LC6181" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6182" class="blob-num js-line-number" data-line-number="6182"></td>
        <td id="LC6182" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L6183" class="blob-num js-line-number" data-line-number="6183"></td>
        <td id="LC6183" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6184" class="blob-num js-line-number" data-line-number="6184"></td>
        <td id="LC6184" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> <span class="pl-en">wrappedErrback</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6185" class="blob-num js-line-number" data-line-number="6185"></td>
        <td id="LC6185" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L6186" class="blob-num js-line-number" data-line-number="6186"></td>
        <td id="LC6186" class="blob-code blob-code-inner js-file-line">              result.resolve((errback <span class="pl-k">||</span> defaultErrback)(reason));</td>
      </tr>
      <tr>
        <td id="L6187" class="blob-num js-line-number" data-line-number="6187"></td>
        <td id="LC6187" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L6188" class="blob-num js-line-number" data-line-number="6188"></td>
        <td id="LC6188" class="blob-code blob-code-inner js-file-line">              exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L6189" class="blob-num js-line-number" data-line-number="6189"></td>
        <td id="LC6189" class="blob-code blob-code-inner js-file-line">              result.reject(e);</td>
      </tr>
      <tr>
        <td id="L6190" class="blob-num js-line-number" data-line-number="6190"></td>
        <td id="LC6190" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6191" class="blob-num js-line-number" data-line-number="6191"></td>
        <td id="LC6191" class="blob-code blob-code-inner js-file-line">          };</td>
      </tr>
      <tr>
        <td id="L6192" class="blob-num js-line-number" data-line-number="6192"></td>
        <td id="LC6192" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6193" class="blob-num js-line-number" data-line-number="6193"></td>
        <td id="LC6193" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (pending) {</td>
      </tr>
      <tr>
        <td id="L6194" class="blob-num js-line-number" data-line-number="6194"></td>
        <td id="LC6194" class="blob-code blob-code-inner js-file-line">            pending.<span class="pl-c1">push</span>([wrappedCallback, wrappedErrback]);</td>
      </tr>
      <tr>
        <td id="L6195" class="blob-num js-line-number" data-line-number="6195"></td>
        <td id="LC6195" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6196" class="blob-num js-line-number" data-line-number="6196"></td>
        <td id="LC6196" class="blob-code blob-code-inner js-file-line">            value.then(wrappedCallback, wrappedErrback);</td>
      </tr>
      <tr>
        <td id="L6197" class="blob-num js-line-number" data-line-number="6197"></td>
        <td id="LC6197" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6198" class="blob-num js-line-number" data-line-number="6198"></td>
        <td id="LC6198" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6199" class="blob-num js-line-number" data-line-number="6199"></td>
        <td id="LC6199" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> result.promise;</td>
      </tr>
      <tr>
        <td id="L6200" class="blob-num js-line-number" data-line-number="6200"></td>
        <td id="LC6200" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6201" class="blob-num js-line-number" data-line-number="6201"></td>
        <td id="LC6201" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6202" class="blob-num js-line-number" data-line-number="6202"></td>
        <td id="LC6202" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6203" class="blob-num js-line-number" data-line-number="6203"></td>
        <td id="LC6203" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6204" class="blob-num js-line-number" data-line-number="6204"></td>
        <td id="LC6204" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> deferred;</td>
      </tr>
      <tr>
        <td id="L6205" class="blob-num js-line-number" data-line-number="6205"></td>
        <td id="LC6205" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6206" class="blob-num js-line-number" data-line-number="6206"></td>
        <td id="LC6206" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6207" class="blob-num js-line-number" data-line-number="6207"></td>
        <td id="LC6207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6208" class="blob-num js-line-number" data-line-number="6208"></td>
        <td id="LC6208" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">ref</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6209" class="blob-num js-line-number" data-line-number="6209"></td>
        <td id="LC6209" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">&amp;&amp;</span> value.then) <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L6210" class="blob-num js-line-number" data-line-number="6210"></td>
        <td id="LC6210" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L6211" class="blob-num js-line-number" data-line-number="6211"></td>
        <td id="LC6211" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">then</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>) {</td>
      </tr>
      <tr>
        <td id="L6212" class="blob-num js-line-number" data-line-number="6212"></td>
        <td id="LC6212" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> result <span class="pl-k">=</span> defer();</td>
      </tr>
      <tr>
        <td id="L6213" class="blob-num js-line-number" data-line-number="6213"></td>
        <td id="LC6213" class="blob-code blob-code-inner js-file-line">        nextTick(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6214" class="blob-num js-line-number" data-line-number="6214"></td>
        <td id="LC6214" class="blob-code blob-code-inner js-file-line">          result.resolve(callback(value));</td>
      </tr>
      <tr>
        <td id="L6215" class="blob-num js-line-number" data-line-number="6215"></td>
        <td id="LC6215" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6216" class="blob-num js-line-number" data-line-number="6216"></td>
        <td id="LC6216" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> result.promise;</td>
      </tr>
      <tr>
        <td id="L6217" class="blob-num js-line-number" data-line-number="6217"></td>
        <td id="LC6217" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6218" class="blob-num js-line-number" data-line-number="6218"></td>
        <td id="LC6218" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6219" class="blob-num js-line-number" data-line-number="6219"></td>
        <td id="LC6219" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6220" class="blob-num js-line-number" data-line-number="6220"></td>
        <td id="LC6220" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6221" class="blob-num js-line-number" data-line-number="6221"></td>
        <td id="LC6221" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6222" class="blob-num js-line-number" data-line-number="6222"></td>
        <td id="LC6222" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6223" class="blob-num js-line-number" data-line-number="6223"></td>
        <td id="LC6223" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc</span></td>
      </tr>
      <tr>
        <td id="L6224" class="blob-num js-line-number" data-line-number="6224"></td>
        <td id="LC6224" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$q#reject</span></td>
      </tr>
      <tr>
        <td id="L6225" class="blob-num js-line-number" data-line-number="6225"></td>
        <td id="LC6225" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L6226" class="blob-num js-line-number" data-line-number="6226"></td>
        <td id="LC6226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6227" class="blob-num js-line-number" data-line-number="6227"></td>
        <td id="LC6227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Creates a promise that is resolved as rejected with the specified `reason`. This api should be</span></td>
      </tr>
      <tr>
        <td id="L6228" class="blob-num js-line-number" data-line-number="6228"></td>
        <td id="LC6228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * used to forward rejection in a chain of promises. If you are dealing with the last promise in</span></td>
      </tr>
      <tr>
        <td id="L6229" class="blob-num js-line-number" data-line-number="6229"></td>
        <td id="LC6229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * a promise chain, you don&#39;t need to worry about it.</span></td>
      </tr>
      <tr>
        <td id="L6230" class="blob-num js-line-number" data-line-number="6230"></td>
        <td id="LC6230" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6231" class="blob-num js-line-number" data-line-number="6231"></td>
        <td id="LC6231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of</span></td>
      </tr>
      <tr>
        <td id="L6232" class="blob-num js-line-number" data-line-number="6232"></td>
        <td id="LC6232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * `reject` as the `throw` keyword in JavaScript. This also means that if you &quot;catch&quot; an error via</span></td>
      </tr>
      <tr>
        <td id="L6233" class="blob-num js-line-number" data-line-number="6233"></td>
        <td id="LC6233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * a promise error callback and you want to forward the error to the promise derived from the</span></td>
      </tr>
      <tr>
        <td id="L6234" class="blob-num js-line-number" data-line-number="6234"></td>
        <td id="LC6234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * current promise, you have to &quot;rethrow&quot; the error by returning a rejection constructed via</span></td>
      </tr>
      <tr>
        <td id="L6235" class="blob-num js-line-number" data-line-number="6235"></td>
        <td id="LC6235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * `reject`.</span></td>
      </tr>
      <tr>
        <td id="L6236" class="blob-num js-line-number" data-line-number="6236"></td>
        <td id="LC6236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6237" class="blob-num js-line-number" data-line-number="6237"></td>
        <td id="LC6237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6238" class="blob-num js-line-number" data-line-number="6238"></td>
        <td id="LC6238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   promiseB = promiseA.then(function(result) {</span></td>
      </tr>
      <tr>
        <td id="L6239" class="blob-num js-line-number" data-line-number="6239"></td>
        <td id="LC6239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     // success: do something and resolve promiseB</span></td>
      </tr>
      <tr>
        <td id="L6240" class="blob-num js-line-number" data-line-number="6240"></td>
        <td id="LC6240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     //          with the old or a new result</span></td>
      </tr>
      <tr>
        <td id="L6241" class="blob-num js-line-number" data-line-number="6241"></td>
        <td id="LC6241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     return result;</span></td>
      </tr>
      <tr>
        <td id="L6242" class="blob-num js-line-number" data-line-number="6242"></td>
        <td id="LC6242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   }, function(reason) {</span></td>
      </tr>
      <tr>
        <td id="L6243" class="blob-num js-line-number" data-line-number="6243"></td>
        <td id="LC6243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     // error: handle the error if possible and</span></td>
      </tr>
      <tr>
        <td id="L6244" class="blob-num js-line-number" data-line-number="6244"></td>
        <td id="LC6244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     //        resolve promiseB with newPromiseOrValue,</span></td>
      </tr>
      <tr>
        <td id="L6245" class="blob-num js-line-number" data-line-number="6245"></td>
        <td id="LC6245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     //        otherwise forward the rejection to promiseB</span></td>
      </tr>
      <tr>
        <td id="L6246" class="blob-num js-line-number" data-line-number="6246"></td>
        <td id="LC6246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     if (canHandle(reason)) {</span></td>
      </tr>
      <tr>
        <td id="L6247" class="blob-num js-line-number" data-line-number="6247"></td>
        <td id="LC6247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      // handle the error and recover</span></td>
      </tr>
      <tr>
        <td id="L6248" class="blob-num js-line-number" data-line-number="6248"></td>
        <td id="LC6248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      return newPromiseOrValue;</span></td>
      </tr>
      <tr>
        <td id="L6249" class="blob-num js-line-number" data-line-number="6249"></td>
        <td id="LC6249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     }</span></td>
      </tr>
      <tr>
        <td id="L6250" class="blob-num js-line-number" data-line-number="6250"></td>
        <td id="LC6250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *     return $q.reject(reason);</span></td>
      </tr>
      <tr>
        <td id="L6251" class="blob-num js-line-number" data-line-number="6251"></td>
        <td id="LC6251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   });</span></td>
      </tr>
      <tr>
        <td id="L6252" class="blob-num js-line-number" data-line-number="6252"></td>
        <td id="LC6252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6253" class="blob-num js-line-number" data-line-number="6253"></td>
        <td id="LC6253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6254" class="blob-num js-line-number" data-line-number="6254"></td>
        <td id="LC6254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {*} reason Constant, message, exception or an object representing the rejection reason.</span></td>
      </tr>
      <tr>
        <td id="L6255" class="blob-num js-line-number" data-line-number="6255"></td>
        <td id="LC6255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Promise} Returns a promise that was already resolved as rejected with the `reason`.</span></td>
      </tr>
      <tr>
        <td id="L6256" class="blob-num js-line-number" data-line-number="6256"></td>
        <td id="LC6256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6257" class="blob-num js-line-number" data-line-number="6257"></td>
        <td id="LC6257" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">reject</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6258" class="blob-num js-line-number" data-line-number="6258"></td>
        <td id="LC6258" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L6259" class="blob-num js-line-number" data-line-number="6259"></td>
        <td id="LC6259" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">then</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">callback</span>, <span class="pl-smi">errback</span>) {</td>
      </tr>
      <tr>
        <td id="L6260" class="blob-num js-line-number" data-line-number="6260"></td>
        <td id="LC6260" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> result <span class="pl-k">=</span> defer();</td>
      </tr>
      <tr>
        <td id="L6261" class="blob-num js-line-number" data-line-number="6261"></td>
        <td id="LC6261" class="blob-code blob-code-inner js-file-line">        nextTick(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6262" class="blob-num js-line-number" data-line-number="6262"></td>
        <td id="LC6262" class="blob-code blob-code-inner js-file-line">          result.resolve((errback <span class="pl-k">||</span> defaultErrback)(reason));</td>
      </tr>
      <tr>
        <td id="L6263" class="blob-num js-line-number" data-line-number="6263"></td>
        <td id="LC6263" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6264" class="blob-num js-line-number" data-line-number="6264"></td>
        <td id="LC6264" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> result.promise;</td>
      </tr>
      <tr>
        <td id="L6265" class="blob-num js-line-number" data-line-number="6265"></td>
        <td id="LC6265" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6266" class="blob-num js-line-number" data-line-number="6266"></td>
        <td id="LC6266" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6267" class="blob-num js-line-number" data-line-number="6267"></td>
        <td id="LC6267" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6268" class="blob-num js-line-number" data-line-number="6268"></td>
        <td id="LC6268" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6269" class="blob-num js-line-number" data-line-number="6269"></td>
        <td id="LC6269" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6270" class="blob-num js-line-number" data-line-number="6270"></td>
        <td id="LC6270" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6271" class="blob-num js-line-number" data-line-number="6271"></td>
        <td id="LC6271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc</span></td>
      </tr>
      <tr>
        <td id="L6272" class="blob-num js-line-number" data-line-number="6272"></td>
        <td id="LC6272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$q#when</span></td>
      </tr>
      <tr>
        <td id="L6273" class="blob-num js-line-number" data-line-number="6273"></td>
        <td id="LC6273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L6274" class="blob-num js-line-number" data-line-number="6274"></td>
        <td id="LC6274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6275" class="blob-num js-line-number" data-line-number="6275"></td>
        <td id="LC6275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.</span></td>
      </tr>
      <tr>
        <td id="L6276" class="blob-num js-line-number" data-line-number="6276"></td>
        <td id="LC6276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This is useful when you are dealing with on object that might or might not be a promise, or if</span></td>
      </tr>
      <tr>
        <td id="L6277" class="blob-num js-line-number" data-line-number="6277"></td>
        <td id="LC6277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * the promise comes from a source that can&#39;t be trusted.</span></td>
      </tr>
      <tr>
        <td id="L6278" class="blob-num js-line-number" data-line-number="6278"></td>
        <td id="LC6278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6279" class="blob-num js-line-number" data-line-number="6279"></td>
        <td id="LC6279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {*} value Value or a promise</span></td>
      </tr>
      <tr>
        <td id="L6280" class="blob-num js-line-number" data-line-number="6280"></td>
        <td id="LC6280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Promise} Returns a single promise that will be resolved with an array of values,</span></td>
      </tr>
      <tr>
        <td id="L6281" class="blob-num js-line-number" data-line-number="6281"></td>
        <td id="LC6281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   each value coresponding to the promise at the same index in the `promises` array. If any of</span></td>
      </tr>
      <tr>
        <td id="L6282" class="blob-num js-line-number" data-line-number="6282"></td>
        <td id="LC6282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   the promises is resolved with a rejection, this resulting promise will be resolved with the</span></td>
      </tr>
      <tr>
        <td id="L6283" class="blob-num js-line-number" data-line-number="6283"></td>
        <td id="LC6283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   same rejection.</span></td>
      </tr>
      <tr>
        <td id="L6284" class="blob-num js-line-number" data-line-number="6284"></td>
        <td id="LC6284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6285" class="blob-num js-line-number" data-line-number="6285"></td>
        <td id="LC6285" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">when</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">callback</span>, <span class="pl-smi">errback</span>) {</td>
      </tr>
      <tr>
        <td id="L6286" class="blob-num js-line-number" data-line-number="6286"></td>
        <td id="LC6286" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> result <span class="pl-k">=</span> defer(),</td>
      </tr>
      <tr>
        <td id="L6287" class="blob-num js-line-number" data-line-number="6287"></td>
        <td id="LC6287" class="blob-code blob-code-inner js-file-line">        done;</td>
      </tr>
      <tr>
        <td id="L6288" class="blob-num js-line-number" data-line-number="6288"></td>
        <td id="LC6288" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6289" class="blob-num js-line-number" data-line-number="6289"></td>
        <td id="LC6289" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">wrappedCallback</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6290" class="blob-num js-line-number" data-line-number="6290"></td>
        <td id="LC6290" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L6291" class="blob-num js-line-number" data-line-number="6291"></td>
        <td id="LC6291" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (callback <span class="pl-k">||</span> defaultCallback)(value);</td>
      </tr>
      <tr>
        <td id="L6292" class="blob-num js-line-number" data-line-number="6292"></td>
        <td id="LC6292" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L6293" class="blob-num js-line-number" data-line-number="6293"></td>
        <td id="LC6293" class="blob-code blob-code-inner js-file-line">        exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L6294" class="blob-num js-line-number" data-line-number="6294"></td>
        <td id="LC6294" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> reject(e);</td>
      </tr>
      <tr>
        <td id="L6295" class="blob-num js-line-number" data-line-number="6295"></td>
        <td id="LC6295" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6296" class="blob-num js-line-number" data-line-number="6296"></td>
        <td id="LC6296" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6297" class="blob-num js-line-number" data-line-number="6297"></td>
        <td id="LC6297" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6298" class="blob-num js-line-number" data-line-number="6298"></td>
        <td id="LC6298" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">wrappedErrback</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6299" class="blob-num js-line-number" data-line-number="6299"></td>
        <td id="LC6299" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L6300" class="blob-num js-line-number" data-line-number="6300"></td>
        <td id="LC6300" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (errback <span class="pl-k">||</span> defaultErrback)(reason);</td>
      </tr>
      <tr>
        <td id="L6301" class="blob-num js-line-number" data-line-number="6301"></td>
        <td id="LC6301" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L6302" class="blob-num js-line-number" data-line-number="6302"></td>
        <td id="LC6302" class="blob-code blob-code-inner js-file-line">        exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L6303" class="blob-num js-line-number" data-line-number="6303"></td>
        <td id="LC6303" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> reject(e);</td>
      </tr>
      <tr>
        <td id="L6304" class="blob-num js-line-number" data-line-number="6304"></td>
        <td id="LC6304" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6305" class="blob-num js-line-number" data-line-number="6305"></td>
        <td id="LC6305" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L6306" class="blob-num js-line-number" data-line-number="6306"></td>
        <td id="LC6306" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6307" class="blob-num js-line-number" data-line-number="6307"></td>
        <td id="LC6307" class="blob-code blob-code-inner js-file-line">    nextTick(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6308" class="blob-num js-line-number" data-line-number="6308"></td>
        <td id="LC6308" class="blob-code blob-code-inner js-file-line">      ref(value).then(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6309" class="blob-num js-line-number" data-line-number="6309"></td>
        <td id="LC6309" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (done) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L6310" class="blob-num js-line-number" data-line-number="6310"></td>
        <td id="LC6310" class="blob-code blob-code-inner js-file-line">        done <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L6311" class="blob-num js-line-number" data-line-number="6311"></td>
        <td id="LC6311" class="blob-code blob-code-inner js-file-line">        result.resolve(ref(value).then(wrappedCallback, wrappedErrback));</td>
      </tr>
      <tr>
        <td id="L6312" class="blob-num js-line-number" data-line-number="6312"></td>
        <td id="LC6312" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6313" class="blob-num js-line-number" data-line-number="6313"></td>
        <td id="LC6313" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (done) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L6314" class="blob-num js-line-number" data-line-number="6314"></td>
        <td id="LC6314" class="blob-code blob-code-inner js-file-line">        done <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L6315" class="blob-num js-line-number" data-line-number="6315"></td>
        <td id="LC6315" class="blob-code blob-code-inner js-file-line">        result.resolve(wrappedErrback(reason));</td>
      </tr>
      <tr>
        <td id="L6316" class="blob-num js-line-number" data-line-number="6316"></td>
        <td id="LC6316" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6317" class="blob-num js-line-number" data-line-number="6317"></td>
        <td id="LC6317" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L6318" class="blob-num js-line-number" data-line-number="6318"></td>
        <td id="LC6318" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6319" class="blob-num js-line-number" data-line-number="6319"></td>
        <td id="LC6319" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> result.promise;</td>
      </tr>
      <tr>
        <td id="L6320" class="blob-num js-line-number" data-line-number="6320"></td>
        <td id="LC6320" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6321" class="blob-num js-line-number" data-line-number="6321"></td>
        <td id="LC6321" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6322" class="blob-num js-line-number" data-line-number="6322"></td>
        <td id="LC6322" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6323" class="blob-num js-line-number" data-line-number="6323"></td>
        <td id="LC6323" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">defaultCallback</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6324" class="blob-num js-line-number" data-line-number="6324"></td>
        <td id="LC6324" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L6325" class="blob-num js-line-number" data-line-number="6325"></td>
        <td id="LC6325" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6326" class="blob-num js-line-number" data-line-number="6326"></td>
        <td id="LC6326" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6327" class="blob-num js-line-number" data-line-number="6327"></td>
        <td id="LC6327" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6328" class="blob-num js-line-number" data-line-number="6328"></td>
        <td id="LC6328" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">defaultErrback</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6329" class="blob-num js-line-number" data-line-number="6329"></td>
        <td id="LC6329" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> reject(reason);</td>
      </tr>
      <tr>
        <td id="L6330" class="blob-num js-line-number" data-line-number="6330"></td>
        <td id="LC6330" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6331" class="blob-num js-line-number" data-line-number="6331"></td>
        <td id="LC6331" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6332" class="blob-num js-line-number" data-line-number="6332"></td>
        <td id="LC6332" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6333" class="blob-num js-line-number" data-line-number="6333"></td>
        <td id="LC6333" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6334" class="blob-num js-line-number" data-line-number="6334"></td>
        <td id="LC6334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc</span></td>
      </tr>
      <tr>
        <td id="L6335" class="blob-num js-line-number" data-line-number="6335"></td>
        <td id="LC6335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$q#all</span></td>
      </tr>
      <tr>
        <td id="L6336" class="blob-num js-line-number" data-line-number="6336"></td>
        <td id="LC6336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L6337" class="blob-num js-line-number" data-line-number="6337"></td>
        <td id="LC6337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6338" class="blob-num js-line-number" data-line-number="6338"></td>
        <td id="LC6338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Combines multiple promises into a single promise that is resolved when all of the input</span></td>
      </tr>
      <tr>
        <td id="L6339" class="blob-num js-line-number" data-line-number="6339"></td>
        <td id="LC6339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * promises are resolved.</span></td>
      </tr>
      <tr>
        <td id="L6340" class="blob-num js-line-number" data-line-number="6340"></td>
        <td id="LC6340" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6341" class="blob-num js-line-number" data-line-number="6341"></td>
        <td id="LC6341" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {Array.&lt;Promise&gt;} promises An array of promises.</span></td>
      </tr>
      <tr>
        <td id="L6342" class="blob-num js-line-number" data-line-number="6342"></td>
        <td id="LC6342" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Promise} Returns a single promise that will be resolved with an array of values,</span></td>
      </tr>
      <tr>
        <td id="L6343" class="blob-num js-line-number" data-line-number="6343"></td>
        <td id="LC6343" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   each value coresponding to the promise at the same index in the `promises` array. If any of</span></td>
      </tr>
      <tr>
        <td id="L6344" class="blob-num js-line-number" data-line-number="6344"></td>
        <td id="LC6344" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   the promises is resolved with a rejection, this resulting promise will be resolved with the</span></td>
      </tr>
      <tr>
        <td id="L6345" class="blob-num js-line-number" data-line-number="6345"></td>
        <td id="LC6345" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *   same rejection.</span></td>
      </tr>
      <tr>
        <td id="L6346" class="blob-num js-line-number" data-line-number="6346"></td>
        <td id="LC6346" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6347" class="blob-num js-line-number" data-line-number="6347"></td>
        <td id="LC6347" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">all</span>(<span class="pl-smi">promises</span>) {</td>
      </tr>
      <tr>
        <td id="L6348" class="blob-num js-line-number" data-line-number="6348"></td>
        <td id="LC6348" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> deferred <span class="pl-k">=</span> defer(),</td>
      </tr>
      <tr>
        <td id="L6349" class="blob-num js-line-number" data-line-number="6349"></td>
        <td id="LC6349" class="blob-code blob-code-inner js-file-line">        counter <span class="pl-k">=</span> promises.<span class="pl-c1">length</span>,</td>
      </tr>
      <tr>
        <td id="L6350" class="blob-num js-line-number" data-line-number="6350"></td>
        <td id="LC6350" class="blob-code blob-code-inner js-file-line">        results <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6351" class="blob-num js-line-number" data-line-number="6351"></td>
        <td id="LC6351" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6352" class="blob-num js-line-number" data-line-number="6352"></td>
        <td id="LC6352" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (counter) {</td>
      </tr>
      <tr>
        <td id="L6353" class="blob-num js-line-number" data-line-number="6353"></td>
        <td id="LC6353" class="blob-code blob-code-inner js-file-line">      forEach(promises, <span class="pl-k">function</span>(<span class="pl-smi">promise</span>, <span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L6354" class="blob-num js-line-number" data-line-number="6354"></td>
        <td id="LC6354" class="blob-code blob-code-inner js-file-line">        ref(promise).then(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6355" class="blob-num js-line-number" data-line-number="6355"></td>
        <td id="LC6355" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (index <span class="pl-k">in</span> results) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L6356" class="blob-num js-line-number" data-line-number="6356"></td>
        <td id="LC6356" class="blob-code blob-code-inner js-file-line">          results[index] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L6357" class="blob-num js-line-number" data-line-number="6357"></td>
        <td id="LC6357" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(<span class="pl-k">--</span>counter)) deferred.resolve(results);</td>
      </tr>
      <tr>
        <td id="L6358" class="blob-num js-line-number" data-line-number="6358"></td>
        <td id="LC6358" class="blob-code blob-code-inner js-file-line">        }, <span class="pl-k">function</span>(<span class="pl-smi">reason</span>) {</td>
      </tr>
      <tr>
        <td id="L6359" class="blob-num js-line-number" data-line-number="6359"></td>
        <td id="LC6359" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (index <span class="pl-k">in</span> results) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L6360" class="blob-num js-line-number" data-line-number="6360"></td>
        <td id="LC6360" class="blob-code blob-code-inner js-file-line">          deferred.reject(reason);</td>
      </tr>
      <tr>
        <td id="L6361" class="blob-num js-line-number" data-line-number="6361"></td>
        <td id="LC6361" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6362" class="blob-num js-line-number" data-line-number="6362"></td>
        <td id="LC6362" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6363" class="blob-num js-line-number" data-line-number="6363"></td>
        <td id="LC6363" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6364" class="blob-num js-line-number" data-line-number="6364"></td>
        <td id="LC6364" class="blob-code blob-code-inner js-file-line">      deferred.resolve(results);</td>
      </tr>
      <tr>
        <td id="L6365" class="blob-num js-line-number" data-line-number="6365"></td>
        <td id="LC6365" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6366" class="blob-num js-line-number" data-line-number="6366"></td>
        <td id="LC6366" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6367" class="blob-num js-line-number" data-line-number="6367"></td>
        <td id="LC6367" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> deferred.promise;</td>
      </tr>
      <tr>
        <td id="L6368" class="blob-num js-line-number" data-line-number="6368"></td>
        <td id="LC6368" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L6369" class="blob-num js-line-number" data-line-number="6369"></td>
        <td id="LC6369" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6370" class="blob-num js-line-number" data-line-number="6370"></td>
        <td id="LC6370" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L6371" class="blob-num js-line-number" data-line-number="6371"></td>
        <td id="LC6371" class="blob-code blob-code-inner js-file-line">    defer<span class="pl-k">:</span> defer,</td>
      </tr>
      <tr>
        <td id="L6372" class="blob-num js-line-number" data-line-number="6372"></td>
        <td id="LC6372" class="blob-code blob-code-inner js-file-line">    reject<span class="pl-k">:</span> reject,</td>
      </tr>
      <tr>
        <td id="L6373" class="blob-num js-line-number" data-line-number="6373"></td>
        <td id="LC6373" class="blob-code blob-code-inner js-file-line">    when<span class="pl-k">:</span> when,</td>
      </tr>
      <tr>
        <td id="L6374" class="blob-num js-line-number" data-line-number="6374"></td>
        <td id="LC6374" class="blob-code blob-code-inner js-file-line">    all<span class="pl-k">:</span> all</td>
      </tr>
      <tr>
        <td id="L6375" class="blob-num js-line-number" data-line-number="6375"></td>
        <td id="LC6375" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6376" class="blob-num js-line-number" data-line-number="6376"></td>
        <td id="LC6376" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L6377" class="blob-num js-line-number" data-line-number="6377"></td>
        <td id="LC6377" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6378" class="blob-num js-line-number" data-line-number="6378"></td>
        <td id="LC6378" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6379" class="blob-num js-line-number" data-line-number="6379"></td>
        <td id="LC6379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L6380" class="blob-num js-line-number" data-line-number="6380"></td>
        <td id="LC6380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$routeProvider</span></td>
      </tr>
      <tr>
        <td id="L6381" class="blob-num js-line-number" data-line-number="6381"></td>
        <td id="LC6381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L6382" class="blob-num js-line-number" data-line-number="6382"></td>
        <td id="LC6382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6383" class="blob-num js-line-number" data-line-number="6383"></td>
        <td id="LC6383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6384" class="blob-num js-line-number" data-line-number="6384"></td>
        <td id="LC6384" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6385" class="blob-num js-line-number" data-line-number="6385"></td>
        <td id="LC6385" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Used for configuring routes. See {@link angular.module.ng.$route $route} for an example.</span></td>
      </tr>
      <tr>
        <td id="L6386" class="blob-num js-line-number" data-line-number="6386"></td>
        <td id="LC6386" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6387" class="blob-num js-line-number" data-line-number="6387"></td>
        <td id="LC6387" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$RouteProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L6388" class="blob-num js-line-number" data-line-number="6388"></td>
        <td id="LC6388" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> routes <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6389" class="blob-num js-line-number" data-line-number="6389"></td>
        <td id="LC6389" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6390" class="blob-num js-line-number" data-line-number="6390"></td>
        <td id="LC6390" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6391" class="blob-num js-line-number" data-line-number="6391"></td>
        <td id="LC6391" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L6392" class="blob-num js-line-number" data-line-number="6392"></td>
        <td id="LC6392" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$routeProvider#when</span></td>
      </tr>
      <tr>
        <td id="L6393" class="blob-num js-line-number" data-line-number="6393"></td>
        <td id="LC6393" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$routeProvider</span></td>
      </tr>
      <tr>
        <td id="L6394" class="blob-num js-line-number" data-line-number="6394"></td>
        <td id="LC6394" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6395" class="blob-num js-line-number" data-line-number="6395"></td>
        <td id="LC6395" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} path Route path (matched against `$location.path`). If `$location.path`</span></td>
      </tr>
      <tr>
        <td id="L6396" class="blob-num js-line-number" data-line-number="6396"></td>
        <td id="LC6396" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    contains redudant trailing slash or is missing one, the route will still match and the</span></td>
      </tr>
      <tr>
        <td id="L6397" class="blob-num js-line-number" data-line-number="6397"></td>
        <td id="LC6397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    `$location.path` will be updated to add or drop the trailing slash to exacly match the</span></td>
      </tr>
      <tr>
        <td id="L6398" class="blob-num js-line-number" data-line-number="6398"></td>
        <td id="LC6398" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    route definition.</span></td>
      </tr>
      <tr>
        <td id="L6399" class="blob-num js-line-number" data-line-number="6399"></td>
        <td id="LC6399" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {Object} route Mapping information to be assigned to `$route.current` on route</span></td>
      </tr>
      <tr>
        <td id="L6400" class="blob-num js-line-number" data-line-number="6400"></td>
        <td id="LC6400" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    match.</span></td>
      </tr>
      <tr>
        <td id="L6401" class="blob-num js-line-number" data-line-number="6401"></td>
        <td id="LC6401" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6402" class="blob-num js-line-number" data-line-number="6402"></td>
        <td id="LC6402" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    Object properties:</span></td>
      </tr>
      <tr>
        <td id="L6403" class="blob-num js-line-number" data-line-number="6403"></td>
        <td id="LC6403" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6404" class="blob-num js-line-number" data-line-number="6404"></td>
        <td id="LC6404" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    - `controller` â `{function()=}` â Controller fn that should be associated with newly</span></td>
      </tr>
      <tr>
        <td id="L6405" class="blob-num js-line-number" data-line-number="6405"></td>
        <td id="LC6405" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      created scope.</span></td>
      </tr>
      <tr>
        <td id="L6406" class="blob-num js-line-number" data-line-number="6406"></td>
        <td id="LC6406" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    - `template` â `{string=}` â path to an html template that should be used by</span></td>
      </tr>
      <tr>
        <td id="L6407" class="blob-num js-line-number" data-line-number="6407"></td>
        <td id="LC6407" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      {@link angular.module.ng.$compileProvider.directive.ngView ngView} or</span></td>
      </tr>
      <tr>
        <td id="L6408" class="blob-num js-line-number" data-line-number="6408"></td>
        <td id="LC6408" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      {@link angular.module.ng.$compileProvider.directive.ngInclude ngInclude} directives.</span></td>
      </tr>
      <tr>
        <td id="L6409" class="blob-num js-line-number" data-line-number="6409"></td>
        <td id="LC6409" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    - `redirectTo` â {(string|function())=} â value to update</span></td>
      </tr>
      <tr>
        <td id="L6410" class="blob-num js-line-number" data-line-number="6410"></td>
        <td id="LC6410" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      {@link angular.module.ng.$location $location} path with and trigger route redirection.</span></td>
      </tr>
      <tr>
        <td id="L6411" class="blob-num js-line-number" data-line-number="6411"></td>
        <td id="LC6411" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6412" class="blob-num js-line-number" data-line-number="6412"></td>
        <td id="LC6412" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      If `redirectTo` is a function, it will be called with the following parameters:</span></td>
      </tr>
      <tr>
        <td id="L6413" class="blob-num js-line-number" data-line-number="6413"></td>
        <td id="LC6413" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6414" class="blob-num js-line-number" data-line-number="6414"></td>
        <td id="LC6414" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      - `{Object.&lt;string&gt;}` - route parameters extracted from the current</span></td>
      </tr>
      <tr>
        <td id="L6415" class="blob-num js-line-number" data-line-number="6415"></td>
        <td id="LC6415" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *        `$location.path()` by applying the current route template.</span></td>
      </tr>
      <tr>
        <td id="L6416" class="blob-num js-line-number" data-line-number="6416"></td>
        <td id="LC6416" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      - `{string}` - current `$location.path()`</span></td>
      </tr>
      <tr>
        <td id="L6417" class="blob-num js-line-number" data-line-number="6417"></td>
        <td id="LC6417" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      - `{Object}` - current `$location.search()`</span></td>
      </tr>
      <tr>
        <td id="L6418" class="blob-num js-line-number" data-line-number="6418"></td>
        <td id="LC6418" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6419" class="blob-num js-line-number" data-line-number="6419"></td>
        <td id="LC6419" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      The custom `redirectTo` function is expected to return a string which will be used</span></td>
      </tr>
      <tr>
        <td id="L6420" class="blob-num js-line-number" data-line-number="6420"></td>
        <td id="LC6420" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      to update `$location.path()` and `$location.search()`.</span></td>
      </tr>
      <tr>
        <td id="L6421" class="blob-num js-line-number" data-line-number="6421"></td>
        <td id="LC6421" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6422" class="blob-num js-line-number" data-line-number="6422"></td>
        <td id="LC6422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    - `[reloadOnSearch=true]` - {boolean=} - reload route when only $location.search()</span></td>
      </tr>
      <tr>
        <td id="L6423" class="blob-num js-line-number" data-line-number="6423"></td>
        <td id="LC6423" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    changes.</span></td>
      </tr>
      <tr>
        <td id="L6424" class="blob-num js-line-number" data-line-number="6424"></td>
        <td id="LC6424" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6425" class="blob-num js-line-number" data-line-number="6425"></td>
        <td id="LC6425" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      If the option is set to `false` and url in the browser changes, then</span></td>
      </tr>
      <tr>
        <td id="L6426" class="blob-num js-line-number" data-line-number="6426"></td>
        <td id="LC6426" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *      `$routeUpdate` event is broadcasted on the root scope.</span></td>
      </tr>
      <tr>
        <td id="L6427" class="blob-num js-line-number" data-line-number="6427"></td>
        <td id="LC6427" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6428" class="blob-num js-line-number" data-line-number="6428"></td>
        <td id="LC6428" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Object} self</span></td>
      </tr>
      <tr>
        <td id="L6429" class="blob-num js-line-number" data-line-number="6429"></td>
        <td id="LC6429" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6430" class="blob-num js-line-number" data-line-number="6430"></td>
        <td id="LC6430" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6431" class="blob-num js-line-number" data-line-number="6431"></td>
        <td id="LC6431" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Adds a new route definition to the `$route` service.</span></td>
      </tr>
      <tr>
        <td id="L6432" class="blob-num js-line-number" data-line-number="6432"></td>
        <td id="LC6432" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6433" class="blob-num js-line-number" data-line-number="6433"></td>
        <td id="LC6433" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">when</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">path</span>, <span class="pl-smi">route</span>) {</td>
      </tr>
      <tr>
        <td id="L6434" class="blob-num js-line-number" data-line-number="6434"></td>
        <td id="LC6434" class="blob-code blob-code-inner js-file-line">    routes[path] <span class="pl-k">=</span> extend({reloadOnSearch<span class="pl-k">:</span> <span class="pl-c1">true</span>}, route);</td>
      </tr>
      <tr>
        <td id="L6435" class="blob-num js-line-number" data-line-number="6435"></td>
        <td id="LC6435" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6436" class="blob-num js-line-number" data-line-number="6436"></td>
        <td id="LC6436" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// create redirection for trailing slashes</span></td>
      </tr>
      <tr>
        <td id="L6437" class="blob-num js-line-number" data-line-number="6437"></td>
        <td id="LC6437" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (path) {</td>
      </tr>
      <tr>
        <td id="L6438" class="blob-num js-line-number" data-line-number="6438"></td>
        <td id="LC6438" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> redirectPath <span class="pl-k">=</span> (path[path.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>] <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>)</td>
      </tr>
      <tr>
        <td id="L6439" class="blob-num js-line-number" data-line-number="6439"></td>
        <td id="LC6439" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> path.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, path.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)</td>
      </tr>
      <tr>
        <td id="L6440" class="blob-num js-line-number" data-line-number="6440"></td>
        <td id="LC6440" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> path <span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>/<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L6441" class="blob-num js-line-number" data-line-number="6441"></td>
        <td id="LC6441" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6442" class="blob-num js-line-number" data-line-number="6442"></td>
        <td id="LC6442" class="blob-code blob-code-inner js-file-line">      routes[redirectPath] <span class="pl-k">=</span> {redirectTo<span class="pl-k">:</span> path};</td>
      </tr>
      <tr>
        <td id="L6443" class="blob-num js-line-number" data-line-number="6443"></td>
        <td id="LC6443" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6444" class="blob-num js-line-number" data-line-number="6444"></td>
        <td id="LC6444" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6445" class="blob-num js-line-number" data-line-number="6445"></td>
        <td id="LC6445" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L6446" class="blob-num js-line-number" data-line-number="6446"></td>
        <td id="LC6446" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6447" class="blob-num js-line-number" data-line-number="6447"></td>
        <td id="LC6447" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6448" class="blob-num js-line-number" data-line-number="6448"></td>
        <td id="LC6448" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6449" class="blob-num js-line-number" data-line-number="6449"></td>
        <td id="LC6449" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L6450" class="blob-num js-line-number" data-line-number="6450"></td>
        <td id="LC6450" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$routeProvider#otherwise</span></td>
      </tr>
      <tr>
        <td id="L6451" class="blob-num js-line-number" data-line-number="6451"></td>
        <td id="LC6451" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$routeProvider</span></td>
      </tr>
      <tr>
        <td id="L6452" class="blob-num js-line-number" data-line-number="6452"></td>
        <td id="LC6452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6453" class="blob-num js-line-number" data-line-number="6453"></td>
        <td id="LC6453" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6454" class="blob-num js-line-number" data-line-number="6454"></td>
        <td id="LC6454" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Sets route definition that will be used on route change when no other route definition</span></td>
      </tr>
      <tr>
        <td id="L6455" class="blob-num js-line-number" data-line-number="6455"></td>
        <td id="LC6455" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * is matched.</span></td>
      </tr>
      <tr>
        <td id="L6456" class="blob-num js-line-number" data-line-number="6456"></td>
        <td id="LC6456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L6457" class="blob-num js-line-number" data-line-number="6457"></td>
        <td id="LC6457" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {Object} params Mapping information to be assigned to `$route.current`.</span></td>
      </tr>
      <tr>
        <td id="L6458" class="blob-num js-line-number" data-line-number="6458"></td>
        <td id="LC6458" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@returns</span> {Object} self</span></td>
      </tr>
      <tr>
        <td id="L6459" class="blob-num js-line-number" data-line-number="6459"></td>
        <td id="LC6459" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L6460" class="blob-num js-line-number" data-line-number="6460"></td>
        <td id="LC6460" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">otherwise</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L6461" class="blob-num js-line-number" data-line-number="6461"></td>
        <td id="LC6461" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.when(<span class="pl-c1">null</span>, params);</td>
      </tr>
      <tr>
        <td id="L6462" class="blob-num js-line-number" data-line-number="6462"></td>
        <td id="LC6462" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L6463" class="blob-num js-line-number" data-line-number="6463"></td>
        <td id="LC6463" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6464" class="blob-num js-line-number" data-line-number="6464"></td>
        <td id="LC6464" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6465" class="blob-num js-line-number" data-line-number="6465"></td>
        <td id="LC6465" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6466" class="blob-num js-line-number" data-line-number="6466"></td>
        <td id="LC6466" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$location<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$routeParams<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6467" class="blob-num js-line-number" data-line-number="6467"></td>
        <td id="LC6467" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>( <span class="pl-smi">$rootScope</span>,  <span class="pl-smi">$location</span>,  <span class="pl-smi">$routeParams</span>) {</td>
      </tr>
      <tr>
        <td id="L6468" class="blob-num js-line-number" data-line-number="6468"></td>
        <td id="LC6468" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6469" class="blob-num js-line-number" data-line-number="6469"></td>
        <td id="LC6469" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6470" class="blob-num js-line-number" data-line-number="6470"></td>
        <td id="LC6470" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L6471" class="blob-num js-line-number" data-line-number="6471"></td>
        <td id="LC6471" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$route</span></td>
      </tr>
      <tr>
        <td id="L6472" class="blob-num js-line-number" data-line-number="6472"></td>
        <td id="LC6472" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $location</span></td>
      </tr>
      <tr>
        <td id="L6473" class="blob-num js-line-number" data-line-number="6473"></td>
        <td id="LC6473" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $routeParams</span></td>
      </tr>
      <tr>
        <td id="L6474" class="blob-num js-line-number" data-line-number="6474"></td>
        <td id="LC6474" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6475" class="blob-num js-line-number" data-line-number="6475"></td>
        <td id="LC6475" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@property</span> {Object} current Reference to the current route definition.</span></td>
      </tr>
      <tr>
        <td id="L6476" class="blob-num js-line-number" data-line-number="6476"></td>
        <td id="LC6476" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@property</span> {Array.&lt;Object&gt;} routes Array of all configured routes.</span></td>
      </tr>
      <tr>
        <td id="L6477" class="blob-num js-line-number" data-line-number="6477"></td>
        <td id="LC6477" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6478" class="blob-num js-line-number" data-line-number="6478"></td>
        <td id="LC6478" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6479" class="blob-num js-line-number" data-line-number="6479"></td>
        <td id="LC6479" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Is used for deep-linking URLs to controllers and views (HTML partials).</span></td>
      </tr>
      <tr>
        <td id="L6480" class="blob-num js-line-number" data-line-number="6480"></td>
        <td id="LC6480" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * It watches `$location.url()` and tries to map the path to an existing route definition.</span></td>
      </tr>
      <tr>
        <td id="L6481" class="blob-num js-line-number" data-line-number="6481"></td>
        <td id="LC6481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6482" class="blob-num js-line-number" data-line-number="6482"></td>
        <td id="LC6482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * You can define routes through {@link angular.module.ng.$routeProvider $routeProvider}&#39;s API.</span></td>
      </tr>
      <tr>
        <td id="L6483" class="blob-num js-line-number" data-line-number="6483"></td>
        <td id="LC6483" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6484" class="blob-num js-line-number" data-line-number="6484"></td>
        <td id="LC6484" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The `$route` service is typically used in conjunction with {@link angular.module.ng.$compileProvider.directive.ngView ngView}</span></td>
      </tr>
      <tr>
        <td id="L6485" class="blob-num js-line-number" data-line-number="6485"></td>
        <td id="LC6485" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * directive and the {@link angular.module.ng.$routeParams $routeParams} service.</span></td>
      </tr>
      <tr>
        <td id="L6486" class="blob-num js-line-number" data-line-number="6486"></td>
        <td id="LC6486" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6487" class="blob-num js-line-number" data-line-number="6487"></td>
        <td id="LC6487" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L6488" class="blob-num js-line-number" data-line-number="6488"></td>
        <td id="LC6488" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       This example shows how changing the URL hash causes the `$route` to match a route against the</span></td>
      </tr>
      <tr>
        <td id="L6489" class="blob-num js-line-number" data-line-number="6489"></td>
        <td id="LC6489" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       URL, and the `ngView` pulls in the partial.</span></td>
      </tr>
      <tr>
        <td id="L6490" class="blob-num js-line-number" data-line-number="6490"></td>
        <td id="LC6490" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6491" class="blob-num js-line-number" data-line-number="6491"></td>
        <td id="LC6491" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       Note that this example is using {@link angular.module.ng.$compileProvider.directive.script inlined templates}</span></td>
      </tr>
      <tr>
        <td id="L6492" class="blob-num js-line-number" data-line-number="6492"></td>
        <td id="LC6492" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       to get it working on jsfiddle as well.</span></td>
      </tr>
      <tr>
        <td id="L6493" class="blob-num js-line-number" data-line-number="6493"></td>
        <td id="LC6493" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6494" class="blob-num js-line-number" data-line-number="6494"></td>
        <td id="LC6494" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example module=&quot;route&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L6495" class="blob-num js-line-number" data-line-number="6495"></td>
        <td id="LC6495" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L6496" class="blob-num js-line-number" data-line-number="6496"></td>
        <td id="LC6496" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;script type=&quot;text/ng-template&quot; id=&quot;examples/book.html&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L6497" class="blob-num js-line-number" data-line-number="6497"></td>
        <td id="LC6497" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            controller: {{name}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L6498" class="blob-num js-line-number" data-line-number="6498"></td>
        <td id="LC6498" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            Book Id: {{params.bookId}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L6499" class="blob-num js-line-number" data-line-number="6499"></td>
        <td id="LC6499" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L6500" class="blob-num js-line-number" data-line-number="6500"></td>
        <td id="LC6500" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6501" class="blob-num js-line-number" data-line-number="6501"></td>
        <td id="LC6501" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;script type=&quot;text/ng-template&quot; id=&quot;examples/chapter.html&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L6502" class="blob-num js-line-number" data-line-number="6502"></td>
        <td id="LC6502" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            controller: {{name}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L6503" class="blob-num js-line-number" data-line-number="6503"></td>
        <td id="LC6503" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            Book Id: {{params.bookId}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L6504" class="blob-num js-line-number" data-line-number="6504"></td>
        <td id="LC6504" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            Chapter Id: {{params.chapterId}}</span></td>
      </tr>
      <tr>
        <td id="L6505" class="blob-num js-line-number" data-line-number="6505"></td>
        <td id="LC6505" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L6506" class="blob-num js-line-number" data-line-number="6506"></td>
        <td id="LC6506" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6507" class="blob-num js-line-number" data-line-number="6507"></td>
        <td id="LC6507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L6508" class="blob-num js-line-number" data-line-number="6508"></td>
        <td id="LC6508" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            angular.module(&#39;route&#39;, [], function($routeProvider, $locationProvider) {</span></td>
      </tr>
      <tr>
        <td id="L6509" class="blob-num js-line-number" data-line-number="6509"></td>
        <td id="LC6509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $routeProvider.when(&#39;/Book/:bookId&#39;, {template: &#39;examples/book.html&#39;, controller: BookCntl});</span></td>
      </tr>
      <tr>
        <td id="L6510" class="blob-num js-line-number" data-line-number="6510"></td>
        <td id="LC6510" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $routeProvider.when(&#39;/Book/:bookId/ch/:chapterId&#39;, {template: &#39;examples/chapter.html&#39;, controller: ChapterCntl});</span></td>
      </tr>
      <tr>
        <td id="L6511" class="blob-num js-line-number" data-line-number="6511"></td>
        <td id="LC6511" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6512" class="blob-num js-line-number" data-line-number="6512"></td>
        <td id="LC6512" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              // configure html5 to get links working on jsfiddle</span></td>
      </tr>
      <tr>
        <td id="L6513" class="blob-num js-line-number" data-line-number="6513"></td>
        <td id="LC6513" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $locationProvider.html5Mode(true);</span></td>
      </tr>
      <tr>
        <td id="L6514" class="blob-num js-line-number" data-line-number="6514"></td>
        <td id="LC6514" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L6515" class="blob-num js-line-number" data-line-number="6515"></td>
        <td id="LC6515" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6516" class="blob-num js-line-number" data-line-number="6516"></td>
        <td id="LC6516" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            function MainCntl($scope, $route, $routeParams, $location) {</span></td>
      </tr>
      <tr>
        <td id="L6517" class="blob-num js-line-number" data-line-number="6517"></td>
        <td id="LC6517" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.$route = $route;</span></td>
      </tr>
      <tr>
        <td id="L6518" class="blob-num js-line-number" data-line-number="6518"></td>
        <td id="LC6518" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.$location = $location;</span></td>
      </tr>
      <tr>
        <td id="L6519" class="blob-num js-line-number" data-line-number="6519"></td>
        <td id="LC6519" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.$routeParams = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L6520" class="blob-num js-line-number" data-line-number="6520"></td>
        <td id="LC6520" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L6521" class="blob-num js-line-number" data-line-number="6521"></td>
        <td id="LC6521" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6522" class="blob-num js-line-number" data-line-number="6522"></td>
        <td id="LC6522" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            function BookCntl($scope, $routeParams) {</span></td>
      </tr>
      <tr>
        <td id="L6523" class="blob-num js-line-number" data-line-number="6523"></td>
        <td id="LC6523" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.name = &quot;BookCntl&quot;;</span></td>
      </tr>
      <tr>
        <td id="L6524" class="blob-num js-line-number" data-line-number="6524"></td>
        <td id="LC6524" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.params = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L6525" class="blob-num js-line-number" data-line-number="6525"></td>
        <td id="LC6525" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L6526" class="blob-num js-line-number" data-line-number="6526"></td>
        <td id="LC6526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6527" class="blob-num js-line-number" data-line-number="6527"></td>
        <td id="LC6527" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            function ChapterCntl($scope, $routeParams) {</span></td>
      </tr>
      <tr>
        <td id="L6528" class="blob-num js-line-number" data-line-number="6528"></td>
        <td id="LC6528" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.name = &quot;ChapterCntl&quot;;</span></td>
      </tr>
      <tr>
        <td id="L6529" class="blob-num js-line-number" data-line-number="6529"></td>
        <td id="LC6529" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $scope.params = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L6530" class="blob-num js-line-number" data-line-number="6530"></td>
        <td id="LC6530" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L6531" class="blob-num js-line-number" data-line-number="6531"></td>
        <td id="LC6531" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L6532" class="blob-num js-line-number" data-line-number="6532"></td>
        <td id="LC6532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6533" class="blob-num js-line-number" data-line-number="6533"></td>
        <td id="LC6533" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;div ng-controller=&quot;MainCntl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L6534" class="blob-num js-line-number" data-line-number="6534"></td>
        <td id="LC6534" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            Choose:</span></td>
      </tr>
      <tr>
        <td id="L6535" class="blob-num js-line-number" data-line-number="6535"></td>
        <td id="LC6535" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;a href=&quot;Book/Moby&quot;&gt;Moby&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L6536" class="blob-num js-line-number" data-line-number="6536"></td>
        <td id="LC6536" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;a href=&quot;Book/Moby/ch/1&quot;&gt;Moby: Ch1&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L6537" class="blob-num js-line-number" data-line-number="6537"></td>
        <td id="LC6537" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;a href=&quot;Book/Gatsby&quot;&gt;Gatsby&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L6538" class="blob-num js-line-number" data-line-number="6538"></td>
        <td id="LC6538" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;a href=&quot;Book/Gatsby/ch/4?key=value&quot;&gt;Gatsby: Ch4&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L6539" class="blob-num js-line-number" data-line-number="6539"></td>
        <td id="LC6539" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;a href=&quot;Book/Scarlet&quot;&gt;Scarlet Letter&lt;/a&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L6540" class="blob-num js-line-number" data-line-number="6540"></td>
        <td id="LC6540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6541" class="blob-num js-line-number" data-line-number="6541"></td>
        <td id="LC6541" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;div ng-view&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L6542" class="blob-num js-line-number" data-line-number="6542"></td>
        <td id="LC6542" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;hr /&gt;</span></td>
      </tr>
      <tr>
        <td id="L6543" class="blob-num js-line-number" data-line-number="6543"></td>
        <td id="LC6543" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6544" class="blob-num js-line-number" data-line-number="6544"></td>
        <td id="LC6544" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;pre&gt;$location.path() = {{$location.path()}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6545" class="blob-num js-line-number" data-line-number="6545"></td>
        <td id="LC6545" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;pre&gt;$route.current.template = {{$route.current.template}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6546" class="blob-num js-line-number" data-line-number="6546"></td>
        <td id="LC6546" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;pre&gt;$route.current.params = {{$route.current.params}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6547" class="blob-num js-line-number" data-line-number="6547"></td>
        <td id="LC6547" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;pre&gt;$route.current.scope.name = {{$route.current.scope.name}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6548" class="blob-num js-line-number" data-line-number="6548"></td>
        <td id="LC6548" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;pre&gt;$routeParams = {{$routeParams}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6549" class="blob-num js-line-number" data-line-number="6549"></td>
        <td id="LC6549" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L6550" class="blob-num js-line-number" data-line-number="6550"></td>
        <td id="LC6550" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L6551" class="blob-num js-line-number" data-line-number="6551"></td>
        <td id="LC6551" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L6552" class="blob-num js-line-number" data-line-number="6552"></td>
        <td id="LC6552" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should load and compile correct template&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L6553" class="blob-num js-line-number" data-line-number="6553"></td>
        <td id="LC6553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            element(&#39;a:contains(&quot;Moby: Ch1&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L6554" class="blob-num js-line-number" data-line-number="6554"></td>
        <td id="LC6554" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            var content = element(&#39;.doc-example-live [ng-view]&#39;).text();</span></td>
      </tr>
      <tr>
        <td id="L6555" class="blob-num js-line-number" data-line-number="6555"></td>
        <td id="LC6555" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(content).toMatch(/controller\: ChapterCntl/);</span></td>
      </tr>
      <tr>
        <td id="L6556" class="blob-num js-line-number" data-line-number="6556"></td>
        <td id="LC6556" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(content).toMatch(/Book Id\: Moby/);</span></td>
      </tr>
      <tr>
        <td id="L6557" class="blob-num js-line-number" data-line-number="6557"></td>
        <td id="LC6557" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(content).toMatch(/Chapter Id\: 1/);</span></td>
      </tr>
      <tr>
        <td id="L6558" class="blob-num js-line-number" data-line-number="6558"></td>
        <td id="LC6558" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6559" class="blob-num js-line-number" data-line-number="6559"></td>
        <td id="LC6559" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            element(&#39;a:contains(&quot;Scarlet&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L6560" class="blob-num js-line-number" data-line-number="6560"></td>
        <td id="LC6560" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            content = element(&#39;.doc-example-live [ng-view]&#39;).text();</span></td>
      </tr>
      <tr>
        <td id="L6561" class="blob-num js-line-number" data-line-number="6561"></td>
        <td id="LC6561" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(content).toMatch(/controller\: BookCntl/);</span></td>
      </tr>
      <tr>
        <td id="L6562" class="blob-num js-line-number" data-line-number="6562"></td>
        <td id="LC6562" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(content).toMatch(/Book Id\: Scarlet/);</span></td>
      </tr>
      <tr>
        <td id="L6563" class="blob-num js-line-number" data-line-number="6563"></td>
        <td id="LC6563" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L6564" class="blob-num js-line-number" data-line-number="6564"></td>
        <td id="LC6564" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L6565" class="blob-num js-line-number" data-line-number="6565"></td>
        <td id="LC6565" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L6566" class="blob-num js-line-number" data-line-number="6566"></td>
        <td id="LC6566" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6567" class="blob-num js-line-number" data-line-number="6567"></td>
        <td id="LC6567" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6568" class="blob-num js-line-number" data-line-number="6568"></td>
        <td id="LC6568" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6569" class="blob-num js-line-number" data-line-number="6569"></td>
        <td id="LC6569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L6570" class="blob-num js-line-number" data-line-number="6570"></td>
        <td id="LC6570" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$route#$beforeRouteChange</span></td>
      </tr>
      <tr>
        <td id="L6571" class="blob-num js-line-number" data-line-number="6571"></td>
        <td id="LC6571" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventOf angular.module.ng.$route</span></td>
      </tr>
      <tr>
        <td id="L6572" class="blob-num js-line-number" data-line-number="6572"></td>
        <td id="LC6572" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventType broadcast on root scope</span></td>
      </tr>
      <tr>
        <td id="L6573" class="blob-num js-line-number" data-line-number="6573"></td>
        <td id="LC6573" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6574" class="blob-num js-line-number" data-line-number="6574"></td>
        <td id="LC6574" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Broadcasted before a route change.</span></td>
      </tr>
      <tr>
        <td id="L6575" class="blob-num js-line-number" data-line-number="6575"></td>
        <td id="LC6575" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6576" class="blob-num js-line-number" data-line-number="6576"></td>
        <td id="LC6576" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Route} next Future route information.</span></td>
      </tr>
      <tr>
        <td id="L6577" class="blob-num js-line-number" data-line-number="6577"></td>
        <td id="LC6577" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Route} current Current route information.</span></td>
      </tr>
      <tr>
        <td id="L6578" class="blob-num js-line-number" data-line-number="6578"></td>
        <td id="LC6578" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6579" class="blob-num js-line-number" data-line-number="6579"></td>
        <td id="LC6579" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6580" class="blob-num js-line-number" data-line-number="6580"></td>
        <td id="LC6580" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6581" class="blob-num js-line-number" data-line-number="6581"></td>
        <td id="LC6581" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L6582" class="blob-num js-line-number" data-line-number="6582"></td>
        <td id="LC6582" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$route#$afterRouteChange</span></td>
      </tr>
      <tr>
        <td id="L6583" class="blob-num js-line-number" data-line-number="6583"></td>
        <td id="LC6583" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventOf angular.module.ng.$route</span></td>
      </tr>
      <tr>
        <td id="L6584" class="blob-num js-line-number" data-line-number="6584"></td>
        <td id="LC6584" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventType broadcast on root scope</span></td>
      </tr>
      <tr>
        <td id="L6585" class="blob-num js-line-number" data-line-number="6585"></td>
        <td id="LC6585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6586" class="blob-num js-line-number" data-line-number="6586"></td>
        <td id="LC6586" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Broadcasted after a route change.</span></td>
      </tr>
      <tr>
        <td id="L6587" class="blob-num js-line-number" data-line-number="6587"></td>
        <td id="LC6587" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6588" class="blob-num js-line-number" data-line-number="6588"></td>
        <td id="LC6588" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Route} current Current route information.</span></td>
      </tr>
      <tr>
        <td id="L6589" class="blob-num js-line-number" data-line-number="6589"></td>
        <td id="LC6589" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Route} previous Previous route information.</span></td>
      </tr>
      <tr>
        <td id="L6590" class="blob-num js-line-number" data-line-number="6590"></td>
        <td id="LC6590" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6591" class="blob-num js-line-number" data-line-number="6591"></td>
        <td id="LC6591" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6592" class="blob-num js-line-number" data-line-number="6592"></td>
        <td id="LC6592" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6593" class="blob-num js-line-number" data-line-number="6593"></td>
        <td id="LC6593" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L6594" class="blob-num js-line-number" data-line-number="6594"></td>
        <td id="LC6594" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$route#$routeUpdate</span></td>
      </tr>
      <tr>
        <td id="L6595" class="blob-num js-line-number" data-line-number="6595"></td>
        <td id="LC6595" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventOf angular.module.ng.$route</span></td>
      </tr>
      <tr>
        <td id="L6596" class="blob-num js-line-number" data-line-number="6596"></td>
        <td id="LC6596" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @eventType broadcast on root scope</span></td>
      </tr>
      <tr>
        <td id="L6597" class="blob-num js-line-number" data-line-number="6597"></td>
        <td id="LC6597" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6598" class="blob-num js-line-number" data-line-number="6598"></td>
        <td id="LC6598" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6599" class="blob-num js-line-number" data-line-number="6599"></td>
        <td id="LC6599" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The `reloadOnSearch` property has been set to false, and we are reusing the same</span></td>
      </tr>
      <tr>
        <td id="L6600" class="blob-num js-line-number" data-line-number="6600"></td>
        <td id="LC6600" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * instance of the Controller.</span></td>
      </tr>
      <tr>
        <td id="L6601" class="blob-num js-line-number" data-line-number="6601"></td>
        <td id="LC6601" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6602" class="blob-num js-line-number" data-line-number="6602"></td>
        <td id="LC6602" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6603" class="blob-num js-line-number" data-line-number="6603"></td>
        <td id="LC6603" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> matcher <span class="pl-k">=</span> switchRouteMatcher,</td>
      </tr>
      <tr>
        <td id="L6604" class="blob-num js-line-number" data-line-number="6604"></td>
        <td id="LC6604" class="blob-code blob-code-inner js-file-line">        dirty <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L6605" class="blob-num js-line-number" data-line-number="6605"></td>
        <td id="LC6605" class="blob-code blob-code-inner js-file-line">        forceReload <span class="pl-k">=</span> <span class="pl-c1">false</span>,</td>
      </tr>
      <tr>
        <td id="L6606" class="blob-num js-line-number" data-line-number="6606"></td>
        <td id="LC6606" class="blob-code blob-code-inner js-file-line">        $route <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6607" class="blob-num js-line-number" data-line-number="6607"></td>
        <td id="LC6607" class="blob-code blob-code-inner js-file-line">          routes<span class="pl-k">:</span> routes,</td>
      </tr>
      <tr>
        <td id="L6608" class="blob-num js-line-number" data-line-number="6608"></td>
        <td id="LC6608" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6609" class="blob-num js-line-number" data-line-number="6609"></td>
        <td id="LC6609" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6610" class="blob-num js-line-number" data-line-number="6610"></td>
        <td id="LC6610" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L6611" class="blob-num js-line-number" data-line-number="6611"></td>
        <td id="LC6611" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@name</span> angular.module.ng.$route#reload</span></td>
      </tr>
      <tr>
        <td id="L6612" class="blob-num js-line-number" data-line-number="6612"></td>
        <td id="LC6612" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * @methodOf angular.module.ng.$route</span></td>
      </tr>
      <tr>
        <td id="L6613" class="blob-num js-line-number" data-line-number="6613"></td>
        <td id="LC6613" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           *</span></td>
      </tr>
      <tr>
        <td id="L6614" class="blob-num js-line-number" data-line-number="6614"></td>
        <td id="LC6614" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6615" class="blob-num js-line-number" data-line-number="6615"></td>
        <td id="LC6615" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * Causes `$route` service to reload the current route even if</span></td>
      </tr>
      <tr>
        <td id="L6616" class="blob-num js-line-number" data-line-number="6616"></td>
        <td id="LC6616" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * {@link angular.module.ng.$location $location} hasn&#39;t changed.</span></td>
      </tr>
      <tr>
        <td id="L6617" class="blob-num js-line-number" data-line-number="6617"></td>
        <td id="LC6617" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           *</span></td>
      </tr>
      <tr>
        <td id="L6618" class="blob-num js-line-number" data-line-number="6618"></td>
        <td id="LC6618" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * As a result of that, {@link angular.module.ng.$compileProvider.directive.ngView ngView}</span></td>
      </tr>
      <tr>
        <td id="L6619" class="blob-num js-line-number" data-line-number="6619"></td>
        <td id="LC6619" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           * creates new scope, reinstantiates the controller.</span></td>
      </tr>
      <tr>
        <td id="L6620" class="blob-num js-line-number" data-line-number="6620"></td>
        <td id="LC6620" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           */</span></td>
      </tr>
      <tr>
        <td id="L6621" class="blob-num js-line-number" data-line-number="6621"></td>
        <td id="LC6621" class="blob-code blob-code-inner js-file-line">          <span class="pl-en">reload</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L6622" class="blob-num js-line-number" data-line-number="6622"></td>
        <td id="LC6622" class="blob-code blob-code-inner js-file-line">            dirty<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L6623" class="blob-num js-line-number" data-line-number="6623"></td>
        <td id="LC6623" class="blob-code blob-code-inner js-file-line">            forceReload <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L6624" class="blob-num js-line-number" data-line-number="6624"></td>
        <td id="LC6624" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6625" class="blob-num js-line-number" data-line-number="6625"></td>
        <td id="LC6625" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L6626" class="blob-num js-line-number" data-line-number="6626"></td>
        <td id="LC6626" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6627" class="blob-num js-line-number" data-line-number="6627"></td>
        <td id="LC6627" class="blob-code blob-code-inner js-file-line">    $rootScope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>() { <span class="pl-k">return</span> dirty <span class="pl-k">+</span> $location.url(); }, updateRoute);</td>
      </tr>
      <tr>
        <td id="L6628" class="blob-num js-line-number" data-line-number="6628"></td>
        <td id="LC6628" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6629" class="blob-num js-line-number" data-line-number="6629"></td>
        <td id="LC6629" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> $route;</td>
      </tr>
      <tr>
        <td id="L6630" class="blob-num js-line-number" data-line-number="6630"></td>
        <td id="LC6630" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6631" class="blob-num js-line-number" data-line-number="6631"></td>
        <td id="LC6631" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/////////////////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L6632" class="blob-num js-line-number" data-line-number="6632"></td>
        <td id="LC6632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6633" class="blob-num js-line-number" data-line-number="6633"></td>
        <td id="LC6633" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">switchRouteMatcher</span>(<span class="pl-smi">on</span>, <span class="pl-smi">when</span>) {</td>
      </tr>
      <tr>
        <td id="L6634" class="blob-num js-line-number" data-line-number="6634"></td>
        <td id="LC6634" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// TODO(i): this code is convoluted and inefficient, we should construct the route matching</span></td>
      </tr>
      <tr>
        <td id="L6635" class="blob-num js-line-number" data-line-number="6635"></td>
        <td id="LC6635" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">//   regex only once and then reuse it</span></td>
      </tr>
      <tr>
        <td id="L6636" class="blob-num js-line-number" data-line-number="6636"></td>
        <td id="LC6636" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> regex <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>^<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> when.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\.\\\(\)\^\$</span>]</span>)<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6637" class="blob-num js-line-number" data-line-number="6637"></td>
        <td id="LC6637" class="blob-code blob-code-inner js-file-line">          params <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L6638" class="blob-num js-line-number" data-line-number="6638"></td>
        <td id="LC6638" class="blob-code blob-code-inner js-file-line">          dst <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6639" class="blob-num js-line-number" data-line-number="6639"></td>
        <td id="LC6639" class="blob-code blob-code-inner js-file-line">      forEach(when.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\W</span><span class="pl-pds">/</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">param</span>) {</td>
      </tr>
      <tr>
        <td id="L6640" class="blob-num js-line-number" data-line-number="6640"></td>
        <td id="LC6640" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (param) {</td>
      </tr>
      <tr>
        <td id="L6641" class="blob-num js-line-number" data-line-number="6641"></td>
        <td id="LC6641" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> paramRegExp <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> param <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>([<span class="pl-cce">\\</span>W])<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6642" class="blob-num js-line-number" data-line-number="6642"></td>
        <td id="LC6642" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (regex.<span class="pl-c1">match</span>(paramRegExp)) {</td>
      </tr>
      <tr>
        <td id="L6643" class="blob-num js-line-number" data-line-number="6643"></td>
        <td id="LC6643" class="blob-code blob-code-inner js-file-line">            regex <span class="pl-k">=</span> regex.<span class="pl-c1">replace</span>(paramRegExp, <span class="pl-s"><span class="pl-pds">&quot;</span>([^<span class="pl-cce">\\</span>/]*)$1<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6644" class="blob-num js-line-number" data-line-number="6644"></td>
        <td id="LC6644" class="blob-code blob-code-inner js-file-line">            params.<span class="pl-c1">push</span>(param);</td>
      </tr>
      <tr>
        <td id="L6645" class="blob-num js-line-number" data-line-number="6645"></td>
        <td id="LC6645" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6646" class="blob-num js-line-number" data-line-number="6646"></td>
        <td id="LC6646" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6647" class="blob-num js-line-number" data-line-number="6647"></td>
        <td id="LC6647" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6648" class="blob-num js-line-number" data-line-number="6648"></td>
        <td id="LC6648" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> on.<span class="pl-c1">match</span>(<span class="pl-k">new</span> <span class="pl-en">RegExp</span>(regex));</td>
      </tr>
      <tr>
        <td id="L6649" class="blob-num js-line-number" data-line-number="6649"></td>
        <td id="LC6649" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (match) {</td>
      </tr>
      <tr>
        <td id="L6650" class="blob-num js-line-number" data-line-number="6650"></td>
        <td id="LC6650" class="blob-code blob-code-inner js-file-line">        forEach(params, <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">index</span>) {</td>
      </tr>
      <tr>
        <td id="L6651" class="blob-num js-line-number" data-line-number="6651"></td>
        <td id="LC6651" class="blob-code blob-code-inner js-file-line">          dst[name] <span class="pl-k">=</span> match[index <span class="pl-k">+</span> <span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6652" class="blob-num js-line-number" data-line-number="6652"></td>
        <td id="LC6652" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L6653" class="blob-num js-line-number" data-line-number="6653"></td>
        <td id="LC6653" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6654" class="blob-num js-line-number" data-line-number="6654"></td>
        <td id="LC6654" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> match <span class="pl-k">?</span> dst <span class="pl-k">:</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6655" class="blob-num js-line-number" data-line-number="6655"></td>
        <td id="LC6655" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6656" class="blob-num js-line-number" data-line-number="6656"></td>
        <td id="LC6656" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6657" class="blob-num js-line-number" data-line-number="6657"></td>
        <td id="LC6657" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">updateRoute</span>() {</td>
      </tr>
      <tr>
        <td id="L6658" class="blob-num js-line-number" data-line-number="6658"></td>
        <td id="LC6658" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> next <span class="pl-k">=</span> parseRoute(),</td>
      </tr>
      <tr>
        <td id="L6659" class="blob-num js-line-number" data-line-number="6659"></td>
        <td id="LC6659" class="blob-code blob-code-inner js-file-line">          last <span class="pl-k">=</span> $route.<span class="pl-c1">current</span>;</td>
      </tr>
      <tr>
        <td id="L6660" class="blob-num js-line-number" data-line-number="6660"></td>
        <td id="LC6660" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6661" class="blob-num js-line-number" data-line-number="6661"></td>
        <td id="LC6661" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (next <span class="pl-k">&amp;&amp;</span> last <span class="pl-k">&amp;&amp;</span> next.$route <span class="pl-k">===</span> last.$route</td>
      </tr>
      <tr>
        <td id="L6662" class="blob-num js-line-number" data-line-number="6662"></td>
        <td id="LC6662" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">&amp;&amp;</span> equals(next.pathParams, last.pathParams) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>next.reloadOnSearch <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>forceReload) {</td>
      </tr>
      <tr>
        <td id="L6663" class="blob-num js-line-number" data-line-number="6663"></td>
        <td id="LC6663" class="blob-code blob-code-inner js-file-line">        last.params <span class="pl-k">=</span> next.params;</td>
      </tr>
      <tr>
        <td id="L6664" class="blob-num js-line-number" data-line-number="6664"></td>
        <td id="LC6664" class="blob-code blob-code-inner js-file-line">        copy(last.params, $routeParams);</td>
      </tr>
      <tr>
        <td id="L6665" class="blob-num js-line-number" data-line-number="6665"></td>
        <td id="LC6665" class="blob-code blob-code-inner js-file-line">        $rootScope.$broadcast(<span class="pl-s"><span class="pl-pds">&#39;</span>$routeUpdate<span class="pl-pds">&#39;</span></span>, last);</td>
      </tr>
      <tr>
        <td id="L6666" class="blob-num js-line-number" data-line-number="6666"></td>
        <td id="LC6666" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> <span class="pl-k">if</span> (next <span class="pl-k">||</span> last) {</td>
      </tr>
      <tr>
        <td id="L6667" class="blob-num js-line-number" data-line-number="6667"></td>
        <td id="LC6667" class="blob-code blob-code-inner js-file-line">        forceReload <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L6668" class="blob-num js-line-number" data-line-number="6668"></td>
        <td id="LC6668" class="blob-code blob-code-inner js-file-line">        $rootScope.$broadcast(<span class="pl-s"><span class="pl-pds">&#39;</span>$beforeRouteChange<span class="pl-pds">&#39;</span></span>, next, last);</td>
      </tr>
      <tr>
        <td id="L6669" class="blob-num js-line-number" data-line-number="6669"></td>
        <td id="LC6669" class="blob-code blob-code-inner js-file-line">        $route.<span class="pl-c1">current</span> <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L6670" class="blob-num js-line-number" data-line-number="6670"></td>
        <td id="LC6670" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (next) {</td>
      </tr>
      <tr>
        <td id="L6671" class="blob-num js-line-number" data-line-number="6671"></td>
        <td id="LC6671" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (next.redirectTo) {</td>
      </tr>
      <tr>
        <td id="L6672" class="blob-num js-line-number" data-line-number="6672"></td>
        <td id="LC6672" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isString(next.redirectTo)) {</td>
      </tr>
      <tr>
        <td id="L6673" class="blob-num js-line-number" data-line-number="6673"></td>
        <td id="LC6673" class="blob-code blob-code-inner js-file-line">              $location.path(interpolate(next.redirectTo, next.params)).<span class="pl-c1">search</span>(next.params)</td>
      </tr>
      <tr>
        <td id="L6674" class="blob-num js-line-number" data-line-number="6674"></td>
        <td id="LC6674" class="blob-code blob-code-inner js-file-line">                       .<span class="pl-c1">replace</span>();</td>
      </tr>
      <tr>
        <td id="L6675" class="blob-num js-line-number" data-line-number="6675"></td>
        <td id="LC6675" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6676" class="blob-num js-line-number" data-line-number="6676"></td>
        <td id="LC6676" class="blob-code blob-code-inner js-file-line">              $location.url(next.redirectTo(next.pathParams, $location.path(), $location.<span class="pl-c1">search</span>()))</td>
      </tr>
      <tr>
        <td id="L6677" class="blob-num js-line-number" data-line-number="6677"></td>
        <td id="LC6677" class="blob-code blob-code-inner js-file-line">                       .<span class="pl-c1">replace</span>();</td>
      </tr>
      <tr>
        <td id="L6678" class="blob-num js-line-number" data-line-number="6678"></td>
        <td id="LC6678" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L6679" class="blob-num js-line-number" data-line-number="6679"></td>
        <td id="LC6679" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6680" class="blob-num js-line-number" data-line-number="6680"></td>
        <td id="LC6680" class="blob-code blob-code-inner js-file-line">            copy(next.params, $routeParams);</td>
      </tr>
      <tr>
        <td id="L6681" class="blob-num js-line-number" data-line-number="6681"></td>
        <td id="LC6681" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L6682" class="blob-num js-line-number" data-line-number="6682"></td>
        <td id="LC6682" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6683" class="blob-num js-line-number" data-line-number="6683"></td>
        <td id="LC6683" class="blob-code blob-code-inner js-file-line">        $rootScope.$broadcast(<span class="pl-s"><span class="pl-pds">&#39;</span>$afterRouteChange<span class="pl-pds">&#39;</span></span>, next, last);</td>
      </tr>
      <tr>
        <td id="L6684" class="blob-num js-line-number" data-line-number="6684"></td>
        <td id="LC6684" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L6685" class="blob-num js-line-number" data-line-number="6685"></td>
        <td id="LC6685" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6686" class="blob-num js-line-number" data-line-number="6686"></td>
        <td id="LC6686" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6687" class="blob-num js-line-number" data-line-number="6687"></td>
        <td id="LC6687" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6688" class="blob-num js-line-number" data-line-number="6688"></td>
        <td id="LC6688" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6689" class="blob-num js-line-number" data-line-number="6689"></td>
        <td id="LC6689" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> the current active route, by matching it against the URL</span></td>
      </tr>
      <tr>
        <td id="L6690" class="blob-num js-line-number" data-line-number="6690"></td>
        <td id="LC6690" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6691" class="blob-num js-line-number" data-line-number="6691"></td>
        <td id="LC6691" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">parseRoute</span>() {</td>
      </tr>
      <tr>
        <td id="L6692" class="blob-num js-line-number" data-line-number="6692"></td>
        <td id="LC6692" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// Match a route</span></td>
      </tr>
      <tr>
        <td id="L6693" class="blob-num js-line-number" data-line-number="6693"></td>
        <td id="LC6693" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> params, match;</td>
      </tr>
      <tr>
        <td id="L6694" class="blob-num js-line-number" data-line-number="6694"></td>
        <td id="LC6694" class="blob-code blob-code-inner js-file-line">      forEach(routes, <span class="pl-k">function</span>(<span class="pl-smi">route</span>, <span class="pl-smi">path</span>) {</td>
      </tr>
      <tr>
        <td id="L6695" class="blob-num js-line-number" data-line-number="6695"></td>
        <td id="LC6695" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>match <span class="pl-k">&amp;&amp;</span> (params <span class="pl-k">=</span> matcher($location.path(), path))) {</td>
      </tr>
      <tr>
        <td id="L6696" class="blob-num js-line-number" data-line-number="6696"></td>
        <td id="LC6696" class="blob-code blob-code-inner js-file-line">          match <span class="pl-k">=</span> inherit(route, {</td>
      </tr>
      <tr>
        <td id="L6697" class="blob-num js-line-number" data-line-number="6697"></td>
        <td id="LC6697" class="blob-code blob-code-inner js-file-line">            params<span class="pl-k">:</span> extend({}, $location.<span class="pl-c1">search</span>(), params),</td>
      </tr>
      <tr>
        <td id="L6698" class="blob-num js-line-number" data-line-number="6698"></td>
        <td id="LC6698" class="blob-code blob-code-inner js-file-line">            pathParams<span class="pl-k">:</span> params});</td>
      </tr>
      <tr>
        <td id="L6699" class="blob-num js-line-number" data-line-number="6699"></td>
        <td id="LC6699" class="blob-code blob-code-inner js-file-line">          match.$route <span class="pl-k">=</span> route;</td>
      </tr>
      <tr>
        <td id="L6700" class="blob-num js-line-number" data-line-number="6700"></td>
        <td id="LC6700" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6701" class="blob-num js-line-number" data-line-number="6701"></td>
        <td id="LC6701" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6702" class="blob-num js-line-number" data-line-number="6702"></td>
        <td id="LC6702" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// No route matched; fallback to &quot;otherwise&quot; route</span></td>
      </tr>
      <tr>
        <td id="L6703" class="blob-num js-line-number" data-line-number="6703"></td>
        <td id="LC6703" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> match <span class="pl-k">||</span> routes[<span class="pl-c1">null</span>] <span class="pl-k">&amp;&amp;</span> inherit(routes[<span class="pl-c1">null</span>], {params<span class="pl-k">:</span> {}, pathParams<span class="pl-k">:</span>{}});</td>
      </tr>
      <tr>
        <td id="L6704" class="blob-num js-line-number" data-line-number="6704"></td>
        <td id="LC6704" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6705" class="blob-num js-line-number" data-line-number="6705"></td>
        <td id="LC6705" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6706" class="blob-num js-line-number" data-line-number="6706"></td>
        <td id="LC6706" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6707" class="blob-num js-line-number" data-line-number="6707"></td>
        <td id="LC6707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> interpolation of the redirect path with the parametrs</span></td>
      </tr>
      <tr>
        <td id="L6708" class="blob-num js-line-number" data-line-number="6708"></td>
        <td id="LC6708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6709" class="blob-num js-line-number" data-line-number="6709"></td>
        <td id="LC6709" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">interpolate</span>(<span class="pl-smi">string</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L6710" class="blob-num js-line-number" data-line-number="6710"></td>
        <td id="LC6710" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> result <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6711" class="blob-num js-line-number" data-line-number="6711"></td>
        <td id="LC6711" class="blob-code blob-code-inner js-file-line">      forEach((string<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">segment</span>, <span class="pl-smi">i</span>) {</td>
      </tr>
      <tr>
        <td id="L6712" class="blob-num js-line-number" data-line-number="6712"></td>
        <td id="LC6712" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (i <span class="pl-k">==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L6713" class="blob-num js-line-number" data-line-number="6713"></td>
        <td id="LC6713" class="blob-code blob-code-inner js-file-line">          result.<span class="pl-c1">push</span>(segment);</td>
      </tr>
      <tr>
        <td id="L6714" class="blob-num js-line-number" data-line-number="6714"></td>
        <td id="LC6714" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6715" class="blob-num js-line-number" data-line-number="6715"></td>
        <td id="LC6715" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> segmentMatch <span class="pl-k">=</span> segment.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>)(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-pds">/</span></span>);</td>
      </tr>
      <tr>
        <td id="L6716" class="blob-num js-line-number" data-line-number="6716"></td>
        <td id="LC6716" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> key <span class="pl-k">=</span> segmentMatch[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L6717" class="blob-num js-line-number" data-line-number="6717"></td>
        <td id="LC6717" class="blob-code blob-code-inner js-file-line">          result.<span class="pl-c1">push</span>(params[key]);</td>
      </tr>
      <tr>
        <td id="L6718" class="blob-num js-line-number" data-line-number="6718"></td>
        <td id="LC6718" class="blob-code blob-code-inner js-file-line">          result.<span class="pl-c1">push</span>(segmentMatch[<span class="pl-c1">2</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6719" class="blob-num js-line-number" data-line-number="6719"></td>
        <td id="LC6719" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> params[key];</td>
      </tr>
      <tr>
        <td id="L6720" class="blob-num js-line-number" data-line-number="6720"></td>
        <td id="LC6720" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6721" class="blob-num js-line-number" data-line-number="6721"></td>
        <td id="LC6721" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L6722" class="blob-num js-line-number" data-line-number="6722"></td>
        <td id="LC6722" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> result.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6723" class="blob-num js-line-number" data-line-number="6723"></td>
        <td id="LC6723" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6724" class="blob-num js-line-number" data-line-number="6724"></td>
        <td id="LC6724" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L6725" class="blob-num js-line-number" data-line-number="6725"></td>
        <td id="LC6725" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L6726" class="blob-num js-line-number" data-line-number="6726"></td>
        <td id="LC6726" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6727" class="blob-num js-line-number" data-line-number="6727"></td>
        <td id="LC6727" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6728" class="blob-num js-line-number" data-line-number="6728"></td>
        <td id="LC6728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L6729" class="blob-num js-line-number" data-line-number="6729"></td>
        <td id="LC6729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$routeParams</span></td>
      </tr>
      <tr>
        <td id="L6730" class="blob-num js-line-number" data-line-number="6730"></td>
        <td id="LC6730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $route</span></td>
      </tr>
      <tr>
        <td id="L6731" class="blob-num js-line-number" data-line-number="6731"></td>
        <td id="LC6731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6732" class="blob-num js-line-number" data-line-number="6732"></td>
        <td id="LC6732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6733" class="blob-num js-line-number" data-line-number="6733"></td>
        <td id="LC6733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Current set of route parameters. The route parameters are a combination of the</span></td>
      </tr>
      <tr>
        <td id="L6734" class="blob-num js-line-number" data-line-number="6734"></td>
        <td id="LC6734" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$location $location} `search()`, and `path()`. The `path` parameters</span></td>
      </tr>
      <tr>
        <td id="L6735" class="blob-num js-line-number" data-line-number="6735"></td>
        <td id="LC6735" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * are extracted when the {@link angular.module.ng.$route $route} path is matched.</span></td>
      </tr>
      <tr>
        <td id="L6736" class="blob-num js-line-number" data-line-number="6736"></td>
        <td id="LC6736" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6737" class="blob-num js-line-number" data-line-number="6737"></td>
        <td id="LC6737" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In case of parameter name collision, `path` params take precedence over `search` params.</span></td>
      </tr>
      <tr>
        <td id="L6738" class="blob-num js-line-number" data-line-number="6738"></td>
        <td id="LC6738" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6739" class="blob-num js-line-number" data-line-number="6739"></td>
        <td id="LC6739" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The service guarantees that the identity of the `$routeParams` object will remain unchanged</span></td>
      </tr>
      <tr>
        <td id="L6740" class="blob-num js-line-number" data-line-number="6740"></td>
        <td id="LC6740" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (but its properties will likely change) even when a route change occurs.</span></td>
      </tr>
      <tr>
        <td id="L6741" class="blob-num js-line-number" data-line-number="6741"></td>
        <td id="LC6741" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6742" class="blob-num js-line-number" data-line-number="6742"></td>
        <td id="LC6742" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L6743" class="blob-num js-line-number" data-line-number="6743"></td>
        <td id="LC6743" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6744" class="blob-num js-line-number" data-line-number="6744"></td>
        <td id="LC6744" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  // Given:</span></td>
      </tr>
      <tr>
        <td id="L6745" class="blob-num js-line-number" data-line-number="6745"></td>
        <td id="LC6745" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  // URL: http://server.com/index.html#/Chapter/1/Section/2?search=moby</span></td>
      </tr>
      <tr>
        <td id="L6746" class="blob-num js-line-number" data-line-number="6746"></td>
        <td id="LC6746" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  // Route: /Chapter/:chapterId/Section/:sectionId</span></td>
      </tr>
      <tr>
        <td id="L6747" class="blob-num js-line-number" data-line-number="6747"></td>
        <td id="LC6747" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  //</span></td>
      </tr>
      <tr>
        <td id="L6748" class="blob-num js-line-number" data-line-number="6748"></td>
        <td id="LC6748" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  // Then</span></td>
      </tr>
      <tr>
        <td id="L6749" class="blob-num js-line-number" data-line-number="6749"></td>
        <td id="LC6749" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  $routeParams ==&gt; {chapterId:1, sectionId:2, search:&#39;moby&#39;}</span></td>
      </tr>
      <tr>
        <td id="L6750" class="blob-num js-line-number" data-line-number="6750"></td>
        <td id="LC6750" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6751" class="blob-num js-line-number" data-line-number="6751"></td>
        <td id="LC6751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6752" class="blob-num js-line-number" data-line-number="6752"></td>
        <td id="LC6752" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$RouteParamsProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L6753" class="blob-num js-line-number" data-line-number="6753"></td>
        <td id="LC6753" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> valueFn({});</td>
      </tr>
      <tr>
        <td id="L6754" class="blob-num js-line-number" data-line-number="6754"></td>
        <td id="LC6754" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L6755" class="blob-num js-line-number" data-line-number="6755"></td>
        <td id="LC6755" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6756" class="blob-num js-line-number" data-line-number="6756"></td>
        <td id="LC6756" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6757" class="blob-num js-line-number" data-line-number="6757"></td>
        <td id="LC6757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * DESIGN NOTES</span></td>
      </tr>
      <tr>
        <td id="L6758" class="blob-num js-line-number" data-line-number="6758"></td>
        <td id="LC6758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6759" class="blob-num js-line-number" data-line-number="6759"></td>
        <td id="LC6759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The design decisions behind the scope ware heavily favored for speed and memory consumption.</span></td>
      </tr>
      <tr>
        <td id="L6760" class="blob-num js-line-number" data-line-number="6760"></td>
        <td id="LC6760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6761" class="blob-num js-line-number" data-line-number="6761"></td>
        <td id="LC6761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The typical use of scope is to watch the expressions, which most of the time return the same</span></td>
      </tr>
      <tr>
        <td id="L6762" class="blob-num js-line-number" data-line-number="6762"></td>
        <td id="LC6762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * value as last time so we optimize the operation.</span></td>
      </tr>
      <tr>
        <td id="L6763" class="blob-num js-line-number" data-line-number="6763"></td>
        <td id="LC6763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6764" class="blob-num js-line-number" data-line-number="6764"></td>
        <td id="LC6764" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Closures construction is expensive from speed as well as memory:</span></td>
      </tr>
      <tr>
        <td id="L6765" class="blob-num js-line-number" data-line-number="6765"></td>
        <td id="LC6765" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - no closures, instead ups prototypical inheritance for API</span></td>
      </tr>
      <tr>
        <td id="L6766" class="blob-num js-line-number" data-line-number="6766"></td>
        <td id="LC6766" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Internal state needs to be stored on scope directly, which means that private state is</span></td>
      </tr>
      <tr>
        <td id="L6767" class="blob-num js-line-number" data-line-number="6767"></td>
        <td id="LC6767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     exposed as $$____ properties</span></td>
      </tr>
      <tr>
        <td id="L6768" class="blob-num js-line-number" data-line-number="6768"></td>
        <td id="LC6768" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6769" class="blob-num js-line-number" data-line-number="6769"></td>
        <td id="LC6769" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Loop operations are optimized by using while(count--) { ... }</span></td>
      </tr>
      <tr>
        <td id="L6770" class="blob-num js-line-number" data-line-number="6770"></td>
        <td id="LC6770" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - this means that in order to keep the same order of execution as addition we have to add</span></td>
      </tr>
      <tr>
        <td id="L6771" class="blob-num js-line-number" data-line-number="6771"></td>
        <td id="LC6771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     items to the array at the begging (shift) instead of at the end (push)</span></td>
      </tr>
      <tr>
        <td id="L6772" class="blob-num js-line-number" data-line-number="6772"></td>
        <td id="LC6772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6773" class="blob-num js-line-number" data-line-number="6773"></td>
        <td id="LC6773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Child scopes are created and removed often</span></td>
      </tr>
      <tr>
        <td id="L6774" class="blob-num js-line-number" data-line-number="6774"></td>
        <td id="LC6774" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - Using array would be slow since inserts in meddle are expensive so we use linked list</span></td>
      </tr>
      <tr>
        <td id="L6775" class="blob-num js-line-number" data-line-number="6775"></td>
        <td id="LC6775" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6776" class="blob-num js-line-number" data-line-number="6776"></td>
        <td id="LC6776" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * There are few watches then a lot of observers. This is why you don&#39;t want the observer to be</span></td>
      </tr>
      <tr>
        <td id="L6777" class="blob-num js-line-number" data-line-number="6777"></td>
        <td id="LC6777" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * implemented in the same way as watch. Watch requires return of initialization function which</span></td>
      </tr>
      <tr>
        <td id="L6778" class="blob-num js-line-number" data-line-number="6778"></td>
        <td id="LC6778" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * are expensive to construct.</span></td>
      </tr>
      <tr>
        <td id="L6779" class="blob-num js-line-number" data-line-number="6779"></td>
        <td id="LC6779" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6780" class="blob-num js-line-number" data-line-number="6780"></td>
        <td id="LC6780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6781" class="blob-num js-line-number" data-line-number="6781"></td>
        <td id="LC6781" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6782" class="blob-num js-line-number" data-line-number="6782"></td>
        <td id="LC6782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6783" class="blob-num js-line-number" data-line-number="6783"></td>
        <td id="LC6783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L6784" class="blob-num js-line-number" data-line-number="6784"></td>
        <td id="LC6784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$rootScopeProvider</span></td>
      </tr>
      <tr>
        <td id="L6785" class="blob-num js-line-number" data-line-number="6785"></td>
        <td id="LC6785" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6786" class="blob-num js-line-number" data-line-number="6786"></td>
        <td id="LC6786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6787" class="blob-num js-line-number" data-line-number="6787"></td>
        <td id="LC6787" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Provider for the $rootScope service.</span></td>
      </tr>
      <tr>
        <td id="L6788" class="blob-num js-line-number" data-line-number="6788"></td>
        <td id="LC6788" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6789" class="blob-num js-line-number" data-line-number="6789"></td>
        <td id="LC6789" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6790" class="blob-num js-line-number" data-line-number="6790"></td>
        <td id="LC6790" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6791" class="blob-num js-line-number" data-line-number="6791"></td>
        <td id="LC6791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L6792" class="blob-num js-line-number" data-line-number="6792"></td>
        <td id="LC6792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$rootScopeProvider#digestTtl</span></td>
      </tr>
      <tr>
        <td id="L6793" class="blob-num js-line-number" data-line-number="6793"></td>
        <td id="LC6793" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.ng.$rootScopeProvider</span></td>
      </tr>
      <tr>
        <td id="L6794" class="blob-num js-line-number" data-line-number="6794"></td>
        <td id="LC6794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6795" class="blob-num js-line-number" data-line-number="6795"></td>
        <td id="LC6795" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6796" class="blob-num js-line-number" data-line-number="6796"></td>
        <td id="LC6796" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Sets the number of digest iteration the scope should attempt to execute before giving up and</span></td>
      </tr>
      <tr>
        <td id="L6797" class="blob-num js-line-number" data-line-number="6797"></td>
        <td id="LC6797" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * assuming that the model is unstable.</span></td>
      </tr>
      <tr>
        <td id="L6798" class="blob-num js-line-number" data-line-number="6798"></td>
        <td id="LC6798" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6799" class="blob-num js-line-number" data-line-number="6799"></td>
        <td id="LC6799" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The current default is 10 iterations.</span></td>
      </tr>
      <tr>
        <td id="L6800" class="blob-num js-line-number" data-line-number="6800"></td>
        <td id="LC6800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6801" class="blob-num js-line-number" data-line-number="6801"></td>
        <td id="LC6801" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number} limit The number of digest iterations.</span></td>
      </tr>
      <tr>
        <td id="L6802" class="blob-num js-line-number" data-line-number="6802"></td>
        <td id="LC6802" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6803" class="blob-num js-line-number" data-line-number="6803"></td>
        <td id="LC6803" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6804" class="blob-num js-line-number" data-line-number="6804"></td>
        <td id="LC6804" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6805" class="blob-num js-line-number" data-line-number="6805"></td>
        <td id="LC6805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6806" class="blob-num js-line-number" data-line-number="6806"></td>
        <td id="LC6806" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L6807" class="blob-num js-line-number" data-line-number="6807"></td>
        <td id="LC6807" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$rootScope</span></td>
      </tr>
      <tr>
        <td id="L6808" class="blob-num js-line-number" data-line-number="6808"></td>
        <td id="LC6808" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6809" class="blob-num js-line-number" data-line-number="6809"></td>
        <td id="LC6809" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L6810" class="blob-num js-line-number" data-line-number="6810"></td>
        <td id="LC6810" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Every application has a single root {@link angular.module.ng.$rootScope.Scope scope}.</span></td>
      </tr>
      <tr>
        <td id="L6811" class="blob-num js-line-number" data-line-number="6811"></td>
        <td id="LC6811" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide</span></td>
      </tr>
      <tr>
        <td id="L6812" class="blob-num js-line-number" data-line-number="6812"></td>
        <td id="LC6812" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * event processing life-cycle. See {@link guide/dev_guide.scopes developer guide on scopes}.</span></td>
      </tr>
      <tr>
        <td id="L6813" class="blob-num js-line-number" data-line-number="6813"></td>
        <td id="LC6813" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L6814" class="blob-num js-line-number" data-line-number="6814"></td>
        <td id="LC6814" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$RootScopeProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L6815" class="blob-num js-line-number" data-line-number="6815"></td>
        <td id="LC6815" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">TTL</span> <span class="pl-k">=</span> <span class="pl-c1">10</span>;</td>
      </tr>
      <tr>
        <td id="L6816" class="blob-num js-line-number" data-line-number="6816"></td>
        <td id="LC6816" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6817" class="blob-num js-line-number" data-line-number="6817"></td>
        <td id="LC6817" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">digestTtl</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L6818" class="blob-num js-line-number" data-line-number="6818"></td>
        <td id="LC6818" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (arguments.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L6819" class="blob-num js-line-number" data-line-number="6819"></td>
        <td id="LC6819" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">TTL</span> <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L6820" class="blob-num js-line-number" data-line-number="6820"></td>
        <td id="LC6820" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6821" class="blob-num js-line-number" data-line-number="6821"></td>
        <td id="LC6821" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-c1">TTL</span>;</td>
      </tr>
      <tr>
        <td id="L6822" class="blob-num js-line-number" data-line-number="6822"></td>
        <td id="LC6822" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L6823" class="blob-num js-line-number" data-line-number="6823"></td>
        <td id="LC6823" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6824" class="blob-num js-line-number" data-line-number="6824"></td>
        <td id="LC6824" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$exceptionHandler<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6825" class="blob-num js-line-number" data-line-number="6825"></td>
        <td id="LC6825" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>( <span class="pl-smi">$injector</span>,   <span class="pl-smi">$exceptionHandler</span>,   <span class="pl-smi">$parse</span>) {</td>
      </tr>
      <tr>
        <td id="L6826" class="blob-num js-line-number" data-line-number="6826"></td>
        <td id="LC6826" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6827" class="blob-num js-line-number" data-line-number="6827"></td>
        <td id="LC6827" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6828" class="blob-num js-line-number" data-line-number="6828"></td>
        <td id="LC6828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L6829" class="blob-num js-line-number" data-line-number="6829"></td>
        <td id="LC6829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L6830" class="blob-num js-line-number" data-line-number="6830"></td>
        <td id="LC6830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6831" class="blob-num js-line-number" data-line-number="6831"></td>
        <td id="LC6831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6832" class="blob-num js-line-number" data-line-number="6832"></td>
        <td id="LC6832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A root scope can be retrieved using the {@link angular.module.ng.$rootScope $rootScope} key from the</span></td>
      </tr>
      <tr>
        <td id="L6833" class="blob-num js-line-number" data-line-number="6833"></td>
        <td id="LC6833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.AUTO.$injector $injector}. Child scopes are created using the</span></td>
      </tr>
      <tr>
        <td id="L6834" class="blob-num js-line-number" data-line-number="6834"></td>
        <td id="LC6834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when</span></td>
      </tr>
      <tr>
        <td id="L6835" class="blob-num js-line-number" data-line-number="6835"></td>
        <td id="LC6835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * compiled HTML template is executed.)</span></td>
      </tr>
      <tr>
        <td id="L6836" class="blob-num js-line-number" data-line-number="6836"></td>
        <td id="LC6836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6837" class="blob-num js-line-number" data-line-number="6837"></td>
        <td id="LC6837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Here is a simple scope snippet to show how you can interact with the scope.</span></td>
      </tr>
      <tr>
        <td id="L6838" class="blob-num js-line-number" data-line-number="6838"></td>
        <td id="LC6838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6839" class="blob-num js-line-number" data-line-number="6839"></td>
        <td id="LC6839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        angular.injector([&#39;ng&#39;]).invoke(function($rootScope) {</span></td>
      </tr>
      <tr>
        <td id="L6840" class="blob-num js-line-number" data-line-number="6840"></td>
        <td id="LC6840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var scope = $rootScope.$new();</span></td>
      </tr>
      <tr>
        <td id="L6841" class="blob-num js-line-number" data-line-number="6841"></td>
        <td id="LC6841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.salutation = &#39;Hello&#39;;</span></td>
      </tr>
      <tr>
        <td id="L6842" class="blob-num js-line-number" data-line-number="6842"></td>
        <td id="LC6842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;World&#39;;</span></td>
      </tr>
      <tr>
        <td id="L6843" class="blob-num js-line-number" data-line-number="6843"></td>
        <td id="LC6843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6844" class="blob-num js-line-number" data-line-number="6844"></td>
        <td id="LC6844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.greeting).toEqual(undefined);</span></td>
      </tr>
      <tr>
        <td id="L6845" class="blob-num js-line-number" data-line-number="6845"></td>
        <td id="LC6845" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6846" class="blob-num js-line-number" data-line-number="6846"></td>
        <td id="LC6846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$watch(&#39;name&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L6847" class="blob-num js-line-number" data-line-number="6847"></td>
        <td id="LC6847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             this.greeting = this.salutation + &#39; &#39; + this.name + &#39;!&#39;;</span></td>
      </tr>
      <tr>
        <td id="L6848" class="blob-num js-line-number" data-line-number="6848"></td>
        <td id="LC6848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }); // initialize the watch</span></td>
      </tr>
      <tr>
        <td id="L6849" class="blob-num js-line-number" data-line-number="6849"></td>
        <td id="LC6849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6850" class="blob-num js-line-number" data-line-number="6850"></td>
        <td id="LC6850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.greeting).toEqual(undefined);</span></td>
      </tr>
      <tr>
        <td id="L6851" class="blob-num js-line-number" data-line-number="6851"></td>
        <td id="LC6851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;Misko&#39;;</span></td>
      </tr>
      <tr>
        <td id="L6852" class="blob-num js-line-number" data-line-number="6852"></td>
        <td id="LC6852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           // still old value, since watches have not been called yet</span></td>
      </tr>
      <tr>
        <td id="L6853" class="blob-num js-line-number" data-line-number="6853"></td>
        <td id="LC6853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.greeting).toEqual(undefined);</span></td>
      </tr>
      <tr>
        <td id="L6854" class="blob-num js-line-number" data-line-number="6854"></td>
        <td id="LC6854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6855" class="blob-num js-line-number" data-line-number="6855"></td>
        <td id="LC6855" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$digest(); // fire all  the watches</span></td>
      </tr>
      <tr>
        <td id="L6856" class="blob-num js-line-number" data-line-number="6856"></td>
        <td id="LC6856" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.greeting).toEqual(&#39;Hello Misko!&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6857" class="blob-num js-line-number" data-line-number="6857"></td>
        <td id="LC6857" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L6858" class="blob-num js-line-number" data-line-number="6858"></td>
        <td id="LC6858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6859" class="blob-num js-line-number" data-line-number="6859"></td>
        <td id="LC6859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6860" class="blob-num js-line-number" data-line-number="6860"></td>
        <td id="LC6860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Inheritance</span></td>
      </tr>
      <tr>
        <td id="L6861" class="blob-num js-line-number" data-line-number="6861"></td>
        <td id="LC6861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A scope can inherit from a parent scope, as in this example:</span></td>
      </tr>
      <tr>
        <td id="L6862" class="blob-num js-line-number" data-line-number="6862"></td>
        <td id="LC6862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6863" class="blob-num js-line-number" data-line-number="6863"></td>
        <td id="LC6863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         var parent = $rootScope;</span></td>
      </tr>
      <tr>
        <td id="L6864" class="blob-num js-line-number" data-line-number="6864"></td>
        <td id="LC6864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         var child = parent.$new();</span></td>
      </tr>
      <tr>
        <td id="L6865" class="blob-num js-line-number" data-line-number="6865"></td>
        <td id="LC6865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6866" class="blob-num js-line-number" data-line-number="6866"></td>
        <td id="LC6866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         parent.salutation = &quot;Hello&quot;;</span></td>
      </tr>
      <tr>
        <td id="L6867" class="blob-num js-line-number" data-line-number="6867"></td>
        <td id="LC6867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         child.name = &quot;World&quot;;</span></td>
      </tr>
      <tr>
        <td id="L6868" class="blob-num js-line-number" data-line-number="6868"></td>
        <td id="LC6868" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(child.salutation).toEqual(&#39;Hello&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6869" class="blob-num js-line-number" data-line-number="6869"></td>
        <td id="LC6869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L6870" class="blob-num js-line-number" data-line-number="6870"></td>
        <td id="LC6870" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         child.salutation = &quot;Welcome&quot;;</span></td>
      </tr>
      <tr>
        <td id="L6871" class="blob-num js-line-number" data-line-number="6871"></td>
        <td id="LC6871" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(child.salutation).toEqual(&#39;Welcome&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6872" class="blob-num js-line-number" data-line-number="6872"></td>
        <td id="LC6872" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(parent.salutation).toEqual(&#39;Hello&#39;);</span></td>
      </tr>
      <tr>
        <td id="L6873" class="blob-num js-line-number" data-line-number="6873"></td>
        <td id="LC6873" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L6874" class="blob-num js-line-number" data-line-number="6874"></td>
        <td id="LC6874" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6875" class="blob-num js-line-number" data-line-number="6875"></td>
        <td id="LC6875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Dependency Injection</span></td>
      </tr>
      <tr>
        <td id="L6876" class="blob-num js-line-number" data-line-number="6876"></td>
        <td id="LC6876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * See {@link guide/dev_guide.di dependency injection}.</span></td>
      </tr>
      <tr>
        <td id="L6877" class="blob-num js-line-number" data-line-number="6877"></td>
        <td id="LC6877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6878" class="blob-num js-line-number" data-line-number="6878"></td>
        <td id="LC6878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6879" class="blob-num js-line-number" data-line-number="6879"></td>
        <td id="LC6879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object.&lt;string, function()&gt;=} providers Map of service factory which need to be provided</span></td>
      </tr>
      <tr>
        <td id="L6880" class="blob-num js-line-number" data-line-number="6880"></td>
        <td id="LC6880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     for the current scope. Defaults to {@link angular.module.ng}.</span></td>
      </tr>
      <tr>
        <td id="L6881" class="blob-num js-line-number" data-line-number="6881"></td>
        <td id="LC6881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object.&lt;string, *&gt;=} instanceCache Provides pre-instantiated services which should</span></td>
      </tr>
      <tr>
        <td id="L6882" class="blob-num js-line-number" data-line-number="6882"></td>
        <td id="LC6882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     append/override services provided by `providers`. This is handy when unit-testing and having</span></td>
      </tr>
      <tr>
        <td id="L6883" class="blob-num js-line-number" data-line-number="6883"></td>
        <td id="LC6883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     the need to override a default service.</span></td>
      </tr>
      <tr>
        <td id="L6884" class="blob-num js-line-number" data-line-number="6884"></td>
        <td id="LC6884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {Object} Newly created scope.</span></td>
      </tr>
      <tr>
        <td id="L6885" class="blob-num js-line-number" data-line-number="6885"></td>
        <td id="LC6885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L6886" class="blob-num js-line-number" data-line-number="6886"></td>
        <td id="LC6886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6887" class="blob-num js-line-number" data-line-number="6887"></td>
        <td id="LC6887" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">Scope</span>() {</td>
      </tr>
      <tr>
        <td id="L6888" class="blob-num js-line-number" data-line-number="6888"></td>
        <td id="LC6888" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$id <span class="pl-k">=</span> nextUid();</td>
      </tr>
      <tr>
        <td id="L6889" class="blob-num js-line-number" data-line-number="6889"></td>
        <td id="LC6889" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$phase <span class="pl-k">=</span> <span class="pl-v">this</span>.$parent <span class="pl-k">=</span> <span class="pl-v">this</span>.$$watchers <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L6890" class="blob-num js-line-number" data-line-number="6890"></td>
        <td id="LC6890" class="blob-code blob-code-inner js-file-line">                     <span class="pl-v">this</span>.$$nextSibling <span class="pl-k">=</span> <span class="pl-v">this</span>.$$prevSibling <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L6891" class="blob-num js-line-number" data-line-number="6891"></td>
        <td id="LC6891" class="blob-code blob-code-inner js-file-line">                     <span class="pl-v">this</span>.$$childHead <span class="pl-k">=</span> <span class="pl-v">this</span>.$$childTail <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6892" class="blob-num js-line-number" data-line-number="6892"></td>
        <td id="LC6892" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>[<span class="pl-s"><span class="pl-pds">&#39;</span>this<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-v">this</span>.$root <span class="pl-k">=</span>  <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L6893" class="blob-num js-line-number" data-line-number="6893"></td>
        <td id="LC6893" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$asyncQueue <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6894" class="blob-num js-line-number" data-line-number="6894"></td>
        <td id="LC6894" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$$listeners <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6895" class="blob-num js-line-number" data-line-number="6895"></td>
        <td id="LC6895" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L6896" class="blob-num js-line-number" data-line-number="6896"></td>
        <td id="LC6896" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6897" class="blob-num js-line-number" data-line-number="6897"></td>
        <td id="LC6897" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6898" class="blob-num js-line-number" data-line-number="6898"></td>
        <td id="LC6898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L6899" class="blob-num js-line-number" data-line-number="6899"></td>
        <td id="LC6899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$id</span></td>
      </tr>
      <tr>
        <td id="L6900" class="blob-num js-line-number" data-line-number="6900"></td>
        <td id="LC6900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @propertyOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L6901" class="blob-num js-line-number" data-line-number="6901"></td>
        <td id="LC6901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {number} Unique scope ID (monotonically increasing alphanumeric sequence) useful for</span></td>
      </tr>
      <tr>
        <td id="L6902" class="blob-num js-line-number" data-line-number="6902"></td>
        <td id="LC6902" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   debugging.</span></td>
      </tr>
      <tr>
        <td id="L6903" class="blob-num js-line-number" data-line-number="6903"></td>
        <td id="LC6903" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L6904" class="blob-num js-line-number" data-line-number="6904"></td>
        <td id="LC6904" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6905" class="blob-num js-line-number" data-line-number="6905"></td>
        <td id="LC6905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6906" class="blob-num js-line-number" data-line-number="6906"></td>
        <td id="LC6906" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">Scope</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L6907" class="blob-num js-line-number" data-line-number="6907"></td>
        <td id="LC6907" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6908" class="blob-num js-line-number" data-line-number="6908"></td>
        <td id="LC6908" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L6909" class="blob-num js-line-number" data-line-number="6909"></td>
        <td id="LC6909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$new</span></td>
      </tr>
      <tr>
        <td id="L6910" class="blob-num js-line-number" data-line-number="6910"></td>
        <td id="LC6910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L6911" class="blob-num js-line-number" data-line-number="6911"></td>
        <td id="LC6911" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L6912" class="blob-num js-line-number" data-line-number="6912"></td>
        <td id="LC6912" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6913" class="blob-num js-line-number" data-line-number="6913"></td>
        <td id="LC6913" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6914" class="blob-num js-line-number" data-line-number="6914"></td>
        <td id="LC6914" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Creates a new child {@link angular.module.ng.$rootScope.Scope scope}.</span></td>
      </tr>
      <tr>
        <td id="L6915" class="blob-num js-line-number" data-line-number="6915"></td>
        <td id="LC6915" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6916" class="blob-num js-line-number" data-line-number="6916"></td>
        <td id="LC6916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The parent scope will propagate the {@link angular.module.ng.$rootScope.Scope#$digest $digest()} and</span></td>
      </tr>
      <tr>
        <td id="L6917" class="blob-num js-line-number" data-line-number="6917"></td>
        <td id="LC6917" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$rootScope.Scope#$digest $digest()} events. The scope can be removed from the scope</span></td>
      </tr>
      <tr>
        <td id="L6918" class="blob-num js-line-number" data-line-number="6918"></td>
        <td id="LC6918" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * hierarchy using {@link angular.module.ng.$rootScope.Scope#$destroy $destroy()}.</span></td>
      </tr>
      <tr>
        <td id="L6919" class="blob-num js-line-number" data-line-number="6919"></td>
        <td id="LC6919" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6920" class="blob-num js-line-number" data-line-number="6920"></td>
        <td id="LC6920" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is desired for</span></td>
      </tr>
      <tr>
        <td id="L6921" class="blob-num js-line-number" data-line-number="6921"></td>
        <td id="LC6921" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * the scope and its child scopes to be permanently detached from the parent and thus stop</span></td>
      </tr>
      <tr>
        <td id="L6922" class="blob-num js-line-number" data-line-number="6922"></td>
        <td id="LC6922" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * participating in model change detection and listener notification by invoking.</span></td>
      </tr>
      <tr>
        <td id="L6923" class="blob-num js-line-number" data-line-number="6923"></td>
        <td id="LC6923" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6924" class="blob-num js-line-number" data-line-number="6924"></td>
        <td id="LC6924" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @params {boolean} isolate if true then the scoped does not prototypically inherit from the</span></td>
      </tr>
      <tr>
        <td id="L6925" class="blob-num js-line-number" data-line-number="6925"></td>
        <td id="LC6925" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *         parent scope. The scope is isolated, as it can not se parent scope properties.</span></td>
      </tr>
      <tr>
        <td id="L6926" class="blob-num js-line-number" data-line-number="6926"></td>
        <td id="LC6926" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *         When creating widgets it is useful for the widget to not accidently read parent</span></td>
      </tr>
      <tr>
        <td id="L6927" class="blob-num js-line-number" data-line-number="6927"></td>
        <td id="LC6927" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *         state.</span></td>
      </tr>
      <tr>
        <td id="L6928" class="blob-num js-line-number" data-line-number="6928"></td>
        <td id="LC6928" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6929" class="blob-num js-line-number" data-line-number="6929"></td>
        <td id="LC6929" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@returns</span> {Object} The newly created child scope.</span></td>
      </tr>
      <tr>
        <td id="L6930" class="blob-num js-line-number" data-line-number="6930"></td>
        <td id="LC6930" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6931" class="blob-num js-line-number" data-line-number="6931"></td>
        <td id="LC6931" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L6932" class="blob-num js-line-number" data-line-number="6932"></td>
        <td id="LC6932" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">new</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">isolate</span>) {</td>
      </tr>
      <tr>
        <td id="L6933" class="blob-num js-line-number" data-line-number="6933"></td>
        <td id="LC6933" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Child,</td>
      </tr>
      <tr>
        <td id="L6934" class="blob-num js-line-number" data-line-number="6934"></td>
        <td id="LC6934" class="blob-code blob-code-inner js-file-line">            child;</td>
      </tr>
      <tr>
        <td id="L6935" class="blob-num js-line-number" data-line-number="6935"></td>
        <td id="LC6935" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6936" class="blob-num js-line-number" data-line-number="6936"></td>
        <td id="LC6936" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isFunction(isolate)) {</td>
      </tr>
      <tr>
        <td id="L6937" class="blob-num js-line-number" data-line-number="6937"></td>
        <td id="LC6937" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// TODO: remove at some point</span></td>
      </tr>
      <tr>
        <td id="L6938" class="blob-num js-line-number" data-line-number="6938"></td>
        <td id="LC6938" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&#39;</span>API-CHANGE: Use $controller to instantiate controllers.<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L6939" class="blob-num js-line-number" data-line-number="6939"></td>
        <td id="LC6939" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6940" class="blob-num js-line-number" data-line-number="6940"></td>
        <td id="LC6940" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isolate) {</td>
      </tr>
      <tr>
        <td id="L6941" class="blob-num js-line-number" data-line-number="6941"></td>
        <td id="LC6941" class="blob-code blob-code-inner js-file-line">          child <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Scope</span>();</td>
      </tr>
      <tr>
        <td id="L6942" class="blob-num js-line-number" data-line-number="6942"></td>
        <td id="LC6942" class="blob-code blob-code-inner js-file-line">          child.$root <span class="pl-k">=</span> <span class="pl-v">this</span>.$root;</td>
      </tr>
      <tr>
        <td id="L6943" class="blob-num js-line-number" data-line-number="6943"></td>
        <td id="LC6943" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6944" class="blob-num js-line-number" data-line-number="6944"></td>
        <td id="LC6944" class="blob-code blob-code-inner js-file-line">          <span class="pl-en">Child</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {}; <span class="pl-c">// should be anonymous; This is so that when the minifier munges</span></td>
      </tr>
      <tr>
        <td id="L6945" class="blob-num js-line-number" data-line-number="6945"></td>
        <td id="LC6945" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// the name it does not become random set of chars. These will then show up as class</span></td>
      </tr>
      <tr>
        <td id="L6946" class="blob-num js-line-number" data-line-number="6946"></td>
        <td id="LC6946" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// name in the debugger.</span></td>
      </tr>
      <tr>
        <td id="L6947" class="blob-num js-line-number" data-line-number="6947"></td>
        <td id="LC6947" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">Child</span>.<span class="pl-c1">prototype</span> <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L6948" class="blob-num js-line-number" data-line-number="6948"></td>
        <td id="LC6948" class="blob-code blob-code-inner js-file-line">          child <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Child</span>();</td>
      </tr>
      <tr>
        <td id="L6949" class="blob-num js-line-number" data-line-number="6949"></td>
        <td id="LC6949" class="blob-code blob-code-inner js-file-line">          child.$id <span class="pl-k">=</span> nextUid();</td>
      </tr>
      <tr>
        <td id="L6950" class="blob-num js-line-number" data-line-number="6950"></td>
        <td id="LC6950" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6951" class="blob-num js-line-number" data-line-number="6951"></td>
        <td id="LC6951" class="blob-code blob-code-inner js-file-line">        child[<span class="pl-s"><span class="pl-pds">&#39;</span>this<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> child;</td>
      </tr>
      <tr>
        <td id="L6952" class="blob-num js-line-number" data-line-number="6952"></td>
        <td id="LC6952" class="blob-code blob-code-inner js-file-line">        child.$$listeners <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L6953" class="blob-num js-line-number" data-line-number="6953"></td>
        <td id="LC6953" class="blob-code blob-code-inner js-file-line">        child.$parent <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L6954" class="blob-num js-line-number" data-line-number="6954"></td>
        <td id="LC6954" class="blob-code blob-code-inner js-file-line">        child.$$asyncQueue <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L6955" class="blob-num js-line-number" data-line-number="6955"></td>
        <td id="LC6955" class="blob-code blob-code-inner js-file-line">        child.$$watchers <span class="pl-k">=</span> child.$$nextSibling <span class="pl-k">=</span> child.$$childHead <span class="pl-k">=</span> child.$$childTail <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L6956" class="blob-num js-line-number" data-line-number="6956"></td>
        <td id="LC6956" class="blob-code blob-code-inner js-file-line">        child.$$prevSibling <span class="pl-k">=</span> <span class="pl-v">this</span>.$$childTail;</td>
      </tr>
      <tr>
        <td id="L6957" class="blob-num js-line-number" data-line-number="6957"></td>
        <td id="LC6957" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.$$childHead) {</td>
      </tr>
      <tr>
        <td id="L6958" class="blob-num js-line-number" data-line-number="6958"></td>
        <td id="LC6958" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$childTail.$$nextSibling <span class="pl-k">=</span> child;</td>
      </tr>
      <tr>
        <td id="L6959" class="blob-num js-line-number" data-line-number="6959"></td>
        <td id="LC6959" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$childTail <span class="pl-k">=</span> child;</td>
      </tr>
      <tr>
        <td id="L6960" class="blob-num js-line-number" data-line-number="6960"></td>
        <td id="LC6960" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L6961" class="blob-num js-line-number" data-line-number="6961"></td>
        <td id="LC6961" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$childHead <span class="pl-k">=</span> <span class="pl-v">this</span>.$$childTail <span class="pl-k">=</span> child;</td>
      </tr>
      <tr>
        <td id="L6962" class="blob-num js-line-number" data-line-number="6962"></td>
        <td id="LC6962" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L6963" class="blob-num js-line-number" data-line-number="6963"></td>
        <td id="LC6963" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> child;</td>
      </tr>
      <tr>
        <td id="L6964" class="blob-num js-line-number" data-line-number="6964"></td>
        <td id="LC6964" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L6965" class="blob-num js-line-number" data-line-number="6965"></td>
        <td id="LC6965" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L6966" class="blob-num js-line-number" data-line-number="6966"></td>
        <td id="LC6966" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L6967" class="blob-num js-line-number" data-line-number="6967"></td>
        <td id="LC6967" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L6968" class="blob-num js-line-number" data-line-number="6968"></td>
        <td id="LC6968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$watch</span></td>
      </tr>
      <tr>
        <td id="L6969" class="blob-num js-line-number" data-line-number="6969"></td>
        <td id="LC6969" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L6970" class="blob-num js-line-number" data-line-number="6970"></td>
        <td id="LC6970" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L6971" class="blob-num js-line-number" data-line-number="6971"></td>
        <td id="LC6971" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6972" class="blob-num js-line-number" data-line-number="6972"></td>
        <td id="LC6972" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L6973" class="blob-num js-line-number" data-line-number="6973"></td>
        <td id="LC6973" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Registers a `listener` callback to be executed whenever the `watchExpression` changes.</span></td>
      </tr>
      <tr>
        <td id="L6974" class="blob-num js-line-number" data-line-number="6974"></td>
        <td id="LC6974" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6975" class="blob-num js-line-number" data-line-number="6975"></td>
        <td id="LC6975" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * - The `watchExpression` is called on every call to {@link angular.module.ng.$rootScope.Scope#$digest $digest()} and</span></td>
      </tr>
      <tr>
        <td id="L6976" class="blob-num js-line-number" data-line-number="6976"></td>
        <td id="LC6976" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   should return the value which will be watched. (Since {@link angular.module.ng.$rootScope.Scope#$digest $digest()}</span></td>
      </tr>
      <tr>
        <td id="L6977" class="blob-num js-line-number" data-line-number="6977"></td>
        <td id="LC6977" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   reruns when it detects changes the `watchExpression` can execute multiple times per</span></td>
      </tr>
      <tr>
        <td id="L6978" class="blob-num js-line-number" data-line-number="6978"></td>
        <td id="LC6978" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   {@link angular.module.ng.$rootScope.Scope#$digest $digest()} and should be idempotent.)</span></td>
      </tr>
      <tr>
        <td id="L6979" class="blob-num js-line-number" data-line-number="6979"></td>
        <td id="LC6979" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * - The `listener` is called only when the value from the current `watchExpression` and the</span></td>
      </tr>
      <tr>
        <td id="L6980" class="blob-num js-line-number" data-line-number="6980"></td>
        <td id="LC6980" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   previous call to `watchExpression&#39; are not equal (with the exception of the initial run</span></td>
      </tr>
      <tr>
        <td id="L6981" class="blob-num js-line-number" data-line-number="6981"></td>
        <td id="LC6981" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   see below). The inequality is determined according to</span></td>
      </tr>
      <tr>
        <td id="L6982" class="blob-num js-line-number" data-line-number="6982"></td>
        <td id="LC6982" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   {@link angular.equals} function. To save the value of the object for later comparison</span></td>
      </tr>
      <tr>
        <td id="L6983" class="blob-num js-line-number" data-line-number="6983"></td>
        <td id="LC6983" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   {@link angular.copy} function is used. It also means that watching complex options will</span></td>
      </tr>
      <tr>
        <td id="L6984" class="blob-num js-line-number" data-line-number="6984"></td>
        <td id="LC6984" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   have adverse memory and performance implications.</span></td>
      </tr>
      <tr>
        <td id="L6985" class="blob-num js-line-number" data-line-number="6985"></td>
        <td id="LC6985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * - The watch `listener` may change the model, which may trigger other `listener`s to fire. This</span></td>
      </tr>
      <tr>
        <td id="L6986" class="blob-num js-line-number" data-line-number="6986"></td>
        <td id="LC6986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   is achieved by rerunning the watchers until no changes are detected. The rerun iteration</span></td>
      </tr>
      <tr>
        <td id="L6987" class="blob-num js-line-number" data-line-number="6987"></td>
        <td id="LC6987" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   limit is 100 to prevent infinity loop deadlock.</span></td>
      </tr>
      <tr>
        <td id="L6988" class="blob-num js-line-number" data-line-number="6988"></td>
        <td id="LC6988" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6989" class="blob-num js-line-number" data-line-number="6989"></td>
        <td id="LC6989" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6990" class="blob-num js-line-number" data-line-number="6990"></td>
        <td id="LC6990" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * If you want to be notified whenever {@link angular.module.ng.$rootScope.Scope#$digest $digest} is called,</span></td>
      </tr>
      <tr>
        <td id="L6991" class="blob-num js-line-number" data-line-number="6991"></td>
        <td id="LC6991" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * you can register an `watchExpression` function with no `listener`. (Since `watchExpression`,</span></td>
      </tr>
      <tr>
        <td id="L6992" class="blob-num js-line-number" data-line-number="6992"></td>
        <td id="LC6992" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * can execute multiple times per {@link angular.module.ng.$rootScope.Scope#$digest $digest} cycle when a change is</span></td>
      </tr>
      <tr>
        <td id="L6993" class="blob-num js-line-number" data-line-number="6993"></td>
        <td id="LC6993" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * detected, be prepared for multiple calls to your listener.)</span></td>
      </tr>
      <tr>
        <td id="L6994" class="blob-num js-line-number" data-line-number="6994"></td>
        <td id="LC6994" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L6995" class="blob-num js-line-number" data-line-number="6995"></td>
        <td id="LC6995" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * After a watcher is registered with the scope, the `listener` fn is called asynchronously</span></td>
      </tr>
      <tr>
        <td id="L6996" class="blob-num js-line-number" data-line-number="6996"></td>
        <td id="LC6996" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * (via {@link angular.module.ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the</span></td>
      </tr>
      <tr>
        <td id="L6997" class="blob-num js-line-number" data-line-number="6997"></td>
        <td id="LC6997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * watcher. In rare cases, this is undesirable because the listener is called when the result</span></td>
      </tr>
      <tr>
        <td id="L6998" class="blob-num js-line-number" data-line-number="6998"></td>
        <td id="LC6998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * of `watchExpression` didn&#39;t change. To detect this scenario within the `listener` fn, you</span></td>
      </tr>
      <tr>
        <td id="L6999" class="blob-num js-line-number" data-line-number="6999"></td>
        <td id="LC6999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * can compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the</span></td>
      </tr>
      <tr>
        <td id="L7000" class="blob-num js-line-number" data-line-number="7000"></td>
        <td id="LC7000" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * listener was called due to initialization.</span></td>
      </tr>
      <tr>
        <td id="L7001" class="blob-num js-line-number" data-line-number="7001"></td>
        <td id="LC7001" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7002" class="blob-num js-line-number" data-line-number="7002"></td>
        <td id="LC7002" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7003" class="blob-num js-line-number" data-line-number="7003"></td>
        <td id="LC7003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * # Example</span></td>
      </tr>
      <tr>
        <td id="L7004" class="blob-num js-line-number" data-line-number="7004"></td>
        <td id="LC7004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7005" class="blob-num js-line-number" data-line-number="7005"></td>
        <td id="LC7005" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           // let&#39;s assume that scope was dependency injected as the $rootScope</span></td>
      </tr>
      <tr>
        <td id="L7006" class="blob-num js-line-number" data-line-number="7006"></td>
        <td id="LC7006" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var scope = $rootScope;</span></td>
      </tr>
      <tr>
        <td id="L7007" class="blob-num js-line-number" data-line-number="7007"></td>
        <td id="LC7007" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;misko&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7008" class="blob-num js-line-number" data-line-number="7008"></td>
        <td id="LC7008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.counter = 0;</span></td>
      </tr>
      <tr>
        <td id="L7009" class="blob-num js-line-number" data-line-number="7009"></td>
        <td id="LC7009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7010" class="blob-num js-line-number" data-line-number="7010"></td>
        <td id="LC7010" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7011" class="blob-num js-line-number" data-line-number="7011"></td>
        <td id="LC7011" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$watch(&#39;name&#39;, function(newValue, oldValue) { counter = counter + 1; });</span></td>
      </tr>
      <tr>
        <td id="L7012" class="blob-num js-line-number" data-line-number="7012"></td>
        <td id="LC7012" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7013" class="blob-num js-line-number" data-line-number="7013"></td>
        <td id="LC7013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7014" class="blob-num js-line-number" data-line-number="7014"></td>
        <td id="LC7014" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$digest();</span></td>
      </tr>
      <tr>
        <td id="L7015" class="blob-num js-line-number" data-line-number="7015"></td>
        <td id="LC7015" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           // no variable change</span></td>
      </tr>
      <tr>
        <td id="L7016" class="blob-num js-line-number" data-line-number="7016"></td>
        <td id="LC7016" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7017" class="blob-num js-line-number" data-line-number="7017"></td>
        <td id="LC7017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7018" class="blob-num js-line-number" data-line-number="7018"></td>
        <td id="LC7018" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;adam&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7019" class="blob-num js-line-number" data-line-number="7019"></td>
        <td id="LC7019" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$digest();</span></td>
      </tr>
      <tr>
        <td id="L7020" class="blob-num js-line-number" data-line-number="7020"></td>
        <td id="LC7020" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L7021" class="blob-num js-line-number" data-line-number="7021"></td>
        <td id="LC7021" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7022" class="blob-num js-line-number" data-line-number="7022"></td>
        <td id="LC7022" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7023" class="blob-num js-line-number" data-line-number="7023"></td>
        <td id="LC7023" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7024" class="blob-num js-line-number" data-line-number="7024"></td>
        <td id="LC7024" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7025" class="blob-num js-line-number" data-line-number="7025"></td>
        <td id="LC7025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {(function()|string)} watchExpression Expression that is evaluated on each</span></td>
      </tr>
      <tr>
        <td id="L7026" class="blob-num js-line-number" data-line-number="7026"></td>
        <td id="LC7026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    {@link angular.module.ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers a</span></td>
      </tr>
      <tr>
        <td id="L7027" class="blob-num js-line-number" data-line-number="7027"></td>
        <td id="LC7027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    call to the `listener`.</span></td>
      </tr>
      <tr>
        <td id="L7028" class="blob-num js-line-number" data-line-number="7028"></td>
        <td id="LC7028" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7029" class="blob-num js-line-number" data-line-number="7029"></td>
        <td id="LC7029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `string`: Evaluated as {@link guide/dev_guide.expressions expression}</span></td>
      </tr>
      <tr>
        <td id="L7030" class="blob-num js-line-number" data-line-number="7030"></td>
        <td id="LC7030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `function(scope)`: called with current `scope` as a parameter.</span></td>
      </tr>
      <tr>
        <td id="L7031" class="blob-num js-line-number" data-line-number="7031"></td>
        <td id="LC7031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {(function()|string)=} listener Callback called whenever the return value of</span></td>
      </tr>
      <tr>
        <td id="L7032" class="blob-num js-line-number" data-line-number="7032"></td>
        <td id="LC7032" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   the `watchExpression` changes.</span></td>
      </tr>
      <tr>
        <td id="L7033" class="blob-num js-line-number" data-line-number="7033"></td>
        <td id="LC7033" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7034" class="blob-num js-line-number" data-line-number="7034"></td>
        <td id="LC7034" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `string`: Evaluated as {@link guide/dev_guide.expressions expression}</span></td>
      </tr>
      <tr>
        <td id="L7035" class="blob-num js-line-number" data-line-number="7035"></td>
        <td id="LC7035" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `function(newValue, oldValue, scope)`: called with current and previous values as parameters.</span></td>
      </tr>
      <tr>
        <td id="L7036" class="blob-num js-line-number" data-line-number="7036"></td>
        <td id="LC7036" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7037" class="blob-num js-line-number" data-line-number="7037"></td>
        <td id="LC7037" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {boolean=} objectEquality Compare object for equality rather then for refference.</span></td>
      </tr>
      <tr>
        <td id="L7038" class="blob-num js-line-number" data-line-number="7038"></td>
        <td id="LC7038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@returns</span> {function()} Returns a deregistration function for this listener.</span></td>
      </tr>
      <tr>
        <td id="L7039" class="blob-num js-line-number" data-line-number="7039"></td>
        <td id="LC7039" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7040" class="blob-num js-line-number" data-line-number="7040"></td>
        <td id="LC7040" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">watch</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">watchExp</span>, <span class="pl-smi">listener</span>, <span class="pl-smi">objectEquality</span>) {</td>
      </tr>
      <tr>
        <td id="L7041" class="blob-num js-line-number" data-line-number="7041"></td>
        <td id="LC7041" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> scope <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L7042" class="blob-num js-line-number" data-line-number="7042"></td>
        <td id="LC7042" class="blob-code blob-code-inner js-file-line">            get <span class="pl-k">=</span> compileToFn(watchExp, <span class="pl-s"><span class="pl-pds">&#39;</span>watch<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L7043" class="blob-num js-line-number" data-line-number="7043"></td>
        <td id="LC7043" class="blob-code blob-code-inner js-file-line">            array <span class="pl-k">=</span> scope.$$watchers,</td>
      </tr>
      <tr>
        <td id="L7044" class="blob-num js-line-number" data-line-number="7044"></td>
        <td id="LC7044" class="blob-code blob-code-inner js-file-line">            watcher <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7045" class="blob-num js-line-number" data-line-number="7045"></td>
        <td id="LC7045" class="blob-code blob-code-inner js-file-line">              fn<span class="pl-k">:</span> listener,</td>
      </tr>
      <tr>
        <td id="L7046" class="blob-num js-line-number" data-line-number="7046"></td>
        <td id="LC7046" class="blob-code blob-code-inner js-file-line">              last<span class="pl-k">:</span> initWatchVal,</td>
      </tr>
      <tr>
        <td id="L7047" class="blob-num js-line-number" data-line-number="7047"></td>
        <td id="LC7047" class="blob-code blob-code-inner js-file-line">              get<span class="pl-k">:</span> get,</td>
      </tr>
      <tr>
        <td id="L7048" class="blob-num js-line-number" data-line-number="7048"></td>
        <td id="LC7048" class="blob-code blob-code-inner js-file-line">              exp<span class="pl-k">:</span> watchExp,</td>
      </tr>
      <tr>
        <td id="L7049" class="blob-num js-line-number" data-line-number="7049"></td>
        <td id="LC7049" class="blob-code blob-code-inner js-file-line">              eq<span class="pl-k">:</span> <span class="pl-k">!!</span>objectEquality</td>
      </tr>
      <tr>
        <td id="L7050" class="blob-num js-line-number" data-line-number="7050"></td>
        <td id="LC7050" class="blob-code blob-code-inner js-file-line">            };</td>
      </tr>
      <tr>
        <td id="L7051" class="blob-num js-line-number" data-line-number="7051"></td>
        <td id="LC7051" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7052" class="blob-num js-line-number" data-line-number="7052"></td>
        <td id="LC7052" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// in the case user pass string, we need to compile it, do we really need this ?</span></td>
      </tr>
      <tr>
        <td id="L7053" class="blob-num js-line-number" data-line-number="7053"></td>
        <td id="LC7053" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>isFunction(listener)) {</td>
      </tr>
      <tr>
        <td id="L7054" class="blob-num js-line-number" data-line-number="7054"></td>
        <td id="LC7054" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> listenFn <span class="pl-k">=</span> compileToFn(listener <span class="pl-k">||</span> noop, <span class="pl-s"><span class="pl-pds">&#39;</span>listener<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7055" class="blob-num js-line-number" data-line-number="7055"></td>
        <td id="LC7055" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">watcher</span>.<span class="pl-en">fn</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">newVal</span>, <span class="pl-smi">oldVal</span>, <span class="pl-smi">scope</span>) {listenFn(scope);};</td>
      </tr>
      <tr>
        <td id="L7056" class="blob-num js-line-number" data-line-number="7056"></td>
        <td id="LC7056" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7057" class="blob-num js-line-number" data-line-number="7057"></td>
        <td id="LC7057" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7058" class="blob-num js-line-number" data-line-number="7058"></td>
        <td id="LC7058" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>array) {</td>
      </tr>
      <tr>
        <td id="L7059" class="blob-num js-line-number" data-line-number="7059"></td>
        <td id="LC7059" class="blob-code blob-code-inner js-file-line">          array <span class="pl-k">=</span> scope.$$watchers <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7060" class="blob-num js-line-number" data-line-number="7060"></td>
        <td id="LC7060" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7061" class="blob-num js-line-number" data-line-number="7061"></td>
        <td id="LC7061" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we use unshift since we use a while loop in $digest for speed.</span></td>
      </tr>
      <tr>
        <td id="L7062" class="blob-num js-line-number" data-line-number="7062"></td>
        <td id="LC7062" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// the while loop reads in reverse order.</span></td>
      </tr>
      <tr>
        <td id="L7063" class="blob-num js-line-number" data-line-number="7063"></td>
        <td id="LC7063" class="blob-code blob-code-inner js-file-line">        array.<span class="pl-c1">unshift</span>(watcher);</td>
      </tr>
      <tr>
        <td id="L7064" class="blob-num js-line-number" data-line-number="7064"></td>
        <td id="LC7064" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7065" class="blob-num js-line-number" data-line-number="7065"></td>
        <td id="LC7065" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7066" class="blob-num js-line-number" data-line-number="7066"></td>
        <td id="LC7066" class="blob-code blob-code-inner js-file-line">          arrayRemove(array, watcher);</td>
      </tr>
      <tr>
        <td id="L7067" class="blob-num js-line-number" data-line-number="7067"></td>
        <td id="LC7067" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L7068" class="blob-num js-line-number" data-line-number="7068"></td>
        <td id="LC7068" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7069" class="blob-num js-line-number" data-line-number="7069"></td>
        <td id="LC7069" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7070" class="blob-num js-line-number" data-line-number="7070"></td>
        <td id="LC7070" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7071" class="blob-num js-line-number" data-line-number="7071"></td>
        <td id="LC7071" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7072" class="blob-num js-line-number" data-line-number="7072"></td>
        <td id="LC7072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$digest</span></td>
      </tr>
      <tr>
        <td id="L7073" class="blob-num js-line-number" data-line-number="7073"></td>
        <td id="LC7073" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7074" class="blob-num js-line-number" data-line-number="7074"></td>
        <td id="LC7074" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7075" class="blob-num js-line-number" data-line-number="7075"></td>
        <td id="LC7075" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7076" class="blob-num js-line-number" data-line-number="7076"></td>
        <td id="LC7076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7077" class="blob-num js-line-number" data-line-number="7077"></td>
        <td id="LC7077" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Process all of the {@link angular.module.ng.$rootScope.Scope#$watch watchers} of the current scope and its children.</span></td>
      </tr>
      <tr>
        <td id="L7078" class="blob-num js-line-number" data-line-number="7078"></td>
        <td id="LC7078" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Because a {@link angular.module.ng.$rootScope.Scope#$watch watcher}&#39;s listener can change the model, the</span></td>
      </tr>
      <tr>
        <td id="L7079" class="blob-num js-line-number" data-line-number="7079"></td>
        <td id="LC7079" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * `$digest()` keeps calling the {@link angular.module.ng.$rootScope.Scope#$watch watchers} until no more listeners are</span></td>
      </tr>
      <tr>
        <td id="L7080" class="blob-num js-line-number" data-line-number="7080"></td>
        <td id="LC7080" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * firing. This means that it is possible to get into an infinite loop. This function will throw</span></td>
      </tr>
      <tr>
        <td id="L7081" class="blob-num js-line-number" data-line-number="7081"></td>
        <td id="LC7081" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * `&#39;Maximum iteration limit exceeded.&#39;` if the number of iterations exceeds 100.</span></td>
      </tr>
      <tr>
        <td id="L7082" class="blob-num js-line-number" data-line-number="7082"></td>
        <td id="LC7082" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7083" class="blob-num js-line-number" data-line-number="7083"></td>
        <td id="LC7083" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Usually you don&#39;t call `$digest()` directly in</span></td>
      </tr>
      <tr>
        <td id="L7084" class="blob-num js-line-number" data-line-number="7084"></td>
        <td id="LC7084" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$compileProvider.directive.ngController controllers} or in</span></td>
      </tr>
      <tr>
        <td id="L7085" class="blob-num js-line-number" data-line-number="7085"></td>
        <td id="LC7085" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$compileProvider.directive directives}.</span></td>
      </tr>
      <tr>
        <td id="L7086" class="blob-num js-line-number" data-line-number="7086"></td>
        <td id="LC7086" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Instead a call to {@link angular.module.ng.$rootScope.Scope#$apply $apply()} (typically from within a</span></td>
      </tr>
      <tr>
        <td id="L7087" class="blob-num js-line-number" data-line-number="7087"></td>
        <td id="LC7087" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$compileProvider.directive directives}) will force a `$digest()`.</span></td>
      </tr>
      <tr>
        <td id="L7088" class="blob-num js-line-number" data-line-number="7088"></td>
        <td id="LC7088" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7089" class="blob-num js-line-number" data-line-number="7089"></td>
        <td id="LC7089" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * If you want to be notified whenever `$digest()` is called,</span></td>
      </tr>
      <tr>
        <td id="L7090" class="blob-num js-line-number" data-line-number="7090"></td>
        <td id="LC7090" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * you can register a `watchExpression` function  with {@link angular.module.ng.$rootScope.Scope#$watch $watch()}</span></td>
      </tr>
      <tr>
        <td id="L7091" class="blob-num js-line-number" data-line-number="7091"></td>
        <td id="LC7091" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * with no `listener`.</span></td>
      </tr>
      <tr>
        <td id="L7092" class="blob-num js-line-number" data-line-number="7092"></td>
        <td id="LC7092" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7093" class="blob-num js-line-number" data-line-number="7093"></td>
        <td id="LC7093" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * You may have a need to call `$digest()` from within unit-tests, to simulate the scope</span></td>
      </tr>
      <tr>
        <td id="L7094" class="blob-num js-line-number" data-line-number="7094"></td>
        <td id="LC7094" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * life-cycle.</span></td>
      </tr>
      <tr>
        <td id="L7095" class="blob-num js-line-number" data-line-number="7095"></td>
        <td id="LC7095" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7096" class="blob-num js-line-number" data-line-number="7096"></td>
        <td id="LC7096" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * # Example</span></td>
      </tr>
      <tr>
        <td id="L7097" class="blob-num js-line-number" data-line-number="7097"></td>
        <td id="LC7097" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7098" class="blob-num js-line-number" data-line-number="7098"></td>
        <td id="LC7098" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var scope = ...;</span></td>
      </tr>
      <tr>
        <td id="L7099" class="blob-num js-line-number" data-line-number="7099"></td>
        <td id="LC7099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;misko&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7100" class="blob-num js-line-number" data-line-number="7100"></td>
        <td id="LC7100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.counter = 0;</span></td>
      </tr>
      <tr>
        <td id="L7101" class="blob-num js-line-number" data-line-number="7101"></td>
        <td id="LC7101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7102" class="blob-num js-line-number" data-line-number="7102"></td>
        <td id="LC7102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7103" class="blob-num js-line-number" data-line-number="7103"></td>
        <td id="LC7103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$watch(&#39;name&#39;, function(scope, newValue, oldValue) {</span></td>
      </tr>
      <tr>
        <td id="L7104" class="blob-num js-line-number" data-line-number="7104"></td>
        <td id="LC7104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             counter = counter + 1;</span></td>
      </tr>
      <tr>
        <td id="L7105" class="blob-num js-line-number" data-line-number="7105"></td>
        <td id="LC7105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           });</span></td>
      </tr>
      <tr>
        <td id="L7106" class="blob-num js-line-number" data-line-number="7106"></td>
        <td id="LC7106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7107" class="blob-num js-line-number" data-line-number="7107"></td>
        <td id="LC7107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7108" class="blob-num js-line-number" data-line-number="7108"></td>
        <td id="LC7108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$digest();</span></td>
      </tr>
      <tr>
        <td id="L7109" class="blob-num js-line-number" data-line-number="7109"></td>
        <td id="LC7109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           // no variable change</span></td>
      </tr>
      <tr>
        <td id="L7110" class="blob-num js-line-number" data-line-number="7110"></td>
        <td id="LC7110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(0);</span></td>
      </tr>
      <tr>
        <td id="L7111" class="blob-num js-line-number" data-line-number="7111"></td>
        <td id="LC7111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7112" class="blob-num js-line-number" data-line-number="7112"></td>
        <td id="LC7112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.name = &#39;adam&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7113" class="blob-num js-line-number" data-line-number="7113"></td>
        <td id="LC7113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.$digest();</span></td>
      </tr>
      <tr>
        <td id="L7114" class="blob-num js-line-number" data-line-number="7114"></td>
        <td id="LC7114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.counter).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L7115" class="blob-num js-line-number" data-line-number="7115"></td>
        <td id="LC7115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7116" class="blob-num js-line-number" data-line-number="7116"></td>
        <td id="LC7116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7117" class="blob-num js-line-number" data-line-number="7117"></td>
        <td id="LC7117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7118" class="blob-num js-line-number" data-line-number="7118"></td>
        <td id="LC7118" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">digest</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7119" class="blob-num js-line-number" data-line-number="7119"></td>
        <td id="LC7119" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> watch, value, last,</td>
      </tr>
      <tr>
        <td id="L7120" class="blob-num js-line-number" data-line-number="7120"></td>
        <td id="LC7120" class="blob-code blob-code-inner js-file-line">            watchers,</td>
      </tr>
      <tr>
        <td id="L7121" class="blob-num js-line-number" data-line-number="7121"></td>
        <td id="LC7121" class="blob-code blob-code-inner js-file-line">            asyncQueue,</td>
      </tr>
      <tr>
        <td id="L7122" class="blob-num js-line-number" data-line-number="7122"></td>
        <td id="LC7122" class="blob-code blob-code-inner js-file-line">            length,</td>
      </tr>
      <tr>
        <td id="L7123" class="blob-num js-line-number" data-line-number="7123"></td>
        <td id="LC7123" class="blob-code blob-code-inner js-file-line">            dirty, ttl <span class="pl-k">=</span> <span class="pl-c1">TTL</span>,</td>
      </tr>
      <tr>
        <td id="L7124" class="blob-num js-line-number" data-line-number="7124"></td>
        <td id="LC7124" class="blob-code blob-code-inner js-file-line">            next, current, target <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L7125" class="blob-num js-line-number" data-line-number="7125"></td>
        <td id="LC7125" class="blob-code blob-code-inner js-file-line">            watchLog <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L7126" class="blob-num js-line-number" data-line-number="7126"></td>
        <td id="LC7126" class="blob-code blob-code-inner js-file-line">            logIdx, logMsg;</td>
      </tr>
      <tr>
        <td id="L7127" class="blob-num js-line-number" data-line-number="7127"></td>
        <td id="LC7127" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7128" class="blob-num js-line-number" data-line-number="7128"></td>
        <td id="LC7128" class="blob-code blob-code-inner js-file-line">        flagPhase(target, <span class="pl-s"><span class="pl-pds">&#39;</span>$digest<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7129" class="blob-num js-line-number" data-line-number="7129"></td>
        <td id="LC7129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7130" class="blob-num js-line-number" data-line-number="7130"></td>
        <td id="LC7130" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L7131" class="blob-num js-line-number" data-line-number="7131"></td>
        <td id="LC7131" class="blob-code blob-code-inner js-file-line">          dirty <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L7132" class="blob-num js-line-number" data-line-number="7132"></td>
        <td id="LC7132" class="blob-code blob-code-inner js-file-line">          current <span class="pl-k">=</span> target;</td>
      </tr>
      <tr>
        <td id="L7133" class="blob-num js-line-number" data-line-number="7133"></td>
        <td id="LC7133" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L7134" class="blob-num js-line-number" data-line-number="7134"></td>
        <td id="LC7134" class="blob-code blob-code-inner js-file-line">            asyncQueue <span class="pl-k">=</span> current.$$asyncQueue;</td>
      </tr>
      <tr>
        <td id="L7135" class="blob-num js-line-number" data-line-number="7135"></td>
        <td id="LC7135" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span>(asyncQueue.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L7136" class="blob-num js-line-number" data-line-number="7136"></td>
        <td id="LC7136" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L7137" class="blob-num js-line-number" data-line-number="7137"></td>
        <td id="LC7137" class="blob-code blob-code-inner js-file-line">                current.$<span class="pl-c1">eval</span>(asyncQueue.<span class="pl-c1">shift</span>());</td>
      </tr>
      <tr>
        <td id="L7138" class="blob-num js-line-number" data-line-number="7138"></td>
        <td id="LC7138" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L7139" class="blob-num js-line-number" data-line-number="7139"></td>
        <td id="LC7139" class="blob-code blob-code-inner js-file-line">                $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L7140" class="blob-num js-line-number" data-line-number="7140"></td>
        <td id="LC7140" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L7141" class="blob-num js-line-number" data-line-number="7141"></td>
        <td id="LC7141" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7142" class="blob-num js-line-number" data-line-number="7142"></td>
        <td id="LC7142" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> ((watchers <span class="pl-k">=</span> current.$$watchers)) {</td>
      </tr>
      <tr>
        <td id="L7143" class="blob-num js-line-number" data-line-number="7143"></td>
        <td id="LC7143" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// process our watches</span></td>
      </tr>
      <tr>
        <td id="L7144" class="blob-num js-line-number" data-line-number="7144"></td>
        <td id="LC7144" class="blob-code blob-code-inner js-file-line">              length <span class="pl-k">=</span> watchers.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L7145" class="blob-num js-line-number" data-line-number="7145"></td>
        <td id="LC7145" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">while</span> (length<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L7146" class="blob-num js-line-number" data-line-number="7146"></td>
        <td id="LC7146" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L7147" class="blob-num js-line-number" data-line-number="7147"></td>
        <td id="LC7147" class="blob-code blob-code-inner js-file-line">                  watch <span class="pl-k">=</span> watchers[length];</td>
      </tr>
      <tr>
        <td id="L7148" class="blob-num js-line-number" data-line-number="7148"></td>
        <td id="LC7148" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// Most common watches are on primitives, in which case we can short</span></td>
      </tr>
      <tr>
        <td id="L7149" class="blob-num js-line-number" data-line-number="7149"></td>
        <td id="LC7149" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// circuit it with === operator, only when === fails do we use .equals</span></td>
      </tr>
      <tr>
        <td id="L7150" class="blob-num js-line-number" data-line-number="7150"></td>
        <td id="LC7150" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> ((value <span class="pl-k">=</span> watch.get(current)) <span class="pl-k">!==</span> (last <span class="pl-k">=</span> watch.last) <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L7151" class="blob-num js-line-number" data-line-number="7151"></td>
        <td id="LC7151" class="blob-code blob-code-inner js-file-line">                      <span class="pl-k">!</span>(watch.eq</td>
      </tr>
      <tr>
        <td id="L7152" class="blob-num js-line-number" data-line-number="7152"></td>
        <td id="LC7152" class="blob-code blob-code-inner js-file-line">                          <span class="pl-k">?</span> equals(value, last)</td>
      </tr>
      <tr>
        <td id="L7153" class="blob-num js-line-number" data-line-number="7153"></td>
        <td id="LC7153" class="blob-code blob-code-inner js-file-line">                          <span class="pl-k">:</span> (<span class="pl-k">typeof</span> value <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-k">typeof</span> last <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L7154" class="blob-num js-line-number" data-line-number="7154"></td>
        <td id="LC7154" class="blob-code blob-code-inner js-file-line">                             <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">isNaN</span>(value) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">isNaN</span>(last)))) {</td>
      </tr>
      <tr>
        <td id="L7155" class="blob-num js-line-number" data-line-number="7155"></td>
        <td id="LC7155" class="blob-code blob-code-inner js-file-line">                    dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L7156" class="blob-num js-line-number" data-line-number="7156"></td>
        <td id="LC7156" class="blob-code blob-code-inner js-file-line">                    watch.last <span class="pl-k">=</span> watch.eq <span class="pl-k">?</span> copy(value) <span class="pl-k">:</span> value;</td>
      </tr>
      <tr>
        <td id="L7157" class="blob-num js-line-number" data-line-number="7157"></td>
        <td id="LC7157" class="blob-code blob-code-inner js-file-line">                    watch.fn(value, ((last <span class="pl-k">===</span> initWatchVal) <span class="pl-k">?</span> value <span class="pl-k">:</span> last), current);</td>
      </tr>
      <tr>
        <td id="L7158" class="blob-num js-line-number" data-line-number="7158"></td>
        <td id="LC7158" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (ttl <span class="pl-k">&lt;</span> <span class="pl-c1">5</span>) {</td>
      </tr>
      <tr>
        <td id="L7159" class="blob-num js-line-number" data-line-number="7159"></td>
        <td id="LC7159" class="blob-code blob-code-inner js-file-line">                      logIdx <span class="pl-k">=</span> <span class="pl-c1">4</span> <span class="pl-k">-</span> ttl;</td>
      </tr>
      <tr>
        <td id="L7160" class="blob-num js-line-number" data-line-number="7160"></td>
        <td id="LC7160" class="blob-code blob-code-inner js-file-line">                      <span class="pl-k">if</span> (<span class="pl-k">!</span>watchLog[logIdx]) watchLog[logIdx] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7161" class="blob-num js-line-number" data-line-number="7161"></td>
        <td id="LC7161" class="blob-code blob-code-inner js-file-line">                      logMsg <span class="pl-k">=</span> (isFunction(watch.exp))</td>
      </tr>
      <tr>
        <td id="L7162" class="blob-num js-line-number" data-line-number="7162"></td>
        <td id="LC7162" class="blob-code blob-code-inner js-file-line">                          <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>fn: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> (watch.exp.<span class="pl-c1">name</span> <span class="pl-k">||</span> watch.exp.<span class="pl-c1">toString</span>())</td>
      </tr>
      <tr>
        <td id="L7163" class="blob-num js-line-number" data-line-number="7163"></td>
        <td id="LC7163" class="blob-code blob-code-inner js-file-line">                          <span class="pl-k">:</span> watch.exp;</td>
      </tr>
      <tr>
        <td id="L7164" class="blob-num js-line-number" data-line-number="7164"></td>
        <td id="LC7164" class="blob-code blob-code-inner js-file-line">                      logMsg <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>; newVal: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> toJson(value) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>; oldVal: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> toJson(last);</td>
      </tr>
      <tr>
        <td id="L7165" class="blob-num js-line-number" data-line-number="7165"></td>
        <td id="LC7165" class="blob-code blob-code-inner js-file-line">                      watchLog[logIdx].<span class="pl-c1">push</span>(logMsg);</td>
      </tr>
      <tr>
        <td id="L7166" class="blob-num js-line-number" data-line-number="7166"></td>
        <td id="LC7166" class="blob-code blob-code-inner js-file-line">                    }</td>
      </tr>
      <tr>
        <td id="L7167" class="blob-num js-line-number" data-line-number="7167"></td>
        <td id="LC7167" class="blob-code blob-code-inner js-file-line">                  }</td>
      </tr>
      <tr>
        <td id="L7168" class="blob-num js-line-number" data-line-number="7168"></td>
        <td id="LC7168" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L7169" class="blob-num js-line-number" data-line-number="7169"></td>
        <td id="LC7169" class="blob-code blob-code-inner js-file-line">                  $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L7170" class="blob-num js-line-number" data-line-number="7170"></td>
        <td id="LC7170" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L7171" class="blob-num js-line-number" data-line-number="7171"></td>
        <td id="LC7171" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L7172" class="blob-num js-line-number" data-line-number="7172"></td>
        <td id="LC7172" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7173" class="blob-num js-line-number" data-line-number="7173"></td>
        <td id="LC7173" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7174" class="blob-num js-line-number" data-line-number="7174"></td>
        <td id="LC7174" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// Insanity Warning: scope depth-first traversal</span></td>
      </tr>
      <tr>
        <td id="L7175" class="blob-num js-line-number" data-line-number="7175"></td>
        <td id="LC7175" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// yes, this code is a bit crazy, but it works and we have tests to prove it!</span></td>
      </tr>
      <tr>
        <td id="L7176" class="blob-num js-line-number" data-line-number="7176"></td>
        <td id="LC7176" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// this piece should be kept in sync with the traversal in $broadcast</span></td>
      </tr>
      <tr>
        <td id="L7177" class="blob-num js-line-number" data-line-number="7177"></td>
        <td id="LC7177" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(next <span class="pl-k">=</span> (current.$$childHead <span class="pl-k">||</span> (current <span class="pl-k">!==</span> target <span class="pl-k">&amp;&amp;</span> current.$$nextSibling)))) {</td>
      </tr>
      <tr>
        <td id="L7178" class="blob-num js-line-number" data-line-number="7178"></td>
        <td id="LC7178" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">while</span>(current <span class="pl-k">!==</span> target <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(next <span class="pl-k">=</span> current.$$nextSibling)) {</td>
      </tr>
      <tr>
        <td id="L7179" class="blob-num js-line-number" data-line-number="7179"></td>
        <td id="LC7179" class="blob-code blob-code-inner js-file-line">                current <span class="pl-k">=</span> current.$parent;</td>
      </tr>
      <tr>
        <td id="L7180" class="blob-num js-line-number" data-line-number="7180"></td>
        <td id="LC7180" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L7181" class="blob-num js-line-number" data-line-number="7181"></td>
        <td id="LC7181" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7182" class="blob-num js-line-number" data-line-number="7182"></td>
        <td id="LC7182" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">while</span> ((current <span class="pl-k">=</span> next));</td>
      </tr>
      <tr>
        <td id="L7183" class="blob-num js-line-number" data-line-number="7183"></td>
        <td id="LC7183" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7184" class="blob-num js-line-number" data-line-number="7184"></td>
        <td id="LC7184" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span>(dirty <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(ttl<span class="pl-k">--</span>)) {</td>
      </tr>
      <tr>
        <td id="L7185" class="blob-num js-line-number" data-line-number="7185"></td>
        <td id="LC7185" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">throw</span> Error(<span class="pl-c1">TTL</span> <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> $digest() iterations reached. Aborting!<span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L7186" class="blob-num js-line-number" data-line-number="7186"></td>
        <td id="LC7186" class="blob-code blob-code-inner js-file-line">                <span class="pl-s"><span class="pl-pds">&#39;</span>Watchers fired in the last 5 iterations: <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> toJson(watchLog));</td>
      </tr>
      <tr>
        <td id="L7187" class="blob-num js-line-number" data-line-number="7187"></td>
        <td id="LC7187" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7188" class="blob-num js-line-number" data-line-number="7188"></td>
        <td id="LC7188" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">while</span> (dirty <span class="pl-k">||</span> asyncQueue.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L7189" class="blob-num js-line-number" data-line-number="7189"></td>
        <td id="LC7189" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7190" class="blob-num js-line-number" data-line-number="7190"></td>
        <td id="LC7190" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$root.$$phase <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7191" class="blob-num js-line-number" data-line-number="7191"></td>
        <td id="LC7191" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7192" class="blob-num js-line-number" data-line-number="7192"></td>
        <td id="LC7192" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7193" class="blob-num js-line-number" data-line-number="7193"></td>
        <td id="LC7193" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7194" class="blob-num js-line-number" data-line-number="7194"></td>
        <td id="LC7194" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7195" class="blob-num js-line-number" data-line-number="7195"></td>
        <td id="LC7195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L7196" class="blob-num js-line-number" data-line-number="7196"></td>
        <td id="LC7196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.$rootScope.Scope#$destroy</span></td>
      </tr>
      <tr>
        <td id="L7197" class="blob-num js-line-number" data-line-number="7197"></td>
        <td id="LC7197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @eventOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7198" class="blob-num js-line-number" data-line-number="7198"></td>
        <td id="LC7198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @eventType broadcast on scope being destroyed</span></td>
      </tr>
      <tr>
        <td id="L7199" class="blob-num js-line-number" data-line-number="7199"></td>
        <td id="LC7199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7200" class="blob-num js-line-number" data-line-number="7200"></td>
        <td id="LC7200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7201" class="blob-num js-line-number" data-line-number="7201"></td>
        <td id="LC7201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Broadcasted when a scope and its children are being destroyed.</span></td>
      </tr>
      <tr>
        <td id="L7202" class="blob-num js-line-number" data-line-number="7202"></td>
        <td id="LC7202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7203" class="blob-num js-line-number" data-line-number="7203"></td>
        <td id="LC7203" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7204" class="blob-num js-line-number" data-line-number="7204"></td>
        <td id="LC7204" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7205" class="blob-num js-line-number" data-line-number="7205"></td>
        <td id="LC7205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7206" class="blob-num js-line-number" data-line-number="7206"></td>
        <td id="LC7206" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$destroy</span></td>
      </tr>
      <tr>
        <td id="L7207" class="blob-num js-line-number" data-line-number="7207"></td>
        <td id="LC7207" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7208" class="blob-num js-line-number" data-line-number="7208"></td>
        <td id="LC7208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7209" class="blob-num js-line-number" data-line-number="7209"></td>
        <td id="LC7209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7210" class="blob-num js-line-number" data-line-number="7210"></td>
        <td id="LC7210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7211" class="blob-num js-line-number" data-line-number="7211"></td>
        <td id="LC7211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Remove the current scope (and all of its children) from the parent scope. Removal implies</span></td>
      </tr>
      <tr>
        <td id="L7212" class="blob-num js-line-number" data-line-number="7212"></td>
        <td id="LC7212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * that calls to {@link angular.module.ng.$rootScope.Scope#$digest $digest()} will no longer</span></td>
      </tr>
      <tr>
        <td id="L7213" class="blob-num js-line-number" data-line-number="7213"></td>
        <td id="LC7213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * propagate to the current scope and its children. Removal also implies that the current</span></td>
      </tr>
      <tr>
        <td id="L7214" class="blob-num js-line-number" data-line-number="7214"></td>
        <td id="LC7214" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * scope is eligible for garbage collection.</span></td>
      </tr>
      <tr>
        <td id="L7215" class="blob-num js-line-number" data-line-number="7215"></td>
        <td id="LC7215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7216" class="blob-num js-line-number" data-line-number="7216"></td>
        <td id="LC7216" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The `$destroy()` is usually used by directives such as</span></td>
      </tr>
      <tr>
        <td id="L7217" class="blob-num js-line-number" data-line-number="7217"></td>
        <td id="LC7217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$compileProvider.directive.ngRepeat ngRepeat} for managing the</span></td>
      </tr>
      <tr>
        <td id="L7218" class="blob-num js-line-number" data-line-number="7218"></td>
        <td id="LC7218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * unrolling of the loop.</span></td>
      </tr>
      <tr>
        <td id="L7219" class="blob-num js-line-number" data-line-number="7219"></td>
        <td id="LC7219" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7220" class="blob-num js-line-number" data-line-number="7220"></td>
        <td id="LC7220" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Just before a scope is destroyed a `$destroy` event is broadcasted on this scope.</span></td>
      </tr>
      <tr>
        <td id="L7221" class="blob-num js-line-number" data-line-number="7221"></td>
        <td id="LC7221" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Application code can register a `$destroy` event handler that will give it chance to</span></td>
      </tr>
      <tr>
        <td id="L7222" class="blob-num js-line-number" data-line-number="7222"></td>
        <td id="LC7222" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * perform any necessary cleanup.</span></td>
      </tr>
      <tr>
        <td id="L7223" class="blob-num js-line-number" data-line-number="7223"></td>
        <td id="LC7223" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7224" class="blob-num js-line-number" data-line-number="7224"></td>
        <td id="LC7224" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">destroy</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7225" class="blob-num js-line-number" data-line-number="7225"></td>
        <td id="LC7225" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.$root <span class="pl-k">==</span> <span class="pl-v">this</span>) <span class="pl-k">return</span>; <span class="pl-c">// we can&#39;t remove the root node;</span></td>
      </tr>
      <tr>
        <td id="L7226" class="blob-num js-line-number" data-line-number="7226"></td>
        <td id="LC7226" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parent <span class="pl-k">=</span> <span class="pl-v">this</span>.$parent;</td>
      </tr>
      <tr>
        <td id="L7227" class="blob-num js-line-number" data-line-number="7227"></td>
        <td id="LC7227" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7228" class="blob-num js-line-number" data-line-number="7228"></td>
        <td id="LC7228" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$broadcast(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7229" class="blob-num js-line-number" data-line-number="7229"></td>
        <td id="LC7229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7230" class="blob-num js-line-number" data-line-number="7230"></td>
        <td id="LC7230" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (parent.$$childHead <span class="pl-k">==</span> <span class="pl-v">this</span>) parent.$$childHead <span class="pl-k">=</span> <span class="pl-v">this</span>.$$nextSibling;</td>
      </tr>
      <tr>
        <td id="L7231" class="blob-num js-line-number" data-line-number="7231"></td>
        <td id="LC7231" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (parent.$$childTail <span class="pl-k">==</span> <span class="pl-v">this</span>) parent.$$childTail <span class="pl-k">=</span> <span class="pl-v">this</span>.$$prevSibling;</td>
      </tr>
      <tr>
        <td id="L7232" class="blob-num js-line-number" data-line-number="7232"></td>
        <td id="LC7232" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.$$prevSibling) <span class="pl-v">this</span>.$$prevSibling.$$nextSibling <span class="pl-k">=</span> <span class="pl-v">this</span>.$$nextSibling;</td>
      </tr>
      <tr>
        <td id="L7233" class="blob-num js-line-number" data-line-number="7233"></td>
        <td id="LC7233" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.$$nextSibling) <span class="pl-v">this</span>.$$nextSibling.$$prevSibling <span class="pl-k">=</span> <span class="pl-v">this</span>.$$prevSibling;</td>
      </tr>
      <tr>
        <td id="L7234" class="blob-num js-line-number" data-line-number="7234"></td>
        <td id="LC7234" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7235" class="blob-num js-line-number" data-line-number="7235"></td>
        <td id="LC7235" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7236" class="blob-num js-line-number" data-line-number="7236"></td>
        <td id="LC7236" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7237" class="blob-num js-line-number" data-line-number="7237"></td>
        <td id="LC7237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7238" class="blob-num js-line-number" data-line-number="7238"></td>
        <td id="LC7238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$eval</span></td>
      </tr>
      <tr>
        <td id="L7239" class="blob-num js-line-number" data-line-number="7239"></td>
        <td id="LC7239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7240" class="blob-num js-line-number" data-line-number="7240"></td>
        <td id="LC7240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7241" class="blob-num js-line-number" data-line-number="7241"></td>
        <td id="LC7241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7242" class="blob-num js-line-number" data-line-number="7242"></td>
        <td id="LC7242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7243" class="blob-num js-line-number" data-line-number="7243"></td>
        <td id="LC7243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Executes the `expression` on the current scope returning the result. Any exceptions in the</span></td>
      </tr>
      <tr>
        <td id="L7244" class="blob-num js-line-number" data-line-number="7244"></td>
        <td id="LC7244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * expression are propagated (uncaught). This is useful when evaluating engular expressions.</span></td>
      </tr>
      <tr>
        <td id="L7245" class="blob-num js-line-number" data-line-number="7245"></td>
        <td id="LC7245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7246" class="blob-num js-line-number" data-line-number="7246"></td>
        <td id="LC7246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * # Example</span></td>
      </tr>
      <tr>
        <td id="L7247" class="blob-num js-line-number" data-line-number="7247"></td>
        <td id="LC7247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7248" class="blob-num js-line-number" data-line-number="7248"></td>
        <td id="LC7248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var scope = angular.module.ng.$rootScope.Scope();</span></td>
      </tr>
      <tr>
        <td id="L7249" class="blob-num js-line-number" data-line-number="7249"></td>
        <td id="LC7249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.a = 1;</span></td>
      </tr>
      <tr>
        <td id="L7250" class="blob-num js-line-number" data-line-number="7250"></td>
        <td id="LC7250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           scope.b = 2;</span></td>
      </tr>
      <tr>
        <td id="L7251" class="blob-num js-line-number" data-line-number="7251"></td>
        <td id="LC7251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7252" class="blob-num js-line-number" data-line-number="7252"></td>
        <td id="LC7252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.$eval(&#39;a+b&#39;)).toEqual(3);</span></td>
      </tr>
      <tr>
        <td id="L7253" class="blob-num js-line-number" data-line-number="7253"></td>
        <td id="LC7253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);</span></td>
      </tr>
      <tr>
        <td id="L7254" class="blob-num js-line-number" data-line-number="7254"></td>
        <td id="LC7254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7255" class="blob-num js-line-number" data-line-number="7255"></td>
        <td id="LC7255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7256" class="blob-num js-line-number" data-line-number="7256"></td>
        <td id="LC7256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {(string|function())=} expression An angular expression to be executed.</span></td>
      </tr>
      <tr>
        <td id="L7257" class="blob-num js-line-number" data-line-number="7257"></td>
        <td id="LC7257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7258" class="blob-num js-line-number" data-line-number="7258"></td>
        <td id="LC7258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `string`: execute using the rules as defined in  {@link guide/dev_guide.expressions expression}.</span></td>
      </tr>
      <tr>
        <td id="L7259" class="blob-num js-line-number" data-line-number="7259"></td>
        <td id="LC7259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `function(scope, locals)`: execute the function with the current `scope` parameter.</span></td>
      </tr>
      <tr>
        <td id="L7260" class="blob-num js-line-number" data-line-number="7260"></td>
        <td id="LC7260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {Object=} locals Hash object of local variables for the expression.</span></td>
      </tr>
      <tr>
        <td id="L7261" class="blob-num js-line-number" data-line-number="7261"></td>
        <td id="LC7261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7262" class="blob-num js-line-number" data-line-number="7262"></td>
        <td id="LC7262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@returns</span> {*} The result of evaluating the expression.</span></td>
      </tr>
      <tr>
        <td id="L7263" class="blob-num js-line-number" data-line-number="7263"></td>
        <td id="LC7263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7264" class="blob-num js-line-number" data-line-number="7264"></td>
        <td id="LC7264" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">eval</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">expr</span>, <span class="pl-smi">locals</span>) {</td>
      </tr>
      <tr>
        <td id="L7265" class="blob-num js-line-number" data-line-number="7265"></td>
        <td id="LC7265" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> $<span class="pl-c1">parse</span>(expr)(<span class="pl-v">this</span>, locals);</td>
      </tr>
      <tr>
        <td id="L7266" class="blob-num js-line-number" data-line-number="7266"></td>
        <td id="LC7266" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7267" class="blob-num js-line-number" data-line-number="7267"></td>
        <td id="LC7267" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7268" class="blob-num js-line-number" data-line-number="7268"></td>
        <td id="LC7268" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7269" class="blob-num js-line-number" data-line-number="7269"></td>
        <td id="LC7269" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7270" class="blob-num js-line-number" data-line-number="7270"></td>
        <td id="LC7270" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$evalAsync</span></td>
      </tr>
      <tr>
        <td id="L7271" class="blob-num js-line-number" data-line-number="7271"></td>
        <td id="LC7271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7272" class="blob-num js-line-number" data-line-number="7272"></td>
        <td id="LC7272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7273" class="blob-num js-line-number" data-line-number="7273"></td>
        <td id="LC7273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7274" class="blob-num js-line-number" data-line-number="7274"></td>
        <td id="LC7274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7275" class="blob-num js-line-number" data-line-number="7275"></td>
        <td id="LC7275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Executes the expression on the current scope at a later point in time.</span></td>
      </tr>
      <tr>
        <td id="L7276" class="blob-num js-line-number" data-line-number="7276"></td>
        <td id="LC7276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7277" class="blob-num js-line-number" data-line-number="7277"></td>
        <td id="LC7277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The `$evalAsync` makes no guarantees as to when the `expression` will be executed, only that:</span></td>
      </tr>
      <tr>
        <td id="L7278" class="blob-num js-line-number" data-line-number="7278"></td>
        <td id="LC7278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7279" class="blob-num js-line-number" data-line-number="7279"></td>
        <td id="LC7279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - it will execute in the current script execution context (before any DOM rendering).</span></td>
      </tr>
      <tr>
        <td id="L7280" class="blob-num js-line-number" data-line-number="7280"></td>
        <td id="LC7280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - at least one {@link angular.module.ng.$rootScope.Scope#$digest $digest cycle} will be performed after</span></td>
      </tr>
      <tr>
        <td id="L7281" class="blob-num js-line-number" data-line-number="7281"></td>
        <td id="LC7281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *     `expression` execution.</span></td>
      </tr>
      <tr>
        <td id="L7282" class="blob-num js-line-number" data-line-number="7282"></td>
        <td id="LC7282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7283" class="blob-num js-line-number" data-line-number="7283"></td>
        <td id="LC7283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Any exceptions from the execution of the expression are forwarded to the</span></td>
      </tr>
      <tr>
        <td id="L7284" class="blob-num js-line-number" data-line-number="7284"></td>
        <td id="LC7284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$exceptionHandler $exceptionHandler} service.</span></td>
      </tr>
      <tr>
        <td id="L7285" class="blob-num js-line-number" data-line-number="7285"></td>
        <td id="LC7285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7286" class="blob-num js-line-number" data-line-number="7286"></td>
        <td id="LC7286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {(string|function())=} expression An angular expression to be executed.</span></td>
      </tr>
      <tr>
        <td id="L7287" class="blob-num js-line-number" data-line-number="7287"></td>
        <td id="LC7287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7288" class="blob-num js-line-number" data-line-number="7288"></td>
        <td id="LC7288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `string`: execute using the rules as defined in  {@link guide/dev_guide.expressions expression}.</span></td>
      </tr>
      <tr>
        <td id="L7289" class="blob-num js-line-number" data-line-number="7289"></td>
        <td id="LC7289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `function(scope)`: execute the function with the current `scope` parameter.</span></td>
      </tr>
      <tr>
        <td id="L7290" class="blob-num js-line-number" data-line-number="7290"></td>
        <td id="LC7290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7291" class="blob-num js-line-number" data-line-number="7291"></td>
        <td id="LC7291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7292" class="blob-num js-line-number" data-line-number="7292"></td>
        <td id="LC7292" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">evalAsync</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">expr</span>) {</td>
      </tr>
      <tr>
        <td id="L7293" class="blob-num js-line-number" data-line-number="7293"></td>
        <td id="LC7293" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$$asyncQueue.<span class="pl-c1">push</span>(expr);</td>
      </tr>
      <tr>
        <td id="L7294" class="blob-num js-line-number" data-line-number="7294"></td>
        <td id="LC7294" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7295" class="blob-num js-line-number" data-line-number="7295"></td>
        <td id="LC7295" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7296" class="blob-num js-line-number" data-line-number="7296"></td>
        <td id="LC7296" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7297" class="blob-num js-line-number" data-line-number="7297"></td>
        <td id="LC7297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7298" class="blob-num js-line-number" data-line-number="7298"></td>
        <td id="LC7298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$apply</span></td>
      </tr>
      <tr>
        <td id="L7299" class="blob-num js-line-number" data-line-number="7299"></td>
        <td id="LC7299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7300" class="blob-num js-line-number" data-line-number="7300"></td>
        <td id="LC7300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7301" class="blob-num js-line-number" data-line-number="7301"></td>
        <td id="LC7301" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7302" class="blob-num js-line-number" data-line-number="7302"></td>
        <td id="LC7302" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7303" class="blob-num js-line-number" data-line-number="7303"></td>
        <td id="LC7303" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * `$apply()` is used to execute an expression in angular from outside of the angular framework.</span></td>
      </tr>
      <tr>
        <td id="L7304" class="blob-num js-line-number" data-line-number="7304"></td>
        <td id="LC7304" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * (For example from browser DOM events, setTimeout, XHR or third party libraries).</span></td>
      </tr>
      <tr>
        <td id="L7305" class="blob-num js-line-number" data-line-number="7305"></td>
        <td id="LC7305" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Because we are calling into the angular framework we need to perform proper scope life-cycle</span></td>
      </tr>
      <tr>
        <td id="L7306" class="blob-num js-line-number" data-line-number="7306"></td>
        <td id="LC7306" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * of {@link angular.module.ng.$exceptionHandler exception handling},</span></td>
      </tr>
      <tr>
        <td id="L7307" class="blob-num js-line-number" data-line-number="7307"></td>
        <td id="LC7307" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$rootScope.Scope#$digest executing watches}.</span></td>
      </tr>
      <tr>
        <td id="L7308" class="blob-num js-line-number" data-line-number="7308"></td>
        <td id="LC7308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7309" class="blob-num js-line-number" data-line-number="7309"></td>
        <td id="LC7309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * ## Life cycle</span></td>
      </tr>
      <tr>
        <td id="L7310" class="blob-num js-line-number" data-line-number="7310"></td>
        <td id="LC7310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7311" class="blob-num js-line-number" data-line-number="7311"></td>
        <td id="LC7311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * # Pseudo-Code of `$apply()`</span></td>
      </tr>
      <tr>
        <td id="L7312" class="blob-num js-line-number" data-line-number="7312"></td>
        <td id="LC7312" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function $apply(expr) {</span></td>
      </tr>
      <tr>
        <td id="L7313" class="blob-num js-line-number" data-line-number="7313"></td>
        <td id="LC7313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            try {</span></td>
      </tr>
      <tr>
        <td id="L7314" class="blob-num js-line-number" data-line-number="7314"></td>
        <td id="LC7314" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              return $eval(expr);</span></td>
      </tr>
      <tr>
        <td id="L7315" class="blob-num js-line-number" data-line-number="7315"></td>
        <td id="LC7315" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            } catch (e) {</span></td>
      </tr>
      <tr>
        <td id="L7316" class="blob-num js-line-number" data-line-number="7316"></td>
        <td id="LC7316" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $exceptionHandler(e);</span></td>
      </tr>
      <tr>
        <td id="L7317" class="blob-num js-line-number" data-line-number="7317"></td>
        <td id="LC7317" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            } finally {</span></td>
      </tr>
      <tr>
        <td id="L7318" class="blob-num js-line-number" data-line-number="7318"></td>
        <td id="LC7318" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              $root.$digest();</span></td>
      </tr>
      <tr>
        <td id="L7319" class="blob-num js-line-number" data-line-number="7319"></td>
        <td id="LC7319" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L7320" class="blob-num js-line-number" data-line-number="7320"></td>
        <td id="LC7320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L7321" class="blob-num js-line-number" data-line-number="7321"></td>
        <td id="LC7321" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7322" class="blob-num js-line-number" data-line-number="7322"></td>
        <td id="LC7322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7323" class="blob-num js-line-number" data-line-number="7323"></td>
        <td id="LC7323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Scope&#39;s `$apply()` method transitions through the following stages:</span></td>
      </tr>
      <tr>
        <td id="L7324" class="blob-num js-line-number" data-line-number="7324"></td>
        <td id="LC7324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7325" class="blob-num js-line-number" data-line-number="7325"></td>
        <td id="LC7325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * 1. The {@link guide/dev_guide.expressions expression} is executed using the</span></td>
      </tr>
      <tr>
        <td id="L7326" class="blob-num js-line-number" data-line-number="7326"></td>
        <td id="LC7326" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    {@link angular.module.ng.$rootScope.Scope#$eval $eval()} method.</span></td>
      </tr>
      <tr>
        <td id="L7327" class="blob-num js-line-number" data-line-number="7327"></td>
        <td id="LC7327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * 2. Any exceptions from the execution of the expression are forwarded to the</span></td>
      </tr>
      <tr>
        <td id="L7328" class="blob-num js-line-number" data-line-number="7328"></td>
        <td id="LC7328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    {@link angular.module.ng.$exceptionHandler $exceptionHandler} service.</span></td>
      </tr>
      <tr>
        <td id="L7329" class="blob-num js-line-number" data-line-number="7329"></td>
        <td id="LC7329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * 3. The {@link angular.module.ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the expression</span></td>
      </tr>
      <tr>
        <td id="L7330" class="blob-num js-line-number" data-line-number="7330"></td>
        <td id="LC7330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    was executed using the {@link angular.module.ng.$rootScope.Scope#$digest $digest()} method.</span></td>
      </tr>
      <tr>
        <td id="L7331" class="blob-num js-line-number" data-line-number="7331"></td>
        <td id="LC7331" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7332" class="blob-num js-line-number" data-line-number="7332"></td>
        <td id="LC7332" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7333" class="blob-num js-line-number" data-line-number="7333"></td>
        <td id="LC7333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {(string|function())=} exp An angular expression to be executed.</span></td>
      </tr>
      <tr>
        <td id="L7334" class="blob-num js-line-number" data-line-number="7334"></td>
        <td id="LC7334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7335" class="blob-num js-line-number" data-line-number="7335"></td>
        <td id="LC7335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `string`: execute using the rules as defined in {@link guide/dev_guide.expressions expression}.</span></td>
      </tr>
      <tr>
        <td id="L7336" class="blob-num js-line-number" data-line-number="7336"></td>
        <td id="LC7336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *    - `function(scope)`: execute the function with current `scope` parameter.</span></td>
      </tr>
      <tr>
        <td id="L7337" class="blob-num js-line-number" data-line-number="7337"></td>
        <td id="LC7337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7338" class="blob-num js-line-number" data-line-number="7338"></td>
        <td id="LC7338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@returns</span> {*} The result of evaluating the expression.</span></td>
      </tr>
      <tr>
        <td id="L7339" class="blob-num js-line-number" data-line-number="7339"></td>
        <td id="LC7339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7340" class="blob-num js-line-number" data-line-number="7340"></td>
        <td id="LC7340" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">apply</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">expr</span>) {</td>
      </tr>
      <tr>
        <td id="L7341" class="blob-num js-line-number" data-line-number="7341"></td>
        <td id="LC7341" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L7342" class="blob-num js-line-number" data-line-number="7342"></td>
        <td id="LC7342" class="blob-code blob-code-inner js-file-line">          flagPhase(<span class="pl-v">this</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$apply<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7343" class="blob-num js-line-number" data-line-number="7343"></td>
        <td id="LC7343" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-v">this</span>.$<span class="pl-c1">eval</span>(expr);</td>
      </tr>
      <tr>
        <td id="L7344" class="blob-num js-line-number" data-line-number="7344"></td>
        <td id="LC7344" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L7345" class="blob-num js-line-number" data-line-number="7345"></td>
        <td id="LC7345" class="blob-code blob-code-inner js-file-line">          $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L7346" class="blob-num js-line-number" data-line-number="7346"></td>
        <td id="LC7346" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">finally</span> {</td>
      </tr>
      <tr>
        <td id="L7347" class="blob-num js-line-number" data-line-number="7347"></td>
        <td id="LC7347" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$root.$$phase <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7348" class="blob-num js-line-number" data-line-number="7348"></td>
        <td id="LC7348" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$root.$digest();</td>
      </tr>
      <tr>
        <td id="L7349" class="blob-num js-line-number" data-line-number="7349"></td>
        <td id="LC7349" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7350" class="blob-num js-line-number" data-line-number="7350"></td>
        <td id="LC7350" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7351" class="blob-num js-line-number" data-line-number="7351"></td>
        <td id="LC7351" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7352" class="blob-num js-line-number" data-line-number="7352"></td>
        <td id="LC7352" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7353" class="blob-num js-line-number" data-line-number="7353"></td>
        <td id="LC7353" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7354" class="blob-num js-line-number" data-line-number="7354"></td>
        <td id="LC7354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$on</span></td>
      </tr>
      <tr>
        <td id="L7355" class="blob-num js-line-number" data-line-number="7355"></td>
        <td id="LC7355" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7356" class="blob-num js-line-number" data-line-number="7356"></td>
        <td id="LC7356" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7357" class="blob-num js-line-number" data-line-number="7357"></td>
        <td id="LC7357" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7358" class="blob-num js-line-number" data-line-number="7358"></td>
        <td id="LC7358" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7359" class="blob-num js-line-number" data-line-number="7359"></td>
        <td id="LC7359" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Listen on events of a given type. See {@link angular.module.ng.$rootScope.Scope#$emit $emit} for discussion of</span></td>
      </tr>
      <tr>
        <td id="L7360" class="blob-num js-line-number" data-line-number="7360"></td>
        <td id="LC7360" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * event life cycle.</span></td>
      </tr>
      <tr>
        <td id="L7361" class="blob-num js-line-number" data-line-number="7361"></td>
        <td id="LC7361" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7362" class="blob-num js-line-number" data-line-number="7362"></td>
        <td id="LC7362" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string} name Event name to listen on.</span></td>
      </tr>
      <tr>
        <td id="L7363" class="blob-num js-line-number" data-line-number="7363"></td>
        <td id="LC7363" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {function(event)} listener Function to call when the event is emitted.</span></td>
      </tr>
      <tr>
        <td id="L7364" class="blob-num js-line-number" data-line-number="7364"></td>
        <td id="LC7364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@returns</span> {function()} Returns a deregistration function for this listener.</span></td>
      </tr>
      <tr>
        <td id="L7365" class="blob-num js-line-number" data-line-number="7365"></td>
        <td id="LC7365" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7366" class="blob-num js-line-number" data-line-number="7366"></td>
        <td id="LC7366" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The event listener function format is: `function(event)`. The `event` object passed into the</span></td>
      </tr>
      <tr>
        <td id="L7367" class="blob-num js-line-number" data-line-number="7367"></td>
        <td id="LC7367" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * listener has the following attributes</span></td>
      </tr>
      <tr>
        <td id="L7368" class="blob-num js-line-number" data-line-number="7368"></td>
        <td id="LC7368" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7369" class="blob-num js-line-number" data-line-number="7369"></td>
        <td id="LC7369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - `targetScope` - {Scope}: the scope on which the event was `$emit`-ed or `$broadcast`-ed.</span></td>
      </tr>
      <tr>
        <td id="L7370" class="blob-num js-line-number" data-line-number="7370"></td>
        <td id="LC7370" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - `currentScope` - {Scope}: the current scope which is handling the event.</span></td>
      </tr>
      <tr>
        <td id="L7371" class="blob-num js-line-number" data-line-number="7371"></td>
        <td id="LC7371" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - `name` - {string}: Name of the event.</span></td>
      </tr>
      <tr>
        <td id="L7372" class="blob-num js-line-number" data-line-number="7372"></td>
        <td id="LC7372" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - `cancel` - {function=}: calling `cancel` function will cancel further event propagation</span></td>
      </tr>
      <tr>
        <td id="L7373" class="blob-num js-line-number" data-line-number="7373"></td>
        <td id="LC7373" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *     (available only for events that were `$emit`-ed).</span></td>
      </tr>
      <tr>
        <td id="L7374" class="blob-num js-line-number" data-line-number="7374"></td>
        <td id="LC7374" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *   - `cancelled` - {boolean}: Whether the event was cancelled.</span></td>
      </tr>
      <tr>
        <td id="L7375" class="blob-num js-line-number" data-line-number="7375"></td>
        <td id="LC7375" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7376" class="blob-num js-line-number" data-line-number="7376"></td>
        <td id="LC7376" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">on</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L7377" class="blob-num js-line-number" data-line-number="7377"></td>
        <td id="LC7377" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> namedListeners <span class="pl-k">=</span> <span class="pl-v">this</span>.$$listeners[name];</td>
      </tr>
      <tr>
        <td id="L7378" class="blob-num js-line-number" data-line-number="7378"></td>
        <td id="LC7378" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>namedListeners) {</td>
      </tr>
      <tr>
        <td id="L7379" class="blob-num js-line-number" data-line-number="7379"></td>
        <td id="LC7379" class="blob-code blob-code-inner js-file-line">          <span class="pl-v">this</span>.$$listeners[name] <span class="pl-k">=</span> namedListeners <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7380" class="blob-num js-line-number" data-line-number="7380"></td>
        <td id="LC7380" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7381" class="blob-num js-line-number" data-line-number="7381"></td>
        <td id="LC7381" class="blob-code blob-code-inner js-file-line">        namedListeners.<span class="pl-c1">push</span>(listener);</td>
      </tr>
      <tr>
        <td id="L7382" class="blob-num js-line-number" data-line-number="7382"></td>
        <td id="LC7382" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7383" class="blob-num js-line-number" data-line-number="7383"></td>
        <td id="LC7383" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L7384" class="blob-num js-line-number" data-line-number="7384"></td>
        <td id="LC7384" class="blob-code blob-code-inner js-file-line">          arrayRemove(namedListeners, listener);</td>
      </tr>
      <tr>
        <td id="L7385" class="blob-num js-line-number" data-line-number="7385"></td>
        <td id="LC7385" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L7386" class="blob-num js-line-number" data-line-number="7386"></td>
        <td id="LC7386" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7387" class="blob-num js-line-number" data-line-number="7387"></td>
        <td id="LC7387" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7388" class="blob-num js-line-number" data-line-number="7388"></td>
        <td id="LC7388" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7389" class="blob-num js-line-number" data-line-number="7389"></td>
        <td id="LC7389" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7390" class="blob-num js-line-number" data-line-number="7390"></td>
        <td id="LC7390" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7391" class="blob-num js-line-number" data-line-number="7391"></td>
        <td id="LC7391" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$emit</span></td>
      </tr>
      <tr>
        <td id="L7392" class="blob-num js-line-number" data-line-number="7392"></td>
        <td id="LC7392" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7393" class="blob-num js-line-number" data-line-number="7393"></td>
        <td id="LC7393" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7394" class="blob-num js-line-number" data-line-number="7394"></td>
        <td id="LC7394" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7395" class="blob-num js-line-number" data-line-number="7395"></td>
        <td id="LC7395" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7396" class="blob-num js-line-number" data-line-number="7396"></td>
        <td id="LC7396" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Dispatches an event `name` upwards through the scope hierarchy notifying the</span></td>
      </tr>
      <tr>
        <td id="L7397" class="blob-num js-line-number" data-line-number="7397"></td>
        <td id="LC7397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * registered {@link angular.module.ng.$rootScope.Scope#$on} listeners.</span></td>
      </tr>
      <tr>
        <td id="L7398" class="blob-num js-line-number" data-line-number="7398"></td>
        <td id="LC7398" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7399" class="blob-num js-line-number" data-line-number="7399"></td>
        <td id="LC7399" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The event life cycle starts at the scope on which `$emit` was called. All</span></td>
      </tr>
      <tr>
        <td id="L7400" class="blob-num js-line-number" data-line-number="7400"></td>
        <td id="LC7400" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.</span></td>
      </tr>
      <tr>
        <td id="L7401" class="blob-num js-line-number" data-line-number="7401"></td>
        <td id="LC7401" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Afterwards, the event traverses upwards toward the root scope and calls all registered</span></td>
      </tr>
      <tr>
        <td id="L7402" class="blob-num js-line-number" data-line-number="7402"></td>
        <td id="LC7402" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * listeners along the way. The event will stop propagating if one of the listeners cancels it.</span></td>
      </tr>
      <tr>
        <td id="L7403" class="blob-num js-line-number" data-line-number="7403"></td>
        <td id="LC7403" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7404" class="blob-num js-line-number" data-line-number="7404"></td>
        <td id="LC7404" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Any exception emmited from the {@link angular.module.ng.$rootScope.Scope#$on listeners} will be passed</span></td>
      </tr>
      <tr>
        <td id="L7405" class="blob-num js-line-number" data-line-number="7405"></td>
        <td id="LC7405" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * onto the {@link angular.module.ng.$exceptionHandler $exceptionHandler} service.</span></td>
      </tr>
      <tr>
        <td id="L7406" class="blob-num js-line-number" data-line-number="7406"></td>
        <td id="LC7406" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7407" class="blob-num js-line-number" data-line-number="7407"></td>
        <td id="LC7407" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string} name Event name to emit.</span></td>
      </tr>
      <tr>
        <td id="L7408" class="blob-num js-line-number" data-line-number="7408"></td>
        <td id="LC7408" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {...*} args Optional set of arguments which will be passed onto the event listeners.</span></td>
      </tr>
      <tr>
        <td id="L7409" class="blob-num js-line-number" data-line-number="7409"></td>
        <td id="LC7409" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@return</span> {Object} Event object, see {@link angular.module.ng.$rootScope.Scope#$on}</span></td>
      </tr>
      <tr>
        <td id="L7410" class="blob-num js-line-number" data-line-number="7410"></td>
        <td id="LC7410" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7411" class="blob-num js-line-number" data-line-number="7411"></td>
        <td id="LC7411" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">emit</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L7412" class="blob-num js-line-number" data-line-number="7412"></td>
        <td id="LC7412" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> empty <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L7413" class="blob-num js-line-number" data-line-number="7413"></td>
        <td id="LC7413" class="blob-code blob-code-inner js-file-line">            namedListeners,</td>
      </tr>
      <tr>
        <td id="L7414" class="blob-num js-line-number" data-line-number="7414"></td>
        <td id="LC7414" class="blob-code blob-code-inner js-file-line">            scope <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L7415" class="blob-num js-line-number" data-line-number="7415"></td>
        <td id="LC7415" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7416" class="blob-num js-line-number" data-line-number="7416"></td>
        <td id="LC7416" class="blob-code blob-code-inner js-file-line">              name<span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L7417" class="blob-num js-line-number" data-line-number="7417"></td>
        <td id="LC7417" class="blob-code blob-code-inner js-file-line">              targetScope<span class="pl-k">:</span> scope,</td>
      </tr>
      <tr>
        <td id="L7418" class="blob-num js-line-number" data-line-number="7418"></td>
        <td id="LC7418" class="blob-code blob-code-inner js-file-line">              <span class="pl-en">cancel</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {<span class="pl-c1">event</span>.cancelled <span class="pl-k">=</span> <span class="pl-c1">true</span>;},</td>
      </tr>
      <tr>
        <td id="L7419" class="blob-num js-line-number" data-line-number="7419"></td>
        <td id="LC7419" class="blob-code blob-code-inner js-file-line">              cancelled<span class="pl-k">:</span> <span class="pl-c1">false</span></td>
      </tr>
      <tr>
        <td id="L7420" class="blob-num js-line-number" data-line-number="7420"></td>
        <td id="LC7420" class="blob-code blob-code-inner js-file-line">            },</td>
      </tr>
      <tr>
        <td id="L7421" class="blob-num js-line-number" data-line-number="7421"></td>
        <td id="LC7421" class="blob-code blob-code-inner js-file-line">            listenerArgs <span class="pl-k">=</span> <span class="pl-c1">concat</span>([<span class="pl-c1">event</span>], arguments, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L7422" class="blob-num js-line-number" data-line-number="7422"></td>
        <td id="LC7422" class="blob-code blob-code-inner js-file-line">            i, length;</td>
      </tr>
      <tr>
        <td id="L7423" class="blob-num js-line-number" data-line-number="7423"></td>
        <td id="LC7423" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7424" class="blob-num js-line-number" data-line-number="7424"></td>
        <td id="LC7424" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L7425" class="blob-num js-line-number" data-line-number="7425"></td>
        <td id="LC7425" class="blob-code blob-code-inner js-file-line">          namedListeners <span class="pl-k">=</span> scope.$$listeners[name] <span class="pl-k">||</span> empty;</td>
      </tr>
      <tr>
        <td id="L7426" class="blob-num js-line-number" data-line-number="7426"></td>
        <td id="LC7426" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">event</span>.currentScope <span class="pl-k">=</span> scope;</td>
      </tr>
      <tr>
        <td id="L7427" class="blob-num js-line-number" data-line-number="7427"></td>
        <td id="LC7427" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (i<span class="pl-k">=</span><span class="pl-c1">0</span>, length<span class="pl-k">=</span>namedListeners.<span class="pl-c1">length</span>; i<span class="pl-k">&lt;</span>length; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L7428" class="blob-num js-line-number" data-line-number="7428"></td>
        <td id="LC7428" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L7429" class="blob-num js-line-number" data-line-number="7429"></td>
        <td id="LC7429" class="blob-code blob-code-inner js-file-line">              namedListeners[i].<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, listenerArgs);</td>
      </tr>
      <tr>
        <td id="L7430" class="blob-num js-line-number" data-line-number="7430"></td>
        <td id="LC7430" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (<span class="pl-c1">event</span>.cancelled) <span class="pl-k">return</span> <span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L7431" class="blob-num js-line-number" data-line-number="7431"></td>
        <td id="LC7431" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span> (e) {</td>
      </tr>
      <tr>
        <td id="L7432" class="blob-num js-line-number" data-line-number="7432"></td>
        <td id="LC7432" class="blob-code blob-code-inner js-file-line">              $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L7433" class="blob-num js-line-number" data-line-number="7433"></td>
        <td id="LC7433" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7434" class="blob-num js-line-number" data-line-number="7434"></td>
        <td id="LC7434" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7435" class="blob-num js-line-number" data-line-number="7435"></td>
        <td id="LC7435" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">//traverse upwards</span></td>
      </tr>
      <tr>
        <td id="L7436" class="blob-num js-line-number" data-line-number="7436"></td>
        <td id="LC7436" class="blob-code blob-code-inner js-file-line">          scope <span class="pl-k">=</span> scope.$parent;</td>
      </tr>
      <tr>
        <td id="L7437" class="blob-num js-line-number" data-line-number="7437"></td>
        <td id="LC7437" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">while</span> (scope);</td>
      </tr>
      <tr>
        <td id="L7438" class="blob-num js-line-number" data-line-number="7438"></td>
        <td id="LC7438" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7439" class="blob-num js-line-number" data-line-number="7439"></td>
        <td id="LC7439" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L7440" class="blob-num js-line-number" data-line-number="7440"></td>
        <td id="LC7440" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7441" class="blob-num js-line-number" data-line-number="7441"></td>
        <td id="LC7441" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7442" class="blob-num js-line-number" data-line-number="7442"></td>
        <td id="LC7442" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7443" class="blob-num js-line-number" data-line-number="7443"></td>
        <td id="LC7443" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7444" class="blob-num js-line-number" data-line-number="7444"></td>
        <td id="LC7444" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7445" class="blob-num js-line-number" data-line-number="7445"></td>
        <td id="LC7445" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@name</span> angular.module.ng.$rootScope.Scope#$broadcast</span></td>
      </tr>
      <tr>
        <td id="L7446" class="blob-num js-line-number" data-line-number="7446"></td>
        <td id="LC7446" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * @methodOf angular.module.ng.$rootScope.Scope</span></td>
      </tr>
      <tr>
        <td id="L7447" class="blob-num js-line-number" data-line-number="7447"></td>
        <td id="LC7447" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L7448" class="blob-num js-line-number" data-line-number="7448"></td>
        <td id="LC7448" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7449" class="blob-num js-line-number" data-line-number="7449"></td>
        <td id="LC7449" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7450" class="blob-num js-line-number" data-line-number="7450"></td>
        <td id="LC7450" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Dispatches an event `name` downwards to all child scopes (and their children) notifying the</span></td>
      </tr>
      <tr>
        <td id="L7451" class="blob-num js-line-number" data-line-number="7451"></td>
        <td id="LC7451" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * registered {@link angular.module.ng.$rootScope.Scope#$on} listeners.</span></td>
      </tr>
      <tr>
        <td id="L7452" class="blob-num js-line-number" data-line-number="7452"></td>
        <td id="LC7452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7453" class="blob-num js-line-number" data-line-number="7453"></td>
        <td id="LC7453" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * The event life cycle starts at the scope on which `$broadcast` was called. All</span></td>
      </tr>
      <tr>
        <td id="L7454" class="blob-num js-line-number" data-line-number="7454"></td>
        <td id="LC7454" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * {@link angular.module.ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get notified.</span></td>
      </tr>
      <tr>
        <td id="L7455" class="blob-num js-line-number" data-line-number="7455"></td>
        <td id="LC7455" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Afterwards, the event propagates to all direct and indirect scopes of the current scope and</span></td>
      </tr>
      <tr>
        <td id="L7456" class="blob-num js-line-number" data-line-number="7456"></td>
        <td id="LC7456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * calls all registered listeners along the way. The event cannot be canceled.</span></td>
      </tr>
      <tr>
        <td id="L7457" class="blob-num js-line-number" data-line-number="7457"></td>
        <td id="LC7457" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7458" class="blob-num js-line-number" data-line-number="7458"></td>
        <td id="LC7458" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Any exception emmited from the {@link angular.module.ng.$rootScope.Scope#$on listeners} will be passed</span></td>
      </tr>
      <tr>
        <td id="L7459" class="blob-num js-line-number" data-line-number="7459"></td>
        <td id="LC7459" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * onto the {@link angular.module.ng.$exceptionHandler $exceptionHandler} service.</span></td>
      </tr>
      <tr>
        <td id="L7460" class="blob-num js-line-number" data-line-number="7460"></td>
        <td id="LC7460" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *</span></td>
      </tr>
      <tr>
        <td id="L7461" class="blob-num js-line-number" data-line-number="7461"></td>
        <td id="LC7461" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {string} name Event name to emit.</span></td>
      </tr>
      <tr>
        <td id="L7462" class="blob-num js-line-number" data-line-number="7462"></td>
        <td id="LC7462" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@param</span> {...*} args Optional set of arguments which will be passed onto the event listeners.</span></td>
      </tr>
      <tr>
        <td id="L7463" class="blob-num js-line-number" data-line-number="7463"></td>
        <td id="LC7463" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * <span class="pl-k">@return</span> {Object} Event object, see {@link angular.module.ng.$rootScope.Scope#$on}</span></td>
      </tr>
      <tr>
        <td id="L7464" class="blob-num js-line-number" data-line-number="7464"></td>
        <td id="LC7464" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L7465" class="blob-num js-line-number" data-line-number="7465"></td>
        <td id="LC7465" class="blob-code blob-code-inner js-file-line">      $<span class="pl-en">broadcast</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>, <span class="pl-smi">args</span>) {</td>
      </tr>
      <tr>
        <td id="L7466" class="blob-num js-line-number" data-line-number="7466"></td>
        <td id="LC7466" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> target <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L7467" class="blob-num js-line-number" data-line-number="7467"></td>
        <td id="LC7467" class="blob-code blob-code-inner js-file-line">            current <span class="pl-k">=</span> target,</td>
      </tr>
      <tr>
        <td id="L7468" class="blob-num js-line-number" data-line-number="7468"></td>
        <td id="LC7468" class="blob-code blob-code-inner js-file-line">            next <span class="pl-k">=</span> target,</td>
      </tr>
      <tr>
        <td id="L7469" class="blob-num js-line-number" data-line-number="7469"></td>
        <td id="LC7469" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span> <span class="pl-k">=</span> { name<span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L7470" class="blob-num js-line-number" data-line-number="7470"></td>
        <td id="LC7470" class="blob-code blob-code-inner js-file-line">                      targetScope<span class="pl-k">:</span> target },</td>
      </tr>
      <tr>
        <td id="L7471" class="blob-num js-line-number" data-line-number="7471"></td>
        <td id="LC7471" class="blob-code blob-code-inner js-file-line">            listenerArgs <span class="pl-k">=</span> <span class="pl-c1">concat</span>([<span class="pl-c1">event</span>], arguments, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L7472" class="blob-num js-line-number" data-line-number="7472"></td>
        <td id="LC7472" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7473" class="blob-num js-line-number" data-line-number="7473"></td>
        <td id="LC7473" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">//down while you can, then up and next sibling or up and next sibling until back at root</span></td>
      </tr>
      <tr>
        <td id="L7474" class="blob-num js-line-number" data-line-number="7474"></td>
        <td id="LC7474" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">do</span> {</td>
      </tr>
      <tr>
        <td id="L7475" class="blob-num js-line-number" data-line-number="7475"></td>
        <td id="LC7475" class="blob-code blob-code-inner js-file-line">          current <span class="pl-k">=</span> next;</td>
      </tr>
      <tr>
        <td id="L7476" class="blob-num js-line-number" data-line-number="7476"></td>
        <td id="LC7476" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">event</span>.currentScope <span class="pl-k">=</span> current;</td>
      </tr>
      <tr>
        <td id="L7477" class="blob-num js-line-number" data-line-number="7477"></td>
        <td id="LC7477" class="blob-code blob-code-inner js-file-line">          forEach(current.$$listeners[name], <span class="pl-k">function</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L7478" class="blob-num js-line-number" data-line-number="7478"></td>
        <td id="LC7478" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L7479" class="blob-num js-line-number" data-line-number="7479"></td>
        <td id="LC7479" class="blob-code blob-code-inner js-file-line">              listener.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>, listenerArgs);</td>
      </tr>
      <tr>
        <td id="L7480" class="blob-num js-line-number" data-line-number="7480"></td>
        <td id="LC7480" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L7481" class="blob-num js-line-number" data-line-number="7481"></td>
        <td id="LC7481" class="blob-code blob-code-inner js-file-line">              $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L7482" class="blob-num js-line-number" data-line-number="7482"></td>
        <td id="LC7482" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7483" class="blob-num js-line-number" data-line-number="7483"></td>
        <td id="LC7483" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L7484" class="blob-num js-line-number" data-line-number="7484"></td>
        <td id="LC7484" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7485" class="blob-num js-line-number" data-line-number="7485"></td>
        <td id="LC7485" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// Insanity Warning: scope depth-first traversal</span></td>
      </tr>
      <tr>
        <td id="L7486" class="blob-num js-line-number" data-line-number="7486"></td>
        <td id="LC7486" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// yes, this code is a bit crazy, but it works and we have tests to prove it!</span></td>
      </tr>
      <tr>
        <td id="L7487" class="blob-num js-line-number" data-line-number="7487"></td>
        <td id="LC7487" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// this piece should be kept in sync with the traversal in $digest</span></td>
      </tr>
      <tr>
        <td id="L7488" class="blob-num js-line-number" data-line-number="7488"></td>
        <td id="LC7488" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>(next <span class="pl-k">=</span> (current.$$childHead <span class="pl-k">||</span> (current <span class="pl-k">!==</span> target <span class="pl-k">&amp;&amp;</span> current.$$nextSibling)))) {</td>
      </tr>
      <tr>
        <td id="L7489" class="blob-num js-line-number" data-line-number="7489"></td>
        <td id="LC7489" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span>(current <span class="pl-k">!==</span> target <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>(next <span class="pl-k">=</span> current.$$nextSibling)) {</td>
      </tr>
      <tr>
        <td id="L7490" class="blob-num js-line-number" data-line-number="7490"></td>
        <td id="LC7490" class="blob-code blob-code-inner js-file-line">              current <span class="pl-k">=</span> current.$parent;</td>
      </tr>
      <tr>
        <td id="L7491" class="blob-num js-line-number" data-line-number="7491"></td>
        <td id="LC7491" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L7492" class="blob-num js-line-number" data-line-number="7492"></td>
        <td id="LC7492" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L7493" class="blob-num js-line-number" data-line-number="7493"></td>
        <td id="LC7493" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">while</span> ((current <span class="pl-k">=</span> next));</td>
      </tr>
      <tr>
        <td id="L7494" class="blob-num js-line-number" data-line-number="7494"></td>
        <td id="LC7494" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7495" class="blob-num js-line-number" data-line-number="7495"></td>
        <td id="LC7495" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">event</span>;</td>
      </tr>
      <tr>
        <td id="L7496" class="blob-num js-line-number" data-line-number="7496"></td>
        <td id="LC7496" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7497" class="blob-num js-line-number" data-line-number="7497"></td>
        <td id="LC7497" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7498" class="blob-num js-line-number" data-line-number="7498"></td>
        <td id="LC7498" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7499" class="blob-num js-line-number" data-line-number="7499"></td>
        <td id="LC7499" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7500" class="blob-num js-line-number" data-line-number="7500"></td>
        <td id="LC7500" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">flagPhase</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">phase</span>) {</td>
      </tr>
      <tr>
        <td id="L7501" class="blob-num js-line-number" data-line-number="7501"></td>
        <td id="LC7501" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> root <span class="pl-k">=</span> scope.$root;</td>
      </tr>
      <tr>
        <td id="L7502" class="blob-num js-line-number" data-line-number="7502"></td>
        <td id="LC7502" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7503" class="blob-num js-line-number" data-line-number="7503"></td>
        <td id="LC7503" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (root.$$phase) {</td>
      </tr>
      <tr>
        <td id="L7504" class="blob-num js-line-number" data-line-number="7504"></td>
        <td id="LC7504" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(root.$$phase <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> already in progress<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7505" class="blob-num js-line-number" data-line-number="7505"></td>
        <td id="LC7505" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7506" class="blob-num js-line-number" data-line-number="7506"></td>
        <td id="LC7506" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7507" class="blob-num js-line-number" data-line-number="7507"></td>
        <td id="LC7507" class="blob-code blob-code-inner js-file-line">      root.$$phase <span class="pl-k">=</span> phase;</td>
      </tr>
      <tr>
        <td id="L7508" class="blob-num js-line-number" data-line-number="7508"></td>
        <td id="LC7508" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7509" class="blob-num js-line-number" data-line-number="7509"></td>
        <td id="LC7509" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7510" class="blob-num js-line-number" data-line-number="7510"></td>
        <td id="LC7510" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Scope</span>();</td>
      </tr>
      <tr>
        <td id="L7511" class="blob-num js-line-number" data-line-number="7511"></td>
        <td id="LC7511" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7512" class="blob-num js-line-number" data-line-number="7512"></td>
        <td id="LC7512" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compileToFn</span>(<span class="pl-smi">exp</span>, <span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L7513" class="blob-num js-line-number" data-line-number="7513"></td>
        <td id="LC7513" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> fn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(exp);</td>
      </tr>
      <tr>
        <td id="L7514" class="blob-num js-line-number" data-line-number="7514"></td>
        <td id="LC7514" class="blob-code blob-code-inner js-file-line">      assertArgFn(fn, name);</td>
      </tr>
      <tr>
        <td id="L7515" class="blob-num js-line-number" data-line-number="7515"></td>
        <td id="LC7515" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> fn;</td>
      </tr>
      <tr>
        <td id="L7516" class="blob-num js-line-number" data-line-number="7516"></td>
        <td id="LC7516" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7517" class="blob-num js-line-number" data-line-number="7517"></td>
        <td id="LC7517" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7518" class="blob-num js-line-number" data-line-number="7518"></td>
        <td id="LC7518" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7519" class="blob-num js-line-number" data-line-number="7519"></td>
        <td id="LC7519" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * function used as an initial value for watchers.</span></td>
      </tr>
      <tr>
        <td id="L7520" class="blob-num js-line-number" data-line-number="7520"></td>
        <td id="LC7520" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * because it&#39;s uniqueue we can easily tell it apart from other values</span></td>
      </tr>
      <tr>
        <td id="L7521" class="blob-num js-line-number" data-line-number="7521"></td>
        <td id="LC7521" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L7522" class="blob-num js-line-number" data-line-number="7522"></td>
        <td id="LC7522" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">initWatchVal</span>() {}</td>
      </tr>
      <tr>
        <td id="L7523" class="blob-num js-line-number" data-line-number="7523"></td>
        <td id="LC7523" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L7524" class="blob-num js-line-number" data-line-number="7524"></td>
        <td id="LC7524" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7525" class="blob-num js-line-number" data-line-number="7525"></td>
        <td id="LC7525" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7526" class="blob-num js-line-number" data-line-number="7526"></td>
        <td id="LC7526" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7527" class="blob-num js-line-number" data-line-number="7527"></td>
        <td id="LC7527" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * !!! This is an undocumented &quot;private&quot; service !!!</span></td>
      </tr>
      <tr>
        <td id="L7528" class="blob-num js-line-number" data-line-number="7528"></td>
        <td id="LC7528" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7529" class="blob-num js-line-number" data-line-number="7529"></td>
        <td id="LC7529" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$sniffer</span></td>
      </tr>
      <tr>
        <td id="L7530" class="blob-num js-line-number" data-line-number="7530"></td>
        <td id="LC7530" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $window</span></td>
      </tr>
      <tr>
        <td id="L7531" class="blob-num js-line-number" data-line-number="7531"></td>
        <td id="LC7531" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7532" class="blob-num js-line-number" data-line-number="7532"></td>
        <td id="LC7532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} history Does the browser support html5 history api ?</span></td>
      </tr>
      <tr>
        <td id="L7533" class="blob-num js-line-number" data-line-number="7533"></td>
        <td id="LC7533" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} hashchange Does the browser support hashchange event ?</span></td>
      </tr>
      <tr>
        <td id="L7534" class="blob-num js-line-number" data-line-number="7534"></td>
        <td id="LC7534" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7535" class="blob-num js-line-number" data-line-number="7535"></td>
        <td id="LC7535" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7536" class="blob-num js-line-number" data-line-number="7536"></td>
        <td id="LC7536" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This is very simple implementation of testing browser&#39;s features.</span></td>
      </tr>
      <tr>
        <td id="L7537" class="blob-num js-line-number" data-line-number="7537"></td>
        <td id="LC7537" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L7538" class="blob-num js-line-number" data-line-number="7538"></td>
        <td id="LC7538" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$SnifferProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L7539" class="blob-num js-line-number" data-line-number="7539"></td>
        <td id="LC7539" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$window</span>) {</td>
      </tr>
      <tr>
        <td id="L7540" class="blob-num js-line-number" data-line-number="7540"></td>
        <td id="LC7540" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> eventSupport <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L7541" class="blob-num js-line-number" data-line-number="7541"></td>
        <td id="LC7541" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7542" class="blob-num js-line-number" data-line-number="7542"></td>
        <td id="LC7542" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L7543" class="blob-num js-line-number" data-line-number="7543"></td>
        <td id="LC7543" class="blob-code blob-code-inner js-file-line">      history<span class="pl-k">:</span> <span class="pl-k">!!</span>($window.<span class="pl-c1">history</span> <span class="pl-k">&amp;&amp;</span> $window.<span class="pl-c1">history</span>.pushState),</td>
      </tr>
      <tr>
        <td id="L7544" class="blob-num js-line-number" data-line-number="7544"></td>
        <td id="LC7544" class="blob-code blob-code-inner js-file-line">      hashchange<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>onhashchange<span class="pl-pds">&#39;</span></span> <span class="pl-k">in</span> $window <span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L7545" class="blob-num js-line-number" data-line-number="7545"></td>
        <td id="LC7545" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// IE8 compatible mode lies</span></td>
      </tr>
      <tr>
        <td id="L7546" class="blob-num js-line-number" data-line-number="7546"></td>
        <td id="LC7546" class="blob-code blob-code-inner js-file-line">                  (<span class="pl-k">!</span>$window.<span class="pl-c1">document</span>.documentMode <span class="pl-k">||</span> $window.<span class="pl-c1">document</span>.documentMode <span class="pl-k">&gt;</span> <span class="pl-c1">7</span>),</td>
      </tr>
      <tr>
        <td id="L7547" class="blob-num js-line-number" data-line-number="7547"></td>
        <td id="LC7547" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">hasEvent</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L7548" class="blob-num js-line-number" data-line-number="7548"></td>
        <td id="LC7548" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isUndefined(eventSupport[<span class="pl-c1">event</span>])) {</td>
      </tr>
      <tr>
        <td id="L7549" class="blob-num js-line-number" data-line-number="7549"></td>
        <td id="LC7549" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> divElm <span class="pl-k">=</span> $window.<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>div<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7550" class="blob-num js-line-number" data-line-number="7550"></td>
        <td id="LC7550" class="blob-code blob-code-inner js-file-line">          eventSupport[<span class="pl-c1">event</span>] <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>on<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> <span class="pl-c1">event</span> <span class="pl-k">in</span> divElm;</td>
      </tr>
      <tr>
        <td id="L7551" class="blob-num js-line-number" data-line-number="7551"></td>
        <td id="LC7551" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L7552" class="blob-num js-line-number" data-line-number="7552"></td>
        <td id="LC7552" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7553" class="blob-num js-line-number" data-line-number="7553"></td>
        <td id="LC7553" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> eventSupport[<span class="pl-c1">event</span>];</td>
      </tr>
      <tr>
        <td id="L7554" class="blob-num js-line-number" data-line-number="7554"></td>
        <td id="LC7554" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7555" class="blob-num js-line-number" data-line-number="7555"></td>
        <td id="LC7555" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L7556" class="blob-num js-line-number" data-line-number="7556"></td>
        <td id="LC7556" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L7557" class="blob-num js-line-number" data-line-number="7557"></td>
        <td id="LC7557" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7558" class="blob-num js-line-number" data-line-number="7558"></td>
        <td id="LC7558" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7559" class="blob-num js-line-number" data-line-number="7559"></td>
        <td id="LC7559" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7560" class="blob-num js-line-number" data-line-number="7560"></td>
        <td id="LC7560" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L7561" class="blob-num js-line-number" data-line-number="7561"></td>
        <td id="LC7561" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$window</span></td>
      </tr>
      <tr>
        <td id="L7562" class="blob-num js-line-number" data-line-number="7562"></td>
        <td id="LC7562" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7563" class="blob-num js-line-number" data-line-number="7563"></td>
        <td id="LC7563" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7564" class="blob-num js-line-number" data-line-number="7564"></td>
        <td id="LC7564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A reference to the browser&#39;s `window` object. While `window`</span></td>
      </tr>
      <tr>
        <td id="L7565" class="blob-num js-line-number" data-line-number="7565"></td>
        <td id="LC7565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * is globally available in JavaScript, it causes testability problems, because</span></td>
      </tr>
      <tr>
        <td id="L7566" class="blob-num js-line-number" data-line-number="7566"></td>
        <td id="LC7566" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * it is a global variable. In angular we always refer to it through the</span></td>
      </tr>
      <tr>
        <td id="L7567" class="blob-num js-line-number" data-line-number="7567"></td>
        <td id="LC7567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `$window` service, so it may be overriden, removed or mocked for testing.</span></td>
      </tr>
      <tr>
        <td id="L7568" class="blob-num js-line-number" data-line-number="7568"></td>
        <td id="LC7568" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7569" class="blob-num js-line-number" data-line-number="7569"></td>
        <td id="LC7569" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * All expressions are evaluated with respect to current scope so they don&#39;t</span></td>
      </tr>
      <tr>
        <td id="L7570" class="blob-num js-line-number" data-line-number="7570"></td>
        <td id="LC7570" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * suffer from window globality.</span></td>
      </tr>
      <tr>
        <td id="L7571" class="blob-num js-line-number" data-line-number="7571"></td>
        <td id="LC7571" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7572" class="blob-num js-line-number" data-line-number="7572"></td>
        <td id="LC7572" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L7573" class="blob-num js-line-number" data-line-number="7573"></td>
        <td id="LC7573" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L7574" class="blob-num js-line-number" data-line-number="7574"></td>
        <td id="LC7574" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L7575" class="blob-num js-line-number" data-line-number="7575"></td>
        <td id="LC7575" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;input ng-init=&quot;$window = $service(&#39;$window&#39;); greeting=&#39;Hello World!&#39;&quot; type=&quot;text&quot; ng-model=&quot;greeting&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L7576" class="blob-num js-line-number" data-line-number="7576"></td>
        <td id="LC7576" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;button ng-click=&quot;$window.alert(greeting)&quot;&gt;ALERT&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L7577" class="blob-num js-line-number" data-line-number="7577"></td>
        <td id="LC7577" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L7578" class="blob-num js-line-number" data-line-number="7578"></td>
        <td id="LC7578" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L7579" class="blob-num js-line-number" data-line-number="7579"></td>
        <td id="LC7579" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L7580" class="blob-num js-line-number" data-line-number="7580"></td>
        <td id="LC7580" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L7581" class="blob-num js-line-number" data-line-number="7581"></td>
        <td id="LC7581" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L7582" class="blob-num js-line-number" data-line-number="7582"></td>
        <td id="LC7582" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$WindowProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L7583" class="blob-num js-line-number" data-line-number="7583"></td>
        <td id="LC7583" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> valueFn(<span class="pl-c1">window</span>);</td>
      </tr>
      <tr>
        <td id="L7584" class="blob-num js-line-number" data-line-number="7584"></td>
        <td id="LC7584" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7585" class="blob-num js-line-number" data-line-number="7585"></td>
        <td id="LC7585" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7586" class="blob-num js-line-number" data-line-number="7586"></td>
        <td id="LC7586" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7587" class="blob-num js-line-number" data-line-number="7587"></td>
        <td id="LC7587" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Parse headers into key value object</span></td>
      </tr>
      <tr>
        <td id="L7588" class="blob-num js-line-number" data-line-number="7588"></td>
        <td id="LC7588" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7589" class="blob-num js-line-number" data-line-number="7589"></td>
        <td id="LC7589" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} headers Raw headers as a string</span></td>
      </tr>
      <tr>
        <td id="L7590" class="blob-num js-line-number" data-line-number="7590"></td>
        <td id="LC7590" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Object} Parsed headers as key value object</span></td>
      </tr>
      <tr>
        <td id="L7591" class="blob-num js-line-number" data-line-number="7591"></td>
        <td id="LC7591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L7592" class="blob-num js-line-number" data-line-number="7592"></td>
        <td id="LC7592" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">parseHeaders</span>(<span class="pl-smi">headers</span>) {</td>
      </tr>
      <tr>
        <td id="L7593" class="blob-num js-line-number" data-line-number="7593"></td>
        <td id="LC7593" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> parsed <span class="pl-k">=</span> {}, key, val, i;</td>
      </tr>
      <tr>
        <td id="L7594" class="blob-num js-line-number" data-line-number="7594"></td>
        <td id="LC7594" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7595" class="blob-num js-line-number" data-line-number="7595"></td>
        <td id="LC7595" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>headers) <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L7596" class="blob-num js-line-number" data-line-number="7596"></td>
        <td id="LC7596" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7597" class="blob-num js-line-number" data-line-number="7597"></td>
        <td id="LC7597" class="blob-code blob-code-inner js-file-line">  forEach(headers.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span><span class="pl-pds">&#39;</span></span>), <span class="pl-k">function</span>(<span class="pl-smi">line</span>) {</td>
      </tr>
      <tr>
        <td id="L7598" class="blob-num js-line-number" data-line-number="7598"></td>
        <td id="LC7598" class="blob-code blob-code-inner js-file-line">    i <span class="pl-k">=</span> line.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7599" class="blob-num js-line-number" data-line-number="7599"></td>
        <td id="LC7599" class="blob-code blob-code-inner js-file-line">    key <span class="pl-k">=</span> lowercase(trim(line.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, i)));</td>
      </tr>
      <tr>
        <td id="L7600" class="blob-num js-line-number" data-line-number="7600"></td>
        <td id="LC7600" class="blob-code blob-code-inner js-file-line">    val <span class="pl-k">=</span> trim(line.<span class="pl-c1">substr</span>(i <span class="pl-k">+</span> <span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L7601" class="blob-num js-line-number" data-line-number="7601"></td>
        <td id="LC7601" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7602" class="blob-num js-line-number" data-line-number="7602"></td>
        <td id="LC7602" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (key) {</td>
      </tr>
      <tr>
        <td id="L7603" class="blob-num js-line-number" data-line-number="7603"></td>
        <td id="LC7603" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (parsed[key]) {</td>
      </tr>
      <tr>
        <td id="L7604" class="blob-num js-line-number" data-line-number="7604"></td>
        <td id="LC7604" class="blob-code blob-code-inner js-file-line">        parsed[key] <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> val;</td>
      </tr>
      <tr>
        <td id="L7605" class="blob-num js-line-number" data-line-number="7605"></td>
        <td id="LC7605" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L7606" class="blob-num js-line-number" data-line-number="7606"></td>
        <td id="LC7606" class="blob-code blob-code-inner js-file-line">        parsed[key] <span class="pl-k">=</span> val;</td>
      </tr>
      <tr>
        <td id="L7607" class="blob-num js-line-number" data-line-number="7607"></td>
        <td id="LC7607" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7608" class="blob-num js-line-number" data-line-number="7608"></td>
        <td id="LC7608" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7609" class="blob-num js-line-number" data-line-number="7609"></td>
        <td id="LC7609" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L7610" class="blob-num js-line-number" data-line-number="7610"></td>
        <td id="LC7610" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7611" class="blob-num js-line-number" data-line-number="7611"></td>
        <td id="LC7611" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> parsed;</td>
      </tr>
      <tr>
        <td id="L7612" class="blob-num js-line-number" data-line-number="7612"></td>
        <td id="LC7612" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7613" class="blob-num js-line-number" data-line-number="7613"></td>
        <td id="LC7613" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7614" class="blob-num js-line-number" data-line-number="7614"></td>
        <td id="LC7614" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7615" class="blob-num js-line-number" data-line-number="7615"></td>
        <td id="LC7615" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7616" class="blob-num js-line-number" data-line-number="7616"></td>
        <td id="LC7616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Returns a function that provides access to parsed headers.</span></td>
      </tr>
      <tr>
        <td id="L7617" class="blob-num js-line-number" data-line-number="7617"></td>
        <td id="LC7617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7618" class="blob-num js-line-number" data-line-number="7618"></td>
        <td id="LC7618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Headers are lazy parsed when first requested.</span></td>
      </tr>
      <tr>
        <td id="L7619" class="blob-num js-line-number" data-line-number="7619"></td>
        <td id="LC7619" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@see</span> parseHeaders</span></td>
      </tr>
      <tr>
        <td id="L7620" class="blob-num js-line-number" data-line-number="7620"></td>
        <td id="LC7620" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7621" class="blob-num js-line-number" data-line-number="7621"></td>
        <td id="LC7621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(string|Object)} headers Headers to provide access to.</span></td>
      </tr>
      <tr>
        <td id="L7622" class="blob-num js-line-number" data-line-number="7622"></td>
        <td id="LC7622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {function(string=)} Returns a getter function which if called with:</span></td>
      </tr>
      <tr>
        <td id="L7623" class="blob-num js-line-number" data-line-number="7623"></td>
        <td id="LC7623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7624" class="blob-num js-line-number" data-line-number="7624"></td>
        <td id="LC7624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - if called with single an argument returns a single header value or null</span></td>
      </tr>
      <tr>
        <td id="L7625" class="blob-num js-line-number" data-line-number="7625"></td>
        <td id="LC7625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - if called with no arguments returns an object containing all headers.</span></td>
      </tr>
      <tr>
        <td id="L7626" class="blob-num js-line-number" data-line-number="7626"></td>
        <td id="LC7626" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L7627" class="blob-num js-line-number" data-line-number="7627"></td>
        <td id="LC7627" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">headersGetter</span>(<span class="pl-smi">headers</span>) {</td>
      </tr>
      <tr>
        <td id="L7628" class="blob-num js-line-number" data-line-number="7628"></td>
        <td id="LC7628" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> headersObj <span class="pl-k">=</span> isObject(headers) <span class="pl-k">?</span> headers <span class="pl-k">:</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L7629" class="blob-num js-line-number" data-line-number="7629"></td>
        <td id="LC7629" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7630" class="blob-num js-line-number" data-line-number="7630"></td>
        <td id="LC7630" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L7631" class="blob-num js-line-number" data-line-number="7631"></td>
        <td id="LC7631" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>headersObj) headersObj <span class="pl-k">=</span>  parseHeaders(headers);</td>
      </tr>
      <tr>
        <td id="L7632" class="blob-num js-line-number" data-line-number="7632"></td>
        <td id="LC7632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7633" class="blob-num js-line-number" data-line-number="7633"></td>
        <td id="LC7633" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (name) {</td>
      </tr>
      <tr>
        <td id="L7634" class="blob-num js-line-number" data-line-number="7634"></td>
        <td id="LC7634" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> headersObj[lowercase(name)] <span class="pl-k">||</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L7635" class="blob-num js-line-number" data-line-number="7635"></td>
        <td id="LC7635" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7636" class="blob-num js-line-number" data-line-number="7636"></td>
        <td id="LC7636" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7637" class="blob-num js-line-number" data-line-number="7637"></td>
        <td id="LC7637" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> headersObj;</td>
      </tr>
      <tr>
        <td id="L7638" class="blob-num js-line-number" data-line-number="7638"></td>
        <td id="LC7638" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7639" class="blob-num js-line-number" data-line-number="7639"></td>
        <td id="LC7639" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7640" class="blob-num js-line-number" data-line-number="7640"></td>
        <td id="LC7640" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7641" class="blob-num js-line-number" data-line-number="7641"></td>
        <td id="LC7641" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7642" class="blob-num js-line-number" data-line-number="7642"></td>
        <td id="LC7642" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7643" class="blob-num js-line-number" data-line-number="7643"></td>
        <td id="LC7643" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Chain all given functions</span></td>
      </tr>
      <tr>
        <td id="L7644" class="blob-num js-line-number" data-line-number="7644"></td>
        <td id="LC7644" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7645" class="blob-num js-line-number" data-line-number="7645"></td>
        <td id="LC7645" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This function is used for both request and response transforming</span></td>
      </tr>
      <tr>
        <td id="L7646" class="blob-num js-line-number" data-line-number="7646"></td>
        <td id="LC7646" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L7647" class="blob-num js-line-number" data-line-number="7647"></td>
        <td id="LC7647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} data Data to transform.</span></td>
      </tr>
      <tr>
        <td id="L7648" class="blob-num js-line-number" data-line-number="7648"></td>
        <td id="LC7648" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(string=)} headers Http headers getter fn.</span></td>
      </tr>
      <tr>
        <td id="L7649" class="blob-num js-line-number" data-line-number="7649"></td>
        <td id="LC7649" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(function|Array.&lt;function&gt;)} fns Function or an array of functions.</span></td>
      </tr>
      <tr>
        <td id="L7650" class="blob-num js-line-number" data-line-number="7650"></td>
        <td id="LC7650" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {*} Transformed data.</span></td>
      </tr>
      <tr>
        <td id="L7651" class="blob-num js-line-number" data-line-number="7651"></td>
        <td id="LC7651" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L7652" class="blob-num js-line-number" data-line-number="7652"></td>
        <td id="LC7652" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">transformData</span>(<span class="pl-smi">data</span>, <span class="pl-smi">headers</span>, <span class="pl-smi">fns</span>) {</td>
      </tr>
      <tr>
        <td id="L7653" class="blob-num js-line-number" data-line-number="7653"></td>
        <td id="LC7653" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isFunction(fns))</td>
      </tr>
      <tr>
        <td id="L7654" class="blob-num js-line-number" data-line-number="7654"></td>
        <td id="LC7654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> fns(data, headers);</td>
      </tr>
      <tr>
        <td id="L7655" class="blob-num js-line-number" data-line-number="7655"></td>
        <td id="LC7655" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7656" class="blob-num js-line-number" data-line-number="7656"></td>
        <td id="LC7656" class="blob-code blob-code-inner js-file-line">  forEach(fns, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L7657" class="blob-num js-line-number" data-line-number="7657"></td>
        <td id="LC7657" class="blob-code blob-code-inner js-file-line">    data <span class="pl-k">=</span> fn(data, headers);</td>
      </tr>
      <tr>
        <td id="L7658" class="blob-num js-line-number" data-line-number="7658"></td>
        <td id="LC7658" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L7659" class="blob-num js-line-number" data-line-number="7659"></td>
        <td id="LC7659" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7660" class="blob-num js-line-number" data-line-number="7660"></td>
        <td id="LC7660" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L7661" class="blob-num js-line-number" data-line-number="7661"></td>
        <td id="LC7661" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7662" class="blob-num js-line-number" data-line-number="7662"></td>
        <td id="LC7662" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7663" class="blob-num js-line-number" data-line-number="7663"></td>
        <td id="LC7663" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7664" class="blob-num js-line-number" data-line-number="7664"></td>
        <td id="LC7664" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isSuccess</span>(<span class="pl-smi">status</span>) {</td>
      </tr>
      <tr>
        <td id="L7665" class="blob-num js-line-number" data-line-number="7665"></td>
        <td id="LC7665" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-c1">200</span> <span class="pl-k">&lt;=</span> status <span class="pl-k">&amp;&amp;</span> status <span class="pl-k">&lt;</span> <span class="pl-c1">300</span>;</td>
      </tr>
      <tr>
        <td id="L7666" class="blob-num js-line-number" data-line-number="7666"></td>
        <td id="LC7666" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L7667" class="blob-num js-line-number" data-line-number="7667"></td>
        <td id="LC7667" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7668" class="blob-num js-line-number" data-line-number="7668"></td>
        <td id="LC7668" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7669" class="blob-num js-line-number" data-line-number="7669"></td>
        <td id="LC7669" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$HttpProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L7670" class="blob-num js-line-number" data-line-number="7670"></td>
        <td id="LC7670" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">JSON_START</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\[</span><span class="pl-k">|</span><span class="pl-cce">\{</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\{</span>]</span>)<span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L7671" class="blob-num js-line-number" data-line-number="7671"></td>
        <td id="LC7671" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">JSON_END</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\}\]</span>]</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L7672" class="blob-num js-line-number" data-line-number="7672"></td>
        <td id="LC7672" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">PROTECTION_PREFIX</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\)\]\}</span>&#39;,<span class="pl-k">?</span><span class="pl-cce">\n</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L7673" class="blob-num js-line-number" data-line-number="7673"></td>
        <td id="LC7673" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7674" class="blob-num js-line-number" data-line-number="7674"></td>
        <td id="LC7674" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> $config <span class="pl-k">=</span> <span class="pl-v">this</span>.defaults <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L7675" class="blob-num js-line-number" data-line-number="7675"></td>
        <td id="LC7675" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// transform incoming response data</span></td>
      </tr>
      <tr>
        <td id="L7676" class="blob-num js-line-number" data-line-number="7676"></td>
        <td id="LC7676" class="blob-code blob-code-inner js-file-line">    transformResponse<span class="pl-k">:</span> [<span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L7677" class="blob-num js-line-number" data-line-number="7677"></td>
        <td id="LC7677" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isString(data)) {</td>
      </tr>
      <tr>
        <td id="L7678" class="blob-num js-line-number" data-line-number="7678"></td>
        <td id="LC7678" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// strip json vulnerability protection prefix</span></td>
      </tr>
      <tr>
        <td id="L7679" class="blob-num js-line-number" data-line-number="7679"></td>
        <td id="LC7679" class="blob-code blob-code-inner js-file-line">        data <span class="pl-k">=</span> data.<span class="pl-c1">replace</span>(<span class="pl-c1">PROTECTION_PREFIX</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L7680" class="blob-num js-line-number" data-line-number="7680"></td>
        <td id="LC7680" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-c1">JSON_START</span>.<span class="pl-c1">test</span>(data) <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">JSON_END</span>.<span class="pl-c1">test</span>(data))</td>
      </tr>
      <tr>
        <td id="L7681" class="blob-num js-line-number" data-line-number="7681"></td>
        <td id="LC7681" class="blob-code blob-code-inner js-file-line">          data <span class="pl-k">=</span> fromJson(data, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L7682" class="blob-num js-line-number" data-line-number="7682"></td>
        <td id="LC7682" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L7683" class="blob-num js-line-number" data-line-number="7683"></td>
        <td id="LC7683" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> data;</td>
      </tr>
      <tr>
        <td id="L7684" class="blob-num js-line-number" data-line-number="7684"></td>
        <td id="LC7684" class="blob-code blob-code-inner js-file-line">    }],</td>
      </tr>
      <tr>
        <td id="L7685" class="blob-num js-line-number" data-line-number="7685"></td>
        <td id="LC7685" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7686" class="blob-num js-line-number" data-line-number="7686"></td>
        <td id="LC7686" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// transform outgoing request data</span></td>
      </tr>
      <tr>
        <td id="L7687" class="blob-num js-line-number" data-line-number="7687"></td>
        <td id="LC7687" class="blob-code blob-code-inner js-file-line">    transformRequest<span class="pl-k">:</span> [<span class="pl-k">function</span>(<span class="pl-smi">d</span>) {</td>
      </tr>
      <tr>
        <td id="L7688" class="blob-num js-line-number" data-line-number="7688"></td>
        <td id="LC7688" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> isObject(d) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isFile(d) <span class="pl-k">?</span> toJson(d) <span class="pl-k">:</span> d;</td>
      </tr>
      <tr>
        <td id="L7689" class="blob-num js-line-number" data-line-number="7689"></td>
        <td id="LC7689" class="blob-code blob-code-inner js-file-line">    }],</td>
      </tr>
      <tr>
        <td id="L7690" class="blob-num js-line-number" data-line-number="7690"></td>
        <td id="LC7690" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7691" class="blob-num js-line-number" data-line-number="7691"></td>
        <td id="LC7691" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// default headers</span></td>
      </tr>
      <tr>
        <td id="L7692" class="blob-num js-line-number" data-line-number="7692"></td>
        <td id="LC7692" class="blob-code blob-code-inner js-file-line">    headers<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L7693" class="blob-num js-line-number" data-line-number="7693"></td>
        <td id="LC7693" class="blob-code blob-code-inner js-file-line">      common<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L7694" class="blob-num js-line-number" data-line-number="7694"></td>
        <td id="LC7694" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&#39;</span>Accept<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>application/json, text/plain, */*<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7695" class="blob-num js-line-number" data-line-number="7695"></td>
        <td id="LC7695" class="blob-code blob-code-inner js-file-line">        <span class="pl-s"><span class="pl-pds">&#39;</span>X-Requested-With<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>XMLHttpRequest<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L7696" class="blob-num js-line-number" data-line-number="7696"></td>
        <td id="LC7696" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L7697" class="blob-num js-line-number" data-line-number="7697"></td>
        <td id="LC7697" class="blob-code blob-code-inner js-file-line">      post<span class="pl-k">:</span> {<span class="pl-s"><span class="pl-pds">&#39;</span>Content-Type<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>application/json<span class="pl-pds">&#39;</span></span>},</td>
      </tr>
      <tr>
        <td id="L7698" class="blob-num js-line-number" data-line-number="7698"></td>
        <td id="LC7698" class="blob-code blob-code-inner js-file-line">      put<span class="pl-k">:</span>  {<span class="pl-s"><span class="pl-pds">&#39;</span>Content-Type<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>application/json<span class="pl-pds">&#39;</span></span>}</td>
      </tr>
      <tr>
        <td id="L7699" class="blob-num js-line-number" data-line-number="7699"></td>
        <td id="LC7699" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L7700" class="blob-num js-line-number" data-line-number="7700"></td>
        <td id="LC7700" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L7701" class="blob-num js-line-number" data-line-number="7701"></td>
        <td id="LC7701" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7702" class="blob-num js-line-number" data-line-number="7702"></td>
        <td id="LC7702" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> providerResponseInterceptors <span class="pl-k">=</span> <span class="pl-v">this</span>.responseInterceptors <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7703" class="blob-num js-line-number" data-line-number="7703"></td>
        <td id="LC7703" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7704" class="blob-num js-line-number" data-line-number="7704"></td>
        <td id="LC7704" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$httpBackend<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$browser<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$cacheFactory<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$rootScope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$q<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L7705" class="blob-num js-line-number" data-line-number="7705"></td>
        <td id="LC7705" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span>(<span class="pl-smi">$httpBackend</span>, <span class="pl-smi">$browser</span>, <span class="pl-smi">$cacheFactory</span>, <span class="pl-smi">$rootScope</span>, <span class="pl-smi">$q</span>, <span class="pl-smi">$injector</span>) {</td>
      </tr>
      <tr>
        <td id="L7706" class="blob-num js-line-number" data-line-number="7706"></td>
        <td id="LC7706" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7707" class="blob-num js-line-number" data-line-number="7707"></td>
        <td id="LC7707" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> defaultCache <span class="pl-k">=</span> $cacheFactory(<span class="pl-s"><span class="pl-pds">&#39;</span>$http<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L7708" class="blob-num js-line-number" data-line-number="7708"></td>
        <td id="LC7708" class="blob-code blob-code-inner js-file-line">        responseInterceptors <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L7709" class="blob-num js-line-number" data-line-number="7709"></td>
        <td id="LC7709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7710" class="blob-num js-line-number" data-line-number="7710"></td>
        <td id="LC7710" class="blob-code blob-code-inner js-file-line">    forEach(providerResponseInterceptors, <span class="pl-k">function</span>(<span class="pl-smi">interceptor</span>) {</td>
      </tr>
      <tr>
        <td id="L7711" class="blob-num js-line-number" data-line-number="7711"></td>
        <td id="LC7711" class="blob-code blob-code-inner js-file-line">      responseInterceptors.<span class="pl-c1">push</span>(</td>
      </tr>
      <tr>
        <td id="L7712" class="blob-num js-line-number" data-line-number="7712"></td>
        <td id="LC7712" class="blob-code blob-code-inner js-file-line">          isString(interceptor)</td>
      </tr>
      <tr>
        <td id="L7713" class="blob-num js-line-number" data-line-number="7713"></td>
        <td id="LC7713" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">?</span> $injector.get(interceptor)</td>
      </tr>
      <tr>
        <td id="L7714" class="blob-num js-line-number" data-line-number="7714"></td>
        <td id="LC7714" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">:</span> $injector.invoke(interceptor)</td>
      </tr>
      <tr>
        <td id="L7715" class="blob-num js-line-number" data-line-number="7715"></td>
        <td id="LC7715" class="blob-code blob-code-inner js-file-line">      );</td>
      </tr>
      <tr>
        <td id="L7716" class="blob-num js-line-number" data-line-number="7716"></td>
        <td id="LC7716" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L7717" class="blob-num js-line-number" data-line-number="7717"></td>
        <td id="LC7717" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7718" class="blob-num js-line-number" data-line-number="7718"></td>
        <td id="LC7718" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L7719" class="blob-num js-line-number" data-line-number="7719"></td>
        <td id="LC7719" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L7720" class="blob-num js-line-number" data-line-number="7720"></td>
        <td id="LC7720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L7721" class="blob-num js-line-number" data-line-number="7721"></td>
        <td id="LC7721" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L7722" class="blob-num js-line-number" data-line-number="7722"></td>
        <td id="LC7722" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $httpBacked</span></td>
      </tr>
      <tr>
        <td id="L7723" class="blob-num js-line-number" data-line-number="7723"></td>
        <td id="LC7723" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $browser</span></td>
      </tr>
      <tr>
        <td id="L7724" class="blob-num js-line-number" data-line-number="7724"></td>
        <td id="LC7724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $cacheFactory</span></td>
      </tr>
      <tr>
        <td id="L7725" class="blob-num js-line-number" data-line-number="7725"></td>
        <td id="LC7725" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $rootScope</span></td>
      </tr>
      <tr>
        <td id="L7726" class="blob-num js-line-number" data-line-number="7726"></td>
        <td id="LC7726" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $q</span></td>
      </tr>
      <tr>
        <td id="L7727" class="blob-num js-line-number" data-line-number="7727"></td>
        <td id="LC7727" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@requires</span> $injector</span></td>
      </tr>
      <tr>
        <td id="L7728" class="blob-num js-line-number" data-line-number="7728"></td>
        <td id="LC7728" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7729" class="blob-num js-line-number" data-line-number="7729"></td>
        <td id="LC7729" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L7730" class="blob-num js-line-number" data-line-number="7730"></td>
        <td id="LC7730" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The `$http` service is a core Angular service that facilitates communication with the remote</span></td>
      </tr>
      <tr>
        <td id="L7731" class="blob-num js-line-number" data-line-number="7731"></td>
        <td id="LC7731" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * HTTP servers via browser&#39;s {@link https://developer.mozilla.org/en/xmlhttprequest</span></td>
      </tr>
      <tr>
        <td id="L7732" class="blob-num js-line-number" data-line-number="7732"></td>
        <td id="LC7732" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.</span></td>
      </tr>
      <tr>
        <td id="L7733" class="blob-num js-line-number" data-line-number="7733"></td>
        <td id="LC7733" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7734" class="blob-num js-line-number" data-line-number="7734"></td>
        <td id="LC7734" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * For unit testing applications that use `$http` service, see</span></td>
      </tr>
      <tr>
        <td id="L7735" class="blob-num js-line-number" data-line-number="7735"></td>
        <td id="LC7735" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.ngMock.$httpBackend $httpBackend mock}.</span></td>
      </tr>
      <tr>
        <td id="L7736" class="blob-num js-line-number" data-line-number="7736"></td>
        <td id="LC7736" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7737" class="blob-num js-line-number" data-line-number="7737"></td>
        <td id="LC7737" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * For a higher level of abstraction, please check out the {@link angular.module.ngResource.$resource</span></td>
      </tr>
      <tr>
        <td id="L7738" class="blob-num js-line-number" data-line-number="7738"></td>
        <td id="LC7738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * $resource} service.</span></td>
      </tr>
      <tr>
        <td id="L7739" class="blob-num js-line-number" data-line-number="7739"></td>
        <td id="LC7739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7740" class="blob-num js-line-number" data-line-number="7740"></td>
        <td id="LC7740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The $http API is based on the {@link angular.module.ng.$q deferred/promise APIs} exposed by</span></td>
      </tr>
      <tr>
        <td id="L7741" class="blob-num js-line-number" data-line-number="7741"></td>
        <td id="LC7741" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the $q service. While for simple usage patters this doesn&#39;t matter much, for advanced usage,</span></td>
      </tr>
      <tr>
        <td id="L7742" class="blob-num js-line-number" data-line-number="7742"></td>
        <td id="LC7742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * it is important to familiarize yourself with these apis and guarantees they provide.</span></td>
      </tr>
      <tr>
        <td id="L7743" class="blob-num js-line-number" data-line-number="7743"></td>
        <td id="LC7743" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7744" class="blob-num js-line-number" data-line-number="7744"></td>
        <td id="LC7744" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7745" class="blob-num js-line-number" data-line-number="7745"></td>
        <td id="LC7745" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # General usage</span></td>
      </tr>
      <tr>
        <td id="L7746" class="blob-num js-line-number" data-line-number="7746"></td>
        <td id="LC7746" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The `$http` service is a function which takes a single argument â a configuration object â</span></td>
      </tr>
      <tr>
        <td id="L7747" class="blob-num js-line-number" data-line-number="7747"></td>
        <td id="LC7747" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * that is used to generate an http request and returns  a {@link angular.module.ng.$q promise}</span></td>
      </tr>
      <tr>
        <td id="L7748" class="blob-num js-line-number" data-line-number="7748"></td>
        <td id="LC7748" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * with two $http specific methods: `success` and `error`.</span></td>
      </tr>
      <tr>
        <td id="L7749" class="blob-num js-line-number" data-line-number="7749"></td>
        <td id="LC7749" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7750" class="blob-num js-line-number" data-line-number="7750"></td>
        <td id="LC7750" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7751" class="blob-num js-line-number" data-line-number="7751"></td>
        <td id="LC7751" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $http({method: &#39;GET&#39;, url: &#39;/someUrl&#39;}).</span></td>
      </tr>
      <tr>
        <td id="L7752" class="blob-num js-line-number" data-line-number="7752"></td>
        <td id="LC7752" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     success(function(data, status, headers, config) {</span></td>
      </tr>
      <tr>
        <td id="L7753" class="blob-num js-line-number" data-line-number="7753"></td>
        <td id="LC7753" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // this callback will be called asynchronously</span></td>
      </tr>
      <tr>
        <td id="L7754" class="blob-num js-line-number" data-line-number="7754"></td>
        <td id="LC7754" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // when the response is available</span></td>
      </tr>
      <tr>
        <td id="L7755" class="blob-num js-line-number" data-line-number="7755"></td>
        <td id="LC7755" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     }).</span></td>
      </tr>
      <tr>
        <td id="L7756" class="blob-num js-line-number" data-line-number="7756"></td>
        <td id="LC7756" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     error(function(data, status, headers, config) {</span></td>
      </tr>
      <tr>
        <td id="L7757" class="blob-num js-line-number" data-line-number="7757"></td>
        <td id="LC7757" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // called asynchronously if an error occurs</span></td>
      </tr>
      <tr>
        <td id="L7758" class="blob-num js-line-number" data-line-number="7758"></td>
        <td id="LC7758" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // or server returns response with status</span></td>
      </tr>
      <tr>
        <td id="L7759" class="blob-num js-line-number" data-line-number="7759"></td>
        <td id="LC7759" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // code outside of the &lt;200, 400) range</span></td>
      </tr>
      <tr>
        <td id="L7760" class="blob-num js-line-number" data-line-number="7760"></td>
        <td id="LC7760" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     });</span></td>
      </tr>
      <tr>
        <td id="L7761" class="blob-num js-line-number" data-line-number="7761"></td>
        <td id="LC7761" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7762" class="blob-num js-line-number" data-line-number="7762"></td>
        <td id="LC7762" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7763" class="blob-num js-line-number" data-line-number="7763"></td>
        <td id="LC7763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Since the returned value of calling the $http function is a Promise object, you can also use</span></td>
      </tr>
      <tr>
        <td id="L7764" class="blob-num js-line-number" data-line-number="7764"></td>
        <td id="LC7764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the `then` method to register callbacks, and these callbacks will receive a single argument â</span></td>
      </tr>
      <tr>
        <td id="L7765" class="blob-num js-line-number" data-line-number="7765"></td>
        <td id="LC7765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * an object representing the response. See the api signature and type info below for more</span></td>
      </tr>
      <tr>
        <td id="L7766" class="blob-num js-line-number" data-line-number="7766"></td>
        <td id="LC7766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * details.</span></td>
      </tr>
      <tr>
        <td id="L7767" class="blob-num js-line-number" data-line-number="7767"></td>
        <td id="LC7767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7768" class="blob-num js-line-number" data-line-number="7768"></td>
        <td id="LC7768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7769" class="blob-num js-line-number" data-line-number="7769"></td>
        <td id="LC7769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Shortcut methods</span></td>
      </tr>
      <tr>
        <td id="L7770" class="blob-num js-line-number" data-line-number="7770"></td>
        <td id="LC7770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7771" class="blob-num js-line-number" data-line-number="7771"></td>
        <td id="LC7771" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Since all invocation of the $http service require definition of the http method and url and</span></td>
      </tr>
      <tr>
        <td id="L7772" class="blob-num js-line-number" data-line-number="7772"></td>
        <td id="LC7772" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * POST and PUT requests require response body/data to be provided as well, shortcut methods</span></td>
      </tr>
      <tr>
        <td id="L7773" class="blob-num js-line-number" data-line-number="7773"></td>
        <td id="LC7773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * were created to simplify using the api:</span></td>
      </tr>
      <tr>
        <td id="L7774" class="blob-num js-line-number" data-line-number="7774"></td>
        <td id="LC7774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7775" class="blob-num js-line-number" data-line-number="7775"></td>
        <td id="LC7775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7776" class="blob-num js-line-number" data-line-number="7776"></td>
        <td id="LC7776" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $http.get(&#39;/someUrl&#39;).success(successCallback);</span></td>
      </tr>
      <tr>
        <td id="L7777" class="blob-num js-line-number" data-line-number="7777"></td>
        <td id="LC7777" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $http.post(&#39;/someUrl&#39;, data).success(successCallback);</span></td>
      </tr>
      <tr>
        <td id="L7778" class="blob-num js-line-number" data-line-number="7778"></td>
        <td id="LC7778" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7779" class="blob-num js-line-number" data-line-number="7779"></td>
        <td id="LC7779" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7780" class="blob-num js-line-number" data-line-number="7780"></td>
        <td id="LC7780" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Complete list of shortcut methods:</span></td>
      </tr>
      <tr>
        <td id="L7781" class="blob-num js-line-number" data-line-number="7781"></td>
        <td id="LC7781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7782" class="blob-num js-line-number" data-line-number="7782"></td>
        <td id="LC7782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#get $http.get}</span></td>
      </tr>
      <tr>
        <td id="L7783" class="blob-num js-line-number" data-line-number="7783"></td>
        <td id="LC7783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#head $http.head}</span></td>
      </tr>
      <tr>
        <td id="L7784" class="blob-num js-line-number" data-line-number="7784"></td>
        <td id="LC7784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#post $http.post}</span></td>
      </tr>
      <tr>
        <td id="L7785" class="blob-num js-line-number" data-line-number="7785"></td>
        <td id="LC7785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#put $http.put}</span></td>
      </tr>
      <tr>
        <td id="L7786" class="blob-num js-line-number" data-line-number="7786"></td>
        <td id="LC7786" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#delete $http.delete}</span></td>
      </tr>
      <tr>
        <td id="L7787" class="blob-num js-line-number" data-line-number="7787"></td>
        <td id="LC7787" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link angular.module.ng.$http#jsonp $http.jsonp}</span></td>
      </tr>
      <tr>
        <td id="L7788" class="blob-num js-line-number" data-line-number="7788"></td>
        <td id="LC7788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7789" class="blob-num js-line-number" data-line-number="7789"></td>
        <td id="LC7789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7790" class="blob-num js-line-number" data-line-number="7790"></td>
        <td id="LC7790" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Setting HTTP Headers</span></td>
      </tr>
      <tr>
        <td id="L7791" class="blob-num js-line-number" data-line-number="7791"></td>
        <td id="LC7791" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7792" class="blob-num js-line-number" data-line-number="7792"></td>
        <td id="LC7792" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The $http service will automatically add certain http headers to all requests. These defaults</span></td>
      </tr>
      <tr>
        <td id="L7793" class="blob-num js-line-number" data-line-number="7793"></td>
        <td id="LC7793" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * can be fully configured by accessing the `$httpProvider.defaults.headers` configuration</span></td>
      </tr>
      <tr>
        <td id="L7794" class="blob-num js-line-number" data-line-number="7794"></td>
        <td id="LC7794" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * object, which currently contains this default configuration:</span></td>
      </tr>
      <tr>
        <td id="L7795" class="blob-num js-line-number" data-line-number="7795"></td>
        <td id="LC7795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7796" class="blob-num js-line-number" data-line-number="7796"></td>
        <td id="LC7796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - `$httpProvider.defaults.headers.common` (headers that are common for all requests):</span></td>
      </tr>
      <tr>
        <td id="L7797" class="blob-num js-line-number" data-line-number="7797"></td>
        <td id="LC7797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - `Accept: application/json, text/plain, * / *`</span></td>
      </tr>
      <tr>
        <td id="L7798" class="blob-num js-line-number" data-line-number="7798"></td>
        <td id="LC7798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - `X-Requested-With: XMLHttpRequest`</span></td>
      </tr>
      <tr>
        <td id="L7799" class="blob-num js-line-number" data-line-number="7799"></td>
        <td id="LC7799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - `$httpProvider.defaults.headers.post`: (header defaults for HTTP POST requests)</span></td>
      </tr>
      <tr>
        <td id="L7800" class="blob-num js-line-number" data-line-number="7800"></td>
        <td id="LC7800" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - `Content-Type: application/json`</span></td>
      </tr>
      <tr>
        <td id="L7801" class="blob-num js-line-number" data-line-number="7801"></td>
        <td id="LC7801" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - `$httpProvider.defaults.headers.put` (header defaults for HTTP PUT requests)</span></td>
      </tr>
      <tr>
        <td id="L7802" class="blob-num js-line-number" data-line-number="7802"></td>
        <td id="LC7802" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - `Content-Type: application/json`</span></td>
      </tr>
      <tr>
        <td id="L7803" class="blob-num js-line-number" data-line-number="7803"></td>
        <td id="LC7803" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7804" class="blob-num js-line-number" data-line-number="7804"></td>
        <td id="LC7804" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To add or overwrite these defaults, simply add or remove a property from this configuration</span></td>
      </tr>
      <tr>
        <td id="L7805" class="blob-num js-line-number" data-line-number="7805"></td>
        <td id="LC7805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * objects. To add headers for an HTTP method other than POST or PUT, simply add a new object</span></td>
      </tr>
      <tr>
        <td id="L7806" class="blob-num js-line-number" data-line-number="7806"></td>
        <td id="LC7806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * with name equal to the lower-cased http method name, e.g.</span></td>
      </tr>
      <tr>
        <td id="L7807" class="blob-num js-line-number" data-line-number="7807"></td>
        <td id="LC7807" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * `$httpProvider.defaults.headers.get[&#39;My-Header&#39;]=&#39;value&#39;`.</span></td>
      </tr>
      <tr>
        <td id="L7808" class="blob-num js-line-number" data-line-number="7808"></td>
        <td id="LC7808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7809" class="blob-num js-line-number" data-line-number="7809"></td>
        <td id="LC7809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Additionally, the defaults can be set at runtime via the `$http.defaults` object in a similar</span></td>
      </tr>
      <tr>
        <td id="L7810" class="blob-num js-line-number" data-line-number="7810"></td>
        <td id="LC7810" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * fassion as described above.</span></td>
      </tr>
      <tr>
        <td id="L7811" class="blob-num js-line-number" data-line-number="7811"></td>
        <td id="LC7811" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7812" class="blob-num js-line-number" data-line-number="7812"></td>
        <td id="LC7812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7813" class="blob-num js-line-number" data-line-number="7813"></td>
        <td id="LC7813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Transforming Requests and Responses</span></td>
      </tr>
      <tr>
        <td id="L7814" class="blob-num js-line-number" data-line-number="7814"></td>
        <td id="LC7814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7815" class="blob-num js-line-number" data-line-number="7815"></td>
        <td id="LC7815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Both requests and responses can be transformed using transform functions. By default, Angular</span></td>
      </tr>
      <tr>
        <td id="L7816" class="blob-num js-line-number" data-line-number="7816"></td>
        <td id="LC7816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * applies these transformations:</span></td>
      </tr>
      <tr>
        <td id="L7817" class="blob-num js-line-number" data-line-number="7817"></td>
        <td id="LC7817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7818" class="blob-num js-line-number" data-line-number="7818"></td>
        <td id="LC7818" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Request transformations:</span></td>
      </tr>
      <tr>
        <td id="L7819" class="blob-num js-line-number" data-line-number="7819"></td>
        <td id="LC7819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7820" class="blob-num js-line-number" data-line-number="7820"></td>
        <td id="LC7820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - if the `data` property of the request config object contains an object, serialize it into</span></td>
      </tr>
      <tr>
        <td id="L7821" class="blob-num js-line-number" data-line-number="7821"></td>
        <td id="LC7821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   JSON format.</span></td>
      </tr>
      <tr>
        <td id="L7822" class="blob-num js-line-number" data-line-number="7822"></td>
        <td id="LC7822" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7823" class="blob-num js-line-number" data-line-number="7823"></td>
        <td id="LC7823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Response transformations:</span></td>
      </tr>
      <tr>
        <td id="L7824" class="blob-num js-line-number" data-line-number="7824"></td>
        <td id="LC7824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7825" class="blob-num js-line-number" data-line-number="7825"></td>
        <td id="LC7825" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *  - if XSRF prefix is detected, strip it (see Security Considerations section below)</span></td>
      </tr>
      <tr>
        <td id="L7826" class="blob-num js-line-number" data-line-number="7826"></td>
        <td id="LC7826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *  - if json response is detected, deserialize it using a JSON parser</span></td>
      </tr>
      <tr>
        <td id="L7827" class="blob-num js-line-number" data-line-number="7827"></td>
        <td id="LC7827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7828" class="blob-num js-line-number" data-line-number="7828"></td>
        <td id="LC7828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To override these transformation locally, specify transform functions as `transformRequest`</span></td>
      </tr>
      <tr>
        <td id="L7829" class="blob-num js-line-number" data-line-number="7829"></td>
        <td id="LC7829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * and/or `transformResponse` properties of the config object. To globally override the default</span></td>
      </tr>
      <tr>
        <td id="L7830" class="blob-num js-line-number" data-line-number="7830"></td>
        <td id="LC7830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * transforms, override the `$httpProvider.defaults.transformRequest` and</span></td>
      </tr>
      <tr>
        <td id="L7831" class="blob-num js-line-number" data-line-number="7831"></td>
        <td id="LC7831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * `$httpProvider.defaults.transformResponse` properties of the `$httpProvider`.</span></td>
      </tr>
      <tr>
        <td id="L7832" class="blob-num js-line-number" data-line-number="7832"></td>
        <td id="LC7832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7833" class="blob-num js-line-number" data-line-number="7833"></td>
        <td id="LC7833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7834" class="blob-num js-line-number" data-line-number="7834"></td>
        <td id="LC7834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Caching</span></td>
      </tr>
      <tr>
        <td id="L7835" class="blob-num js-line-number" data-line-number="7835"></td>
        <td id="LC7835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7836" class="blob-num js-line-number" data-line-number="7836"></td>
        <td id="LC7836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To enable caching set the configuration property `cache` to `true`. When the cache is</span></td>
      </tr>
      <tr>
        <td id="L7837" class="blob-num js-line-number" data-line-number="7837"></td>
        <td id="LC7837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * enabled, `$http` stores the response from the server in local cache. Next time the</span></td>
      </tr>
      <tr>
        <td id="L7838" class="blob-num js-line-number" data-line-number="7838"></td>
        <td id="LC7838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * response is served from the cache without sending a request to the server.</span></td>
      </tr>
      <tr>
        <td id="L7839" class="blob-num js-line-number" data-line-number="7839"></td>
        <td id="LC7839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7840" class="blob-num js-line-number" data-line-number="7840"></td>
        <td id="LC7840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Note that even if the response is served from cache, delivery of the data is asynchronous in</span></td>
      </tr>
      <tr>
        <td id="L7841" class="blob-num js-line-number" data-line-number="7841"></td>
        <td id="LC7841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the same way that real requests are.</span></td>
      </tr>
      <tr>
        <td id="L7842" class="blob-num js-line-number" data-line-number="7842"></td>
        <td id="LC7842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7843" class="blob-num js-line-number" data-line-number="7843"></td>
        <td id="LC7843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * If there are multiple GET requests for the same url that should be cached using the same</span></td>
      </tr>
      <tr>
        <td id="L7844" class="blob-num js-line-number" data-line-number="7844"></td>
        <td id="LC7844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * cache, but the cache is not populated yet, only one request to the server will be made and</span></td>
      </tr>
      <tr>
        <td id="L7845" class="blob-num js-line-number" data-line-number="7845"></td>
        <td id="LC7845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * the remaining requests will be fulfilled using the response for the first request.</span></td>
      </tr>
      <tr>
        <td id="L7846" class="blob-num js-line-number" data-line-number="7846"></td>
        <td id="LC7846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7847" class="blob-num js-line-number" data-line-number="7847"></td>
        <td id="LC7847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7848" class="blob-num js-line-number" data-line-number="7848"></td>
        <td id="LC7848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Response interceptors</span></td>
      </tr>
      <tr>
        <td id="L7849" class="blob-num js-line-number" data-line-number="7849"></td>
        <td id="LC7849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7850" class="blob-num js-line-number" data-line-number="7850"></td>
        <td id="LC7850" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Before you start creating interceptors, be sure to understand the</span></td>
      </tr>
      <tr>
        <td id="L7851" class="blob-num js-line-number" data-line-number="7851"></td>
        <td id="LC7851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link angular.module.ng.$q $q and deferred/promise APIs}.</span></td>
      </tr>
      <tr>
        <td id="L7852" class="blob-num js-line-number" data-line-number="7852"></td>
        <td id="LC7852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7853" class="blob-num js-line-number" data-line-number="7853"></td>
        <td id="LC7853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * For purposes of global error handling, authentication or any kind of synchronous or</span></td>
      </tr>
      <tr>
        <td id="L7854" class="blob-num js-line-number" data-line-number="7854"></td>
        <td id="LC7854" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * asynchronous preprocessing of received responses, it is desirable to be able to intercept</span></td>
      </tr>
      <tr>
        <td id="L7855" class="blob-num js-line-number" data-line-number="7855"></td>
        <td id="LC7855" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * responses for http requests before they are handed over to the application code that</span></td>
      </tr>
      <tr>
        <td id="L7856" class="blob-num js-line-number" data-line-number="7856"></td>
        <td id="LC7856" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * initiated these requests. The response interceptors leverage the {@link angular.module.ng.$q</span></td>
      </tr>
      <tr>
        <td id="L7857" class="blob-num js-line-number" data-line-number="7857"></td>
        <td id="LC7857" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * promise apis} to fulfil this need for both synchronous and asynchronous preprocessing.</span></td>
      </tr>
      <tr>
        <td id="L7858" class="blob-num js-line-number" data-line-number="7858"></td>
        <td id="LC7858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7859" class="blob-num js-line-number" data-line-number="7859"></td>
        <td id="LC7859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * The interceptors are service factories that are registered with the $httpProvider by</span></td>
      </tr>
      <tr>
        <td id="L7860" class="blob-num js-line-number" data-line-number="7860"></td>
        <td id="LC7860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * adding them to the `$httpProvider.responseInterceptors` array. The factory is called and</span></td>
      </tr>
      <tr>
        <td id="L7861" class="blob-num js-line-number" data-line-number="7861"></td>
        <td id="LC7861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * injected with dependencies (if specified) and returns the interceptor  â a function that</span></td>
      </tr>
      <tr>
        <td id="L7862" class="blob-num js-line-number" data-line-number="7862"></td>
        <td id="LC7862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * takes a {@link angular.module.ng.$q promise} and returns the original or a new promise.</span></td>
      </tr>
      <tr>
        <td id="L7863" class="blob-num js-line-number" data-line-number="7863"></td>
        <td id="LC7863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7864" class="blob-num js-line-number" data-line-number="7864"></td>
        <td id="LC7864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7865" class="blob-num js-line-number" data-line-number="7865"></td>
        <td id="LC7865" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   // register the interceptor as a service</span></td>
      </tr>
      <tr>
        <td id="L7866" class="blob-num js-line-number" data-line-number="7866"></td>
        <td id="LC7866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $provide.factory(&#39;myHttpInterceptor&#39;, function($q, dependency1, dependency2) {</span></td>
      </tr>
      <tr>
        <td id="L7867" class="blob-num js-line-number" data-line-number="7867"></td>
        <td id="LC7867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     return function(promise) {</span></td>
      </tr>
      <tr>
        <td id="L7868" class="blob-num js-line-number" data-line-number="7868"></td>
        <td id="LC7868" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       return promise.then(function(response) {</span></td>
      </tr>
      <tr>
        <td id="L7869" class="blob-num js-line-number" data-line-number="7869"></td>
        <td id="LC7869" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *         // do something on success</span></td>
      </tr>
      <tr>
        <td id="L7870" class="blob-num js-line-number" data-line-number="7870"></td>
        <td id="LC7870" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       }, function(response) {</span></td>
      </tr>
      <tr>
        <td id="L7871" class="blob-num js-line-number" data-line-number="7871"></td>
        <td id="LC7871" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *         // do something on error</span></td>
      </tr>
      <tr>
        <td id="L7872" class="blob-num js-line-number" data-line-number="7872"></td>
        <td id="LC7872" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *         if (canRecover(response)) {</span></td>
      </tr>
      <tr>
        <td id="L7873" class="blob-num js-line-number" data-line-number="7873"></td>
        <td id="LC7873" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *           return responseOrNewPromise</span></td>
      </tr>
      <tr>
        <td id="L7874" class="blob-num js-line-number" data-line-number="7874"></td>
        <td id="LC7874" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *         }</span></td>
      </tr>
      <tr>
        <td id="L7875" class="blob-num js-line-number" data-line-number="7875"></td>
        <td id="LC7875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *         return $q.reject(response);</span></td>
      </tr>
      <tr>
        <td id="L7876" class="blob-num js-line-number" data-line-number="7876"></td>
        <td id="LC7876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       });</span></td>
      </tr>
      <tr>
        <td id="L7877" class="blob-num js-line-number" data-line-number="7877"></td>
        <td id="LC7877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     }</span></td>
      </tr>
      <tr>
        <td id="L7878" class="blob-num js-line-number" data-line-number="7878"></td>
        <td id="LC7878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   });</span></td>
      </tr>
      <tr>
        <td id="L7879" class="blob-num js-line-number" data-line-number="7879"></td>
        <td id="LC7879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7880" class="blob-num js-line-number" data-line-number="7880"></td>
        <td id="LC7880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $httpProvider.responseInterceptors.push(&#39;myHttpInterceptor&#39;);</span></td>
      </tr>
      <tr>
        <td id="L7881" class="blob-num js-line-number" data-line-number="7881"></td>
        <td id="LC7881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7882" class="blob-num js-line-number" data-line-number="7882"></td>
        <td id="LC7882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7883" class="blob-num js-line-number" data-line-number="7883"></td>
        <td id="LC7883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   // register the interceptor via an anonymous factory</span></td>
      </tr>
      <tr>
        <td id="L7884" class="blob-num js-line-number" data-line-number="7884"></td>
        <td id="LC7884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   $httpProvider.responseInterceptors.push(function($q, dependency1, dependency2) {</span></td>
      </tr>
      <tr>
        <td id="L7885" class="blob-num js-line-number" data-line-number="7885"></td>
        <td id="LC7885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     return function(promise) {</span></td>
      </tr>
      <tr>
        <td id="L7886" class="blob-num js-line-number" data-line-number="7886"></td>
        <td id="LC7886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *       // same as above</span></td>
      </tr>
      <tr>
        <td id="L7887" class="blob-num js-line-number" data-line-number="7887"></td>
        <td id="LC7887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *     }</span></td>
      </tr>
      <tr>
        <td id="L7888" class="blob-num js-line-number" data-line-number="7888"></td>
        <td id="LC7888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   });</span></td>
      </tr>
      <tr>
        <td id="L7889" class="blob-num js-line-number" data-line-number="7889"></td>
        <td id="LC7889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7890" class="blob-num js-line-number" data-line-number="7890"></td>
        <td id="LC7890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7891" class="blob-num js-line-number" data-line-number="7891"></td>
        <td id="LC7891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7892" class="blob-num js-line-number" data-line-number="7892"></td>
        <td id="LC7892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * # Security Considerations</span></td>
      </tr>
      <tr>
        <td id="L7893" class="blob-num js-line-number" data-line-number="7893"></td>
        <td id="LC7893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7894" class="blob-num js-line-number" data-line-number="7894"></td>
        <td id="LC7894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * When designing web applications, consider security threats from:</span></td>
      </tr>
      <tr>
        <td id="L7895" class="blob-num js-line-number" data-line-number="7895"></td>
        <td id="LC7895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7896" class="blob-num js-line-number" data-line-number="7896"></td>
        <td id="LC7896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx</span></td>
      </tr>
      <tr>
        <td id="L7897" class="blob-num js-line-number" data-line-number="7897"></td>
        <td id="LC7897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   JSON Vulnerability}</span></td>
      </tr>
      <tr>
        <td id="L7898" class="blob-num js-line-number" data-line-number="7898"></td>
        <td id="LC7898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * - {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF}</span></td>
      </tr>
      <tr>
        <td id="L7899" class="blob-num js-line-number" data-line-number="7899"></td>
        <td id="LC7899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7900" class="blob-num js-line-number" data-line-number="7900"></td>
        <td id="LC7900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Both server and the client must cooperate in order to eliminate these threats. Angular comes</span></td>
      </tr>
      <tr>
        <td id="L7901" class="blob-num js-line-number" data-line-number="7901"></td>
        <td id="LC7901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * pre-configured with strategies that address these issues, but for this to work backend server</span></td>
      </tr>
      <tr>
        <td id="L7902" class="blob-num js-line-number" data-line-number="7902"></td>
        <td id="LC7902" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * cooperation is required.</span></td>
      </tr>
      <tr>
        <td id="L7903" class="blob-num js-line-number" data-line-number="7903"></td>
        <td id="LC7903" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7904" class="blob-num js-line-number" data-line-number="7904"></td>
        <td id="LC7904" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * ## JSON Vulnerability Protection</span></td>
      </tr>
      <tr>
        <td id="L7905" class="blob-num js-line-number" data-line-number="7905"></td>
        <td id="LC7905" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7906" class="blob-num js-line-number" data-line-number="7906"></td>
        <td id="LC7906" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * A {@link http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx</span></td>
      </tr>
      <tr>
        <td id="L7907" class="blob-num js-line-number" data-line-number="7907"></td>
        <td id="LC7907" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * JSON Vulnerability} allows third party web-site to turn your JSON resource URL into</span></td>
      </tr>
      <tr>
        <td id="L7908" class="blob-num js-line-number" data-line-number="7908"></td>
        <td id="LC7908" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link http://en.wikipedia.org/wiki/JSON#JSONP JSONP} request under some conditions. To</span></td>
      </tr>
      <tr>
        <td id="L7909" class="blob-num js-line-number" data-line-number="7909"></td>
        <td id="LC7909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * counter this your server can prefix all JSON requests with following string `&quot;)]}&#39;,\n&quot;`.</span></td>
      </tr>
      <tr>
        <td id="L7910" class="blob-num js-line-number" data-line-number="7910"></td>
        <td id="LC7910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Angular will automatically strip the prefix before processing it as JSON.</span></td>
      </tr>
      <tr>
        <td id="L7911" class="blob-num js-line-number" data-line-number="7911"></td>
        <td id="LC7911" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7912" class="blob-num js-line-number" data-line-number="7912"></td>
        <td id="LC7912" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * For example if your server needs to return:</span></td>
      </tr>
      <tr>
        <td id="L7913" class="blob-num js-line-number" data-line-number="7913"></td>
        <td id="LC7913" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7914" class="blob-num js-line-number" data-line-number="7914"></td>
        <td id="LC7914" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * [&#39;one&#39;,&#39;two&#39;]</span></td>
      </tr>
      <tr>
        <td id="L7915" class="blob-num js-line-number" data-line-number="7915"></td>
        <td id="LC7915" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7916" class="blob-num js-line-number" data-line-number="7916"></td>
        <td id="LC7916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7917" class="blob-num js-line-number" data-line-number="7917"></td>
        <td id="LC7917" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * which is vulnerable to attack, your server can return:</span></td>
      </tr>
      <tr>
        <td id="L7918" class="blob-num js-line-number" data-line-number="7918"></td>
        <td id="LC7918" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7919" class="blob-num js-line-number" data-line-number="7919"></td>
        <td id="LC7919" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * )]}&#39;,</span></td>
      </tr>
      <tr>
        <td id="L7920" class="blob-num js-line-number" data-line-number="7920"></td>
        <td id="LC7920" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * [&#39;one&#39;,&#39;two&#39;]</span></td>
      </tr>
      <tr>
        <td id="L7921" class="blob-num js-line-number" data-line-number="7921"></td>
        <td id="LC7921" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L7922" class="blob-num js-line-number" data-line-number="7922"></td>
        <td id="LC7922" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7923" class="blob-num js-line-number" data-line-number="7923"></td>
        <td id="LC7923" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Angular will strip the prefix, before processing the JSON.</span></td>
      </tr>
      <tr>
        <td id="L7924" class="blob-num js-line-number" data-line-number="7924"></td>
        <td id="LC7924" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7925" class="blob-num js-line-number" data-line-number="7925"></td>
        <td id="LC7925" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7926" class="blob-num js-line-number" data-line-number="7926"></td>
        <td id="LC7926" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * ## Cross Site Request Forgery (XSRF) Protection</span></td>
      </tr>
      <tr>
        <td id="L7927" class="blob-num js-line-number" data-line-number="7927"></td>
        <td id="LC7927" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7928" class="blob-num js-line-number" data-line-number="7928"></td>
        <td id="LC7928" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * {@link http://en.wikipedia.org/wiki/Cross-site_request_forgery XSRF} is a technique by which</span></td>
      </tr>
      <tr>
        <td id="L7929" class="blob-num js-line-number" data-line-number="7929"></td>
        <td id="LC7929" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * an unauthorized site can gain your user&#39;s private data. Angular provides following mechanism</span></td>
      </tr>
      <tr>
        <td id="L7930" class="blob-num js-line-number" data-line-number="7930"></td>
        <td id="LC7930" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * to counter XSRF. When performing XHR requests, the $http service reads a token from a cookie</span></td>
      </tr>
      <tr>
        <td id="L7931" class="blob-num js-line-number" data-line-number="7931"></td>
        <td id="LC7931" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * called `XSRF-TOKEN` and sets it as the HTTP header `X-XSRF-TOKEN`. Since only JavaScript that</span></td>
      </tr>
      <tr>
        <td id="L7932" class="blob-num js-line-number" data-line-number="7932"></td>
        <td id="LC7932" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * runs on your domain could read the cookie, your server can be assured that the XHR came from</span></td>
      </tr>
      <tr>
        <td id="L7933" class="blob-num js-line-number" data-line-number="7933"></td>
        <td id="LC7933" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * JavaScript running on your domain.</span></td>
      </tr>
      <tr>
        <td id="L7934" class="blob-num js-line-number" data-line-number="7934"></td>
        <td id="LC7934" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7935" class="blob-num js-line-number" data-line-number="7935"></td>
        <td id="LC7935" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * To take advantage of this, your server needs to set a token in a JavaScript readable session</span></td>
      </tr>
      <tr>
        <td id="L7936" class="blob-num js-line-number" data-line-number="7936"></td>
        <td id="LC7936" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * cookie called `XSRF-TOKEN` on first HTTP GET request. On subsequent non-GET requests the</span></td>
      </tr>
      <tr>
        <td id="L7937" class="blob-num js-line-number" data-line-number="7937"></td>
        <td id="LC7937" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * server can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure</span></td>
      </tr>
      <tr>
        <td id="L7938" class="blob-num js-line-number" data-line-number="7938"></td>
        <td id="LC7938" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * that only JavaScript running on your domain could have read the token. The token must be</span></td>
      </tr>
      <tr>
        <td id="L7939" class="blob-num js-line-number" data-line-number="7939"></td>
        <td id="LC7939" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * unique for each user and must be verifiable by the server (to prevent the JavaScript making</span></td>
      </tr>
      <tr>
        <td id="L7940" class="blob-num js-line-number" data-line-number="7940"></td>
        <td id="LC7940" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * up its own tokens). We recommend that the token is a digest of your site&#39;s authentication</span></td>
      </tr>
      <tr>
        <td id="L7941" class="blob-num js-line-number" data-line-number="7941"></td>
        <td id="LC7941" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * cookie with {@link http://en.wikipedia.org/wiki/Rainbow_table salt for added security}.</span></td>
      </tr>
      <tr>
        <td id="L7942" class="blob-num js-line-number" data-line-number="7942"></td>
        <td id="LC7942" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7943" class="blob-num js-line-number" data-line-number="7943"></td>
        <td id="LC7943" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7944" class="blob-num js-line-number" data-line-number="7944"></td>
        <td id="LC7944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {object} config Object describing the request to be made and how it should be</span></td>
      </tr>
      <tr>
        <td id="L7945" class="blob-num js-line-number" data-line-number="7945"></td>
        <td id="LC7945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    processed. The object has following properties:</span></td>
      </tr>
      <tr>
        <td id="L7946" class="blob-num js-line-number" data-line-number="7946"></td>
        <td id="LC7946" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7947" class="blob-num js-line-number" data-line-number="7947"></td>
        <td id="LC7947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **method** â `{string}` â HTTP method (e.g. &#39;GET&#39;, &#39;POST&#39;, etc)</span></td>
      </tr>
      <tr>
        <td id="L7948" class="blob-num js-line-number" data-line-number="7948"></td>
        <td id="LC7948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **url** â `{string}` â Absolute or relative URL of the resource that is being requested.</span></td>
      </tr>
      <tr>
        <td id="L7949" class="blob-num js-line-number" data-line-number="7949"></td>
        <td id="LC7949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **params** â `{Object.&lt;string|Object&gt;}` â Map of strings or objects which will be turned to</span></td>
      </tr>
      <tr>
        <td id="L7950" class="blob-num js-line-number" data-line-number="7950"></td>
        <td id="LC7950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      `?key1=value1&amp;key2=value2` after the url. If the value is not a string, it will be JSONified.</span></td>
      </tr>
      <tr>
        <td id="L7951" class="blob-num js-line-number" data-line-number="7951"></td>
        <td id="LC7951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **data** â `{string|Object}` â Data to be sent as the request message data.</span></td>
      </tr>
      <tr>
        <td id="L7952" class="blob-num js-line-number" data-line-number="7952"></td>
        <td id="LC7952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **headers** â `{Object}` â Map of strings representing HTTP headers to send to the server.</span></td>
      </tr>
      <tr>
        <td id="L7953" class="blob-num js-line-number" data-line-number="7953"></td>
        <td id="LC7953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **transformRequest** â `{function(data, headersGetter)|Array.&lt;function(data, headersGetter)&gt;}` â</span></td>
      </tr>
      <tr>
        <td id="L7954" class="blob-num js-line-number" data-line-number="7954"></td>
        <td id="LC7954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      transform function or an array of such functions. The transform function takes the http</span></td>
      </tr>
      <tr>
        <td id="L7955" class="blob-num js-line-number" data-line-number="7955"></td>
        <td id="LC7955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      request body and headers and returns its transformed (typically serialized) version.</span></td>
      </tr>
      <tr>
        <td id="L7956" class="blob-num js-line-number" data-line-number="7956"></td>
        <td id="LC7956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **transformResponse** â `{function(data, headersGetter)|Array.&lt;function(data, headersGetter)&gt;}` â</span></td>
      </tr>
      <tr>
        <td id="L7957" class="blob-num js-line-number" data-line-number="7957"></td>
        <td id="LC7957" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      transform function or an array of such functions. The transform function takes the http</span></td>
      </tr>
      <tr>
        <td id="L7958" class="blob-num js-line-number" data-line-number="7958"></td>
        <td id="LC7958" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      response body and headers and returns its transformed (typically deserialized) version.</span></td>
      </tr>
      <tr>
        <td id="L7959" class="blob-num js-line-number" data-line-number="7959"></td>
        <td id="LC7959" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **cache** â `{boolean|Cache}` â If true, a default $http cache will be used to cache the</span></td>
      </tr>
      <tr>
        <td id="L7960" class="blob-num js-line-number" data-line-number="7960"></td>
        <td id="LC7960" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      GET request, otherwise if a cache instance built with</span></td>
      </tr>
      <tr>
        <td id="L7961" class="blob-num js-line-number" data-line-number="7961"></td>
        <td id="LC7961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      {@link angular.module.ng.$cacheFactory $cacheFactory}, this cache will be used for</span></td>
      </tr>
      <tr>
        <td id="L7962" class="blob-num js-line-number" data-line-number="7962"></td>
        <td id="LC7962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      caching.</span></td>
      </tr>
      <tr>
        <td id="L7963" class="blob-num js-line-number" data-line-number="7963"></td>
        <td id="LC7963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **timeout** â `{number}` â timeout in milliseconds.</span></td>
      </tr>
      <tr>
        <td id="L7964" class="blob-num js-line-number" data-line-number="7964"></td>
        <td id="LC7964" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the</span></td>
      </tr>
      <tr>
        <td id="L7965" class="blob-num js-line-number" data-line-number="7965"></td>
        <td id="LC7965" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5</span></td>
      </tr>
      <tr>
        <td id="L7966" class="blob-num js-line-number" data-line-number="7966"></td>
        <td id="LC7966" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *      requests with credentials} for more information.</span></td>
      </tr>
      <tr>
        <td id="L7967" class="blob-num js-line-number" data-line-number="7967"></td>
        <td id="LC7967" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7968" class="blob-num js-line-number" data-line-number="7968"></td>
        <td id="LC7968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Returns a {@link angular.module.ng.$q promise} object with the</span></td>
      </tr>
      <tr>
        <td id="L7969" class="blob-num js-line-number" data-line-number="7969"></td>
        <td id="LC7969" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   standard `then` method and two http specific methods: `success` and `error`. The `then`</span></td>
      </tr>
      <tr>
        <td id="L7970" class="blob-num js-line-number" data-line-number="7970"></td>
        <td id="LC7970" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   method takes two arguments a success and an error callback which will be called with a</span></td>
      </tr>
      <tr>
        <td id="L7971" class="blob-num js-line-number" data-line-number="7971"></td>
        <td id="LC7971" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   response object. The `success` and `error` methods take a single argument - a function that</span></td>
      </tr>
      <tr>
        <td id="L7972" class="blob-num js-line-number" data-line-number="7972"></td>
        <td id="LC7972" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   will be called when the request succeeds or fails respectively. The arguments passed into</span></td>
      </tr>
      <tr>
        <td id="L7973" class="blob-num js-line-number" data-line-number="7973"></td>
        <td id="LC7973" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   these functions are destructured representation of the response object passed into the</span></td>
      </tr>
      <tr>
        <td id="L7974" class="blob-num js-line-number" data-line-number="7974"></td>
        <td id="LC7974" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   `then` method. The response object has these properties:</span></td>
      </tr>
      <tr>
        <td id="L7975" class="blob-num js-line-number" data-line-number="7975"></td>
        <td id="LC7975" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7976" class="blob-num js-line-number" data-line-number="7976"></td>
        <td id="LC7976" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - **data** â `{string|Object}` â The response body transformed with the transform functions.</span></td>
      </tr>
      <tr>
        <td id="L7977" class="blob-num js-line-number" data-line-number="7977"></td>
        <td id="LC7977" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - **status** â `{number}` â HTTP status code of the response.</span></td>
      </tr>
      <tr>
        <td id="L7978" class="blob-num js-line-number" data-line-number="7978"></td>
        <td id="LC7978" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - **headers** â `{function([headerName])}` â Header getter function.</span></td>
      </tr>
      <tr>
        <td id="L7979" class="blob-num js-line-number" data-line-number="7979"></td>
        <td id="LC7979" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   - **config** â `{Object}` â The configuration object that was used to generate the request.</span></td>
      </tr>
      <tr>
        <td id="L7980" class="blob-num js-line-number" data-line-number="7980"></td>
        <td id="LC7980" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7981" class="blob-num js-line-number" data-line-number="7981"></td>
        <td id="LC7981" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@property</span> {Array.&lt;Object&gt;} pendingRequests Array of config objects for currently pending</span></td>
      </tr>
      <tr>
        <td id="L7982" class="blob-num js-line-number" data-line-number="7982"></td>
        <td id="LC7982" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *   requests. This is primarily meant to be used for debugging purposes.</span></td>
      </tr>
      <tr>
        <td id="L7983" class="blob-num js-line-number" data-line-number="7983"></td>
        <td id="LC7983" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7984" class="blob-num js-line-number" data-line-number="7984"></td>
        <td id="LC7984" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L7985" class="blob-num js-line-number" data-line-number="7985"></td>
        <td id="LC7985" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L7986" class="blob-num js-line-number" data-line-number="7986"></td>
        <td id="LC7986" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L7987" class="blob-num js-line-number" data-line-number="7987"></td>
        <td id="LC7987" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;doc:source jsfiddle=&quot;false&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L7988" class="blob-num js-line-number" data-line-number="7988"></td>
        <td id="LC7988" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L7989" class="blob-num js-line-number" data-line-number="7989"></td>
        <td id="LC7989" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              function FetchCtrl($scope, $http) {</span></td>
      </tr>
      <tr>
        <td id="L7990" class="blob-num js-line-number" data-line-number="7990"></td>
        <td id="LC7990" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                $scope.method = &#39;GET&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7991" class="blob-num js-line-number" data-line-number="7991"></td>
        <td id="LC7991" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                $scope.url = &#39;examples/http-hello.html&#39;;</span></td>
      </tr>
      <tr>
        <td id="L7992" class="blob-num js-line-number" data-line-number="7992"></td>
        <td id="LC7992" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7993" class="blob-num js-line-number" data-line-number="7993"></td>
        <td id="LC7993" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                $scope.fetch = function() {</span></td>
      </tr>
      <tr>
        <td id="L7994" class="blob-num js-line-number" data-line-number="7994"></td>
        <td id="LC7994" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  $scope.code = null;</span></td>
      </tr>
      <tr>
        <td id="L7995" class="blob-num js-line-number" data-line-number="7995"></td>
        <td id="LC7995" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  $scope.response = null;</span></td>
      </tr>
      <tr>
        <td id="L7996" class="blob-num js-line-number" data-line-number="7996"></td>
        <td id="LC7996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L7997" class="blob-num js-line-number" data-line-number="7997"></td>
        <td id="LC7997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  $http({method: $scope.method, url: $scope.url}).</span></td>
      </tr>
      <tr>
        <td id="L7998" class="blob-num js-line-number" data-line-number="7998"></td>
        <td id="LC7998" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    success(function(data, status) {</span></td>
      </tr>
      <tr>
        <td id="L7999" class="blob-num js-line-number" data-line-number="7999"></td>
        <td id="LC7999" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                      $scope.status = status;</span></td>
      </tr>
      <tr>
        <td id="L8000" class="blob-num js-line-number" data-line-number="8000"></td>
        <td id="LC8000" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                      $scope.data = data;</span></td>
      </tr>
      <tr>
        <td id="L8001" class="blob-num js-line-number" data-line-number="8001"></td>
        <td id="LC8001" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    }).</span></td>
      </tr>
      <tr>
        <td id="L8002" class="blob-num js-line-number" data-line-number="8002"></td>
        <td id="LC8002" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                    error(function(data, status) {</span></td>
      </tr>
      <tr>
        <td id="L8003" class="blob-num js-line-number" data-line-number="8003"></td>
        <td id="LC8003" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                      $scope.data = data || &quot;Request failed&quot;;</span></td>
      </tr>
      <tr>
        <td id="L8004" class="blob-num js-line-number" data-line-number="8004"></td>
        <td id="LC8004" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                      $scope.status = status;</span></td>
      </tr>
      <tr>
        <td id="L8005" class="blob-num js-line-number" data-line-number="8005"></td>
        <td id="LC8005" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  });</span></td>
      </tr>
      <tr>
        <td id="L8006" class="blob-num js-line-number" data-line-number="8006"></td>
        <td id="LC8006" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L8007" class="blob-num js-line-number" data-line-number="8007"></td>
        <td id="LC8007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8008" class="blob-num js-line-number" data-line-number="8008"></td>
        <td id="LC8008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                $scope.updateModel = function(method, url) {</span></td>
      </tr>
      <tr>
        <td id="L8009" class="blob-num js-line-number" data-line-number="8009"></td>
        <td id="LC8009" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  $scope.method = method;</span></td>
      </tr>
      <tr>
        <td id="L8010" class="blob-num js-line-number" data-line-number="8010"></td>
        <td id="LC8010" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                  $scope.url = url;</span></td>
      </tr>
      <tr>
        <td id="L8011" class="blob-num js-line-number" data-line-number="8011"></td>
        <td id="LC8011" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                };</span></td>
      </tr>
      <tr>
        <td id="L8012" class="blob-num js-line-number" data-line-number="8012"></td>
        <td id="LC8012" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              }</span></td>
      </tr>
      <tr>
        <td id="L8013" class="blob-num js-line-number" data-line-number="8013"></td>
        <td id="LC8013" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L8014" class="blob-num js-line-number" data-line-number="8014"></td>
        <td id="LC8014" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;div ng-controller=&quot;FetchCtrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8015" class="blob-num js-line-number" data-line-number="8015"></td>
        <td id="LC8015" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;select ng-model=&quot;method&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8016" class="blob-num js-line-number" data-line-number="8016"></td>
        <td id="LC8016" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                &lt;option&gt;GET&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L8017" class="blob-num js-line-number" data-line-number="8017"></td>
        <td id="LC8017" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                &lt;option&gt;JSONP&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L8018" class="blob-num js-line-number" data-line-number="8018"></td>
        <td id="LC8018" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L8019" class="blob-num js-line-number" data-line-number="8019"></td>
        <td id="LC8019" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;input type=&quot;text&quot; ng-model=&quot;url&quot; size=&quot;80&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L8020" class="blob-num js-line-number" data-line-number="8020"></td>
        <td id="LC8020" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;button ng-click=&quot;fetch()&quot;&gt;fetch&lt;/button&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8021" class="blob-num js-line-number" data-line-number="8021"></td>
        <td id="LC8021" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;button ng-click=&quot;updateModel(&#39;GET&#39;, &#39;examples/http-hello.html&#39;)&quot;&gt;Sample GET&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L8022" class="blob-num js-line-number" data-line-number="8022"></td>
        <td id="LC8022" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;button ng-click=&quot;updateModel(&#39;JSONP&#39;, &#39;http://angularjs.org/greet.php?callback=JSON_CALLBACK&amp;name=Super%20Hero&#39;)&quot;&gt;Sample JSONP&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L8023" class="blob-num js-line-number" data-line-number="8023"></td>
        <td id="LC8023" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;button ng-click=&quot;updateModel(&#39;JSONP&#39;, &#39;http://angularjs.org/doesntexist&amp;callback=JSON_CALLBACK&#39;)&quot;&gt;Invalid JSONP&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L8024" class="blob-num js-line-number" data-line-number="8024"></td>
        <td id="LC8024" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;pre&gt;http status code: {{status}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8025" class="blob-num js-line-number" data-line-number="8025"></td>
        <td id="LC8025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;pre&gt;http response data: {{data}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8026" class="blob-num js-line-number" data-line-number="8026"></td>
        <td id="LC8026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L8027" class="blob-num js-line-number" data-line-number="8027"></td>
        <td id="LC8027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8028" class="blob-num js-line-number" data-line-number="8028"></td>
        <td id="LC8028" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8029" class="blob-num js-line-number" data-line-number="8029"></td>
        <td id="LC8029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            it(&#39;should make an xhr GET request&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8030" class="blob-num js-line-number" data-line-number="8030"></td>
        <td id="LC8030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;Sample GET&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8031" class="blob-num js-line-number" data-line-number="8031"></td>
        <td id="LC8031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8032" class="blob-num js-line-number" data-line-number="8032"></td>
        <td id="LC8032" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;status&#39;)).toBe(&#39;200&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8033" class="blob-num js-line-number" data-line-number="8033"></td>
        <td id="LC8033" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;data&#39;)).toBe(&#39;Hello, $http!\n&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8034" class="blob-num js-line-number" data-line-number="8034"></td>
        <td id="LC8034" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L8035" class="blob-num js-line-number" data-line-number="8035"></td>
        <td id="LC8035" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8036" class="blob-num js-line-number" data-line-number="8036"></td>
        <td id="LC8036" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            it(&#39;should make a JSONP request to angularjs.org&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8037" class="blob-num js-line-number" data-line-number="8037"></td>
        <td id="LC8037" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;Sample JSONP&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8038" class="blob-num js-line-number" data-line-number="8038"></td>
        <td id="LC8038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8039" class="blob-num js-line-number" data-line-number="8039"></td>
        <td id="LC8039" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;status&#39;)).toBe(&#39;200&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8040" class="blob-num js-line-number" data-line-number="8040"></td>
        <td id="LC8040" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;data&#39;)).toMatch(/Super Hero!/);</span></td>
      </tr>
      <tr>
        <td id="L8041" class="blob-num js-line-number" data-line-number="8041"></td>
        <td id="LC8041" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L8042" class="blob-num js-line-number" data-line-number="8042"></td>
        <td id="LC8042" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8043" class="blob-num js-line-number" data-line-number="8043"></td>
        <td id="LC8043" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            it(&#39;should make JSONP request to invalid URL and invoke the error handler&#39;,</span></td>
      </tr>
      <tr>
        <td id="L8044" class="blob-num js-line-number" data-line-number="8044"></td>
        <td id="LC8044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                function() {</span></td>
      </tr>
      <tr>
        <td id="L8045" class="blob-num js-line-number" data-line-number="8045"></td>
        <td id="LC8045" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;Invalid JSONP&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8046" class="blob-num js-line-number" data-line-number="8046"></td>
        <td id="LC8046" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              element(&#39;:button:contains(&quot;fetch&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L8047" class="blob-num js-line-number" data-line-number="8047"></td>
        <td id="LC8047" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;status&#39;)).toBe(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8048" class="blob-num js-line-number" data-line-number="8048"></td>
        <td id="LC8048" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              expect(binding(&#39;data&#39;)).toBe(&#39;Request failed&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8049" class="blob-num js-line-number" data-line-number="8049"></td>
        <td id="LC8049" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L8050" class="blob-num js-line-number" data-line-number="8050"></td>
        <td id="LC8050" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8051" class="blob-num js-line-number" data-line-number="8051"></td>
        <td id="LC8051" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8052" class="blob-num js-line-number" data-line-number="8052"></td>
        <td id="LC8052" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8053" class="blob-num js-line-number" data-line-number="8053"></td>
        <td id="LC8053" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">$http</span>(<span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L8054" class="blob-num js-line-number" data-line-number="8054"></td>
        <td id="LC8054" class="blob-code blob-code-inner js-file-line">      config.<span class="pl-c1">method</span> <span class="pl-k">=</span> uppercase(config.<span class="pl-c1">method</span>);</td>
      </tr>
      <tr>
        <td id="L8055" class="blob-num js-line-number" data-line-number="8055"></td>
        <td id="LC8055" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8056" class="blob-num js-line-number" data-line-number="8056"></td>
        <td id="LC8056" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> reqTransformFn <span class="pl-k">=</span> config.transformRequest <span class="pl-k">||</span> $config.transformRequest,</td>
      </tr>
      <tr>
        <td id="L8057" class="blob-num js-line-number" data-line-number="8057"></td>
        <td id="LC8057" class="blob-code blob-code-inner js-file-line">          respTransformFn <span class="pl-k">=</span> config.transformResponse <span class="pl-k">||</span> $config.transformResponse,</td>
      </tr>
      <tr>
        <td id="L8058" class="blob-num js-line-number" data-line-number="8058"></td>
        <td id="LC8058" class="blob-code blob-code-inner js-file-line">          defHeaders <span class="pl-k">=</span> $config.<span class="pl-c1">headers</span>,</td>
      </tr>
      <tr>
        <td id="L8059" class="blob-num js-line-number" data-line-number="8059"></td>
        <td id="LC8059" class="blob-code blob-code-inner js-file-line">          reqHeaders <span class="pl-k">=</span> extend({<span class="pl-s"><span class="pl-pds">&#39;</span>X-XSRF-TOKEN<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> $browser.cookies()[<span class="pl-s"><span class="pl-pds">&#39;</span>XSRF-TOKEN<span class="pl-pds">&#39;</span></span>]},</td>
      </tr>
      <tr>
        <td id="L8060" class="blob-num js-line-number" data-line-number="8060"></td>
        <td id="LC8060" class="blob-code blob-code-inner js-file-line">              defHeaders.common, defHeaders[lowercase(config.<span class="pl-c1">method</span>)], config.<span class="pl-c1">headers</span>),</td>
      </tr>
      <tr>
        <td id="L8061" class="blob-num js-line-number" data-line-number="8061"></td>
        <td id="LC8061" class="blob-code blob-code-inner js-file-line">          reqData <span class="pl-k">=</span> transformData(config.<span class="pl-c1">data</span>, headersGetter(reqHeaders), reqTransformFn),</td>
      </tr>
      <tr>
        <td id="L8062" class="blob-num js-line-number" data-line-number="8062"></td>
        <td id="LC8062" class="blob-code blob-code-inner js-file-line">          promise;</td>
      </tr>
      <tr>
        <td id="L8063" class="blob-num js-line-number" data-line-number="8063"></td>
        <td id="LC8063" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8064" class="blob-num js-line-number" data-line-number="8064"></td>
        <td id="LC8064" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// strip content-type if data is undefined</span></td>
      </tr>
      <tr>
        <td id="L8065" class="blob-num js-line-number" data-line-number="8065"></td>
        <td id="LC8065" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isUndefined(config.<span class="pl-c1">data</span>)) {</td>
      </tr>
      <tr>
        <td id="L8066" class="blob-num js-line-number" data-line-number="8066"></td>
        <td id="LC8066" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> reqHeaders[<span class="pl-s"><span class="pl-pds">&#39;</span>Content-Type<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L8067" class="blob-num js-line-number" data-line-number="8067"></td>
        <td id="LC8067" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8068" class="blob-num js-line-number" data-line-number="8068"></td>
        <td id="LC8068" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8069" class="blob-num js-line-number" data-line-number="8069"></td>
        <td id="LC8069" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// send request</span></td>
      </tr>
      <tr>
        <td id="L8070" class="blob-num js-line-number" data-line-number="8070"></td>
        <td id="LC8070" class="blob-code blob-code-inner js-file-line">      promise <span class="pl-k">=</span> sendReq(config, reqData, reqHeaders);</td>
      </tr>
      <tr>
        <td id="L8071" class="blob-num js-line-number" data-line-number="8071"></td>
        <td id="LC8071" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8072" class="blob-num js-line-number" data-line-number="8072"></td>
        <td id="LC8072" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8073" class="blob-num js-line-number" data-line-number="8073"></td>
        <td id="LC8073" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// transform future response</span></td>
      </tr>
      <tr>
        <td id="L8074" class="blob-num js-line-number" data-line-number="8074"></td>
        <td id="LC8074" class="blob-code blob-code-inner js-file-line">      promise <span class="pl-k">=</span> promise.then(transformResponse, transformResponse);</td>
      </tr>
      <tr>
        <td id="L8075" class="blob-num js-line-number" data-line-number="8075"></td>
        <td id="LC8075" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8076" class="blob-num js-line-number" data-line-number="8076"></td>
        <td id="LC8076" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// apply interceptors</span></td>
      </tr>
      <tr>
        <td id="L8077" class="blob-num js-line-number" data-line-number="8077"></td>
        <td id="LC8077" class="blob-code blob-code-inner js-file-line">      forEach(responseInterceptors, <span class="pl-k">function</span>(<span class="pl-smi">interceptor</span>) {</td>
      </tr>
      <tr>
        <td id="L8078" class="blob-num js-line-number" data-line-number="8078"></td>
        <td id="LC8078" class="blob-code blob-code-inner js-file-line">        promise <span class="pl-k">=</span> interceptor(promise);</td>
      </tr>
      <tr>
        <td id="L8079" class="blob-num js-line-number" data-line-number="8079"></td>
        <td id="LC8079" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8080" class="blob-num js-line-number" data-line-number="8080"></td>
        <td id="LC8080" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8081" class="blob-num js-line-number" data-line-number="8081"></td>
        <td id="LC8081" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">promise</span>.<span class="pl-en">success</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L8082" class="blob-num js-line-number" data-line-number="8082"></td>
        <td id="LC8082" class="blob-code blob-code-inner js-file-line">        promise.then(<span class="pl-k">function</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L8083" class="blob-num js-line-number" data-line-number="8083"></td>
        <td id="LC8083" class="blob-code blob-code-inner js-file-line">          fn(response.<span class="pl-c1">data</span>, response.<span class="pl-c1">status</span>, response.<span class="pl-c1">headers</span>, config);</td>
      </tr>
      <tr>
        <td id="L8084" class="blob-num js-line-number" data-line-number="8084"></td>
        <td id="LC8084" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8085" class="blob-num js-line-number" data-line-number="8085"></td>
        <td id="LC8085" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> promise;</td>
      </tr>
      <tr>
        <td id="L8086" class="blob-num js-line-number" data-line-number="8086"></td>
        <td id="LC8086" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8087" class="blob-num js-line-number" data-line-number="8087"></td>
        <td id="LC8087" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8088" class="blob-num js-line-number" data-line-number="8088"></td>
        <td id="LC8088" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">promise</span>.<span class="pl-en">error</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L8089" class="blob-num js-line-number" data-line-number="8089"></td>
        <td id="LC8089" class="blob-code blob-code-inner js-file-line">        promise.then(<span class="pl-c1">null</span>, <span class="pl-k">function</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L8090" class="blob-num js-line-number" data-line-number="8090"></td>
        <td id="LC8090" class="blob-code blob-code-inner js-file-line">          fn(response.<span class="pl-c1">data</span>, response.<span class="pl-c1">status</span>, response.<span class="pl-c1">headers</span>, config);</td>
      </tr>
      <tr>
        <td id="L8091" class="blob-num js-line-number" data-line-number="8091"></td>
        <td id="LC8091" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8092" class="blob-num js-line-number" data-line-number="8092"></td>
        <td id="LC8092" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> promise;</td>
      </tr>
      <tr>
        <td id="L8093" class="blob-num js-line-number" data-line-number="8093"></td>
        <td id="LC8093" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8094" class="blob-num js-line-number" data-line-number="8094"></td>
        <td id="LC8094" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8095" class="blob-num js-line-number" data-line-number="8095"></td>
        <td id="LC8095" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> promise;</td>
      </tr>
      <tr>
        <td id="L8096" class="blob-num js-line-number" data-line-number="8096"></td>
        <td id="LC8096" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8097" class="blob-num js-line-number" data-line-number="8097"></td>
        <td id="LC8097" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">transformResponse</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L8098" class="blob-num js-line-number" data-line-number="8098"></td>
        <td id="LC8098" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// make a copy since the response must be cacheable</span></td>
      </tr>
      <tr>
        <td id="L8099" class="blob-num js-line-number" data-line-number="8099"></td>
        <td id="LC8099" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> resp <span class="pl-k">=</span> extend({}, response, {</td>
      </tr>
      <tr>
        <td id="L8100" class="blob-num js-line-number" data-line-number="8100"></td>
        <td id="LC8100" class="blob-code blob-code-inner js-file-line">          data<span class="pl-k">:</span> transformData(response.<span class="pl-c1">data</span>, response.<span class="pl-c1">headers</span>, respTransformFn)</td>
      </tr>
      <tr>
        <td id="L8101" class="blob-num js-line-number" data-line-number="8101"></td>
        <td id="LC8101" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8102" class="blob-num js-line-number" data-line-number="8102"></td>
        <td id="LC8102" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> (isSuccess(response.<span class="pl-c1">status</span>))</td>
      </tr>
      <tr>
        <td id="L8103" class="blob-num js-line-number" data-line-number="8103"></td>
        <td id="LC8103" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> resp</td>
      </tr>
      <tr>
        <td id="L8104" class="blob-num js-line-number" data-line-number="8104"></td>
        <td id="LC8104" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> $q.reject(resp);</td>
      </tr>
      <tr>
        <td id="L8105" class="blob-num js-line-number" data-line-number="8105"></td>
        <td id="LC8105" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8106" class="blob-num js-line-number" data-line-number="8106"></td>
        <td id="LC8106" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8107" class="blob-num js-line-number" data-line-number="8107"></td>
        <td id="LC8107" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8108" class="blob-num js-line-number" data-line-number="8108"></td>
        <td id="LC8108" class="blob-code blob-code-inner js-file-line">    $http.pendingRequests <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8109" class="blob-num js-line-number" data-line-number="8109"></td>
        <td id="LC8109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8110" class="blob-num js-line-number" data-line-number="8110"></td>
        <td id="LC8110" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8111" class="blob-num js-line-number" data-line-number="8111"></td>
        <td id="LC8111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8112" class="blob-num js-line-number" data-line-number="8112"></td>
        <td id="LC8112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#get</span></td>
      </tr>
      <tr>
        <td id="L8113" class="blob-num js-line-number" data-line-number="8113"></td>
        <td id="LC8113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8114" class="blob-num js-line-number" data-line-number="8114"></td>
        <td id="LC8114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8115" class="blob-num js-line-number" data-line-number="8115"></td>
        <td id="LC8115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8116" class="blob-num js-line-number" data-line-number="8116"></td>
        <td id="LC8116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `GET` request</span></td>
      </tr>
      <tr>
        <td id="L8117" class="blob-num js-line-number" data-line-number="8117"></td>
        <td id="LC8117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8118" class="blob-num js-line-number" data-line-number="8118"></td>
        <td id="LC8118" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request</span></td>
      </tr>
      <tr>
        <td id="L8119" class="blob-num js-line-number" data-line-number="8119"></td>
        <td id="LC8119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8120" class="blob-num js-line-number" data-line-number="8120"></td>
        <td id="LC8120" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8121" class="blob-num js-line-number" data-line-number="8121"></td>
        <td id="LC8121" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8122" class="blob-num js-line-number" data-line-number="8122"></td>
        <td id="LC8122" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8123" class="blob-num js-line-number" data-line-number="8123"></td>
        <td id="LC8123" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8124" class="blob-num js-line-number" data-line-number="8124"></td>
        <td id="LC8124" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8125" class="blob-num js-line-number" data-line-number="8125"></td>
        <td id="LC8125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#delete</span></td>
      </tr>
      <tr>
        <td id="L8126" class="blob-num js-line-number" data-line-number="8126"></td>
        <td id="LC8126" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8127" class="blob-num js-line-number" data-line-number="8127"></td>
        <td id="LC8127" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8128" class="blob-num js-line-number" data-line-number="8128"></td>
        <td id="LC8128" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8129" class="blob-num js-line-number" data-line-number="8129"></td>
        <td id="LC8129" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `DELETE` request</span></td>
      </tr>
      <tr>
        <td id="L8130" class="blob-num js-line-number" data-line-number="8130"></td>
        <td id="LC8130" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8131" class="blob-num js-line-number" data-line-number="8131"></td>
        <td id="LC8131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request</span></td>
      </tr>
      <tr>
        <td id="L8132" class="blob-num js-line-number" data-line-number="8132"></td>
        <td id="LC8132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8133" class="blob-num js-line-number" data-line-number="8133"></td>
        <td id="LC8133" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8134" class="blob-num js-line-number" data-line-number="8134"></td>
        <td id="LC8134" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8135" class="blob-num js-line-number" data-line-number="8135"></td>
        <td id="LC8135" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8136" class="blob-num js-line-number" data-line-number="8136"></td>
        <td id="LC8136" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8137" class="blob-num js-line-number" data-line-number="8137"></td>
        <td id="LC8137" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8138" class="blob-num js-line-number" data-line-number="8138"></td>
        <td id="LC8138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#head</span></td>
      </tr>
      <tr>
        <td id="L8139" class="blob-num js-line-number" data-line-number="8139"></td>
        <td id="LC8139" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8140" class="blob-num js-line-number" data-line-number="8140"></td>
        <td id="LC8140" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8141" class="blob-num js-line-number" data-line-number="8141"></td>
        <td id="LC8141" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8142" class="blob-num js-line-number" data-line-number="8142"></td>
        <td id="LC8142" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `HEAD` request</span></td>
      </tr>
      <tr>
        <td id="L8143" class="blob-num js-line-number" data-line-number="8143"></td>
        <td id="LC8143" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8144" class="blob-num js-line-number" data-line-number="8144"></td>
        <td id="LC8144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request</span></td>
      </tr>
      <tr>
        <td id="L8145" class="blob-num js-line-number" data-line-number="8145"></td>
        <td id="LC8145" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8146" class="blob-num js-line-number" data-line-number="8146"></td>
        <td id="LC8146" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8147" class="blob-num js-line-number" data-line-number="8147"></td>
        <td id="LC8147" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8148" class="blob-num js-line-number" data-line-number="8148"></td>
        <td id="LC8148" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8149" class="blob-num js-line-number" data-line-number="8149"></td>
        <td id="LC8149" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8150" class="blob-num js-line-number" data-line-number="8150"></td>
        <td id="LC8150" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8151" class="blob-num js-line-number" data-line-number="8151"></td>
        <td id="LC8151" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#jsonp</span></td>
      </tr>
      <tr>
        <td id="L8152" class="blob-num js-line-number" data-line-number="8152"></td>
        <td id="LC8152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8153" class="blob-num js-line-number" data-line-number="8153"></td>
        <td id="LC8153" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8154" class="blob-num js-line-number" data-line-number="8154"></td>
        <td id="LC8154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8155" class="blob-num js-line-number" data-line-number="8155"></td>
        <td id="LC8155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `JSONP` request</span></td>
      </tr>
      <tr>
        <td id="L8156" class="blob-num js-line-number" data-line-number="8156"></td>
        <td id="LC8156" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8157" class="blob-num js-line-number" data-line-number="8157"></td>
        <td id="LC8157" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request.</span></td>
      </tr>
      <tr>
        <td id="L8158" class="blob-num js-line-number" data-line-number="8158"></td>
        <td id="LC8158" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *                     Should contain `JSON_CALLBACK` string.</span></td>
      </tr>
      <tr>
        <td id="L8159" class="blob-num js-line-number" data-line-number="8159"></td>
        <td id="LC8159" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8160" class="blob-num js-line-number" data-line-number="8160"></td>
        <td id="LC8160" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8161" class="blob-num js-line-number" data-line-number="8161"></td>
        <td id="LC8161" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8162" class="blob-num js-line-number" data-line-number="8162"></td>
        <td id="LC8162" class="blob-code blob-code-inner js-file-line">    createShortMethods(<span class="pl-s"><span class="pl-pds">&#39;</span>get<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>delete<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>head<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>jsonp<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8163" class="blob-num js-line-number" data-line-number="8163"></td>
        <td id="LC8163" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8164" class="blob-num js-line-number" data-line-number="8164"></td>
        <td id="LC8164" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8165" class="blob-num js-line-number" data-line-number="8165"></td>
        <td id="LC8165" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8166" class="blob-num js-line-number" data-line-number="8166"></td>
        <td id="LC8166" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#post</span></td>
      </tr>
      <tr>
        <td id="L8167" class="blob-num js-line-number" data-line-number="8167"></td>
        <td id="LC8167" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8168" class="blob-num js-line-number" data-line-number="8168"></td>
        <td id="LC8168" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8169" class="blob-num js-line-number" data-line-number="8169"></td>
        <td id="LC8169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8170" class="blob-num js-line-number" data-line-number="8170"></td>
        <td id="LC8170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `POST` request</span></td>
      </tr>
      <tr>
        <td id="L8171" class="blob-num js-line-number" data-line-number="8171"></td>
        <td id="LC8171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8172" class="blob-num js-line-number" data-line-number="8172"></td>
        <td id="LC8172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request</span></td>
      </tr>
      <tr>
        <td id="L8173" class="blob-num js-line-number" data-line-number="8173"></td>
        <td id="LC8173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {*} data Request content</span></td>
      </tr>
      <tr>
        <td id="L8174" class="blob-num js-line-number" data-line-number="8174"></td>
        <td id="LC8174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8175" class="blob-num js-line-number" data-line-number="8175"></td>
        <td id="LC8175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8176" class="blob-num js-line-number" data-line-number="8176"></td>
        <td id="LC8176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8177" class="blob-num js-line-number" data-line-number="8177"></td>
        <td id="LC8177" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8178" class="blob-num js-line-number" data-line-number="8178"></td>
        <td id="LC8178" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8179" class="blob-num js-line-number" data-line-number="8179"></td>
        <td id="LC8179" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8180" class="blob-num js-line-number" data-line-number="8180"></td>
        <td id="LC8180" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@name</span> angular.module.ng.$http#put</span></td>
      </tr>
      <tr>
        <td id="L8181" class="blob-num js-line-number" data-line-number="8181"></td>
        <td id="LC8181" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * @methodOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8182" class="blob-num js-line-number" data-line-number="8182"></td>
        <td id="LC8182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8183" class="blob-num js-line-number" data-line-number="8183"></td>
        <td id="LC8183" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8184" class="blob-num js-line-number" data-line-number="8184"></td>
        <td id="LC8184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Shortcut method to perform `PUT` request</span></td>
      </tr>
      <tr>
        <td id="L8185" class="blob-num js-line-number" data-line-number="8185"></td>
        <td id="LC8185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8186" class="blob-num js-line-number" data-line-number="8186"></td>
        <td id="LC8186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {string} url Relative or absolute URL specifying the destination of the request</span></td>
      </tr>
      <tr>
        <td id="L8187" class="blob-num js-line-number" data-line-number="8187"></td>
        <td id="LC8187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {*} data Request content</span></td>
      </tr>
      <tr>
        <td id="L8188" class="blob-num js-line-number" data-line-number="8188"></td>
        <td id="LC8188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@param</span> {Object=} config Optional configuration object</span></td>
      </tr>
      <tr>
        <td id="L8189" class="blob-num js-line-number" data-line-number="8189"></td>
        <td id="LC8189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * <span class="pl-k">@returns</span> {HttpPromise} Future object</span></td>
      </tr>
      <tr>
        <td id="L8190" class="blob-num js-line-number" data-line-number="8190"></td>
        <td id="LC8190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8191" class="blob-num js-line-number" data-line-number="8191"></td>
        <td id="LC8191" class="blob-code blob-code-inner js-file-line">    createShortMethodsWithData(<span class="pl-s"><span class="pl-pds">&#39;</span>post<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>put<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8192" class="blob-num js-line-number" data-line-number="8192"></td>
        <td id="LC8192" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8193" class="blob-num js-line-number" data-line-number="8193"></td>
        <td id="LC8193" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8194" class="blob-num js-line-number" data-line-number="8194"></td>
        <td id="LC8194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * @ngdoc property</span></td>
      </tr>
      <tr>
        <td id="L8195" class="blob-num js-line-number" data-line-number="8195"></td>
        <td id="LC8195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@name</span> angular.module.ng.$http#defaults</span></td>
      </tr>
      <tr>
        <td id="L8196" class="blob-num js-line-number" data-line-number="8196"></td>
        <td id="LC8196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * @propertyOf angular.module.ng.$http</span></td>
      </tr>
      <tr>
        <td id="L8197" class="blob-num js-line-number" data-line-number="8197"></td>
        <td id="LC8197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L8198" class="blob-num js-line-number" data-line-number="8198"></td>
        <td id="LC8198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8199" class="blob-num js-line-number" data-line-number="8199"></td>
        <td id="LC8199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of</span></td>
      </tr>
      <tr>
        <td id="L8200" class="blob-num js-line-number" data-line-number="8200"></td>
        <td id="LC8200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * default headers as well as request and response transformations.</span></td>
      </tr>
      <tr>
        <td id="L8201" class="blob-num js-line-number" data-line-number="8201"></td>
        <td id="LC8201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         *</span></td>
      </tr>
      <tr>
        <td id="L8202" class="blob-num js-line-number" data-line-number="8202"></td>
        <td id="LC8202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         * See &quot;Setting HTTP Headers&quot; and &quot;Transforming Requests and Responses&quot; sections above.</span></td>
      </tr>
      <tr>
        <td id="L8203" class="blob-num js-line-number" data-line-number="8203"></td>
        <td id="LC8203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         */</span></td>
      </tr>
      <tr>
        <td id="L8204" class="blob-num js-line-number" data-line-number="8204"></td>
        <td id="LC8204" class="blob-code blob-code-inner js-file-line">    $http.defaults <span class="pl-k">=</span> $config;</td>
      </tr>
      <tr>
        <td id="L8205" class="blob-num js-line-number" data-line-number="8205"></td>
        <td id="LC8205" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8206" class="blob-num js-line-number" data-line-number="8206"></td>
        <td id="LC8206" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8207" class="blob-num js-line-number" data-line-number="8207"></td>
        <td id="LC8207" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> $http;</td>
      </tr>
      <tr>
        <td id="L8208" class="blob-num js-line-number" data-line-number="8208"></td>
        <td id="LC8208" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8209" class="blob-num js-line-number" data-line-number="8209"></td>
        <td id="LC8209" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8210" class="blob-num js-line-number" data-line-number="8210"></td>
        <td id="LC8210" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createShortMethods</span>(<span class="pl-smi">names</span>) {</td>
      </tr>
      <tr>
        <td id="L8211" class="blob-num js-line-number" data-line-number="8211"></td>
        <td id="LC8211" class="blob-code blob-code-inner js-file-line">      forEach(arguments, <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8212" class="blob-num js-line-number" data-line-number="8212"></td>
        <td id="LC8212" class="blob-code blob-code-inner js-file-line">        $http[name] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L8213" class="blob-num js-line-number" data-line-number="8213"></td>
        <td id="LC8213" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> $http(extend(config <span class="pl-k">||</span> {}, {</td>
      </tr>
      <tr>
        <td id="L8214" class="blob-num js-line-number" data-line-number="8214"></td>
        <td id="LC8214" class="blob-code blob-code-inner js-file-line">            method<span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L8215" class="blob-num js-line-number" data-line-number="8215"></td>
        <td id="LC8215" class="blob-code blob-code-inner js-file-line">            url<span class="pl-k">:</span> url</td>
      </tr>
      <tr>
        <td id="L8216" class="blob-num js-line-number" data-line-number="8216"></td>
        <td id="LC8216" class="blob-code blob-code-inner js-file-line">          }));</td>
      </tr>
      <tr>
        <td id="L8217" class="blob-num js-line-number" data-line-number="8217"></td>
        <td id="LC8217" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L8218" class="blob-num js-line-number" data-line-number="8218"></td>
        <td id="LC8218" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8219" class="blob-num js-line-number" data-line-number="8219"></td>
        <td id="LC8219" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8220" class="blob-num js-line-number" data-line-number="8220"></td>
        <td id="LC8220" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8221" class="blob-num js-line-number" data-line-number="8221"></td>
        <td id="LC8221" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8222" class="blob-num js-line-number" data-line-number="8222"></td>
        <td id="LC8222" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">createShortMethodsWithData</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8223" class="blob-num js-line-number" data-line-number="8223"></td>
        <td id="LC8223" class="blob-code blob-code-inner js-file-line">      forEach(arguments, <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8224" class="blob-num js-line-number" data-line-number="8224"></td>
        <td id="LC8224" class="blob-code blob-code-inner js-file-line">        $http[name] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">url</span>, <span class="pl-smi">data</span>, <span class="pl-smi">config</span>) {</td>
      </tr>
      <tr>
        <td id="L8225" class="blob-num js-line-number" data-line-number="8225"></td>
        <td id="LC8225" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> $http(extend(config <span class="pl-k">||</span> {}, {</td>
      </tr>
      <tr>
        <td id="L8226" class="blob-num js-line-number" data-line-number="8226"></td>
        <td id="LC8226" class="blob-code blob-code-inner js-file-line">            method<span class="pl-k">:</span> name,</td>
      </tr>
      <tr>
        <td id="L8227" class="blob-num js-line-number" data-line-number="8227"></td>
        <td id="LC8227" class="blob-code blob-code-inner js-file-line">            url<span class="pl-k">:</span> url,</td>
      </tr>
      <tr>
        <td id="L8228" class="blob-num js-line-number" data-line-number="8228"></td>
        <td id="LC8228" class="blob-code blob-code-inner js-file-line">            data<span class="pl-k">:</span> data</td>
      </tr>
      <tr>
        <td id="L8229" class="blob-num js-line-number" data-line-number="8229"></td>
        <td id="LC8229" class="blob-code blob-code-inner js-file-line">          }));</td>
      </tr>
      <tr>
        <td id="L8230" class="blob-num js-line-number" data-line-number="8230"></td>
        <td id="LC8230" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L8231" class="blob-num js-line-number" data-line-number="8231"></td>
        <td id="LC8231" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8232" class="blob-num js-line-number" data-line-number="8232"></td>
        <td id="LC8232" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8233" class="blob-num js-line-number" data-line-number="8233"></td>
        <td id="LC8233" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8234" class="blob-num js-line-number" data-line-number="8234"></td>
        <td id="LC8234" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8235" class="blob-num js-line-number" data-line-number="8235"></td>
        <td id="LC8235" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8236" class="blob-num js-line-number" data-line-number="8236"></td>
        <td id="LC8236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * Makes the request</span></td>
      </tr>
      <tr>
        <td id="L8237" class="blob-num js-line-number" data-line-number="8237"></td>
        <td id="LC8237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     *</span></td>
      </tr>
      <tr>
        <td id="L8238" class="blob-num js-line-number" data-line-number="8238"></td>
        <td id="LC8238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * !!! ACCESSES CLOSURE VARS:</span></td>
      </tr>
      <tr>
        <td id="L8239" class="blob-num js-line-number" data-line-number="8239"></td>
        <td id="LC8239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     * $httpBackend, $config, $log, $rootScope, defaultCache, $http.pendingRequests</span></td>
      </tr>
      <tr>
        <td id="L8240" class="blob-num js-line-number" data-line-number="8240"></td>
        <td id="LC8240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     */</span></td>
      </tr>
      <tr>
        <td id="L8241" class="blob-num js-line-number" data-line-number="8241"></td>
        <td id="LC8241" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">sendReq</span>(<span class="pl-smi">config</span>, <span class="pl-smi">reqData</span>, <span class="pl-smi">reqHeaders</span>) {</td>
      </tr>
      <tr>
        <td id="L8242" class="blob-num js-line-number" data-line-number="8242"></td>
        <td id="LC8242" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> deferred <span class="pl-k">=</span> $q.<span class="pl-c1">defer</span>(),</td>
      </tr>
      <tr>
        <td id="L8243" class="blob-num js-line-number" data-line-number="8243"></td>
        <td id="LC8243" class="blob-code blob-code-inner js-file-line">          promise <span class="pl-k">=</span> deferred.promise,</td>
      </tr>
      <tr>
        <td id="L8244" class="blob-num js-line-number" data-line-number="8244"></td>
        <td id="LC8244" class="blob-code blob-code-inner js-file-line">          cache,</td>
      </tr>
      <tr>
        <td id="L8245" class="blob-num js-line-number" data-line-number="8245"></td>
        <td id="LC8245" class="blob-code blob-code-inner js-file-line">          cachedResp,</td>
      </tr>
      <tr>
        <td id="L8246" class="blob-num js-line-number" data-line-number="8246"></td>
        <td id="LC8246" class="blob-code blob-code-inner js-file-line">          url <span class="pl-k">=</span> buildUrl(config.url, config.params);</td>
      </tr>
      <tr>
        <td id="L8247" class="blob-num js-line-number" data-line-number="8247"></td>
        <td id="LC8247" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8248" class="blob-num js-line-number" data-line-number="8248"></td>
        <td id="LC8248" class="blob-code blob-code-inner js-file-line">      $http.pendingRequests.<span class="pl-c1">push</span>(config);</td>
      </tr>
      <tr>
        <td id="L8249" class="blob-num js-line-number" data-line-number="8249"></td>
        <td id="LC8249" class="blob-code blob-code-inner js-file-line">      promise.then(removePendingReq, removePendingReq);</td>
      </tr>
      <tr>
        <td id="L8250" class="blob-num js-line-number" data-line-number="8250"></td>
        <td id="LC8250" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8251" class="blob-num js-line-number" data-line-number="8251"></td>
        <td id="LC8251" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8252" class="blob-num js-line-number" data-line-number="8252"></td>
        <td id="LC8252" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (config.cache <span class="pl-k">&amp;&amp;</span> config.<span class="pl-c1">method</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>GET<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8253" class="blob-num js-line-number" data-line-number="8253"></td>
        <td id="LC8253" class="blob-code blob-code-inner js-file-line">        cache <span class="pl-k">=</span> isObject(config.cache) <span class="pl-k">?</span> config.cache <span class="pl-k">:</span> defaultCache;</td>
      </tr>
      <tr>
        <td id="L8254" class="blob-num js-line-number" data-line-number="8254"></td>
        <td id="LC8254" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8255" class="blob-num js-line-number" data-line-number="8255"></td>
        <td id="LC8255" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8256" class="blob-num js-line-number" data-line-number="8256"></td>
        <td id="LC8256" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (cache) {</td>
      </tr>
      <tr>
        <td id="L8257" class="blob-num js-line-number" data-line-number="8257"></td>
        <td id="LC8257" class="blob-code blob-code-inner js-file-line">        cachedResp <span class="pl-k">=</span> cache.get(url);</td>
      </tr>
      <tr>
        <td id="L8258" class="blob-num js-line-number" data-line-number="8258"></td>
        <td id="LC8258" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (cachedResp) {</td>
      </tr>
      <tr>
        <td id="L8259" class="blob-num js-line-number" data-line-number="8259"></td>
        <td id="LC8259" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (cachedResp.then) {</td>
      </tr>
      <tr>
        <td id="L8260" class="blob-num js-line-number" data-line-number="8260"></td>
        <td id="LC8260" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// cached request has already been sent, but there is no response yet</span></td>
      </tr>
      <tr>
        <td id="L8261" class="blob-num js-line-number" data-line-number="8261"></td>
        <td id="LC8261" class="blob-code blob-code-inner js-file-line">            cachedResp.then(removePendingReq, removePendingReq);</td>
      </tr>
      <tr>
        <td id="L8262" class="blob-num js-line-number" data-line-number="8262"></td>
        <td id="LC8262" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">return</span> cachedResp;</td>
      </tr>
      <tr>
        <td id="L8263" class="blob-num js-line-number" data-line-number="8263"></td>
        <td id="LC8263" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8264" class="blob-num js-line-number" data-line-number="8264"></td>
        <td id="LC8264" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// serving from cache</span></td>
      </tr>
      <tr>
        <td id="L8265" class="blob-num js-line-number" data-line-number="8265"></td>
        <td id="LC8265" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isArray(cachedResp)) {</td>
      </tr>
      <tr>
        <td id="L8266" class="blob-num js-line-number" data-line-number="8266"></td>
        <td id="LC8266" class="blob-code blob-code-inner js-file-line">              resolvePromise(cachedResp[<span class="pl-c1">1</span>], cachedResp[<span class="pl-c1">0</span>], copy(cachedResp[<span class="pl-c1">2</span>]));</td>
      </tr>
      <tr>
        <td id="L8267" class="blob-num js-line-number" data-line-number="8267"></td>
        <td id="LC8267" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8268" class="blob-num js-line-number" data-line-number="8268"></td>
        <td id="LC8268" class="blob-code blob-code-inner js-file-line">              resolvePromise(cachedResp, <span class="pl-c1">200</span>, {});</td>
      </tr>
      <tr>
        <td id="L8269" class="blob-num js-line-number" data-line-number="8269"></td>
        <td id="LC8269" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L8270" class="blob-num js-line-number" data-line-number="8270"></td>
        <td id="LC8270" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8271" class="blob-num js-line-number" data-line-number="8271"></td>
        <td id="LC8271" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8272" class="blob-num js-line-number" data-line-number="8272"></td>
        <td id="LC8272" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// put the promise for the non-transformed response into cache as a placeholder</span></td>
      </tr>
      <tr>
        <td id="L8273" class="blob-num js-line-number" data-line-number="8273"></td>
        <td id="LC8273" class="blob-code blob-code-inner js-file-line">          cache.put(url, promise);</td>
      </tr>
      <tr>
        <td id="L8274" class="blob-num js-line-number" data-line-number="8274"></td>
        <td id="LC8274" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8275" class="blob-num js-line-number" data-line-number="8275"></td>
        <td id="LC8275" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8276" class="blob-num js-line-number" data-line-number="8276"></td>
        <td id="LC8276" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8277" class="blob-num js-line-number" data-line-number="8277"></td>
        <td id="LC8277" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// if we won&#39;t have the response in cache, send the request to the backend</span></td>
      </tr>
      <tr>
        <td id="L8278" class="blob-num js-line-number" data-line-number="8278"></td>
        <td id="LC8278" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>cachedResp) {</td>
      </tr>
      <tr>
        <td id="L8279" class="blob-num js-line-number" data-line-number="8279"></td>
        <td id="LC8279" class="blob-code blob-code-inner js-file-line">        $httpBackend(config.<span class="pl-c1">method</span>, url, reqData, done, reqHeaders, config.timeout,</td>
      </tr>
      <tr>
        <td id="L8280" class="blob-num js-line-number" data-line-number="8280"></td>
        <td id="LC8280" class="blob-code blob-code-inner js-file-line">            config.withCredentials);</td>
      </tr>
      <tr>
        <td id="L8281" class="blob-num js-line-number" data-line-number="8281"></td>
        <td id="LC8281" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8282" class="blob-num js-line-number" data-line-number="8282"></td>
        <td id="LC8282" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8283" class="blob-num js-line-number" data-line-number="8283"></td>
        <td id="LC8283" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> promise;</td>
      </tr>
      <tr>
        <td id="L8284" class="blob-num js-line-number" data-line-number="8284"></td>
        <td id="LC8284" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8285" class="blob-num js-line-number" data-line-number="8285"></td>
        <td id="LC8285" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8286" class="blob-num js-line-number" data-line-number="8286"></td>
        <td id="LC8286" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8287" class="blob-num js-line-number" data-line-number="8287"></td>
        <td id="LC8287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Callback registered to $httpBackend():</span></td>
      </tr>
      <tr>
        <td id="L8288" class="blob-num js-line-number" data-line-number="8288"></td>
        <td id="LC8288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *  - caches the response if desired</span></td>
      </tr>
      <tr>
        <td id="L8289" class="blob-num js-line-number" data-line-number="8289"></td>
        <td id="LC8289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *  - resolves the raw $http promise</span></td>
      </tr>
      <tr>
        <td id="L8290" class="blob-num js-line-number" data-line-number="8290"></td>
        <td id="LC8290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       *  - calls $apply</span></td>
      </tr>
      <tr>
        <td id="L8291" class="blob-num js-line-number" data-line-number="8291"></td>
        <td id="LC8291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L8292" class="blob-num js-line-number" data-line-number="8292"></td>
        <td id="LC8292" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">done</span>(<span class="pl-smi">status</span>, <span class="pl-smi">response</span>, <span class="pl-smi">headersString</span>) {</td>
      </tr>
      <tr>
        <td id="L8293" class="blob-num js-line-number" data-line-number="8293"></td>
        <td id="LC8293" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (cache) {</td>
      </tr>
      <tr>
        <td id="L8294" class="blob-num js-line-number" data-line-number="8294"></td>
        <td id="LC8294" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (isSuccess(status)) {</td>
      </tr>
      <tr>
        <td id="L8295" class="blob-num js-line-number" data-line-number="8295"></td>
        <td id="LC8295" class="blob-code blob-code-inner js-file-line">            cache.put(url, [status, response, parseHeaders(headersString)]);</td>
      </tr>
      <tr>
        <td id="L8296" class="blob-num js-line-number" data-line-number="8296"></td>
        <td id="LC8296" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8297" class="blob-num js-line-number" data-line-number="8297"></td>
        <td id="LC8297" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// remove promise from the cache</span></td>
      </tr>
      <tr>
        <td id="L8298" class="blob-num js-line-number" data-line-number="8298"></td>
        <td id="LC8298" class="blob-code blob-code-inner js-file-line">            cache.remove(url);</td>
      </tr>
      <tr>
        <td id="L8299" class="blob-num js-line-number" data-line-number="8299"></td>
        <td id="LC8299" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8300" class="blob-num js-line-number" data-line-number="8300"></td>
        <td id="LC8300" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8301" class="blob-num js-line-number" data-line-number="8301"></td>
        <td id="LC8301" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8302" class="blob-num js-line-number" data-line-number="8302"></td>
        <td id="LC8302" class="blob-code blob-code-inner js-file-line">        resolvePromise(response, status, headersString);</td>
      </tr>
      <tr>
        <td id="L8303" class="blob-num js-line-number" data-line-number="8303"></td>
        <td id="LC8303" class="blob-code blob-code-inner js-file-line">        $rootScope.$<span class="pl-c1">apply</span>();</td>
      </tr>
      <tr>
        <td id="L8304" class="blob-num js-line-number" data-line-number="8304"></td>
        <td id="LC8304" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8305" class="blob-num js-line-number" data-line-number="8305"></td>
        <td id="LC8305" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8306" class="blob-num js-line-number" data-line-number="8306"></td>
        <td id="LC8306" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8307" class="blob-num js-line-number" data-line-number="8307"></td>
        <td id="LC8307" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8308" class="blob-num js-line-number" data-line-number="8308"></td>
        <td id="LC8308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       * Resolves the raw $http promise.</span></td>
      </tr>
      <tr>
        <td id="L8309" class="blob-num js-line-number" data-line-number="8309"></td>
        <td id="LC8309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       */</span></td>
      </tr>
      <tr>
        <td id="L8310" class="blob-num js-line-number" data-line-number="8310"></td>
        <td id="LC8310" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">resolvePromise</span>(<span class="pl-smi">response</span>, <span class="pl-smi">status</span>, <span class="pl-smi">headers</span>) {</td>
      </tr>
      <tr>
        <td id="L8311" class="blob-num js-line-number" data-line-number="8311"></td>
        <td id="LC8311" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// normalize internal statuses to 0</span></td>
      </tr>
      <tr>
        <td id="L8312" class="blob-num js-line-number" data-line-number="8312"></td>
        <td id="LC8312" class="blob-code blob-code-inner js-file-line">        status <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(status, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L8313" class="blob-num js-line-number" data-line-number="8313"></td>
        <td id="LC8313" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8314" class="blob-num js-line-number" data-line-number="8314"></td>
        <td id="LC8314" class="blob-code blob-code-inner js-file-line">        (isSuccess(status) <span class="pl-k">?</span> deferred.resolve <span class="pl-k">:</span> deferred.reject)({</td>
      </tr>
      <tr>
        <td id="L8315" class="blob-num js-line-number" data-line-number="8315"></td>
        <td id="LC8315" class="blob-code blob-code-inner js-file-line">          data<span class="pl-k">:</span> response,</td>
      </tr>
      <tr>
        <td id="L8316" class="blob-num js-line-number" data-line-number="8316"></td>
        <td id="LC8316" class="blob-code blob-code-inner js-file-line">          status<span class="pl-k">:</span> status,</td>
      </tr>
      <tr>
        <td id="L8317" class="blob-num js-line-number" data-line-number="8317"></td>
        <td id="LC8317" class="blob-code blob-code-inner js-file-line">          headers<span class="pl-k">:</span> headersGetter(headers),</td>
      </tr>
      <tr>
        <td id="L8318" class="blob-num js-line-number" data-line-number="8318"></td>
        <td id="LC8318" class="blob-code blob-code-inner js-file-line">          config<span class="pl-k">:</span> config</td>
      </tr>
      <tr>
        <td id="L8319" class="blob-num js-line-number" data-line-number="8319"></td>
        <td id="LC8319" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L8320" class="blob-num js-line-number" data-line-number="8320"></td>
        <td id="LC8320" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8321" class="blob-num js-line-number" data-line-number="8321"></td>
        <td id="LC8321" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8322" class="blob-num js-line-number" data-line-number="8322"></td>
        <td id="LC8322" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8323" class="blob-num js-line-number" data-line-number="8323"></td>
        <td id="LC8323" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">removePendingReq</span>() {</td>
      </tr>
      <tr>
        <td id="L8324" class="blob-num js-line-number" data-line-number="8324"></td>
        <td id="LC8324" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> idx <span class="pl-k">=</span> <span class="pl-c1">indexOf</span>($http.pendingRequests, config);</td>
      </tr>
      <tr>
        <td id="L8325" class="blob-num js-line-number" data-line-number="8325"></td>
        <td id="LC8325" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (idx <span class="pl-k">!==</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) $http.pendingRequests.<span class="pl-c1">splice</span>(idx, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L8326" class="blob-num js-line-number" data-line-number="8326"></td>
        <td id="LC8326" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8327" class="blob-num js-line-number" data-line-number="8327"></td>
        <td id="LC8327" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8328" class="blob-num js-line-number" data-line-number="8328"></td>
        <td id="LC8328" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8329" class="blob-num js-line-number" data-line-number="8329"></td>
        <td id="LC8329" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8330" class="blob-num js-line-number" data-line-number="8330"></td>
        <td id="LC8330" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">buildUrl</span>(<span class="pl-smi">url</span>, <span class="pl-smi">params</span>) {</td>
      </tr>
      <tr>
        <td id="L8331" class="blob-num js-line-number" data-line-number="8331"></td>
        <td id="LC8331" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>params) <span class="pl-k">return</span> url;</td>
      </tr>
      <tr>
        <td id="L8332" class="blob-num js-line-number" data-line-number="8332"></td>
        <td id="LC8332" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> parts <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8333" class="blob-num js-line-number" data-line-number="8333"></td>
        <td id="LC8333" class="blob-code blob-code-inner js-file-line">          forEachSorted(params, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L8334" class="blob-num js-line-number" data-line-number="8334"></td>
        <td id="LC8334" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (value <span class="pl-k">==</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> value <span class="pl-k">==</span> <span class="pl-c1">undefined</span>) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L8335" class="blob-num js-line-number" data-line-number="8335"></td>
        <td id="LC8335" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isObject(value)) {</td>
      </tr>
      <tr>
        <td id="L8336" class="blob-num js-line-number" data-line-number="8336"></td>
        <td id="LC8336" class="blob-code blob-code-inner js-file-line">              value <span class="pl-k">=</span> toJson(value);</td>
      </tr>
      <tr>
        <td id="L8337" class="blob-num js-line-number" data-line-number="8337"></td>
        <td id="LC8337" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L8338" class="blob-num js-line-number" data-line-number="8338"></td>
        <td id="LC8338" class="blob-code blob-code-inner js-file-line">            parts.<span class="pl-c1">push</span>(encodeURIComponent(key) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>=<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> encodeURIComponent(value));</td>
      </tr>
      <tr>
        <td id="L8339" class="blob-num js-line-number" data-line-number="8339"></td>
        <td id="LC8339" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L8340" class="blob-num js-line-number" data-line-number="8340"></td>
        <td id="LC8340" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> url <span class="pl-k">+</span> ((url.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>) <span class="pl-k">==</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>) <span class="pl-k">+</span> parts.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>&amp;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8341" class="blob-num js-line-number" data-line-number="8341"></td>
        <td id="LC8341" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8342" class="blob-num js-line-number" data-line-number="8342"></td>
        <td id="LC8342" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8343" class="blob-num js-line-number" data-line-number="8343"></td>
        <td id="LC8343" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8344" class="blob-num js-line-number" data-line-number="8344"></td>
        <td id="LC8344" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L8345" class="blob-num js-line-number" data-line-number="8345"></td>
        <td id="LC8345" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8346" class="blob-num js-line-number" data-line-number="8346"></td>
        <td id="LC8346" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">XHR</span> <span class="pl-k">=</span> <span class="pl-c1">window</span>.<span class="pl-c1">XMLHttpRequest</span> <span class="pl-k">||</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8347" class="blob-num js-line-number" data-line-number="8347"></td>
        <td id="LC8347" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">try</span> { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ActiveXObject</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Msxml2.XMLHTTP.6.0<span class="pl-pds">&quot;</span></span>); } <span class="pl-k">catch</span> (e1) {}</td>
      </tr>
      <tr>
        <td id="L8348" class="blob-num js-line-number" data-line-number="8348"></td>
        <td id="LC8348" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">try</span> { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ActiveXObject</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Msxml2.XMLHTTP.3.0<span class="pl-pds">&quot;</span></span>); } <span class="pl-k">catch</span> (e2) {}</td>
      </tr>
      <tr>
        <td id="L8349" class="blob-num js-line-number" data-line-number="8349"></td>
        <td id="LC8349" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">try</span> { <span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">ActiveXObject</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Msxml2.XMLHTTP<span class="pl-pds">&quot;</span></span>); } <span class="pl-k">catch</span> (e3) {}</td>
      </tr>
      <tr>
        <td id="L8350" class="blob-num js-line-number" data-line-number="8350"></td>
        <td id="LC8350" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>This browser does not support XMLHttpRequest.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8351" class="blob-num js-line-number" data-line-number="8351"></td>
        <td id="LC8351" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L8352" class="blob-num js-line-number" data-line-number="8352"></td>
        <td id="LC8352" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8353" class="blob-num js-line-number" data-line-number="8353"></td>
        <td id="LC8353" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8354" class="blob-num js-line-number" data-line-number="8354"></td>
        <td id="LC8354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8355" class="blob-num js-line-number" data-line-number="8355"></td>
        <td id="LC8355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L8356" class="blob-num js-line-number" data-line-number="8356"></td>
        <td id="LC8356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$httpBackend</span></td>
      </tr>
      <tr>
        <td id="L8357" class="blob-num js-line-number" data-line-number="8357"></td>
        <td id="LC8357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $browser</span></td>
      </tr>
      <tr>
        <td id="L8358" class="blob-num js-line-number" data-line-number="8358"></td>
        <td id="LC8358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $window</span></td>
      </tr>
      <tr>
        <td id="L8359" class="blob-num js-line-number" data-line-number="8359"></td>
        <td id="LC8359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@requires</span> $document</span></td>
      </tr>
      <tr>
        <td id="L8360" class="blob-num js-line-number" data-line-number="8360"></td>
        <td id="LC8360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8361" class="blob-num js-line-number" data-line-number="8361"></td>
        <td id="LC8361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8362" class="blob-num js-line-number" data-line-number="8362"></td>
        <td id="LC8362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * HTTP backend used by the {@link angular.module.ng.$http service} that delegates to</span></td>
      </tr>
      <tr>
        <td id="L8363" class="blob-num js-line-number" data-line-number="8363"></td>
        <td id="LC8363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * XMLHttpRequest object or JSONP and deals with browser incompatibilities.</span></td>
      </tr>
      <tr>
        <td id="L8364" class="blob-num js-line-number" data-line-number="8364"></td>
        <td id="LC8364" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8365" class="blob-num js-line-number" data-line-number="8365"></td>
        <td id="LC8365" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * You should never need to use this service directly, instead use the higher-level abstractions:</span></td>
      </tr>
      <tr>
        <td id="L8366" class="blob-num js-line-number" data-line-number="8366"></td>
        <td id="LC8366" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$http $http} or {@link angular.module.ngResource.$resource $resource}.</span></td>
      </tr>
      <tr>
        <td id="L8367" class="blob-num js-line-number" data-line-number="8367"></td>
        <td id="LC8367" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8368" class="blob-num js-line-number" data-line-number="8368"></td>
        <td id="LC8368" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * During testing this implementation is swapped with {@link angular.module.ngMock.$httpBackend mock</span></td>
      </tr>
      <tr>
        <td id="L8369" class="blob-num js-line-number" data-line-number="8369"></td>
        <td id="LC8369" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * $httpBackend} which can be trained with responses.</span></td>
      </tr>
      <tr>
        <td id="L8370" class="blob-num js-line-number" data-line-number="8370"></td>
        <td id="LC8370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8371" class="blob-num js-line-number" data-line-number="8371"></td>
        <td id="LC8371" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$HttpBackendProvider</span>() {</td>
      </tr>
      <tr>
        <td id="L8372" class="blob-num js-line-number" data-line-number="8372"></td>
        <td id="LC8372" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$browser<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$window<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$document<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$browser</span>, <span class="pl-smi">$window</span>, <span class="pl-smi">$document</span>) {</td>
      </tr>
      <tr>
        <td id="L8373" class="blob-num js-line-number" data-line-number="8373"></td>
        <td id="LC8373" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> createHttpBackend($browser, <span class="pl-c1">XHR</span>, $browser.<span class="pl-c1">defer</span>, $window.angular.callbacks,</td>
      </tr>
      <tr>
        <td id="L8374" class="blob-num js-line-number" data-line-number="8374"></td>
        <td id="LC8374" class="blob-code blob-code-inner js-file-line">        $document[<span class="pl-c1">0</span>], $window.<span class="pl-c1">location</span>.<span class="pl-c1">protocol</span>.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>:<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L8375" class="blob-num js-line-number" data-line-number="8375"></td>
        <td id="LC8375" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L8376" class="blob-num js-line-number" data-line-number="8376"></td>
        <td id="LC8376" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8377" class="blob-num js-line-number" data-line-number="8377"></td>
        <td id="LC8377" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8378" class="blob-num js-line-number" data-line-number="8378"></td>
        <td id="LC8378" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">createHttpBackend</span>(<span class="pl-smi">$browser</span>, <span class="pl-smi">XHR</span>, <span class="pl-smi">$browserDefer</span>, <span class="pl-smi">callbacks</span>, <span class="pl-smi">rawDocument</span>, <span class="pl-smi">locationProtocol</span>) {</td>
      </tr>
      <tr>
        <td id="L8379" class="blob-num js-line-number" data-line-number="8379"></td>
        <td id="LC8379" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// TODO(vojta): fix the signature</span></td>
      </tr>
      <tr>
        <td id="L8380" class="blob-num js-line-number" data-line-number="8380"></td>
        <td id="LC8380" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">method</span>, <span class="pl-smi">url</span>, <span class="pl-smi">post</span>, <span class="pl-smi">callback</span>, <span class="pl-smi">headers</span>, <span class="pl-smi">timeout</span>, <span class="pl-smi">withCredentials</span>) {</td>
      </tr>
      <tr>
        <td id="L8381" class="blob-num js-line-number" data-line-number="8381"></td>
        <td id="LC8381" class="blob-code blob-code-inner js-file-line">    $browser.$$incOutstandingRequestCount();</td>
      </tr>
      <tr>
        <td id="L8382" class="blob-num js-line-number" data-line-number="8382"></td>
        <td id="LC8382" class="blob-code blob-code-inner js-file-line">    url <span class="pl-k">=</span> url <span class="pl-k">||</span> $browser.url();</td>
      </tr>
      <tr>
        <td id="L8383" class="blob-num js-line-number" data-line-number="8383"></td>
        <td id="LC8383" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8384" class="blob-num js-line-number" data-line-number="8384"></td>
        <td id="LC8384" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (lowercase(method) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>jsonp<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8385" class="blob-num js-line-number" data-line-number="8385"></td>
        <td id="LC8385" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> callbackId <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>_<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> (callbacks.counter<span class="pl-k">++</span>).<span class="pl-c1">toString</span>(<span class="pl-c1">36</span>);</td>
      </tr>
      <tr>
        <td id="L8386" class="blob-num js-line-number" data-line-number="8386"></td>
        <td id="LC8386" class="blob-code blob-code-inner js-file-line">      callbacks[callbackId] <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">data</span>) {</td>
      </tr>
      <tr>
        <td id="L8387" class="blob-num js-line-number" data-line-number="8387"></td>
        <td id="LC8387" class="blob-code blob-code-inner js-file-line">        callbacks[callbackId].<span class="pl-c1">data</span> <span class="pl-k">=</span> data;</td>
      </tr>
      <tr>
        <td id="L8388" class="blob-num js-line-number" data-line-number="8388"></td>
        <td id="LC8388" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8389" class="blob-num js-line-number" data-line-number="8389"></td>
        <td id="LC8389" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8390" class="blob-num js-line-number" data-line-number="8390"></td>
        <td id="LC8390" class="blob-code blob-code-inner js-file-line">      jsonpReq(url.<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>JSON_CALLBACK<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>angular.callbacks.<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> callbackId),</td>
      </tr>
      <tr>
        <td id="L8391" class="blob-num js-line-number" data-line-number="8391"></td>
        <td id="LC8391" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8392" class="blob-num js-line-number" data-line-number="8392"></td>
        <td id="LC8392" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (callbacks[callbackId].<span class="pl-c1">data</span>) {</td>
      </tr>
      <tr>
        <td id="L8393" class="blob-num js-line-number" data-line-number="8393"></td>
        <td id="LC8393" class="blob-code blob-code-inner js-file-line">          completeRequest(callback, <span class="pl-c1">200</span>, callbacks[callbackId].<span class="pl-c1">data</span>);</td>
      </tr>
      <tr>
        <td id="L8394" class="blob-num js-line-number" data-line-number="8394"></td>
        <td id="LC8394" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8395" class="blob-num js-line-number" data-line-number="8395"></td>
        <td id="LC8395" class="blob-code blob-code-inner js-file-line">          completeRequest(callback, <span class="pl-k">-</span><span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L8396" class="blob-num js-line-number" data-line-number="8396"></td>
        <td id="LC8396" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8397" class="blob-num js-line-number" data-line-number="8397"></td>
        <td id="LC8397" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">delete</span> callbacks[callbackId];</td>
      </tr>
      <tr>
        <td id="L8398" class="blob-num js-line-number" data-line-number="8398"></td>
        <td id="LC8398" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8399" class="blob-num js-line-number" data-line-number="8399"></td>
        <td id="LC8399" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8400" class="blob-num js-line-number" data-line-number="8400"></td>
        <td id="LC8400" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> xhr <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">XHR</span>();</td>
      </tr>
      <tr>
        <td id="L8401" class="blob-num js-line-number" data-line-number="8401"></td>
        <td id="LC8401" class="blob-code blob-code-inner js-file-line">      xhr.<span class="pl-c1">open</span>(method, url, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L8402" class="blob-num js-line-number" data-line-number="8402"></td>
        <td id="LC8402" class="blob-code blob-code-inner js-file-line">      forEach(headers, <span class="pl-k">function</span>(<span class="pl-smi">value</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L8403" class="blob-num js-line-number" data-line-number="8403"></td>
        <td id="LC8403" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (value) xhr.<span class="pl-c1">setRequestHeader</span>(key, value);</td>
      </tr>
      <tr>
        <td id="L8404" class="blob-num js-line-number" data-line-number="8404"></td>
        <td id="LC8404" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L8405" class="blob-num js-line-number" data-line-number="8405"></td>
        <td id="LC8405" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8406" class="blob-num js-line-number" data-line-number="8406"></td>
        <td id="LC8406" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> status;</td>
      </tr>
      <tr>
        <td id="L8407" class="blob-num js-line-number" data-line-number="8407"></td>
        <td id="LC8407" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8408" class="blob-num js-line-number" data-line-number="8408"></td>
        <td id="LC8408" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// In IE6 and 7, this might be called synchronously when xhr.send below is called and the</span></td>
      </tr>
      <tr>
        <td id="L8409" class="blob-num js-line-number" data-line-number="8409"></td>
        <td id="LC8409" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// response is in the cache. the promise api will ensure that to the app code the api is</span></td>
      </tr>
      <tr>
        <td id="L8410" class="blob-num js-line-number" data-line-number="8410"></td>
        <td id="LC8410" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// always async</span></td>
      </tr>
      <tr>
        <td id="L8411" class="blob-num js-line-number" data-line-number="8411"></td>
        <td id="LC8411" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">xhr</span>.<span class="pl-en">onreadystatechange</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8412" class="blob-num js-line-number" data-line-number="8412"></td>
        <td id="LC8412" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (xhr.<span class="pl-c1">readyState</span> <span class="pl-k">==</span> <span class="pl-c1">4</span>) {</td>
      </tr>
      <tr>
        <td id="L8413" class="blob-num js-line-number" data-line-number="8413"></td>
        <td id="LC8413" class="blob-code blob-code-inner js-file-line">          completeRequest(</td>
      </tr>
      <tr>
        <td id="L8414" class="blob-num js-line-number" data-line-number="8414"></td>
        <td id="LC8414" class="blob-code blob-code-inner js-file-line">              callback, status <span class="pl-k">||</span> xhr.<span class="pl-c1">status</span>, xhr.responseText, xhr.<span class="pl-c1">getAllResponseHeaders</span>());</td>
      </tr>
      <tr>
        <td id="L8415" class="blob-num js-line-number" data-line-number="8415"></td>
        <td id="LC8415" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8416" class="blob-num js-line-number" data-line-number="8416"></td>
        <td id="LC8416" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8417" class="blob-num js-line-number" data-line-number="8417"></td>
        <td id="LC8417" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8418" class="blob-num js-line-number" data-line-number="8418"></td>
        <td id="LC8418" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (withCredentials) {</td>
      </tr>
      <tr>
        <td id="L8419" class="blob-num js-line-number" data-line-number="8419"></td>
        <td id="LC8419" class="blob-code blob-code-inner js-file-line">        xhr.withCredentials <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L8420" class="blob-num js-line-number" data-line-number="8420"></td>
        <td id="LC8420" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8421" class="blob-num js-line-number" data-line-number="8421"></td>
        <td id="LC8421" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8422" class="blob-num js-line-number" data-line-number="8422"></td>
        <td id="LC8422" class="blob-code blob-code-inner js-file-line">      xhr.<span class="pl-c1">send</span>(post <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8423" class="blob-num js-line-number" data-line-number="8423"></td>
        <td id="LC8423" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8424" class="blob-num js-line-number" data-line-number="8424"></td>
        <td id="LC8424" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (timeout <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L8425" class="blob-num js-line-number" data-line-number="8425"></td>
        <td id="LC8425" class="blob-code blob-code-inner js-file-line">        $browserDefer(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8426" class="blob-num js-line-number" data-line-number="8426"></td>
        <td id="LC8426" class="blob-code blob-code-inner js-file-line">          status <span class="pl-k">=</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8427" class="blob-num js-line-number" data-line-number="8427"></td>
        <td id="LC8427" class="blob-code blob-code-inner js-file-line">          xhr.<span class="pl-c1">abort</span>();</td>
      </tr>
      <tr>
        <td id="L8428" class="blob-num js-line-number" data-line-number="8428"></td>
        <td id="LC8428" class="blob-code blob-code-inner js-file-line">        }, timeout);</td>
      </tr>
      <tr>
        <td id="L8429" class="blob-num js-line-number" data-line-number="8429"></td>
        <td id="LC8429" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8430" class="blob-num js-line-number" data-line-number="8430"></td>
        <td id="LC8430" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8431" class="blob-num js-line-number" data-line-number="8431"></td>
        <td id="LC8431" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8432" class="blob-num js-line-number" data-line-number="8432"></td>
        <td id="LC8432" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8433" class="blob-num js-line-number" data-line-number="8433"></td>
        <td id="LC8433" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">completeRequest</span>(<span class="pl-smi">callback</span>, <span class="pl-smi">status</span>, <span class="pl-smi">response</span>, <span class="pl-smi">headersString</span>) {</td>
      </tr>
      <tr>
        <td id="L8434" class="blob-num js-line-number" data-line-number="8434"></td>
        <td id="LC8434" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// URL_MATCH is defined in src/service/location.js</span></td>
      </tr>
      <tr>
        <td id="L8435" class="blob-num js-line-number" data-line-number="8435"></td>
        <td id="LC8435" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> protocol <span class="pl-k">=</span> (url.<span class="pl-c1">match</span>(<span class="pl-c1">URL_MATCH</span>) <span class="pl-k">||</span> [<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, locationProtocol])[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L8436" class="blob-num js-line-number" data-line-number="8436"></td>
        <td id="LC8436" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8437" class="blob-num js-line-number" data-line-number="8437"></td>
        <td id="LC8437" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// fix status code for file protocol (it&#39;s always 0)</span></td>
      </tr>
      <tr>
        <td id="L8438" class="blob-num js-line-number" data-line-number="8438"></td>
        <td id="LC8438" class="blob-code blob-code-inner js-file-line">      status <span class="pl-k">=</span> (protocol <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>file<span class="pl-pds">&#39;</span></span>) <span class="pl-k">?</span> (response <span class="pl-k">?</span> <span class="pl-c1">200</span> <span class="pl-k">:</span> <span class="pl-c1">404</span>) <span class="pl-k">:</span> status;</td>
      </tr>
      <tr>
        <td id="L8439" class="blob-num js-line-number" data-line-number="8439"></td>
        <td id="LC8439" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8440" class="blob-num js-line-number" data-line-number="8440"></td>
        <td id="LC8440" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// normalize IE bug (http://bugs.jquery.com/ticket/1450)</span></td>
      </tr>
      <tr>
        <td id="L8441" class="blob-num js-line-number" data-line-number="8441"></td>
        <td id="LC8441" class="blob-code blob-code-inner js-file-line">      status <span class="pl-k">=</span> status <span class="pl-k">==</span> <span class="pl-c1">1223</span> <span class="pl-k">?</span> <span class="pl-c1">204</span> <span class="pl-k">:</span> status;</td>
      </tr>
      <tr>
        <td id="L8442" class="blob-num js-line-number" data-line-number="8442"></td>
        <td id="LC8442" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8443" class="blob-num js-line-number" data-line-number="8443"></td>
        <td id="LC8443" class="blob-code blob-code-inner js-file-line">      callback(status, response, headersString);</td>
      </tr>
      <tr>
        <td id="L8444" class="blob-num js-line-number" data-line-number="8444"></td>
        <td id="LC8444" class="blob-code blob-code-inner js-file-line">      $browser.$$completeOutstandingRequest(noop);</td>
      </tr>
      <tr>
        <td id="L8445" class="blob-num js-line-number" data-line-number="8445"></td>
        <td id="LC8445" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8446" class="blob-num js-line-number" data-line-number="8446"></td>
        <td id="LC8446" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8447" class="blob-num js-line-number" data-line-number="8447"></td>
        <td id="LC8447" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8448" class="blob-num js-line-number" data-line-number="8448"></td>
        <td id="LC8448" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">jsonpReq</span>(<span class="pl-smi">url</span>, <span class="pl-smi">done</span>) {</td>
      </tr>
      <tr>
        <td id="L8449" class="blob-num js-line-number" data-line-number="8449"></td>
        <td id="LC8449" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// we can&#39;t use jQuery/jqLite here because jQuery does crazy shit with script elements, e.g.:</span></td>
      </tr>
      <tr>
        <td id="L8450" class="blob-num js-line-number" data-line-number="8450"></td>
        <td id="LC8450" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// - fetches local scripts via XHR and evals them</span></td>
      </tr>
      <tr>
        <td id="L8451" class="blob-num js-line-number" data-line-number="8451"></td>
        <td id="LC8451" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// - adds and immediately removes script elements from the document</span></td>
      </tr>
      <tr>
        <td id="L8452" class="blob-num js-line-number" data-line-number="8452"></td>
        <td id="LC8452" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> script <span class="pl-k">=</span> rawDocument.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>script<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L8453" class="blob-num js-line-number" data-line-number="8453"></td>
        <td id="LC8453" class="blob-code blob-code-inner js-file-line">        <span class="pl-en">doneWrapper</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8454" class="blob-num js-line-number" data-line-number="8454"></td>
        <td id="LC8454" class="blob-code blob-code-inner js-file-line">          rawDocument.<span class="pl-c1">body</span>.removeChild(script);</td>
      </tr>
      <tr>
        <td id="L8455" class="blob-num js-line-number" data-line-number="8455"></td>
        <td id="LC8455" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (done) done();</td>
      </tr>
      <tr>
        <td id="L8456" class="blob-num js-line-number" data-line-number="8456"></td>
        <td id="LC8456" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L8457" class="blob-num js-line-number" data-line-number="8457"></td>
        <td id="LC8457" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8458" class="blob-num js-line-number" data-line-number="8458"></td>
        <td id="LC8458" class="blob-code blob-code-inner js-file-line">    script.<span class="pl-c1">type</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>text/javascript<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8459" class="blob-num js-line-number" data-line-number="8459"></td>
        <td id="LC8459" class="blob-code blob-code-inner js-file-line">    script.src <span class="pl-k">=</span> url;</td>
      </tr>
      <tr>
        <td id="L8460" class="blob-num js-line-number" data-line-number="8460"></td>
        <td id="LC8460" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8461" class="blob-num js-line-number" data-line-number="8461"></td>
        <td id="LC8461" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (msie) {</td>
      </tr>
      <tr>
        <td id="L8462" class="blob-num js-line-number" data-line-number="8462"></td>
        <td id="LC8462" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">script</span>.<span class="pl-en">onreadystatechange</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8463" class="blob-num js-line-number" data-line-number="8463"></td>
        <td id="LC8463" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-sr"><span class="pl-pds">/</span>loaded<span class="pl-k">|</span>complete<span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(script.<span class="pl-c1">readyState</span>)) doneWrapper();</td>
      </tr>
      <tr>
        <td id="L8464" class="blob-num js-line-number" data-line-number="8464"></td>
        <td id="LC8464" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L8465" class="blob-num js-line-number" data-line-number="8465"></td>
        <td id="LC8465" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8466" class="blob-num js-line-number" data-line-number="8466"></td>
        <td id="LC8466" class="blob-code blob-code-inner js-file-line">      script.onload <span class="pl-k">=</span> script.onerror <span class="pl-k">=</span> doneWrapper;</td>
      </tr>
      <tr>
        <td id="L8467" class="blob-num js-line-number" data-line-number="8467"></td>
        <td id="LC8467" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8468" class="blob-num js-line-number" data-line-number="8468"></td>
        <td id="LC8468" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8469" class="blob-num js-line-number" data-line-number="8469"></td>
        <td id="LC8469" class="blob-code blob-code-inner js-file-line">    rawDocument.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(script);</td>
      </tr>
      <tr>
        <td id="L8470" class="blob-num js-line-number" data-line-number="8470"></td>
        <td id="LC8470" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8471" class="blob-num js-line-number" data-line-number="8471"></td>
        <td id="LC8471" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8472" class="blob-num js-line-number" data-line-number="8472"></td>
        <td id="LC8472" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8473" class="blob-num js-line-number" data-line-number="8473"></td>
        <td id="LC8473" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8474" class="blob-num js-line-number" data-line-number="8474"></td>
        <td id="LC8474" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L8475" class="blob-num js-line-number" data-line-number="8475"></td>
        <td id="LC8475" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$locale</span></td>
      </tr>
      <tr>
        <td id="L8476" class="blob-num js-line-number" data-line-number="8476"></td>
        <td id="LC8476" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8477" class="blob-num js-line-number" data-line-number="8477"></td>
        <td id="LC8477" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8478" class="blob-num js-line-number" data-line-number="8478"></td>
        <td id="LC8478" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * $locale service provides localization rules for various Angular components. As of right now the</span></td>
      </tr>
      <tr>
        <td id="L8479" class="blob-num js-line-number" data-line-number="8479"></td>
        <td id="LC8479" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * only public api is:</span></td>
      </tr>
      <tr>
        <td id="L8480" class="blob-num js-line-number" data-line-number="8480"></td>
        <td id="LC8480" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8481" class="blob-num js-line-number" data-line-number="8481"></td>
        <td id="LC8481" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * `id` â `{string}` â locale id formatted as `languageId-countryId` (e.g. `en-us`)</span></td>
      </tr>
      <tr>
        <td id="L8482" class="blob-num js-line-number" data-line-number="8482"></td>
        <td id="LC8482" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8483" class="blob-num js-line-number" data-line-number="8483"></td>
        <td id="LC8483" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$LocaleProvider</span>(){</td>
      </tr>
      <tr>
        <td id="L8484" class="blob-num js-line-number" data-line-number="8484"></td>
        <td id="LC8484" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$get</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8485" class="blob-num js-line-number" data-line-number="8485"></td>
        <td id="LC8485" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L8486" class="blob-num js-line-number" data-line-number="8486"></td>
        <td id="LC8486" class="blob-code blob-code-inner js-file-line">      id<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>en-us<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8487" class="blob-num js-line-number" data-line-number="8487"></td>
        <td id="LC8487" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8488" class="blob-num js-line-number" data-line-number="8488"></td>
        <td id="LC8488" class="blob-code blob-code-inner js-file-line">      NUMBER_FORMATS<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L8489" class="blob-num js-line-number" data-line-number="8489"></td>
        <td id="LC8489" class="blob-code blob-code-inner js-file-line">        DECIMAL_SEP<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8490" class="blob-num js-line-number" data-line-number="8490"></td>
        <td id="LC8490" class="blob-code blob-code-inner js-file-line">        GROUP_SEP<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8491" class="blob-num js-line-number" data-line-number="8491"></td>
        <td id="LC8491" class="blob-code blob-code-inner js-file-line">        PATTERNS<span class="pl-k">:</span> [</td>
      </tr>
      <tr>
        <td id="L8492" class="blob-num js-line-number" data-line-number="8492"></td>
        <td id="LC8492" class="blob-code blob-code-inner js-file-line">          { <span class="pl-c">// Decimal Pattern</span></td>
      </tr>
      <tr>
        <td id="L8493" class="blob-num js-line-number" data-line-number="8493"></td>
        <td id="LC8493" class="blob-code blob-code-inner js-file-line">            minInt<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L8494" class="blob-num js-line-number" data-line-number="8494"></td>
        <td id="LC8494" class="blob-code blob-code-inner js-file-line">            minFrac<span class="pl-k">:</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L8495" class="blob-num js-line-number" data-line-number="8495"></td>
        <td id="LC8495" class="blob-code blob-code-inner js-file-line">            maxFrac<span class="pl-k">:</span> <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L8496" class="blob-num js-line-number" data-line-number="8496"></td>
        <td id="LC8496" class="blob-code blob-code-inner js-file-line">            posPre<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8497" class="blob-num js-line-number" data-line-number="8497"></td>
        <td id="LC8497" class="blob-code blob-code-inner js-file-line">            posSuf<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8498" class="blob-num js-line-number" data-line-number="8498"></td>
        <td id="LC8498" class="blob-code blob-code-inner js-file-line">            negPre<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8499" class="blob-num js-line-number" data-line-number="8499"></td>
        <td id="LC8499" class="blob-code blob-code-inner js-file-line">            negSuf<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8500" class="blob-num js-line-number" data-line-number="8500"></td>
        <td id="LC8500" class="blob-code blob-code-inner js-file-line">            gSize<span class="pl-k">:</span> <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L8501" class="blob-num js-line-number" data-line-number="8501"></td>
        <td id="LC8501" class="blob-code blob-code-inner js-file-line">            lgSize<span class="pl-k">:</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L8502" class="blob-num js-line-number" data-line-number="8502"></td>
        <td id="LC8502" class="blob-code blob-code-inner js-file-line">          },{ <span class="pl-c">//Currency Pattern</span></td>
      </tr>
      <tr>
        <td id="L8503" class="blob-num js-line-number" data-line-number="8503"></td>
        <td id="LC8503" class="blob-code blob-code-inner js-file-line">            minInt<span class="pl-k">:</span> <span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L8504" class="blob-num js-line-number" data-line-number="8504"></td>
        <td id="LC8504" class="blob-code blob-code-inner js-file-line">            minFrac<span class="pl-k">:</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L8505" class="blob-num js-line-number" data-line-number="8505"></td>
        <td id="LC8505" class="blob-code blob-code-inner js-file-line">            maxFrac<span class="pl-k">:</span> <span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L8506" class="blob-num js-line-number" data-line-number="8506"></td>
        <td id="LC8506" class="blob-code blob-code-inner js-file-line">            posPre<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\u</span>00A4<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8507" class="blob-num js-line-number" data-line-number="8507"></td>
        <td id="LC8507" class="blob-code blob-code-inner js-file-line">            posSuf<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8508" class="blob-num js-line-number" data-line-number="8508"></td>
        <td id="LC8508" class="blob-code blob-code-inner js-file-line">            negPre<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>(<span class="pl-cce">\u</span>00A4<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8509" class="blob-num js-line-number" data-line-number="8509"></td>
        <td id="LC8509" class="blob-code blob-code-inner js-file-line">            negSuf<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>)<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8510" class="blob-num js-line-number" data-line-number="8510"></td>
        <td id="LC8510" class="blob-code blob-code-inner js-file-line">            gSize<span class="pl-k">:</span> <span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L8511" class="blob-num js-line-number" data-line-number="8511"></td>
        <td id="LC8511" class="blob-code blob-code-inner js-file-line">            lgSize<span class="pl-k">:</span> <span class="pl-c1">3</span></td>
      </tr>
      <tr>
        <td id="L8512" class="blob-num js-line-number" data-line-number="8512"></td>
        <td id="LC8512" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8513" class="blob-num js-line-number" data-line-number="8513"></td>
        <td id="LC8513" class="blob-code blob-code-inner js-file-line">        ],</td>
      </tr>
      <tr>
        <td id="L8514" class="blob-num js-line-number" data-line-number="8514"></td>
        <td id="LC8514" class="blob-code blob-code-inner js-file-line">        CURRENCY_SYM<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L8515" class="blob-num js-line-number" data-line-number="8515"></td>
        <td id="LC8515" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L8516" class="blob-num js-line-number" data-line-number="8516"></td>
        <td id="LC8516" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8517" class="blob-num js-line-number" data-line-number="8517"></td>
        <td id="LC8517" class="blob-code blob-code-inner js-file-line">      DATETIME_FORMATS<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L8518" class="blob-num js-line-number" data-line-number="8518"></td>
        <td id="LC8518" class="blob-code blob-code-inner js-file-line">        MONTH<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>January,February,March,April,May,June,July,August,September,October,November,December<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L8519" class="blob-num js-line-number" data-line-number="8519"></td>
        <td id="LC8519" class="blob-code blob-code-inner js-file-line">                .<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L8520" class="blob-num js-line-number" data-line-number="8520"></td>
        <td id="LC8520" class="blob-code blob-code-inner js-file-line">        SHORTMONTH<span class="pl-k">:</span>  <span class="pl-s"><span class="pl-pds">&#39;</span>Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L8521" class="blob-num js-line-number" data-line-number="8521"></td>
        <td id="LC8521" class="blob-code blob-code-inner js-file-line">        DAY<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L8522" class="blob-num js-line-number" data-line-number="8522"></td>
        <td id="LC8522" class="blob-code blob-code-inner js-file-line">        SHORTDAY<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Sun,Mon,Tue,Wed,Thu,Fri,Sat<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L8523" class="blob-num js-line-number" data-line-number="8523"></td>
        <td id="LC8523" class="blob-code blob-code-inner js-file-line">        AMPMS<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>AM<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span>PM<span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L8524" class="blob-num js-line-number" data-line-number="8524"></td>
        <td id="LC8524" class="blob-code blob-code-inner js-file-line">        medium<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>MMM d, y h:mm:ss a<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8525" class="blob-num js-line-number" data-line-number="8525"></td>
        <td id="LC8525" class="blob-code blob-code-inner js-file-line">        short<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>M/d/yy h:mm a<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8526" class="blob-num js-line-number" data-line-number="8526"></td>
        <td id="LC8526" class="blob-code blob-code-inner js-file-line">        fullDate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>EEEE, MMMM d, y<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8527" class="blob-num js-line-number" data-line-number="8527"></td>
        <td id="LC8527" class="blob-code blob-code-inner js-file-line">        longDate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>MMMM d, y<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8528" class="blob-num js-line-number" data-line-number="8528"></td>
        <td id="LC8528" class="blob-code blob-code-inner js-file-line">        mediumDate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>MMM d, y<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8529" class="blob-num js-line-number" data-line-number="8529"></td>
        <td id="LC8529" class="blob-code blob-code-inner js-file-line">        shortDate<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>M/d/yy<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8530" class="blob-num js-line-number" data-line-number="8530"></td>
        <td id="LC8530" class="blob-code blob-code-inner js-file-line">        mediumTime<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>h:mm:ss a<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8531" class="blob-num js-line-number" data-line-number="8531"></td>
        <td id="LC8531" class="blob-code blob-code-inner js-file-line">        shortTime<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>h:mm a<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L8532" class="blob-num js-line-number" data-line-number="8532"></td>
        <td id="LC8532" class="blob-code blob-code-inner js-file-line">      },</td>
      </tr>
      <tr>
        <td id="L8533" class="blob-num js-line-number" data-line-number="8533"></td>
        <td id="LC8533" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8534" class="blob-num js-line-number" data-line-number="8534"></td>
        <td id="LC8534" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">pluralCat</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">num</span>) {</td>
      </tr>
      <tr>
        <td id="L8535" class="blob-num js-line-number" data-line-number="8535"></td>
        <td id="LC8535" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (num <span class="pl-k">===</span> <span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L8536" class="blob-num js-line-number" data-line-number="8536"></td>
        <td id="LC8536" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>one<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8537" class="blob-num js-line-number" data-line-number="8537"></td>
        <td id="LC8537" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8538" class="blob-num js-line-number" data-line-number="8538"></td>
        <td id="LC8538" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span>other<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8539" class="blob-num js-line-number" data-line-number="8539"></td>
        <td id="LC8539" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8540" class="blob-num js-line-number" data-line-number="8540"></td>
        <td id="LC8540" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8541" class="blob-num js-line-number" data-line-number="8541"></td>
        <td id="LC8541" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8542" class="blob-num js-line-number" data-line-number="8542"></td>
        <td id="LC8542" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8543" class="blob-num js-line-number" data-line-number="8543"></td>
        <td id="LC8543" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8544" class="blob-num js-line-number" data-line-number="8544"></td>
        <td id="LC8544" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8545" class="blob-num js-line-number" data-line-number="8545"></td>
        <td id="LC8545" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L8546" class="blob-num js-line-number" data-line-number="8546"></td>
        <td id="LC8546" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filterProvider</span></td>
      </tr>
      <tr>
        <td id="L8547" class="blob-num js-line-number" data-line-number="8547"></td>
        <td id="LC8547" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8548" class="blob-num js-line-number" data-line-number="8548"></td>
        <td id="LC8548" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8549" class="blob-num js-line-number" data-line-number="8549"></td>
        <td id="LC8549" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To</span></td>
      </tr>
      <tr>
        <td id="L8550" class="blob-num js-line-number" data-line-number="8550"></td>
        <td id="LC8550" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * achieve this a filter definition consists of a factory function which is annotated with dependencies and is</span></td>
      </tr>
      <tr>
        <td id="L8551" class="blob-num js-line-number" data-line-number="8551"></td>
        <td id="LC8551" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * responsible for creating a the filter function.</span></td>
      </tr>
      <tr>
        <td id="L8552" class="blob-num js-line-number" data-line-number="8552"></td>
        <td id="LC8552" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8553" class="blob-num js-line-number" data-line-number="8553"></td>
        <td id="LC8553" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8554" class="blob-num js-line-number" data-line-number="8554"></td>
        <td id="LC8554" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   // Filter registration</span></td>
      </tr>
      <tr>
        <td id="L8555" class="blob-num js-line-number" data-line-number="8555"></td>
        <td id="LC8555" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   function MyModule($provide, $filterProvider) {</span></td>
      </tr>
      <tr>
        <td id="L8556" class="blob-num js-line-number" data-line-number="8556"></td>
        <td id="LC8556" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     // create a service to demonstrate injection (not always needed)</span></td>
      </tr>
      <tr>
        <td id="L8557" class="blob-num js-line-number" data-line-number="8557"></td>
        <td id="LC8557" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     $provide.value(&#39;greet&#39;, function(name){</span></td>
      </tr>
      <tr>
        <td id="L8558" class="blob-num js-line-number" data-line-number="8558"></td>
        <td id="LC8558" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       return &#39;Hello &#39; + name + &#39;!&#39;:</span></td>
      </tr>
      <tr>
        <td id="L8559" class="blob-num js-line-number" data-line-number="8559"></td>
        <td id="LC8559" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L8560" class="blob-num js-line-number" data-line-number="8560"></td>
        <td id="LC8560" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8561" class="blob-num js-line-number" data-line-number="8561"></td>
        <td id="LC8561" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     // register a filter factory which uses the</span></td>
      </tr>
      <tr>
        <td id="L8562" class="blob-num js-line-number" data-line-number="8562"></td>
        <td id="LC8562" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     // greet service to demonstrate DI.</span></td>
      </tr>
      <tr>
        <td id="L8563" class="blob-num js-line-number" data-line-number="8563"></td>
        <td id="LC8563" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     $filterProvider.register(&#39;greet&#39;, function(greet){</span></td>
      </tr>
      <tr>
        <td id="L8564" class="blob-num js-line-number" data-line-number="8564"></td>
        <td id="LC8564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       // return the filter function which uses the greet service</span></td>
      </tr>
      <tr>
        <td id="L8565" class="blob-num js-line-number" data-line-number="8565"></td>
        <td id="LC8565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       // to generate salutation</span></td>
      </tr>
      <tr>
        <td id="L8566" class="blob-num js-line-number" data-line-number="8566"></td>
        <td id="LC8566" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       return function(text) {</span></td>
      </tr>
      <tr>
        <td id="L8567" class="blob-num js-line-number" data-line-number="8567"></td>
        <td id="LC8567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         // filters need to be forgiving so check input validity</span></td>
      </tr>
      <tr>
        <td id="L8568" class="blob-num js-line-number" data-line-number="8568"></td>
        <td id="LC8568" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         return text &amp;&amp; greet(text) || text;</span></td>
      </tr>
      <tr>
        <td id="L8569" class="blob-num js-line-number" data-line-number="8569"></td>
        <td id="LC8569" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       };</span></td>
      </tr>
      <tr>
        <td id="L8570" class="blob-num js-line-number" data-line-number="8570"></td>
        <td id="LC8570" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     };</span></td>
      </tr>
      <tr>
        <td id="L8571" class="blob-num js-line-number" data-line-number="8571"></td>
        <td id="LC8571" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   }</span></td>
      </tr>
      <tr>
        <td id="L8572" class="blob-num js-line-number" data-line-number="8572"></td>
        <td id="LC8572" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8573" class="blob-num js-line-number" data-line-number="8573"></td>
        <td id="LC8573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8574" class="blob-num js-line-number" data-line-number="8574"></td>
        <td id="LC8574" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The filter function is registered with the `$injector` under the filter name suffixe with `Filter`.</span></td>
      </tr>
      <tr>
        <td id="L8575" class="blob-num js-line-number" data-line-number="8575"></td>
        <td id="LC8575" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8576" class="blob-num js-line-number" data-line-number="8576"></td>
        <td id="LC8576" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   it(&#39;should be the same instance&#39;, inject(</span></td>
      </tr>
      <tr>
        <td id="L8577" class="blob-num js-line-number" data-line-number="8577"></td>
        <td id="LC8577" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     function($filterProvider) {</span></td>
      </tr>
      <tr>
        <td id="L8578" class="blob-num js-line-number" data-line-number="8578"></td>
        <td id="LC8578" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       $filterProvider.register(&#39;reverse&#39;, function(){</span></td>
      </tr>
      <tr>
        <td id="L8579" class="blob-num js-line-number" data-line-number="8579"></td>
        <td id="LC8579" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         return ...;</span></td>
      </tr>
      <tr>
        <td id="L8580" class="blob-num js-line-number" data-line-number="8580"></td>
        <td id="LC8580" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       });</span></td>
      </tr>
      <tr>
        <td id="L8581" class="blob-num js-line-number" data-line-number="8581"></td>
        <td id="LC8581" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     },</span></td>
      </tr>
      <tr>
        <td id="L8582" class="blob-num js-line-number" data-line-number="8582"></td>
        <td id="LC8582" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     function($filter, reverseFilter) {</span></td>
      </tr>
      <tr>
        <td id="L8583" class="blob-num js-line-number" data-line-number="8583"></td>
        <td id="LC8583" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect($filter(&#39;reverse&#39;)).toBe(reverseFilter);</span></td>
      </tr>
      <tr>
        <td id="L8584" class="blob-num js-line-number" data-line-number="8584"></td>
        <td id="LC8584" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L8585" class="blob-num js-line-number" data-line-number="8585"></td>
        <td id="LC8585" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L8586" class="blob-num js-line-number" data-line-number="8586"></td>
        <td id="LC8586" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8587" class="blob-num js-line-number" data-line-number="8587"></td>
        <td id="LC8587" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8588" class="blob-num js-line-number" data-line-number="8588"></td>
        <td id="LC8588" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For more information about how angular filters work, and how to create your own filters, see</span></td>
      </tr>
      <tr>
        <td id="L8589" class="blob-num js-line-number" data-line-number="8589"></td>
        <td id="LC8589" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer</span></td>
      </tr>
      <tr>
        <td id="L8590" class="blob-num js-line-number" data-line-number="8590"></td>
        <td id="LC8590" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Guide.</span></td>
      </tr>
      <tr>
        <td id="L8591" class="blob-num js-line-number" data-line-number="8591"></td>
        <td id="LC8591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8592" class="blob-num js-line-number" data-line-number="8592"></td>
        <td id="LC8592" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8593" class="blob-num js-line-number" data-line-number="8593"></td>
        <td id="LC8593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc method</span></td>
      </tr>
      <tr>
        <td id="L8594" class="blob-num js-line-number" data-line-number="8594"></td>
        <td id="LC8594" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filterProvider#register</span></td>
      </tr>
      <tr>
        <td id="L8595" class="blob-num js-line-number" data-line-number="8595"></td>
        <td id="LC8595" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @methodOf angular.module.ng.$filterProvider</span></td>
      </tr>
      <tr>
        <td id="L8596" class="blob-num js-line-number" data-line-number="8596"></td>
        <td id="LC8596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8597" class="blob-num js-line-number" data-line-number="8597"></td>
        <td id="LC8597" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Register filter factory function.</span></td>
      </tr>
      <tr>
        <td id="L8598" class="blob-num js-line-number" data-line-number="8598"></td>
        <td id="LC8598" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8599" class="blob-num js-line-number" data-line-number="8599"></td>
        <td id="LC8599" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {String} name Name of the filter.</span></td>
      </tr>
      <tr>
        <td id="L8600" class="blob-num js-line-number" data-line-number="8600"></td>
        <td id="LC8600" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function} fn The filter factory function which is injectable.</span></td>
      </tr>
      <tr>
        <td id="L8601" class="blob-num js-line-number" data-line-number="8601"></td>
        <td id="LC8601" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8602" class="blob-num js-line-number" data-line-number="8602"></td>
        <td id="LC8602" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8603" class="blob-num js-line-number" data-line-number="8603"></td>
        <td id="LC8603" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8604" class="blob-num js-line-number" data-line-number="8604"></td>
        <td id="LC8604" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8605" class="blob-num js-line-number" data-line-number="8605"></td>
        <td id="LC8605" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L8606" class="blob-num js-line-number" data-line-number="8606"></td>
        <td id="LC8606" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter</span></td>
      </tr>
      <tr>
        <td id="L8607" class="blob-num js-line-number" data-line-number="8607"></td>
        <td id="LC8607" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L8608" class="blob-num js-line-number" data-line-number="8608"></td>
        <td id="LC8608" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8609" class="blob-num js-line-number" data-line-number="8609"></td>
        <td id="LC8609" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Filters are used for formatting data displayed to the user.</span></td>
      </tr>
      <tr>
        <td id="L8610" class="blob-num js-line-number" data-line-number="8610"></td>
        <td id="LC8610" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8611" class="blob-num js-line-number" data-line-number="8611"></td>
        <td id="LC8611" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The general syntax in templates is as follows:</span></td>
      </tr>
      <tr>
        <td id="L8612" class="blob-num js-line-number" data-line-number="8612"></td>
        <td id="LC8612" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8613" class="blob-num js-line-number" data-line-number="8613"></td>
        <td id="LC8613" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         {{ expression | [ filter_name ] }}</span></td>
      </tr>
      <tr>
        <td id="L8614" class="blob-num js-line-number" data-line-number="8614"></td>
        <td id="LC8614" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8615" class="blob-num js-line-number" data-line-number="8615"></td>
        <td id="LC8615" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {String} name Name of the filter function to retrieve</span></td>
      </tr>
      <tr>
        <td id="L8616" class="blob-num js-line-number" data-line-number="8616"></td>
        <td id="LC8616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@return</span> {Function} the filter function</span></td>
      </tr>
      <tr>
        <td id="L8617" class="blob-num js-line-number" data-line-number="8617"></td>
        <td id="LC8617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8618" class="blob-num js-line-number" data-line-number="8618"></td>
        <td id="LC8618" class="blob-code blob-code-inner js-file-line">$FilterProvider.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$provide<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L8619" class="blob-num js-line-number" data-line-number="8619"></td>
        <td id="LC8619" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">$FilterProvider</span>(<span class="pl-smi">$provide</span>) {</td>
      </tr>
      <tr>
        <td id="L8620" class="blob-num js-line-number" data-line-number="8620"></td>
        <td id="LC8620" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> suffix <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>Filter<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8621" class="blob-num js-line-number" data-line-number="8621"></td>
        <td id="LC8621" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8622" class="blob-num js-line-number" data-line-number="8622"></td>
        <td id="LC8622" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">register</span>(<span class="pl-smi">name</span>, <span class="pl-smi">factory</span>) {</td>
      </tr>
      <tr>
        <td id="L8623" class="blob-num js-line-number" data-line-number="8623"></td>
        <td id="LC8623" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> $provide.factory(name <span class="pl-k">+</span> suffix, factory);</td>
      </tr>
      <tr>
        <td id="L8624" class="blob-num js-line-number" data-line-number="8624"></td>
        <td id="LC8624" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8625" class="blob-num js-line-number" data-line-number="8625"></td>
        <td id="LC8625" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.register <span class="pl-k">=</span> register;</td>
      </tr>
      <tr>
        <td id="L8626" class="blob-num js-line-number" data-line-number="8626"></td>
        <td id="LC8626" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8627" class="blob-num js-line-number" data-line-number="8627"></td>
        <td id="LC8627" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$get <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$injector<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$injector</span>) {</td>
      </tr>
      <tr>
        <td id="L8628" class="blob-num js-line-number" data-line-number="8628"></td>
        <td id="LC8628" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L8629" class="blob-num js-line-number" data-line-number="8629"></td>
        <td id="LC8629" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> $injector.get(name <span class="pl-k">+</span> suffix);</td>
      </tr>
      <tr>
        <td id="L8630" class="blob-num js-line-number" data-line-number="8630"></td>
        <td id="LC8630" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8631" class="blob-num js-line-number" data-line-number="8631"></td>
        <td id="LC8631" class="blob-code blob-code-inner js-file-line">  }];</td>
      </tr>
      <tr>
        <td id="L8632" class="blob-num js-line-number" data-line-number="8632"></td>
        <td id="LC8632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8633" class="blob-num js-line-number" data-line-number="8633"></td>
        <td id="LC8633" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">////////////////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L8634" class="blob-num js-line-number" data-line-number="8634"></td>
        <td id="LC8634" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8635" class="blob-num js-line-number" data-line-number="8635"></td>
        <td id="LC8635" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>currency<span class="pl-pds">&#39;</span></span>, currencyFilter);</td>
      </tr>
      <tr>
        <td id="L8636" class="blob-num js-line-number" data-line-number="8636"></td>
        <td id="LC8636" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>date<span class="pl-pds">&#39;</span></span>, dateFilter);</td>
      </tr>
      <tr>
        <td id="L8637" class="blob-num js-line-number" data-line-number="8637"></td>
        <td id="LC8637" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>filter<span class="pl-pds">&#39;</span></span>, filterFilter);</td>
      </tr>
      <tr>
        <td id="L8638" class="blob-num js-line-number" data-line-number="8638"></td>
        <td id="LC8638" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>json<span class="pl-pds">&#39;</span></span>, jsonFilter);</td>
      </tr>
      <tr>
        <td id="L8639" class="blob-num js-line-number" data-line-number="8639"></td>
        <td id="LC8639" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>limitTo<span class="pl-pds">&#39;</span></span>, limitToFilter);</td>
      </tr>
      <tr>
        <td id="L8640" class="blob-num js-line-number" data-line-number="8640"></td>
        <td id="LC8640" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>lowercase<span class="pl-pds">&#39;</span></span>, lowercaseFilter);</td>
      </tr>
      <tr>
        <td id="L8641" class="blob-num js-line-number" data-line-number="8641"></td>
        <td id="LC8641" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>, numberFilter);</td>
      </tr>
      <tr>
        <td id="L8642" class="blob-num js-line-number" data-line-number="8642"></td>
        <td id="LC8642" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>orderBy<span class="pl-pds">&#39;</span></span>, orderByFilter);</td>
      </tr>
      <tr>
        <td id="L8643" class="blob-num js-line-number" data-line-number="8643"></td>
        <td id="LC8643" class="blob-code blob-code-inner js-file-line">  register(<span class="pl-s"><span class="pl-pds">&#39;</span>uppercase<span class="pl-pds">&#39;</span></span>, uppercaseFilter);</td>
      </tr>
      <tr>
        <td id="L8644" class="blob-num js-line-number" data-line-number="8644"></td>
        <td id="LC8644" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8645" class="blob-num js-line-number" data-line-number="8645"></td>
        <td id="LC8645" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8646" class="blob-num js-line-number" data-line-number="8646"></td>
        <td id="LC8646" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8647" class="blob-num js-line-number" data-line-number="8647"></td>
        <td id="LC8647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L8648" class="blob-num js-line-number" data-line-number="8648"></td>
        <td id="LC8648" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.filter</span></td>
      </tr>
      <tr>
        <td id="L8649" class="blob-num js-line-number" data-line-number="8649"></td>
        <td id="LC8649" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L8650" class="blob-num js-line-number" data-line-number="8650"></td>
        <td id="LC8650" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8651" class="blob-num js-line-number" data-line-number="8651"></td>
        <td id="LC8651" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8652" class="blob-num js-line-number" data-line-number="8652"></td>
        <td id="LC8652" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Selects a subset of items from `array` and returns it as a new array.</span></td>
      </tr>
      <tr>
        <td id="L8653" class="blob-num js-line-number" data-line-number="8653"></td>
        <td id="LC8653" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8654" class="blob-num js-line-number" data-line-number="8654"></td>
        <td id="LC8654" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: This function is used to augment the `Array` type in Angular expressions. See</span></td>
      </tr>
      <tr>
        <td id="L8655" class="blob-num js-line-number" data-line-number="8655"></td>
        <td id="LC8655" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$filter} for more information about Angular arrays.</span></td>
      </tr>
      <tr>
        <td id="L8656" class="blob-num js-line-number" data-line-number="8656"></td>
        <td id="LC8656" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8657" class="blob-num js-line-number" data-line-number="8657"></td>
        <td id="LC8657" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Array} array The source array.</span></td>
      </tr>
      <tr>
        <td id="L8658" class="blob-num js-line-number" data-line-number="8658"></td>
        <td id="LC8658" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string|Object|function()} expression The predicate to be used for selecting items from</span></td>
      </tr>
      <tr>
        <td id="L8659" class="blob-num js-line-number" data-line-number="8659"></td>
        <td id="LC8659" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `array`.</span></td>
      </tr>
      <tr>
        <td id="L8660" class="blob-num js-line-number" data-line-number="8660"></td>
        <td id="LC8660" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8661" class="blob-num js-line-number" data-line-number="8661"></td>
        <td id="LC8661" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   Can be one of:</span></td>
      </tr>
      <tr>
        <td id="L8662" class="blob-num js-line-number" data-line-number="8662"></td>
        <td id="LC8662" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8663" class="blob-num js-line-number" data-line-number="8663"></td>
        <td id="LC8663" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `string`: Predicate that results in a substring match using the value of `expression`</span></td>
      </tr>
      <tr>
        <td id="L8664" class="blob-num js-line-number" data-line-number="8664"></td>
        <td id="LC8664" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     string. All strings or objects with string properties in `array` that contain this string</span></td>
      </tr>
      <tr>
        <td id="L8665" class="blob-num js-line-number" data-line-number="8665"></td>
        <td id="LC8665" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     will be returned. The predicate can be negated by prefixing the string with `!`.</span></td>
      </tr>
      <tr>
        <td id="L8666" class="blob-num js-line-number" data-line-number="8666"></td>
        <td id="LC8666" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8667" class="blob-num js-line-number" data-line-number="8667"></td>
        <td id="LC8667" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `Object`: A pattern object can be used to filter specific properties on objects contained</span></td>
      </tr>
      <tr>
        <td id="L8668" class="blob-num js-line-number" data-line-number="8668"></td>
        <td id="LC8668" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     by `array`. For example `{name:&quot;M&quot;, phone:&quot;1&quot;}` predicate will return an array of items</span></td>
      </tr>
      <tr>
        <td id="L8669" class="blob-num js-line-number" data-line-number="8669"></td>
        <td id="LC8669" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     which have property `name` containing &quot;M&quot; and property `phone` containing &quot;1&quot;. A special</span></td>
      </tr>
      <tr>
        <td id="L8670" class="blob-num js-line-number" data-line-number="8670"></td>
        <td id="LC8670" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     property name `$` can be used (as in `{$:&quot;text&quot;}`) to accept a match against any</span></td>
      </tr>
      <tr>
        <td id="L8671" class="blob-num js-line-number" data-line-number="8671"></td>
        <td id="LC8671" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     property of the object. That&#39;s equivalent to the simple substring match with a `string`</span></td>
      </tr>
      <tr>
        <td id="L8672" class="blob-num js-line-number" data-line-number="8672"></td>
        <td id="LC8672" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     as described above.</span></td>
      </tr>
      <tr>
        <td id="L8673" class="blob-num js-line-number" data-line-number="8673"></td>
        <td id="LC8673" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8674" class="blob-num js-line-number" data-line-number="8674"></td>
        <td id="LC8674" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   - `function`: A predicate function can be used to write arbitrary filters. The function is</span></td>
      </tr>
      <tr>
        <td id="L8675" class="blob-num js-line-number" data-line-number="8675"></td>
        <td id="LC8675" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     called for each element of `array`. The final result is an array of those elements that</span></td>
      </tr>
      <tr>
        <td id="L8676" class="blob-num js-line-number" data-line-number="8676"></td>
        <td id="LC8676" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     the predicate returned true for.</span></td>
      </tr>
      <tr>
        <td id="L8677" class="blob-num js-line-number" data-line-number="8677"></td>
        <td id="LC8677" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8678" class="blob-num js-line-number" data-line-number="8678"></td>
        <td id="LC8678" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L8679" class="blob-num js-line-number" data-line-number="8679"></td>
        <td id="LC8679" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8680" class="blob-num js-line-number" data-line-number="8680"></td>
        <td id="LC8680" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8681" class="blob-num js-line-number" data-line-number="8681"></td>
        <td id="LC8681" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-init=&quot;friends = [{name:&#39;John&#39;, phone:&#39;555-1276&#39;},</span></td>
      </tr>
      <tr>
        <td id="L8682" class="blob-num js-line-number" data-line-number="8682"></td>
        <td id="LC8682" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                {name:&#39;Mary&#39;, phone:&#39;800-BIG-MARY&#39;},</span></td>
      </tr>
      <tr>
        <td id="L8683" class="blob-num js-line-number" data-line-number="8683"></td>
        <td id="LC8683" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                {name:&#39;Mike&#39;, phone:&#39;555-4321&#39;},</span></td>
      </tr>
      <tr>
        <td id="L8684" class="blob-num js-line-number" data-line-number="8684"></td>
        <td id="LC8684" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                {name:&#39;Adam&#39;, phone:&#39;555-5678&#39;},</span></td>
      </tr>
      <tr>
        <td id="L8685" class="blob-num js-line-number" data-line-number="8685"></td>
        <td id="LC8685" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                {name:&#39;Julie&#39;, phone:&#39;555-8765&#39;}]&quot;&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L8686" class="blob-num js-line-number" data-line-number="8686"></td>
        <td id="LC8686" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8687" class="blob-num js-line-number" data-line-number="8687"></td>
        <td id="LC8687" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       Search: &lt;input ng-model=&quot;searchText&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8688" class="blob-num js-line-number" data-line-number="8688"></td>
        <td id="LC8688" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;table id=&quot;searchTextResults&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8689" class="blob-num js-line-number" data-line-number="8689"></td>
        <td id="LC8689" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Phone&lt;/th&gt;&lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L8690" class="blob-num js-line-number" data-line-number="8690"></td>
        <td id="LC8690" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr ng-repeat=&quot;friend in friends | filter:searchText&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8691" class="blob-num js-line-number" data-line-number="8691"></td>
        <td id="LC8691" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;td&gt;{{friend.name}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L8692" class="blob-num js-line-number" data-line-number="8692"></td>
        <td id="LC8692" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;td&gt;{{friend.phone}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L8693" class="blob-num js-line-number" data-line-number="8693"></td>
        <td id="LC8693" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L8694" class="blob-num js-line-number" data-line-number="8694"></td>
        <td id="LC8694" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/table&gt;</span></td>
      </tr>
      <tr>
        <td id="L8695" class="blob-num js-line-number" data-line-number="8695"></td>
        <td id="LC8695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;hr&gt;</span></td>
      </tr>
      <tr>
        <td id="L8696" class="blob-num js-line-number" data-line-number="8696"></td>
        <td id="LC8696" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       Any: &lt;input ng-model=&quot;search.$&quot;&gt; &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8697" class="blob-num js-line-number" data-line-number="8697"></td>
        <td id="LC8697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       Name only &lt;input ng-model=&quot;search.name&quot;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8698" class="blob-num js-line-number" data-line-number="8698"></td>
        <td id="LC8698" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       Phone only &lt;input ng-model=&quot;search.phone&quot;Ã¥&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8699" class="blob-num js-line-number" data-line-number="8699"></td>
        <td id="LC8699" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;table id=&quot;searchObjResults&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8700" class="blob-num js-line-number" data-line-number="8700"></td>
        <td id="LC8700" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Phone&lt;/th&gt;&lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L8701" class="blob-num js-line-number" data-line-number="8701"></td>
        <td id="LC8701" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr ng-repeat=&quot;friend in friends | filter:search&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8702" class="blob-num js-line-number" data-line-number="8702"></td>
        <td id="LC8702" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;td&gt;{{friend.name}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L8703" class="blob-num js-line-number" data-line-number="8703"></td>
        <td id="LC8703" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;td&gt;{{friend.phone}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L8704" class="blob-num js-line-number" data-line-number="8704"></td>
        <td id="LC8704" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L8705" class="blob-num js-line-number" data-line-number="8705"></td>
        <td id="LC8705" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/table&gt;</span></td>
      </tr>
      <tr>
        <td id="L8706" class="blob-num js-line-number" data-line-number="8706"></td>
        <td id="LC8706" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8707" class="blob-num js-line-number" data-line-number="8707"></td>
        <td id="LC8707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8708" class="blob-num js-line-number" data-line-number="8708"></td>
        <td id="LC8708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should search across all fields when filtering with a string&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8709" class="blob-num js-line-number" data-line-number="8709"></td>
        <td id="LC8709" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;searchText&#39;).enter(&#39;m&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8710" class="blob-num js-line-number" data-line-number="8710"></td>
        <td id="LC8710" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;#searchTextResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L8711" class="blob-num js-line-number" data-line-number="8711"></td>
        <td id="LC8711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;Mary&#39;, &#39;Mike&#39;, &#39;Adam&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L8712" class="blob-num js-line-number" data-line-number="8712"></td>
        <td id="LC8712" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8713" class="blob-num js-line-number" data-line-number="8713"></td>
        <td id="LC8713" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;searchText&#39;).enter(&#39;76&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8714" class="blob-num js-line-number" data-line-number="8714"></td>
        <td id="LC8714" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;#searchTextResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L8715" class="blob-num js-line-number" data-line-number="8715"></td>
        <td id="LC8715" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;John&#39;, &#39;Julie&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L8716" class="blob-num js-line-number" data-line-number="8716"></td>
        <td id="LC8716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8717" class="blob-num js-line-number" data-line-number="8717"></td>
        <td id="LC8717" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8718" class="blob-num js-line-number" data-line-number="8718"></td>
        <td id="LC8718" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should search in specific fields when filtering with a predicate object&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8719" class="blob-num js-line-number" data-line-number="8719"></td>
        <td id="LC8719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;search.$&#39;).enter(&#39;i&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8720" class="blob-num js-line-number" data-line-number="8720"></td>
        <td id="LC8720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;#searchObjResults tr&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L8721" class="blob-num js-line-number" data-line-number="8721"></td>
        <td id="LC8721" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;Mary&#39;, &#39;Mike&#39;, &#39;Julie&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L8722" class="blob-num js-line-number" data-line-number="8722"></td>
        <td id="LC8722" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8723" class="blob-num js-line-number" data-line-number="8723"></td>
        <td id="LC8723" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8724" class="blob-num js-line-number" data-line-number="8724"></td>
        <td id="LC8724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8725" class="blob-num js-line-number" data-line-number="8725"></td>
        <td id="LC8725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8726" class="blob-num js-line-number" data-line-number="8726"></td>
        <td id="LC8726" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">filterFilter</span>() {</td>
      </tr>
      <tr>
        <td id="L8727" class="blob-num js-line-number" data-line-number="8727"></td>
        <td id="LC8727" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">expression</span>) {</td>
      </tr>
      <tr>
        <td id="L8728" class="blob-num js-line-number" data-line-number="8728"></td>
        <td id="LC8728" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(array <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>)) <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L8729" class="blob-num js-line-number" data-line-number="8729"></td>
        <td id="LC8729" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> predicates <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8730" class="blob-num js-line-number" data-line-number="8730"></td>
        <td id="LC8730" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">predicates</span>.<span class="pl-en">check</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8731" class="blob-num js-line-number" data-line-number="8731"></td>
        <td id="LC8731" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> predicates.<span class="pl-c1">length</span>; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8732" class="blob-num js-line-number" data-line-number="8732"></td>
        <td id="LC8732" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span>(<span class="pl-k">!</span>predicates[j](value)) {</td>
      </tr>
      <tr>
        <td id="L8733" class="blob-num js-line-number" data-line-number="8733"></td>
        <td id="LC8733" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L8734" class="blob-num js-line-number" data-line-number="8734"></td>
        <td id="LC8734" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8735" class="blob-num js-line-number" data-line-number="8735"></td>
        <td id="LC8735" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8736" class="blob-num js-line-number" data-line-number="8736"></td>
        <td id="LC8736" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L8737" class="blob-num js-line-number" data-line-number="8737"></td>
        <td id="LC8737" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8738" class="blob-num js-line-number" data-line-number="8738"></td>
        <td id="LC8738" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">search</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">obj</span>, <span class="pl-smi">text</span>){</td>
      </tr>
      <tr>
        <td id="L8739" class="blob-num js-line-number" data-line-number="8739"></td>
        <td id="LC8739" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (text.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8740" class="blob-num js-line-number" data-line-number="8740"></td>
        <td id="LC8740" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">!</span><span class="pl-c1">search</span>(obj, text.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>));</td>
      </tr>
      <tr>
        <td id="L8741" class="blob-num js-line-number" data-line-number="8741"></td>
        <td id="LC8741" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8742" class="blob-num js-line-number" data-line-number="8742"></td>
        <td id="LC8742" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">switch</span> (<span class="pl-k">typeof</span> obj) {</td>
      </tr>
      <tr>
        <td id="L8743" class="blob-num js-line-number" data-line-number="8743"></td>
        <td id="LC8743" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8744" class="blob-num js-line-number" data-line-number="8744"></td>
        <td id="LC8744" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8745" class="blob-num js-line-number" data-line-number="8745"></td>
        <td id="LC8745" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8746" class="blob-num js-line-number" data-line-number="8746"></td>
        <td id="LC8746" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> obj).<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">indexOf</span>(text) <span class="pl-k">&gt;</span> <span class="pl-k">-</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L8747" class="blob-num js-line-number" data-line-number="8747"></td>
        <td id="LC8747" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8748" class="blob-num js-line-number" data-line-number="8748"></td>
        <td id="LC8748" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> ( <span class="pl-k">var</span> objKey <span class="pl-k">in</span> obj) {</td>
      </tr>
      <tr>
        <td id="L8749" class="blob-num js-line-number" data-line-number="8749"></td>
        <td id="LC8749" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (objKey.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> <span class="pl-c1">search</span>(obj[objKey], text)) {</td>
      </tr>
      <tr>
        <td id="L8750" class="blob-num js-line-number" data-line-number="8750"></td>
        <td id="LC8750" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L8751" class="blob-num js-line-number" data-line-number="8751"></td>
        <td id="LC8751" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L8752" class="blob-num js-line-number" data-line-number="8752"></td>
        <td id="LC8752" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8753" class="blob-num js-line-number" data-line-number="8753"></td>
        <td id="LC8753" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L8754" class="blob-num js-line-number" data-line-number="8754"></td>
        <td id="LC8754" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>array<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8755" class="blob-num js-line-number" data-line-number="8755"></td>
        <td id="LC8755" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> obj.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8756" class="blob-num js-line-number" data-line-number="8756"></td>
        <td id="LC8756" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-c1">search</span>(obj[i], text)) {</td>
      </tr>
      <tr>
        <td id="L8757" class="blob-num js-line-number" data-line-number="8757"></td>
        <td id="LC8757" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">return</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L8758" class="blob-num js-line-number" data-line-number="8758"></td>
        <td id="LC8758" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L8759" class="blob-num js-line-number" data-line-number="8759"></td>
        <td id="LC8759" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8760" class="blob-num js-line-number" data-line-number="8760"></td>
        <td id="LC8760" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L8761" class="blob-num js-line-number" data-line-number="8761"></td>
        <td id="LC8761" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8762" class="blob-num js-line-number" data-line-number="8762"></td>
        <td id="LC8762" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L8763" class="blob-num js-line-number" data-line-number="8763"></td>
        <td id="LC8763" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8764" class="blob-num js-line-number" data-line-number="8764"></td>
        <td id="LC8764" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L8765" class="blob-num js-line-number" data-line-number="8765"></td>
        <td id="LC8765" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">switch</span> (<span class="pl-k">typeof</span> expression) {</td>
      </tr>
      <tr>
        <td id="L8766" class="blob-num js-line-number" data-line-number="8766"></td>
        <td id="LC8766" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8767" class="blob-num js-line-number" data-line-number="8767"></td>
        <td id="LC8767" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8768" class="blob-num js-line-number" data-line-number="8768"></td>
        <td id="LC8768" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8769" class="blob-num js-line-number" data-line-number="8769"></td>
        <td id="LC8769" class="blob-code blob-code-inner js-file-line">        expression <span class="pl-k">=</span> {$<span class="pl-k">:</span>expression};</td>
      </tr>
      <tr>
        <td id="L8770" class="blob-num js-line-number" data-line-number="8770"></td>
        <td id="LC8770" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8771" class="blob-num js-line-number" data-line-number="8771"></td>
        <td id="LC8771" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (<span class="pl-k">var</span> key <span class="pl-k">in</span> expression) {</td>
      </tr>
      <tr>
        <td id="L8772" class="blob-num js-line-number" data-line-number="8772"></td>
        <td id="LC8772" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L8773" class="blob-num js-line-number" data-line-number="8773"></td>
        <td id="LC8773" class="blob-code blob-code-inner js-file-line">            (<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8774" class="blob-num js-line-number" data-line-number="8774"></td>
        <td id="LC8774" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> text <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>expression[key]).<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L8775" class="blob-num js-line-number" data-line-number="8775"></td>
        <td id="LC8775" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (<span class="pl-k">!</span>text) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L8776" class="blob-num js-line-number" data-line-number="8776"></td>
        <td id="LC8776" class="blob-code blob-code-inner js-file-line">              predicates.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8777" class="blob-num js-line-number" data-line-number="8777"></td>
        <td id="LC8777" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">search</span>(value, text);</td>
      </tr>
      <tr>
        <td id="L8778" class="blob-num js-line-number" data-line-number="8778"></td>
        <td id="LC8778" class="blob-code blob-code-inner js-file-line">              });</td>
      </tr>
      <tr>
        <td id="L8779" class="blob-num js-line-number" data-line-number="8779"></td>
        <td id="LC8779" class="blob-code blob-code-inner js-file-line">            })();</td>
      </tr>
      <tr>
        <td id="L8780" class="blob-num js-line-number" data-line-number="8780"></td>
        <td id="LC8780" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8781" class="blob-num js-line-number" data-line-number="8781"></td>
        <td id="LC8781" class="blob-code blob-code-inner js-file-line">            (<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L8782" class="blob-num js-line-number" data-line-number="8782"></td>
        <td id="LC8782" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> path <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L8783" class="blob-num js-line-number" data-line-number="8783"></td>
        <td id="LC8783" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> text <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>expression[key]).<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L8784" class="blob-num js-line-number" data-line-number="8784"></td>
        <td id="LC8784" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (<span class="pl-k">!</span>text) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L8785" class="blob-num js-line-number" data-line-number="8785"></td>
        <td id="LC8785" class="blob-code blob-code-inner js-file-line">              predicates.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L8786" class="blob-num js-line-number" data-line-number="8786"></td>
        <td id="LC8786" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">return</span> <span class="pl-c1">search</span>(getter(value, path), text);</td>
      </tr>
      <tr>
        <td id="L8787" class="blob-num js-line-number" data-line-number="8787"></td>
        <td id="LC8787" class="blob-code blob-code-inner js-file-line">              });</td>
      </tr>
      <tr>
        <td id="L8788" class="blob-num js-line-number" data-line-number="8788"></td>
        <td id="LC8788" class="blob-code blob-code-inner js-file-line">            })();</td>
      </tr>
      <tr>
        <td id="L8789" class="blob-num js-line-number" data-line-number="8789"></td>
        <td id="LC8789" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L8790" class="blob-num js-line-number" data-line-number="8790"></td>
        <td id="LC8790" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8791" class="blob-num js-line-number" data-line-number="8791"></td>
        <td id="LC8791" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L8792" class="blob-num js-line-number" data-line-number="8792"></td>
        <td id="LC8792" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>function<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8793" class="blob-num js-line-number" data-line-number="8793"></td>
        <td id="LC8793" class="blob-code blob-code-inner js-file-line">        predicates.<span class="pl-c1">push</span>(expression);</td>
      </tr>
      <tr>
        <td id="L8794" class="blob-num js-line-number" data-line-number="8794"></td>
        <td id="LC8794" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L8795" class="blob-num js-line-number" data-line-number="8795"></td>
        <td id="LC8795" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">default</span><span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L8796" class="blob-num js-line-number" data-line-number="8796"></td>
        <td id="LC8796" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L8797" class="blob-num js-line-number" data-line-number="8797"></td>
        <td id="LC8797" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8798" class="blob-num js-line-number" data-line-number="8798"></td>
        <td id="LC8798" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> filtered <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8799" class="blob-num js-line-number" data-line-number="8799"></td>
        <td id="LC8799" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( <span class="pl-k">var</span> j <span class="pl-k">=</span> <span class="pl-c1">0</span>; j <span class="pl-k">&lt;</span> array.<span class="pl-c1">length</span>; j<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8800" class="blob-num js-line-number" data-line-number="8800"></td>
        <td id="LC8800" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> value <span class="pl-k">=</span> array[j];</td>
      </tr>
      <tr>
        <td id="L8801" class="blob-num js-line-number" data-line-number="8801"></td>
        <td id="LC8801" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (predicates.check(value)) {</td>
      </tr>
      <tr>
        <td id="L8802" class="blob-num js-line-number" data-line-number="8802"></td>
        <td id="LC8802" class="blob-code blob-code-inner js-file-line">        filtered.<span class="pl-c1">push</span>(value);</td>
      </tr>
      <tr>
        <td id="L8803" class="blob-num js-line-number" data-line-number="8803"></td>
        <td id="LC8803" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8804" class="blob-num js-line-number" data-line-number="8804"></td>
        <td id="LC8804" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8805" class="blob-num js-line-number" data-line-number="8805"></td>
        <td id="LC8805" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> filtered;</td>
      </tr>
      <tr>
        <td id="L8806" class="blob-num js-line-number" data-line-number="8806"></td>
        <td id="LC8806" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8807" class="blob-num js-line-number" data-line-number="8807"></td>
        <td id="LC8807" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8808" class="blob-num js-line-number" data-line-number="8808"></td>
        <td id="LC8808" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8809" class="blob-num js-line-number" data-line-number="8809"></td>
        <td id="LC8809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8810" class="blob-num js-line-number" data-line-number="8810"></td>
        <td id="LC8810" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L8811" class="blob-num js-line-number" data-line-number="8811"></td>
        <td id="LC8811" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.currency</span></td>
      </tr>
      <tr>
        <td id="L8812" class="blob-num js-line-number" data-line-number="8812"></td>
        <td id="LC8812" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L8813" class="blob-num js-line-number" data-line-number="8813"></td>
        <td id="LC8813" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8814" class="blob-num js-line-number" data-line-number="8814"></td>
        <td id="LC8814" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8815" class="blob-num js-line-number" data-line-number="8815"></td>
        <td id="LC8815" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default</span></td>
      </tr>
      <tr>
        <td id="L8816" class="blob-num js-line-number" data-line-number="8816"></td>
        <td id="LC8816" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * symbol for current locale is used.</span></td>
      </tr>
      <tr>
        <td id="L8817" class="blob-num js-line-number" data-line-number="8817"></td>
        <td id="LC8817" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8818" class="blob-num js-line-number" data-line-number="8818"></td>
        <td id="LC8818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number} amount Input to filter.</span></td>
      </tr>
      <tr>
        <td id="L8819" class="blob-num js-line-number" data-line-number="8819"></td>
        <td id="LC8819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} symbol Currency symbol or identifier to be displayed.</span></td>
      </tr>
      <tr>
        <td id="L8820" class="blob-num js-line-number" data-line-number="8820"></td>
        <td id="LC8820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Formatted number.</span></td>
      </tr>
      <tr>
        <td id="L8821" class="blob-num js-line-number" data-line-number="8821"></td>
        <td id="LC8821" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8822" class="blob-num js-line-number" data-line-number="8822"></td>
        <td id="LC8822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8823" class="blob-num js-line-number" data-line-number="8823"></td>
        <td id="LC8823" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L8824" class="blob-num js-line-number" data-line-number="8824"></td>
        <td id="LC8824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8825" class="blob-num js-line-number" data-line-number="8825"></td>
        <td id="LC8825" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8826" class="blob-num js-line-number" data-line-number="8826"></td>
        <td id="LC8826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L8827" class="blob-num js-line-number" data-line-number="8827"></td>
        <td id="LC8827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L8828" class="blob-num js-line-number" data-line-number="8828"></td>
        <td id="LC8828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.amount = 1234.56;</span></td>
      </tr>
      <tr>
        <td id="L8829" class="blob-num js-line-number" data-line-number="8829"></td>
        <td id="LC8829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L8830" class="blob-num js-line-number" data-line-number="8830"></td>
        <td id="LC8830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L8831" class="blob-num js-line-number" data-line-number="8831"></td>
        <td id="LC8831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8832" class="blob-num js-line-number" data-line-number="8832"></td>
        <td id="LC8832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;input type=&quot;number&quot; ng-model=&quot;amount&quot;&gt; &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8833" class="blob-num js-line-number" data-line-number="8833"></td>
        <td id="LC8833" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         default currency symbol ($): {{amount | currency}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8834" class="blob-num js-line-number" data-line-number="8834"></td>
        <td id="LC8834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         custom currency identifier (USD$): {{amount | currency:&quot;USD$&quot;}}</span></td>
      </tr>
      <tr>
        <td id="L8835" class="blob-num js-line-number" data-line-number="8835"></td>
        <td id="LC8835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L8836" class="blob-num js-line-number" data-line-number="8836"></td>
        <td id="LC8836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8837" class="blob-num js-line-number" data-line-number="8837"></td>
        <td id="LC8837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8838" class="blob-num js-line-number" data-line-number="8838"></td>
        <td id="LC8838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should init with 1234.56&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8839" class="blob-num js-line-number" data-line-number="8839"></td>
        <td id="LC8839" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;amount | currency&#39;)).toBe(&#39;$1,234.56&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8840" class="blob-num js-line-number" data-line-number="8840"></td>
        <td id="LC8840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;amount | currency:&quot;USD$&quot;&#39;)).toBe(&#39;USD$1,234.56&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8841" class="blob-num js-line-number" data-line-number="8841"></td>
        <td id="LC8841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8842" class="blob-num js-line-number" data-line-number="8842"></td>
        <td id="LC8842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should update&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8843" class="blob-num js-line-number" data-line-number="8843"></td>
        <td id="LC8843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;amount&#39;).enter(&#39;-1234&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8844" class="blob-num js-line-number" data-line-number="8844"></td>
        <td id="LC8844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;amount | currency&#39;)).toBe(&#39;($1,234.00)&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8845" class="blob-num js-line-number" data-line-number="8845"></td>
        <td id="LC8845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;amount | currency:&quot;USD$&quot;&#39;)).toBe(&#39;(USD$1,234.00)&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8846" class="blob-num js-line-number" data-line-number="8846"></td>
        <td id="LC8846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8847" class="blob-num js-line-number" data-line-number="8847"></td>
        <td id="LC8847" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8848" class="blob-num js-line-number" data-line-number="8848"></td>
        <td id="LC8848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8849" class="blob-num js-line-number" data-line-number="8849"></td>
        <td id="LC8849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8850" class="blob-num js-line-number" data-line-number="8850"></td>
        <td id="LC8850" class="blob-code blob-code-inner js-file-line">currencyFilter.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$locale<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L8851" class="blob-num js-line-number" data-line-number="8851"></td>
        <td id="LC8851" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">currencyFilter</span>(<span class="pl-smi">$locale</span>) {</td>
      </tr>
      <tr>
        <td id="L8852" class="blob-num js-line-number" data-line-number="8852"></td>
        <td id="LC8852" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> formats <span class="pl-k">=</span> $locale.NUMBER_FORMATS;</td>
      </tr>
      <tr>
        <td id="L8853" class="blob-num js-line-number" data-line-number="8853"></td>
        <td id="LC8853" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">amount</span>, <span class="pl-smi">currencySymbol</span>){</td>
      </tr>
      <tr>
        <td id="L8854" class="blob-num js-line-number" data-line-number="8854"></td>
        <td id="LC8854" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(currencySymbol)) currencySymbol <span class="pl-k">=</span> formats.CURRENCY_SYM;</td>
      </tr>
      <tr>
        <td id="L8855" class="blob-num js-line-number" data-line-number="8855"></td>
        <td id="LC8855" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> formatNumber(amount, formats.PATTERNS[<span class="pl-c1">1</span>], formats.GROUP_SEP, formats.DECIMAL_SEP, <span class="pl-c1">2</span>).</td>
      </tr>
      <tr>
        <td id="L8856" class="blob-num js-line-number" data-line-number="8856"></td>
        <td id="LC8856" class="blob-code blob-code-inner js-file-line">                <span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\u</span>00A4<span class="pl-pds">/</span>g</span>, currencySymbol);</td>
      </tr>
      <tr>
        <td id="L8857" class="blob-num js-line-number" data-line-number="8857"></td>
        <td id="LC8857" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8858" class="blob-num js-line-number" data-line-number="8858"></td>
        <td id="LC8858" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8859" class="blob-num js-line-number" data-line-number="8859"></td>
        <td id="LC8859" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8860" class="blob-num js-line-number" data-line-number="8860"></td>
        <td id="LC8860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L8861" class="blob-num js-line-number" data-line-number="8861"></td>
        <td id="LC8861" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L8862" class="blob-num js-line-number" data-line-number="8862"></td>
        <td id="LC8862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.number</span></td>
      </tr>
      <tr>
        <td id="L8863" class="blob-num js-line-number" data-line-number="8863"></td>
        <td id="LC8863" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L8864" class="blob-num js-line-number" data-line-number="8864"></td>
        <td id="LC8864" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8865" class="blob-num js-line-number" data-line-number="8865"></td>
        <td id="LC8865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L8866" class="blob-num js-line-number" data-line-number="8866"></td>
        <td id="LC8866" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Formats a number as text.</span></td>
      </tr>
      <tr>
        <td id="L8867" class="blob-num js-line-number" data-line-number="8867"></td>
        <td id="LC8867" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8868" class="blob-num js-line-number" data-line-number="8868"></td>
        <td id="LC8868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * If the input is not a number an empty string is returned.</span></td>
      </tr>
      <tr>
        <td id="L8869" class="blob-num js-line-number" data-line-number="8869"></td>
        <td id="LC8869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8870" class="blob-num js-line-number" data-line-number="8870"></td>
        <td id="LC8870" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number|string} number Number to format.</span></td>
      </tr>
      <tr>
        <td id="L8871" class="blob-num js-line-number" data-line-number="8871"></td>
        <td id="LC8871" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(number|string)=} [fractionSize=2] Number of decimal places to round the number to.</span></td>
      </tr>
      <tr>
        <td id="L8872" class="blob-num js-line-number" data-line-number="8872"></td>
        <td id="LC8872" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Number rounded to decimalPlaces and places a â,â after each third digit.</span></td>
      </tr>
      <tr>
        <td id="L8873" class="blob-num js-line-number" data-line-number="8873"></td>
        <td id="LC8873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L8874" class="blob-num js-line-number" data-line-number="8874"></td>
        <td id="LC8874" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L8875" class="blob-num js-line-number" data-line-number="8875"></td>
        <td id="LC8875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8876" class="blob-num js-line-number" data-line-number="8876"></td>
        <td id="LC8876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8877" class="blob-num js-line-number" data-line-number="8877"></td>
        <td id="LC8877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L8878" class="blob-num js-line-number" data-line-number="8878"></td>
        <td id="LC8878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L8879" class="blob-num js-line-number" data-line-number="8879"></td>
        <td id="LC8879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.val = 1234.56789;</span></td>
      </tr>
      <tr>
        <td id="L8880" class="blob-num js-line-number" data-line-number="8880"></td>
        <td id="LC8880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L8881" class="blob-num js-line-number" data-line-number="8881"></td>
        <td id="LC8881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L8882" class="blob-num js-line-number" data-line-number="8882"></td>
        <td id="LC8882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L8883" class="blob-num js-line-number" data-line-number="8883"></td>
        <td id="LC8883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Enter number: &lt;input ng-model=&#39;val&#39;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8884" class="blob-num js-line-number" data-line-number="8884"></td>
        <td id="LC8884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Default formatting: {{val | number}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8885" class="blob-num js-line-number" data-line-number="8885"></td>
        <td id="LC8885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         No fractions: {{val | number:0}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L8886" class="blob-num js-line-number" data-line-number="8886"></td>
        <td id="LC8886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Negative number: {{-val | number:4}}</span></td>
      </tr>
      <tr>
        <td id="L8887" class="blob-num js-line-number" data-line-number="8887"></td>
        <td id="LC8887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L8888" class="blob-num js-line-number" data-line-number="8888"></td>
        <td id="LC8888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L8889" class="blob-num js-line-number" data-line-number="8889"></td>
        <td id="LC8889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8890" class="blob-num js-line-number" data-line-number="8890"></td>
        <td id="LC8890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should format numbers&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8891" class="blob-num js-line-number" data-line-number="8891"></td>
        <td id="LC8891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;val | number&#39;)).toBe(&#39;1,234.568&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8892" class="blob-num js-line-number" data-line-number="8892"></td>
        <td id="LC8892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;val | number:0&#39;)).toBe(&#39;1,235&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8893" class="blob-num js-line-number" data-line-number="8893"></td>
        <td id="LC8893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;-val | number:4&#39;)).toBe(&#39;-1,234.5679&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8894" class="blob-num js-line-number" data-line-number="8894"></td>
        <td id="LC8894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8895" class="blob-num js-line-number" data-line-number="8895"></td>
        <td id="LC8895" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L8896" class="blob-num js-line-number" data-line-number="8896"></td>
        <td id="LC8896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should update&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L8897" class="blob-num js-line-number" data-line-number="8897"></td>
        <td id="LC8897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;val&#39;).enter(&#39;3374.333&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8898" class="blob-num js-line-number" data-line-number="8898"></td>
        <td id="LC8898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;val | number&#39;)).toBe(&#39;3,374.333&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8899" class="blob-num js-line-number" data-line-number="8899"></td>
        <td id="LC8899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;val | number:0&#39;)).toBe(&#39;3,374&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8900" class="blob-num js-line-number" data-line-number="8900"></td>
        <td id="LC8900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;-val | number:4&#39;)).toBe(&#39;-3,374.3330&#39;);</span></td>
      </tr>
      <tr>
        <td id="L8901" class="blob-num js-line-number" data-line-number="8901"></td>
        <td id="LC8901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L8902" class="blob-num js-line-number" data-line-number="8902"></td>
        <td id="LC8902" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L8903" class="blob-num js-line-number" data-line-number="8903"></td>
        <td id="LC8903" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L8904" class="blob-num js-line-number" data-line-number="8904"></td>
        <td id="LC8904" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L8905" class="blob-num js-line-number" data-line-number="8905"></td>
        <td id="LC8905" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8906" class="blob-num js-line-number" data-line-number="8906"></td>
        <td id="LC8906" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8907" class="blob-num js-line-number" data-line-number="8907"></td>
        <td id="LC8907" class="blob-code blob-code-inner js-file-line">numberFilter.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$locale<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L8908" class="blob-num js-line-number" data-line-number="8908"></td>
        <td id="LC8908" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">numberFilter</span>(<span class="pl-smi">$locale</span>) {</td>
      </tr>
      <tr>
        <td id="L8909" class="blob-num js-line-number" data-line-number="8909"></td>
        <td id="LC8909" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> formats <span class="pl-k">=</span> $locale.NUMBER_FORMATS;</td>
      </tr>
      <tr>
        <td id="L8910" class="blob-num js-line-number" data-line-number="8910"></td>
        <td id="LC8910" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">number</span>, <span class="pl-smi">fractionSize</span>) {</td>
      </tr>
      <tr>
        <td id="L8911" class="blob-num js-line-number" data-line-number="8911"></td>
        <td id="LC8911" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> formatNumber(number, formats.PATTERNS[<span class="pl-c1">0</span>], formats.GROUP_SEP, formats.DECIMAL_SEP,</td>
      </tr>
      <tr>
        <td id="L8912" class="blob-num js-line-number" data-line-number="8912"></td>
        <td id="LC8912" class="blob-code blob-code-inner js-file-line">      fractionSize);</td>
      </tr>
      <tr>
        <td id="L8913" class="blob-num js-line-number" data-line-number="8913"></td>
        <td id="LC8913" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8914" class="blob-num js-line-number" data-line-number="8914"></td>
        <td id="LC8914" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8915" class="blob-num js-line-number" data-line-number="8915"></td>
        <td id="LC8915" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8916" class="blob-num js-line-number" data-line-number="8916"></td>
        <td id="LC8916" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DECIMAL_SEP</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>.<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8917" class="blob-num js-line-number" data-line-number="8917"></td>
        <td id="LC8917" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">formatNumber</span>(<span class="pl-smi">number</span>, <span class="pl-smi">pattern</span>, <span class="pl-smi">groupSep</span>, <span class="pl-smi">decimalSep</span>, <span class="pl-smi">fractionSize</span>) {</td>
      </tr>
      <tr>
        <td id="L8918" class="blob-num js-line-number" data-line-number="8918"></td>
        <td id="LC8918" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-c1">isNaN</span>(number) <span class="pl-k">||</span> <span class="pl-k">!</span><span class="pl-c1">isFinite</span>(number)) <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8919" class="blob-num js-line-number" data-line-number="8919"></td>
        <td id="LC8919" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8920" class="blob-num js-line-number" data-line-number="8920"></td>
        <td id="LC8920" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> isNegative <span class="pl-k">=</span> number <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L8921" class="blob-num js-line-number" data-line-number="8921"></td>
        <td id="LC8921" class="blob-code blob-code-inner js-file-line">  number <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(number);</td>
      </tr>
      <tr>
        <td id="L8922" class="blob-num js-line-number" data-line-number="8922"></td>
        <td id="LC8922" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> numStr <span class="pl-k">=</span> number <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8923" class="blob-num js-line-number" data-line-number="8923"></td>
        <td id="LC8923" class="blob-code blob-code-inner js-file-line">      formatedText <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L8924" class="blob-num js-line-number" data-line-number="8924"></td>
        <td id="LC8924" class="blob-code blob-code-inner js-file-line">      parts <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L8925" class="blob-num js-line-number" data-line-number="8925"></td>
        <td id="LC8925" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8926" class="blob-num js-line-number" data-line-number="8926"></td>
        <td id="LC8926" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (numStr.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>e<span class="pl-pds">&#39;</span></span>) <span class="pl-k">!==</span> <span class="pl-k">-</span><span class="pl-c1">1</span>) {</td>
      </tr>
      <tr>
        <td id="L8927" class="blob-num js-line-number" data-line-number="8927"></td>
        <td id="LC8927" class="blob-code blob-code-inner js-file-line">    formatedText <span class="pl-k">=</span> numStr;</td>
      </tr>
      <tr>
        <td id="L8928" class="blob-num js-line-number" data-line-number="8928"></td>
        <td id="LC8928" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L8929" class="blob-num js-line-number" data-line-number="8929"></td>
        <td id="LC8929" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> fractionLen <span class="pl-k">=</span> (numStr.<span class="pl-c1">split</span>(<span class="pl-c1">DECIMAL_SEP</span>)[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L8930" class="blob-num js-line-number" data-line-number="8930"></td>
        <td id="LC8930" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8931" class="blob-num js-line-number" data-line-number="8931"></td>
        <td id="LC8931" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// determine fractionSize if it is not specified</span></td>
      </tr>
      <tr>
        <td id="L8932" class="blob-num js-line-number" data-line-number="8932"></td>
        <td id="LC8932" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isUndefined(fractionSize)) {</td>
      </tr>
      <tr>
        <td id="L8933" class="blob-num js-line-number" data-line-number="8933"></td>
        <td id="LC8933" class="blob-code blob-code-inner js-file-line">      fractionSize <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(pattern.minFrac, fractionLen), pattern.maxFrac);</td>
      </tr>
      <tr>
        <td id="L8934" class="blob-num js-line-number" data-line-number="8934"></td>
        <td id="LC8934" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8935" class="blob-num js-line-number" data-line-number="8935"></td>
        <td id="LC8935" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8936" class="blob-num js-line-number" data-line-number="8936"></td>
        <td id="LC8936" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pow <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">10</span>, fractionSize);</td>
      </tr>
      <tr>
        <td id="L8937" class="blob-num js-line-number" data-line-number="8937"></td>
        <td id="LC8937" class="blob-code blob-code-inner js-file-line">    number <span class="pl-k">=</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(number <span class="pl-k">*</span> pow) / pow;</td>
      </tr>
      <tr>
        <td id="L8938" class="blob-num js-line-number" data-line-number="8938"></td>
        <td id="LC8938" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> fraction <span class="pl-k">=</span> (<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> number).<span class="pl-c1">split</span>(<span class="pl-c1">DECIMAL_SEP</span>);</td>
      </tr>
      <tr>
        <td id="L8939" class="blob-num js-line-number" data-line-number="8939"></td>
        <td id="LC8939" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> whole <span class="pl-k">=</span> fraction[<span class="pl-c1">0</span>];</td>
      </tr>
      <tr>
        <td id="L8940" class="blob-num js-line-number" data-line-number="8940"></td>
        <td id="LC8940" class="blob-code blob-code-inner js-file-line">    fraction <span class="pl-k">=</span> fraction[<span class="pl-c1">1</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8941" class="blob-num js-line-number" data-line-number="8941"></td>
        <td id="LC8941" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8942" class="blob-num js-line-number" data-line-number="8942"></td>
        <td id="LC8942" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> pos <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L8943" class="blob-num js-line-number" data-line-number="8943"></td>
        <td id="LC8943" class="blob-code blob-code-inner js-file-line">        lgroup <span class="pl-k">=</span> pattern.lgSize,</td>
      </tr>
      <tr>
        <td id="L8944" class="blob-num js-line-number" data-line-number="8944"></td>
        <td id="LC8944" class="blob-code blob-code-inner js-file-line">        group <span class="pl-k">=</span> pattern.gSize;</td>
      </tr>
      <tr>
        <td id="L8945" class="blob-num js-line-number" data-line-number="8945"></td>
        <td id="LC8945" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8946" class="blob-num js-line-number" data-line-number="8946"></td>
        <td id="LC8946" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (whole.<span class="pl-c1">length</span> <span class="pl-k">&gt;=</span> (lgroup <span class="pl-k">+</span> group)) {</td>
      </tr>
      <tr>
        <td id="L8947" class="blob-num js-line-number" data-line-number="8947"></td>
        <td id="LC8947" class="blob-code blob-code-inner js-file-line">      pos <span class="pl-k">=</span> whole.<span class="pl-c1">length</span> <span class="pl-k">-</span> lgroup;</td>
      </tr>
      <tr>
        <td id="L8948" class="blob-num js-line-number" data-line-number="8948"></td>
        <td id="LC8948" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> (<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> pos; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8949" class="blob-num js-line-number" data-line-number="8949"></td>
        <td id="LC8949" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((pos <span class="pl-k">-</span> i)<span class="pl-k">%</span>group <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> i <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L8950" class="blob-num js-line-number" data-line-number="8950"></td>
        <td id="LC8950" class="blob-code blob-code-inner js-file-line">          formatedText <span class="pl-k">+=</span> groupSep;</td>
      </tr>
      <tr>
        <td id="L8951" class="blob-num js-line-number" data-line-number="8951"></td>
        <td id="LC8951" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L8952" class="blob-num js-line-number" data-line-number="8952"></td>
        <td id="LC8952" class="blob-code blob-code-inner js-file-line">        formatedText <span class="pl-k">+=</span> whole.<span class="pl-c1">charAt</span>(i);</td>
      </tr>
      <tr>
        <td id="L8953" class="blob-num js-line-number" data-line-number="8953"></td>
        <td id="LC8953" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8954" class="blob-num js-line-number" data-line-number="8954"></td>
        <td id="LC8954" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8955" class="blob-num js-line-number" data-line-number="8955"></td>
        <td id="LC8955" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8956" class="blob-num js-line-number" data-line-number="8956"></td>
        <td id="LC8956" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (i <span class="pl-k">=</span> pos; i <span class="pl-k">&lt;</span> whole.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L8957" class="blob-num js-line-number" data-line-number="8957"></td>
        <td id="LC8957" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ((whole.<span class="pl-c1">length</span> <span class="pl-k">-</span> i)<span class="pl-k">%</span>lgroup <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> i <span class="pl-k">!==</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L8958" class="blob-num js-line-number" data-line-number="8958"></td>
        <td id="LC8958" class="blob-code blob-code-inner js-file-line">        formatedText <span class="pl-k">+=</span> groupSep;</td>
      </tr>
      <tr>
        <td id="L8959" class="blob-num js-line-number" data-line-number="8959"></td>
        <td id="LC8959" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L8960" class="blob-num js-line-number" data-line-number="8960"></td>
        <td id="LC8960" class="blob-code blob-code-inner js-file-line">      formatedText <span class="pl-k">+=</span> whole.<span class="pl-c1">charAt</span>(i);</td>
      </tr>
      <tr>
        <td id="L8961" class="blob-num js-line-number" data-line-number="8961"></td>
        <td id="LC8961" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8962" class="blob-num js-line-number" data-line-number="8962"></td>
        <td id="LC8962" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8963" class="blob-num js-line-number" data-line-number="8963"></td>
        <td id="LC8963" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// format fraction part.</span></td>
      </tr>
      <tr>
        <td id="L8964" class="blob-num js-line-number" data-line-number="8964"></td>
        <td id="LC8964" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(fraction.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> fractionSize) {</td>
      </tr>
      <tr>
        <td id="L8965" class="blob-num js-line-number" data-line-number="8965"></td>
        <td id="LC8965" class="blob-code blob-code-inner js-file-line">      fraction <span class="pl-k">+=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8966" class="blob-num js-line-number" data-line-number="8966"></td>
        <td id="LC8966" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L8967" class="blob-num js-line-number" data-line-number="8967"></td>
        <td id="LC8967" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8968" class="blob-num js-line-number" data-line-number="8968"></td>
        <td id="LC8968" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (fractionSize) formatedText <span class="pl-k">+=</span> decimalSep <span class="pl-k">+</span> fraction.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>, fractionSize);</td>
      </tr>
      <tr>
        <td id="L8969" class="blob-num js-line-number" data-line-number="8969"></td>
        <td id="LC8969" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8970" class="blob-num js-line-number" data-line-number="8970"></td>
        <td id="LC8970" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8971" class="blob-num js-line-number" data-line-number="8971"></td>
        <td id="LC8971" class="blob-code blob-code-inner js-file-line">  parts.<span class="pl-c1">push</span>(isNegative <span class="pl-k">?</span> pattern.negPre <span class="pl-k">:</span> pattern.posPre);</td>
      </tr>
      <tr>
        <td id="L8972" class="blob-num js-line-number" data-line-number="8972"></td>
        <td id="LC8972" class="blob-code blob-code-inner js-file-line">  parts.<span class="pl-c1">push</span>(formatedText);</td>
      </tr>
      <tr>
        <td id="L8973" class="blob-num js-line-number" data-line-number="8973"></td>
        <td id="LC8973" class="blob-code blob-code-inner js-file-line">  parts.<span class="pl-c1">push</span>(isNegative <span class="pl-k">?</span> pattern.negSuf <span class="pl-k">:</span> pattern.posSuf);</td>
      </tr>
      <tr>
        <td id="L8974" class="blob-num js-line-number" data-line-number="8974"></td>
        <td id="LC8974" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> parts.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L8975" class="blob-num js-line-number" data-line-number="8975"></td>
        <td id="LC8975" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8976" class="blob-num js-line-number" data-line-number="8976"></td>
        <td id="LC8976" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8977" class="blob-num js-line-number" data-line-number="8977"></td>
        <td id="LC8977" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">padNumber</span>(<span class="pl-smi">num</span>, <span class="pl-smi">digits</span>, <span class="pl-smi">trim</span>) {</td>
      </tr>
      <tr>
        <td id="L8978" class="blob-num js-line-number" data-line-number="8978"></td>
        <td id="LC8978" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> neg <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8979" class="blob-num js-line-number" data-line-number="8979"></td>
        <td id="LC8979" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (num <span class="pl-k">&lt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L8980" class="blob-num js-line-number" data-line-number="8980"></td>
        <td id="LC8980" class="blob-code blob-code-inner js-file-line">    neg <span class="pl-k">=</span>  <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L8981" class="blob-num js-line-number" data-line-number="8981"></td>
        <td id="LC8981" class="blob-code blob-code-inner js-file-line">    num <span class="pl-k">=</span> <span class="pl-k">-</span>num;</td>
      </tr>
      <tr>
        <td id="L8982" class="blob-num js-line-number" data-line-number="8982"></td>
        <td id="LC8982" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L8983" class="blob-num js-line-number" data-line-number="8983"></td>
        <td id="LC8983" class="blob-code blob-code-inner js-file-line">  num <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> num;</td>
      </tr>
      <tr>
        <td id="L8984" class="blob-num js-line-number" data-line-number="8984"></td>
        <td id="LC8984" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">while</span>(num.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> digits) num <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>0<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> num;</td>
      </tr>
      <tr>
        <td id="L8985" class="blob-num js-line-number" data-line-number="8985"></td>
        <td id="LC8985" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (trim)</td>
      </tr>
      <tr>
        <td id="L8986" class="blob-num js-line-number" data-line-number="8986"></td>
        <td id="LC8986" class="blob-code blob-code-inner js-file-line">    num <span class="pl-k">=</span> num.<span class="pl-c1">substr</span>(num.<span class="pl-c1">length</span> <span class="pl-k">-</span> digits);</td>
      </tr>
      <tr>
        <td id="L8987" class="blob-num js-line-number" data-line-number="8987"></td>
        <td id="LC8987" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> neg <span class="pl-k">+</span> num;</td>
      </tr>
      <tr>
        <td id="L8988" class="blob-num js-line-number" data-line-number="8988"></td>
        <td id="LC8988" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L8989" class="blob-num js-line-number" data-line-number="8989"></td>
        <td id="LC8989" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8990" class="blob-num js-line-number" data-line-number="8990"></td>
        <td id="LC8990" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L8991" class="blob-num js-line-number" data-line-number="8991"></td>
        <td id="LC8991" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">dateGetter</span>(<span class="pl-smi">name</span>, <span class="pl-smi">size</span>, <span class="pl-smi">offset</span>, <span class="pl-smi">trim</span>) {</td>
      </tr>
      <tr>
        <td id="L8992" class="blob-num js-line-number" data-line-number="8992"></td>
        <td id="LC8992" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L8993" class="blob-num js-line-number" data-line-number="8993"></td>
        <td id="LC8993" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> date[<span class="pl-s"><span class="pl-pds">&#39;</span>get<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name]();</td>
      </tr>
      <tr>
        <td id="L8994" class="blob-num js-line-number" data-line-number="8994"></td>
        <td id="LC8994" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (offset <span class="pl-k">&gt;</span> <span class="pl-c1">0</span> <span class="pl-k">||</span> value <span class="pl-k">&gt;</span> <span class="pl-k">-</span>offset)</td>
      </tr>
      <tr>
        <td id="L8995" class="blob-num js-line-number" data-line-number="8995"></td>
        <td id="LC8995" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">+=</span> offset;</td>
      </tr>
      <tr>
        <td id="L8996" class="blob-num js-line-number" data-line-number="8996"></td>
        <td id="LC8996" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (value <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> offset <span class="pl-k">==</span> <span class="pl-k">-</span><span class="pl-c1">12</span> ) value <span class="pl-k">=</span> <span class="pl-c1">12</span>;</td>
      </tr>
      <tr>
        <td id="L8997" class="blob-num js-line-number" data-line-number="8997"></td>
        <td id="LC8997" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> padNumber(value, size, trim);</td>
      </tr>
      <tr>
        <td id="L8998" class="blob-num js-line-number" data-line-number="8998"></td>
        <td id="LC8998" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L8999" class="blob-num js-line-number" data-line-number="8999"></td>
        <td id="LC8999" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9000" class="blob-num js-line-number" data-line-number="9000"></td>
        <td id="LC9000" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9001" class="blob-num js-line-number" data-line-number="9001"></td>
        <td id="LC9001" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">dateStrGetter</span>(<span class="pl-smi">name</span>, <span class="pl-smi">shortForm</span>) {</td>
      </tr>
      <tr>
        <td id="L9002" class="blob-num js-line-number" data-line-number="9002"></td>
        <td id="LC9002" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">formats</span>) {</td>
      </tr>
      <tr>
        <td id="L9003" class="blob-num js-line-number" data-line-number="9003"></td>
        <td id="LC9003" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> date[<span class="pl-s"><span class="pl-pds">&#39;</span>get<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name]();</td>
      </tr>
      <tr>
        <td id="L9004" class="blob-num js-line-number" data-line-number="9004"></td>
        <td id="LC9004" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> get <span class="pl-k">=</span> uppercase(shortForm <span class="pl-k">?</span> (<span class="pl-s"><span class="pl-pds">&#39;</span>SHORT<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name) <span class="pl-k">:</span> name);</td>
      </tr>
      <tr>
        <td id="L9005" class="blob-num js-line-number" data-line-number="9005"></td>
        <td id="LC9005" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9006" class="blob-num js-line-number" data-line-number="9006"></td>
        <td id="LC9006" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> formats[get][value];</td>
      </tr>
      <tr>
        <td id="L9007" class="blob-num js-line-number" data-line-number="9007"></td>
        <td id="LC9007" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9008" class="blob-num js-line-number" data-line-number="9008"></td>
        <td id="LC9008" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9009" class="blob-num js-line-number" data-line-number="9009"></td>
        <td id="LC9009" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9010" class="blob-num js-line-number" data-line-number="9010"></td>
        <td id="LC9010" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">timeZoneGetter</span>(<span class="pl-smi">date</span>) {</td>
      </tr>
      <tr>
        <td id="L9011" class="blob-num js-line-number" data-line-number="9011"></td>
        <td id="LC9011" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> offset <span class="pl-k">=</span> date.<span class="pl-c1">getTimezoneOffset</span>();</td>
      </tr>
      <tr>
        <td id="L9012" class="blob-num js-line-number" data-line-number="9012"></td>
        <td id="LC9012" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> padNumber(offset / <span class="pl-c1">60</span>, <span class="pl-c1">2</span>) <span class="pl-k">+</span> padNumber(<span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(offset <span class="pl-k">%</span> <span class="pl-c1">60</span>), <span class="pl-c1">2</span>);</td>
      </tr>
      <tr>
        <td id="L9013" class="blob-num js-line-number" data-line-number="9013"></td>
        <td id="LC9013" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9014" class="blob-num js-line-number" data-line-number="9014"></td>
        <td id="LC9014" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9015" class="blob-num js-line-number" data-line-number="9015"></td>
        <td id="LC9015" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ampmGetter</span>(<span class="pl-smi">date</span>, <span class="pl-smi">formats</span>) {</td>
      </tr>
      <tr>
        <td id="L9016" class="blob-num js-line-number" data-line-number="9016"></td>
        <td id="LC9016" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> date.<span class="pl-c1">getHours</span>() <span class="pl-k">&lt;</span> <span class="pl-c1">12</span> <span class="pl-k">?</span> formats.AMPMS[<span class="pl-c1">0</span>] <span class="pl-k">:</span> formats.AMPMS[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L9017" class="blob-num js-line-number" data-line-number="9017"></td>
        <td id="LC9017" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9018" class="blob-num js-line-number" data-line-number="9018"></td>
        <td id="LC9018" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9019" class="blob-num js-line-number" data-line-number="9019"></td>
        <td id="LC9019" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DATE_FORMATS</span> <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9020" class="blob-num js-line-number" data-line-number="9020"></td>
        <td id="LC9020" class="blob-code blob-code-inner js-file-line">  yyyy<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>FullYear<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">4</span>),</td>
      </tr>
      <tr>
        <td id="L9021" class="blob-num js-line-number" data-line-number="9021"></td>
        <td id="LC9021" class="blob-code blob-code-inner js-file-line">    yy<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>FullYear<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-c1">0</span>, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L9022" class="blob-num js-line-number" data-line-number="9022"></td>
        <td id="LC9022" class="blob-code blob-code-inner js-file-line">     y<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>FullYear<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9023" class="blob-num js-line-number" data-line-number="9023"></td>
        <td id="LC9023" class="blob-code blob-code-inner js-file-line">  MMMM<span class="pl-k">:</span> dateStrGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Month<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L9024" class="blob-num js-line-number" data-line-number="9024"></td>
        <td id="LC9024" class="blob-code blob-code-inner js-file-line">   MMM<span class="pl-k">:</span> dateStrGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Month<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L9025" class="blob-num js-line-number" data-line-number="9025"></td>
        <td id="LC9025" class="blob-code blob-code-inner js-file-line">    MM<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Month<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9026" class="blob-num js-line-number" data-line-number="9026"></td>
        <td id="LC9026" class="blob-code blob-code-inner js-file-line">     M<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Month<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9027" class="blob-num js-line-number" data-line-number="9027"></td>
        <td id="LC9027" class="blob-code blob-code-inner js-file-line">    dd<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Date<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L9028" class="blob-num js-line-number" data-line-number="9028"></td>
        <td id="LC9028" class="blob-code blob-code-inner js-file-line">     d<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Date<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9029" class="blob-num js-line-number" data-line-number="9029"></td>
        <td id="LC9029" class="blob-code blob-code-inner js-file-line">    HH<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Hours<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L9030" class="blob-num js-line-number" data-line-number="9030"></td>
        <td id="LC9030" class="blob-code blob-code-inner js-file-line">     H<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Hours<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9031" class="blob-num js-line-number" data-line-number="9031"></td>
        <td id="LC9031" class="blob-code blob-code-inner js-file-line">    hh<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Hours<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>, <span class="pl-k">-</span><span class="pl-c1">12</span>),</td>
      </tr>
      <tr>
        <td id="L9032" class="blob-num js-line-number" data-line-number="9032"></td>
        <td id="LC9032" class="blob-code blob-code-inner js-file-line">     h<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Hours<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>, <span class="pl-k">-</span><span class="pl-c1">12</span>),</td>
      </tr>
      <tr>
        <td id="L9033" class="blob-num js-line-number" data-line-number="9033"></td>
        <td id="LC9033" class="blob-code blob-code-inner js-file-line">    mm<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Minutes<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L9034" class="blob-num js-line-number" data-line-number="9034"></td>
        <td id="LC9034" class="blob-code blob-code-inner js-file-line">     m<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Minutes<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9035" class="blob-num js-line-number" data-line-number="9035"></td>
        <td id="LC9035" class="blob-code blob-code-inner js-file-line">    ss<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Seconds<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">2</span>),</td>
      </tr>
      <tr>
        <td id="L9036" class="blob-num js-line-number" data-line-number="9036"></td>
        <td id="LC9036" class="blob-code blob-code-inner js-file-line">     s<span class="pl-k">:</span> dateGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Seconds<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>),</td>
      </tr>
      <tr>
        <td id="L9037" class="blob-num js-line-number" data-line-number="9037"></td>
        <td id="LC9037" class="blob-code blob-code-inner js-file-line">  EEEE<span class="pl-k">:</span> dateStrGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Day<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L9038" class="blob-num js-line-number" data-line-number="9038"></td>
        <td id="LC9038" class="blob-code blob-code-inner js-file-line">   EEE<span class="pl-k">:</span> dateStrGetter(<span class="pl-s"><span class="pl-pds">&#39;</span>Day<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L9039" class="blob-num js-line-number" data-line-number="9039"></td>
        <td id="LC9039" class="blob-code blob-code-inner js-file-line">     a<span class="pl-k">:</span> ampmGetter,</td>
      </tr>
      <tr>
        <td id="L9040" class="blob-num js-line-number" data-line-number="9040"></td>
        <td id="LC9040" class="blob-code blob-code-inner js-file-line">     Z<span class="pl-k">:</span> timeZoneGetter</td>
      </tr>
      <tr>
        <td id="L9041" class="blob-num js-line-number" data-line-number="9041"></td>
        <td id="LC9041" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L9042" class="blob-num js-line-number" data-line-number="9042"></td>
        <td id="LC9042" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9043" class="blob-num js-line-number" data-line-number="9043"></td>
        <td id="LC9043" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">DATE_FORMATS_SPLIT</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span>((?:<span class="pl-c1">[<span class="pl-k">^</span>yMdHhmsaZE&#39;]</span><span class="pl-k">+</span>)<span class="pl-k">|</span>(?:&#39;(?:<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">|</span>&#39;&#39;)<span class="pl-k">*</span>&#39;)<span class="pl-k">|</span>(?:E<span class="pl-k">+</span><span class="pl-k">|</span>y<span class="pl-k">+</span><span class="pl-k">|</span>M<span class="pl-k">+</span><span class="pl-k">|</span>d<span class="pl-k">+</span><span class="pl-k">|</span>H<span class="pl-k">+</span><span class="pl-k">|</span>h<span class="pl-k">+</span><span class="pl-k">|</span>m<span class="pl-k">+</span><span class="pl-k">|</span>s<span class="pl-k">+</span><span class="pl-k">|</span>a<span class="pl-k">|</span>Z))(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L9044" class="blob-num js-line-number" data-line-number="9044"></td>
        <td id="LC9044" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">NUMBER_STRING</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L9045" class="blob-num js-line-number" data-line-number="9045"></td>
        <td id="LC9045" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9046" class="blob-num js-line-number" data-line-number="9046"></td>
        <td id="LC9046" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9047" class="blob-num js-line-number" data-line-number="9047"></td>
        <td id="LC9047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L9048" class="blob-num js-line-number" data-line-number="9048"></td>
        <td id="LC9048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.date</span></td>
      </tr>
      <tr>
        <td id="L9049" class="blob-num js-line-number" data-line-number="9049"></td>
        <td id="LC9049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9050" class="blob-num js-line-number" data-line-number="9050"></td>
        <td id="LC9050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9051" class="blob-num js-line-number" data-line-number="9051"></td>
        <td id="LC9051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9052" class="blob-num js-line-number" data-line-number="9052"></td>
        <td id="LC9052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   Formats `date` to a string based on the requested `format`.</span></td>
      </tr>
      <tr>
        <td id="L9053" class="blob-num js-line-number" data-line-number="9053"></td>
        <td id="LC9053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9054" class="blob-num js-line-number" data-line-number="9054"></td>
        <td id="LC9054" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `format` string can be composed of the following elements:</span></td>
      </tr>
      <tr>
        <td id="L9055" class="blob-num js-line-number" data-line-number="9055"></td>
        <td id="LC9055" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9056" class="blob-num js-line-number" data-line-number="9056"></td>
        <td id="LC9056" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;yyyy&#39;`: 4 digit representation of year (e.g. AD 1 =&gt; 0001, AD 2010 =&gt; 2010)</span></td>
      </tr>
      <tr>
        <td id="L9057" class="blob-num js-line-number" data-line-number="9057"></td>
        <td id="LC9057" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;yy&#39;`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 =&gt; 01, AD 2010 =&gt; 10)</span></td>
      </tr>
      <tr>
        <td id="L9058" class="blob-num js-line-number" data-line-number="9058"></td>
        <td id="LC9058" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;y&#39;`: 1 digit representation of year, e.g. (AD 1 =&gt; 1, AD 199 =&gt; 199)</span></td>
      </tr>
      <tr>
        <td id="L9059" class="blob-num js-line-number" data-line-number="9059"></td>
        <td id="LC9059" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;MMMM&#39;`: Month in year (January-December)</span></td>
      </tr>
      <tr>
        <td id="L9060" class="blob-num js-line-number" data-line-number="9060"></td>
        <td id="LC9060" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;MMM&#39;`: Month in year (Jan-Dec)</span></td>
      </tr>
      <tr>
        <td id="L9061" class="blob-num js-line-number" data-line-number="9061"></td>
        <td id="LC9061" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;MM&#39;`: Month in year, padded (01-12)</span></td>
      </tr>
      <tr>
        <td id="L9062" class="blob-num js-line-number" data-line-number="9062"></td>
        <td id="LC9062" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;M&#39;`: Month in year (1-12)</span></td>
      </tr>
      <tr>
        <td id="L9063" class="blob-num js-line-number" data-line-number="9063"></td>
        <td id="LC9063" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;dd&#39;`: Day in month, padded (01-31)</span></td>
      </tr>
      <tr>
        <td id="L9064" class="blob-num js-line-number" data-line-number="9064"></td>
        <td id="LC9064" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;d&#39;`: Day in month (1-31)</span></td>
      </tr>
      <tr>
        <td id="L9065" class="blob-num js-line-number" data-line-number="9065"></td>
        <td id="LC9065" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;EEEE&#39;`: Day in Week,(Sunday-Saturday)</span></td>
      </tr>
      <tr>
        <td id="L9066" class="blob-num js-line-number" data-line-number="9066"></td>
        <td id="LC9066" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;EEE&#39;`: Day in Week, (Sun-Sat)</span></td>
      </tr>
      <tr>
        <td id="L9067" class="blob-num js-line-number" data-line-number="9067"></td>
        <td id="LC9067" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;HH&#39;`: Hour in day, padded (00-23)</span></td>
      </tr>
      <tr>
        <td id="L9068" class="blob-num js-line-number" data-line-number="9068"></td>
        <td id="LC9068" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;H&#39;`: Hour in day (0-23)</span></td>
      </tr>
      <tr>
        <td id="L9069" class="blob-num js-line-number" data-line-number="9069"></td>
        <td id="LC9069" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;hh&#39;`: Hour in am/pm, padded (01-12)</span></td>
      </tr>
      <tr>
        <td id="L9070" class="blob-num js-line-number" data-line-number="9070"></td>
        <td id="LC9070" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;h&#39;`: Hour in am/pm, (1-12)</span></td>
      </tr>
      <tr>
        <td id="L9071" class="blob-num js-line-number" data-line-number="9071"></td>
        <td id="LC9071" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;mm&#39;`: Minute in hour, padded (00-59)</span></td>
      </tr>
      <tr>
        <td id="L9072" class="blob-num js-line-number" data-line-number="9072"></td>
        <td id="LC9072" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;m&#39;`: Minute in hour (0-59)</span></td>
      </tr>
      <tr>
        <td id="L9073" class="blob-num js-line-number" data-line-number="9073"></td>
        <td id="LC9073" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;ss&#39;`: Second in minute, padded (00-59)</span></td>
      </tr>
      <tr>
        <td id="L9074" class="blob-num js-line-number" data-line-number="9074"></td>
        <td id="LC9074" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;s&#39;`: Second in minute (0-59)</span></td>
      </tr>
      <tr>
        <td id="L9075" class="blob-num js-line-number" data-line-number="9075"></td>
        <td id="LC9075" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;a&#39;`: am/pm marker</span></td>
      </tr>
      <tr>
        <td id="L9076" class="blob-num js-line-number" data-line-number="9076"></td>
        <td id="LC9076" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;Z&#39;`: 4 digit (+sign) representation of the timezone offset (-1200-1200)</span></td>
      </tr>
      <tr>
        <td id="L9077" class="blob-num js-line-number" data-line-number="9077"></td>
        <td id="LC9077" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9078" class="blob-num js-line-number" data-line-number="9078"></td>
        <td id="LC9078" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `format` string can also be one of the following predefined</span></td>
      </tr>
      <tr>
        <td id="L9079" class="blob-num js-line-number" data-line-number="9079"></td>
        <td id="LC9079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   {@link guide/dev_guide.i18n localizable formats}:</span></td>
      </tr>
      <tr>
        <td id="L9080" class="blob-num js-line-number" data-line-number="9080"></td>
        <td id="LC9080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9081" class="blob-num js-line-number" data-line-number="9081"></td>
        <td id="LC9081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;medium&#39;`: equivalent to `&#39;MMM d, y h:mm:ss a&#39;` for en_US locale</span></td>
      </tr>
      <tr>
        <td id="L9082" class="blob-num js-line-number" data-line-number="9082"></td>
        <td id="LC9082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     (e.g. Sep 3, 2010 12:05:08 pm)</span></td>
      </tr>
      <tr>
        <td id="L9083" class="blob-num js-line-number" data-line-number="9083"></td>
        <td id="LC9083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;short&#39;`: equivalent to `&#39;M/d/yy h:mm a&#39;` for en_US  locale (e.g. 9/3/10 12:05 pm)</span></td>
      </tr>
      <tr>
        <td id="L9084" class="blob-num js-line-number" data-line-number="9084"></td>
        <td id="LC9084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;fullDate&#39;`: equivalent to `&#39;EEEE, MMMM d,y&#39;` for en_US  locale</span></td>
      </tr>
      <tr>
        <td id="L9085" class="blob-num js-line-number" data-line-number="9085"></td>
        <td id="LC9085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     (e.g. Friday, September 3, 2010)</span></td>
      </tr>
      <tr>
        <td id="L9086" class="blob-num js-line-number" data-line-number="9086"></td>
        <td id="LC9086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;longDate&#39;`: equivalent to `&#39;MMMM d, y&#39;` for en_US  locale (e.g. September 3, 2010</span></td>
      </tr>
      <tr>
        <td id="L9087" class="blob-num js-line-number" data-line-number="9087"></td>
        <td id="LC9087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;mediumDate&#39;`: equivalent to `&#39;MMM d, y&#39;` for en_US  locale (e.g. Sep 3, 2010)</span></td>
      </tr>
      <tr>
        <td id="L9088" class="blob-num js-line-number" data-line-number="9088"></td>
        <td id="LC9088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;shortDate&#39;`: equivalent to `&#39;M/d/yy&#39;` for en_US locale (e.g. 9/3/10)</span></td>
      </tr>
      <tr>
        <td id="L9089" class="blob-num js-line-number" data-line-number="9089"></td>
        <td id="LC9089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;mediumTime&#39;`: equivalent to `&#39;h:mm:ss a&#39;` for en_US locale (e.g. 12:05:08 pm)</span></td>
      </tr>
      <tr>
        <td id="L9090" class="blob-num js-line-number" data-line-number="9090"></td>
        <td id="LC9090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `&#39;shortTime&#39;`: equivalent to `&#39;h:mm a&#39;` for en_US locale (e.g. 12:05 pm)</span></td>
      </tr>
      <tr>
        <td id="L9091" class="blob-num js-line-number" data-line-number="9091"></td>
        <td id="LC9091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9092" class="blob-num js-line-number" data-line-number="9092"></td>
        <td id="LC9092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `format` string can contain literal values. These need to be quoted with single quotes (e.g.</span></td>
      </tr>
      <tr>
        <td id="L9093" class="blob-num js-line-number" data-line-number="9093"></td>
        <td id="LC9093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   `&quot;h &#39;in the morning&#39;&quot;`). In order to output single quote, use two single quotes in a sequence</span></td>
      </tr>
      <tr>
        <td id="L9094" class="blob-num js-line-number" data-line-number="9094"></td>
        <td id="LC9094" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   (e.g. `&quot;h o&#39;&#39;clock&quot;`).</span></td>
      </tr>
      <tr>
        <td id="L9095" class="blob-num js-line-number" data-line-number="9095"></td>
        <td id="LC9095" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9096" class="blob-num js-line-number" data-line-number="9096"></td>
        <td id="LC9096" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {(Date|number|string)} date Date to format either as Date object, milliseconds (string or</span></td>
      </tr>
      <tr>
        <td id="L9097" class="blob-num js-line-number" data-line-number="9097"></td>
        <td id="LC9097" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.SSSZ and it&#39;s</span></td>
      </tr>
      <tr>
        <td id="L9098" class="blob-num js-line-number" data-line-number="9098"></td>
        <td id="LC9098" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ).</span></td>
      </tr>
      <tr>
        <td id="L9099" class="blob-num js-line-number" data-line-number="9099"></td>
        <td id="LC9099" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} format Formatting rules (see Description). If not specified,</span></td>
      </tr>
      <tr>
        <td id="L9100" class="blob-num js-line-number" data-line-number="9100"></td>
        <td id="LC9100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    `mediumDate` is used.</span></td>
      </tr>
      <tr>
        <td id="L9101" class="blob-num js-line-number" data-line-number="9101"></td>
        <td id="LC9101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} Formatted string or the input if input is not recognized as date/millis.</span></td>
      </tr>
      <tr>
        <td id="L9102" class="blob-num js-line-number" data-line-number="9102"></td>
        <td id="LC9102" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9103" class="blob-num js-line-number" data-line-number="9103"></td>
        <td id="LC9103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9104" class="blob-num js-line-number" data-line-number="9104"></td>
        <td id="LC9104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9105" class="blob-num js-line-number" data-line-number="9105"></td>
        <td id="LC9105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9106" class="blob-num js-line-number" data-line-number="9106"></td>
        <td id="LC9106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;medium&#39;}}&lt;/span&gt;:</span></td>
      </tr>
      <tr>
        <td id="L9107" class="blob-num js-line-number" data-line-number="9107"></td>
        <td id="LC9107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           {{1288323623006 | date:&#39;medium&#39;}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L9108" class="blob-num js-line-number" data-line-number="9108"></td>
        <td id="LC9108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;}}&lt;/span&gt;:</span></td>
      </tr>
      <tr>
        <td id="L9109" class="blob-num js-line-number" data-line-number="9109"></td>
        <td id="LC9109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          {{1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L9110" class="blob-num js-line-number" data-line-number="9110"></td>
        <td id="LC9110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;span ng-non-bindable&gt;{{1288323623006 | date:&#39;MM/dd/yyyy @ h:mma&#39;}}&lt;/span&gt;:</span></td>
      </tr>
      <tr>
        <td id="L9111" class="blob-num js-line-number" data-line-number="9111"></td>
        <td id="LC9111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          {{&#39;1288323623006&#39; | date:&#39;MM/dd/yyyy @ h:mma&#39;}}&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L9112" class="blob-num js-line-number" data-line-number="9112"></td>
        <td id="LC9112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9113" class="blob-num js-line-number" data-line-number="9113"></td>
        <td id="LC9113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9114" class="blob-num js-line-number" data-line-number="9114"></td>
        <td id="LC9114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should format date&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9115" class="blob-num js-line-number" data-line-number="9115"></td>
        <td id="LC9115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&quot;1288323623006 | date:&#39;medium&#39;&quot;)).</span></td>
      </tr>
      <tr>
        <td id="L9116" class="blob-num js-line-number" data-line-number="9116"></td>
        <td id="LC9116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            toMatch(/Oct 2\d, 2010 \d{1,2}:\d{2}:\d{2} (AM|PM)/);</span></td>
      </tr>
      <tr>
        <td id="L9117" class="blob-num js-line-number" data-line-number="9117"></td>
        <td id="LC9117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&quot;1288323623006 | date:&#39;yyyy-MM-dd HH:mm:ss Z&#39;&quot;)).</span></td>
      </tr>
      <tr>
        <td id="L9118" class="blob-num js-line-number" data-line-number="9118"></td>
        <td id="LC9118" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            toMatch(/2010\-10\-2\d \d{2}:\d{2}:\d{2} \-?\d{4}/);</span></td>
      </tr>
      <tr>
        <td id="L9119" class="blob-num js-line-number" data-line-number="9119"></td>
        <td id="LC9119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&quot;&#39;1288323623006&#39; | date:&#39;MM/dd/yyyy @ h:mma&#39;&quot;)).</span></td>
      </tr>
      <tr>
        <td id="L9120" class="blob-num js-line-number" data-line-number="9120"></td>
        <td id="LC9120" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            toMatch(/10\/2\d\/2010 @ \d{1,2}:\d{2}(AM|PM)/);</span></td>
      </tr>
      <tr>
        <td id="L9121" class="blob-num js-line-number" data-line-number="9121"></td>
        <td id="LC9121" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9122" class="blob-num js-line-number" data-line-number="9122"></td>
        <td id="LC9122" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9123" class="blob-num js-line-number" data-line-number="9123"></td>
        <td id="LC9123" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9124" class="blob-num js-line-number" data-line-number="9124"></td>
        <td id="LC9124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9125" class="blob-num js-line-number" data-line-number="9125"></td>
        <td id="LC9125" class="blob-code blob-code-inner js-file-line">dateFilter.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$locale<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L9126" class="blob-num js-line-number" data-line-number="9126"></td>
        <td id="LC9126" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">dateFilter</span>(<span class="pl-smi">$locale</span>) {</td>
      </tr>
      <tr>
        <td id="L9127" class="blob-num js-line-number" data-line-number="9127"></td>
        <td id="LC9127" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9128" class="blob-num js-line-number" data-line-number="9128"></td>
        <td id="LC9128" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9129" class="blob-num js-line-number" data-line-number="9129"></td>
        <td id="LC9129" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">R_ISO8601_STR</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">\d</span><span class="pl-k">{4}</span>)-<span class="pl-k">?</span>(<span class="pl-c1">\d\d</span>)-<span class="pl-k">?</span>(<span class="pl-c1">\d\d</span>)(?:T(<span class="pl-c1">\d\d</span>)(?::<span class="pl-k">?</span>(<span class="pl-c1">\d\d</span>)(?::<span class="pl-k">?</span>(<span class="pl-c1">\d\d</span>)(?:<span class="pl-cce">\.</span>(<span class="pl-c1">\d</span><span class="pl-k">{3}</span>))<span class="pl-k">?</span>)<span class="pl-k">?</span>)<span class="pl-k">?</span>(Z<span class="pl-k">|</span>(<span class="pl-c1">[+-]</span>)(<span class="pl-c1">\d\d</span>):<span class="pl-k">?</span>(<span class="pl-c1">\d\d</span>)))<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L9130" class="blob-num js-line-number" data-line-number="9130"></td>
        <td id="LC9130" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">jsonStringToDate</span>(<span class="pl-smi">string</span>){</td>
      </tr>
      <tr>
        <td id="L9131" class="blob-num js-line-number" data-line-number="9131"></td>
        <td id="LC9131" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> match;</td>
      </tr>
      <tr>
        <td id="L9132" class="blob-num js-line-number" data-line-number="9132"></td>
        <td id="LC9132" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (match <span class="pl-k">=</span> string.<span class="pl-c1">match</span>(<span class="pl-c1">R_ISO8601_STR</span>)) {</td>
      </tr>
      <tr>
        <td id="L9133" class="blob-num js-line-number" data-line-number="9133"></td>
        <td id="LC9133" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> date <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">0</span>),</td>
      </tr>
      <tr>
        <td id="L9134" class="blob-num js-line-number" data-line-number="9134"></td>
        <td id="LC9134" class="blob-code blob-code-inner js-file-line">          tzHour <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L9135" class="blob-num js-line-number" data-line-number="9135"></td>
        <td id="LC9135" class="blob-code blob-code-inner js-file-line">          tzMin  <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L9136" class="blob-num js-line-number" data-line-number="9136"></td>
        <td id="LC9136" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (match[<span class="pl-c1">9</span>]) {</td>
      </tr>
      <tr>
        <td id="L9137" class="blob-num js-line-number" data-line-number="9137"></td>
        <td id="LC9137" class="blob-code blob-code-inner js-file-line">        tzHour <span class="pl-k">=</span> int(match[<span class="pl-c1">9</span>] <span class="pl-k">+</span> match[<span class="pl-c1">10</span>]);</td>
      </tr>
      <tr>
        <td id="L9138" class="blob-num js-line-number" data-line-number="9138"></td>
        <td id="LC9138" class="blob-code blob-code-inner js-file-line">        tzMin <span class="pl-k">=</span> int(match[<span class="pl-c1">9</span>] <span class="pl-k">+</span> match[<span class="pl-c1">11</span>]);</td>
      </tr>
      <tr>
        <td id="L9139" class="blob-num js-line-number" data-line-number="9139"></td>
        <td id="LC9139" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9140" class="blob-num js-line-number" data-line-number="9140"></td>
        <td id="LC9140" class="blob-code blob-code-inner js-file-line">      date.<span class="pl-c1">setUTCFullYear</span>(int(match[<span class="pl-c1">1</span>]), int(match[<span class="pl-c1">2</span>]) <span class="pl-k">-</span> <span class="pl-c1">1</span>, int(match[<span class="pl-c1">3</span>]));</td>
      </tr>
      <tr>
        <td id="L9141" class="blob-num js-line-number" data-line-number="9141"></td>
        <td id="LC9141" class="blob-code blob-code-inner js-file-line">      date.<span class="pl-c1">setUTCHours</span>(int(match[<span class="pl-c1">4</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>) <span class="pl-k">-</span> tzHour, int(match[<span class="pl-c1">5</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>) <span class="pl-k">-</span> tzMin, int(match[<span class="pl-c1">6</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>), int(match[<span class="pl-c1">7</span>]<span class="pl-k">||</span><span class="pl-c1">0</span>));</td>
      </tr>
      <tr>
        <td id="L9142" class="blob-num js-line-number" data-line-number="9142"></td>
        <td id="LC9142" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L9143" class="blob-num js-line-number" data-line-number="9143"></td>
        <td id="LC9143" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9144" class="blob-num js-line-number" data-line-number="9144"></td>
        <td id="LC9144" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> string;</td>
      </tr>
      <tr>
        <td id="L9145" class="blob-num js-line-number" data-line-number="9145"></td>
        <td id="LC9145" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9146" class="blob-num js-line-number" data-line-number="9146"></td>
        <td id="LC9146" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9147" class="blob-num js-line-number" data-line-number="9147"></td>
        <td id="LC9147" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9148" class="blob-num js-line-number" data-line-number="9148"></td>
        <td id="LC9148" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">date</span>, <span class="pl-smi">format</span>) {</td>
      </tr>
      <tr>
        <td id="L9149" class="blob-num js-line-number" data-line-number="9149"></td>
        <td id="LC9149" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> text <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9150" class="blob-num js-line-number" data-line-number="9150"></td>
        <td id="LC9150" class="blob-code blob-code-inner js-file-line">        parts <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L9151" class="blob-num js-line-number" data-line-number="9151"></td>
        <td id="LC9151" class="blob-code blob-code-inner js-file-line">        fn, match;</td>
      </tr>
      <tr>
        <td id="L9152" class="blob-num js-line-number" data-line-number="9152"></td>
        <td id="LC9152" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9153" class="blob-num js-line-number" data-line-number="9153"></td>
        <td id="LC9153" class="blob-code blob-code-inner js-file-line">    format <span class="pl-k">=</span> format <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>mediumDate<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9154" class="blob-num js-line-number" data-line-number="9154"></td>
        <td id="LC9154" class="blob-code blob-code-inner js-file-line">    format <span class="pl-k">=</span> $locale.DATETIME_FORMATS[format] <span class="pl-k">||</span> format;</td>
      </tr>
      <tr>
        <td id="L9155" class="blob-num js-line-number" data-line-number="9155"></td>
        <td id="LC9155" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isString(date)) {</td>
      </tr>
      <tr>
        <td id="L9156" class="blob-num js-line-number" data-line-number="9156"></td>
        <td id="LC9156" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">NUMBER_STRING</span>.<span class="pl-c1">test</span>(date)) {</td>
      </tr>
      <tr>
        <td id="L9157" class="blob-num js-line-number" data-line-number="9157"></td>
        <td id="LC9157" class="blob-code blob-code-inner js-file-line">        date <span class="pl-k">=</span> int(date);</td>
      </tr>
      <tr>
        <td id="L9158" class="blob-num js-line-number" data-line-number="9158"></td>
        <td id="LC9158" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9159" class="blob-num js-line-number" data-line-number="9159"></td>
        <td id="LC9159" class="blob-code blob-code-inner js-file-line">        date <span class="pl-k">=</span> jsonStringToDate(date);</td>
      </tr>
      <tr>
        <td id="L9160" class="blob-num js-line-number" data-line-number="9160"></td>
        <td id="LC9160" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9161" class="blob-num js-line-number" data-line-number="9161"></td>
        <td id="LC9161" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9162" class="blob-num js-line-number" data-line-number="9162"></td>
        <td id="LC9162" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9163" class="blob-num js-line-number" data-line-number="9163"></td>
        <td id="LC9163" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isNumber(date)) {</td>
      </tr>
      <tr>
        <td id="L9164" class="blob-num js-line-number" data-line-number="9164"></td>
        <td id="LC9164" class="blob-code blob-code-inner js-file-line">      date <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Date</span>(date);</td>
      </tr>
      <tr>
        <td id="L9165" class="blob-num js-line-number" data-line-number="9165"></td>
        <td id="LC9165" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9166" class="blob-num js-line-number" data-line-number="9166"></td>
        <td id="LC9166" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9167" class="blob-num js-line-number" data-line-number="9167"></td>
        <td id="LC9167" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>isDate(date)) {</td>
      </tr>
      <tr>
        <td id="L9168" class="blob-num js-line-number" data-line-number="9168"></td>
        <td id="LC9168" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> date;</td>
      </tr>
      <tr>
        <td id="L9169" class="blob-num js-line-number" data-line-number="9169"></td>
        <td id="LC9169" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9170" class="blob-num js-line-number" data-line-number="9170"></td>
        <td id="LC9170" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9171" class="blob-num js-line-number" data-line-number="9171"></td>
        <td id="LC9171" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(format) {</td>
      </tr>
      <tr>
        <td id="L9172" class="blob-num js-line-number" data-line-number="9172"></td>
        <td id="LC9172" class="blob-code blob-code-inner js-file-line">      match <span class="pl-k">=</span> <span class="pl-c1">DATE_FORMATS_SPLIT</span>.<span class="pl-c1">exec</span>(format);</td>
      </tr>
      <tr>
        <td id="L9173" class="blob-num js-line-number" data-line-number="9173"></td>
        <td id="LC9173" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (match) {</td>
      </tr>
      <tr>
        <td id="L9174" class="blob-num js-line-number" data-line-number="9174"></td>
        <td id="LC9174" class="blob-code blob-code-inner js-file-line">        parts <span class="pl-k">=</span> <span class="pl-c1">concat</span>(parts, match, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L9175" class="blob-num js-line-number" data-line-number="9175"></td>
        <td id="LC9175" class="blob-code blob-code-inner js-file-line">        format <span class="pl-k">=</span> parts.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L9176" class="blob-num js-line-number" data-line-number="9176"></td>
        <td id="LC9176" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9177" class="blob-num js-line-number" data-line-number="9177"></td>
        <td id="LC9177" class="blob-code blob-code-inner js-file-line">        parts.<span class="pl-c1">push</span>(format);</td>
      </tr>
      <tr>
        <td id="L9178" class="blob-num js-line-number" data-line-number="9178"></td>
        <td id="LC9178" class="blob-code blob-code-inner js-file-line">        format <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L9179" class="blob-num js-line-number" data-line-number="9179"></td>
        <td id="LC9179" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9180" class="blob-num js-line-number" data-line-number="9180"></td>
        <td id="LC9180" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9181" class="blob-num js-line-number" data-line-number="9181"></td>
        <td id="LC9181" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9182" class="blob-num js-line-number" data-line-number="9182"></td>
        <td id="LC9182" class="blob-code blob-code-inner js-file-line">    forEach(parts, <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L9183" class="blob-num js-line-number" data-line-number="9183"></td>
        <td id="LC9183" class="blob-code blob-code-inner js-file-line">      fn <span class="pl-k">=</span> <span class="pl-c1">DATE_FORMATS</span>[value];</td>
      </tr>
      <tr>
        <td id="L9184" class="blob-num js-line-number" data-line-number="9184"></td>
        <td id="LC9184" class="blob-code blob-code-inner js-file-line">      text <span class="pl-k">+=</span> fn <span class="pl-k">?</span> fn(date, $locale.DATETIME_FORMATS)</td>
      </tr>
      <tr>
        <td id="L9185" class="blob-num js-line-number" data-line-number="9185"></td>
        <td id="LC9185" class="blob-code blob-code-inner js-file-line">                 <span class="pl-k">:</span> value.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-k">^</span>&#39;<span class="pl-k">|</span>&#39;<span class="pl-k">$</span>)<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&#39;&#39;<span class="pl-pds">/</span>g</span>, <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9186" class="blob-num js-line-number" data-line-number="9186"></td>
        <td id="LC9186" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L9187" class="blob-num js-line-number" data-line-number="9187"></td>
        <td id="LC9187" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9188" class="blob-num js-line-number" data-line-number="9188"></td>
        <td id="LC9188" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> text;</td>
      </tr>
      <tr>
        <td id="L9189" class="blob-num js-line-number" data-line-number="9189"></td>
        <td id="LC9189" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9190" class="blob-num js-line-number" data-line-number="9190"></td>
        <td id="LC9190" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9191" class="blob-num js-line-number" data-line-number="9191"></td>
        <td id="LC9191" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9192" class="blob-num js-line-number" data-line-number="9192"></td>
        <td id="LC9192" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9193" class="blob-num js-line-number" data-line-number="9193"></td>
        <td id="LC9193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9194" class="blob-num js-line-number" data-line-number="9194"></td>
        <td id="LC9194" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L9195" class="blob-num js-line-number" data-line-number="9195"></td>
        <td id="LC9195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.json</span></td>
      </tr>
      <tr>
        <td id="L9196" class="blob-num js-line-number" data-line-number="9196"></td>
        <td id="LC9196" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9197" class="blob-num js-line-number" data-line-number="9197"></td>
        <td id="LC9197" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9198" class="blob-num js-line-number" data-line-number="9198"></td>
        <td id="LC9198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9199" class="blob-num js-line-number" data-line-number="9199"></td>
        <td id="LC9199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   Allows you to convert a JavaScript object into JSON string.</span></td>
      </tr>
      <tr>
        <td id="L9200" class="blob-num js-line-number" data-line-number="9200"></td>
        <td id="LC9200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9201" class="blob-num js-line-number" data-line-number="9201"></td>
        <td id="LC9201" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   This filter is mostly useful for debugging. When using the double curly {{value}} notation</span></td>
      </tr>
      <tr>
        <td id="L9202" class="blob-num js-line-number" data-line-number="9202"></td>
        <td id="LC9202" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   the binding is automatically converted to JSON.</span></td>
      </tr>
      <tr>
        <td id="L9203" class="blob-num js-line-number" data-line-number="9203"></td>
        <td id="LC9203" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9204" class="blob-num js-line-number" data-line-number="9204"></td>
        <td id="LC9204" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} object Any JavaScript object (including arrays and primitive types) to filter.</span></td>
      </tr>
      <tr>
        <td id="L9205" class="blob-num js-line-number" data-line-number="9205"></td>
        <td id="LC9205" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {string} JSON string.</span></td>
      </tr>
      <tr>
        <td id="L9206" class="blob-num js-line-number" data-line-number="9206"></td>
        <td id="LC9206" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9207" class="blob-num js-line-number" data-line-number="9207"></td>
        <td id="LC9207" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9208" class="blob-num js-line-number" data-line-number="9208"></td>
        <td id="LC9208" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span>:</span></td>
      </tr>
      <tr>
        <td id="L9209" class="blob-num js-line-number" data-line-number="9209"></td>
        <td id="LC9209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9210" class="blob-num js-line-number" data-line-number="9210"></td>
        <td id="LC9210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9211" class="blob-num js-line-number" data-line-number="9211"></td>
        <td id="LC9211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;pre&gt;{{ {&#39;name&#39;:&#39;value&#39;} | json }}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9212" class="blob-num js-line-number" data-line-number="9212"></td>
        <td id="LC9212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9213" class="blob-num js-line-number" data-line-number="9213"></td>
        <td id="LC9213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9214" class="blob-num js-line-number" data-line-number="9214"></td>
        <td id="LC9214" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should jsonify filtered objects&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9215" class="blob-num js-line-number" data-line-number="9215"></td>
        <td id="LC9215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&quot;{&#39;name&#39;:&#39;value&#39;}&quot;)).toMatch(/\{\n  &quot;name&quot;: ?&quot;value&quot;\n}/);</span></td>
      </tr>
      <tr>
        <td id="L9216" class="blob-num js-line-number" data-line-number="9216"></td>
        <td id="LC9216" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9217" class="blob-num js-line-number" data-line-number="9217"></td>
        <td id="LC9217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9218" class="blob-num js-line-number" data-line-number="9218"></td>
        <td id="LC9218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9219" class="blob-num js-line-number" data-line-number="9219"></td>
        <td id="LC9219" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9220" class="blob-num js-line-number" data-line-number="9220"></td>
        <td id="LC9220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9221" class="blob-num js-line-number" data-line-number="9221"></td>
        <td id="LC9221" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">jsonFilter</span>() {</td>
      </tr>
      <tr>
        <td id="L9222" class="blob-num js-line-number" data-line-number="9222"></td>
        <td id="LC9222" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">object</span>) {</td>
      </tr>
      <tr>
        <td id="L9223" class="blob-num js-line-number" data-line-number="9223"></td>
        <td id="LC9223" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> toJson(object, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L9224" class="blob-num js-line-number" data-line-number="9224"></td>
        <td id="LC9224" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9225" class="blob-num js-line-number" data-line-number="9225"></td>
        <td id="LC9225" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9226" class="blob-num js-line-number" data-line-number="9226"></td>
        <td id="LC9226" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9227" class="blob-num js-line-number" data-line-number="9227"></td>
        <td id="LC9227" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9228" class="blob-num js-line-number" data-line-number="9228"></td>
        <td id="LC9228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9229" class="blob-num js-line-number" data-line-number="9229"></td>
        <td id="LC9229" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L9230" class="blob-num js-line-number" data-line-number="9230"></td>
        <td id="LC9230" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.lowercase</span></td>
      </tr>
      <tr>
        <td id="L9231" class="blob-num js-line-number" data-line-number="9231"></td>
        <td id="LC9231" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9232" class="blob-num js-line-number" data-line-number="9232"></td>
        <td id="LC9232" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9233" class="blob-num js-line-number" data-line-number="9233"></td>
        <td id="LC9233" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Converts string to lowercase.</span></td>
      </tr>
      <tr>
        <td id="L9234" class="blob-num js-line-number" data-line-number="9234"></td>
        <td id="LC9234" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@see</span> angular.lowercase</span></td>
      </tr>
      <tr>
        <td id="L9235" class="blob-num js-line-number" data-line-number="9235"></td>
        <td id="LC9235" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9236" class="blob-num js-line-number" data-line-number="9236"></td>
        <td id="LC9236" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> lowercaseFilter <span class="pl-k">=</span> valueFn(lowercase);</td>
      </tr>
      <tr>
        <td id="L9237" class="blob-num js-line-number" data-line-number="9237"></td>
        <td id="LC9237" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9238" class="blob-num js-line-number" data-line-number="9238"></td>
        <td id="LC9238" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9239" class="blob-num js-line-number" data-line-number="9239"></td>
        <td id="LC9239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9240" class="blob-num js-line-number" data-line-number="9240"></td>
        <td id="LC9240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc filter</span></td>
      </tr>
      <tr>
        <td id="L9241" class="blob-num js-line-number" data-line-number="9241"></td>
        <td id="LC9241" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.uppercase</span></td>
      </tr>
      <tr>
        <td id="L9242" class="blob-num js-line-number" data-line-number="9242"></td>
        <td id="LC9242" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9243" class="blob-num js-line-number" data-line-number="9243"></td>
        <td id="LC9243" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9244" class="blob-num js-line-number" data-line-number="9244"></td>
        <td id="LC9244" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Converts string to uppercase.</span></td>
      </tr>
      <tr>
        <td id="L9245" class="blob-num js-line-number" data-line-number="9245"></td>
        <td id="LC9245" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@see</span> angular.uppercase</span></td>
      </tr>
      <tr>
        <td id="L9246" class="blob-num js-line-number" data-line-number="9246"></td>
        <td id="LC9246" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9247" class="blob-num js-line-number" data-line-number="9247"></td>
        <td id="LC9247" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> uppercaseFilter <span class="pl-k">=</span> valueFn(uppercase);</td>
      </tr>
      <tr>
        <td id="L9248" class="blob-num js-line-number" data-line-number="9248"></td>
        <td id="LC9248" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9249" class="blob-num js-line-number" data-line-number="9249"></td>
        <td id="LC9249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9250" class="blob-num js-line-number" data-line-number="9250"></td>
        <td id="LC9250" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L9251" class="blob-num js-line-number" data-line-number="9251"></td>
        <td id="LC9251" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.limitTo</span></td>
      </tr>
      <tr>
        <td id="L9252" class="blob-num js-line-number" data-line-number="9252"></td>
        <td id="LC9252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9253" class="blob-num js-line-number" data-line-number="9253"></td>
        <td id="LC9253" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9254" class="blob-num js-line-number" data-line-number="9254"></td>
        <td id="LC9254" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9255" class="blob-num js-line-number" data-line-number="9255"></td>
        <td id="LC9255" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Creates a new array containing only a specified number of elements in an array. The elements</span></td>
      </tr>
      <tr>
        <td id="L9256" class="blob-num js-line-number" data-line-number="9256"></td>
        <td id="LC9256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * are taken from either the beginning or the end of the source array, as specified by the</span></td>
      </tr>
      <tr>
        <td id="L9257" class="blob-num js-line-number" data-line-number="9257"></td>
        <td id="LC9257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * value and sign (positive or negative) of `limit`.</span></td>
      </tr>
      <tr>
        <td id="L9258" class="blob-num js-line-number" data-line-number="9258"></td>
        <td id="LC9258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9259" class="blob-num js-line-number" data-line-number="9259"></td>
        <td id="LC9259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: This function is used to augment the `Array` type in Angular expressions. See</span></td>
      </tr>
      <tr>
        <td id="L9260" class="blob-num js-line-number" data-line-number="9260"></td>
        <td id="LC9260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$filter} for more information about Angular arrays.</span></td>
      </tr>
      <tr>
        <td id="L9261" class="blob-num js-line-number" data-line-number="9261"></td>
        <td id="LC9261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9262" class="blob-num js-line-number" data-line-number="9262"></td>
        <td id="LC9262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Array} array Source array to be limited.</span></td>
      </tr>
      <tr>
        <td id="L9263" class="blob-num js-line-number" data-line-number="9263"></td>
        <td id="LC9263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string|Number} limit The length of the returned array. If the `limit` number is</span></td>
      </tr>
      <tr>
        <td id="L9264" class="blob-num js-line-number" data-line-number="9264"></td>
        <td id="LC9264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     positive, `limit` number of items from the beginning of the source array are copied.</span></td>
      </tr>
      <tr>
        <td id="L9265" class="blob-num js-line-number" data-line-number="9265"></td>
        <td id="LC9265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     If the number is negative, `limit` number  of items from the end of the source array are</span></td>
      </tr>
      <tr>
        <td id="L9266" class="blob-num js-line-number" data-line-number="9266"></td>
        <td id="LC9266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     copied. The `limit` will be trimmed if it exceeds `array.length`</span></td>
      </tr>
      <tr>
        <td id="L9267" class="blob-num js-line-number" data-line-number="9267"></td>
        <td id="LC9267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Array} A new sub-array of length `limit` or less if input array had less than `limit`</span></td>
      </tr>
      <tr>
        <td id="L9268" class="blob-num js-line-number" data-line-number="9268"></td>
        <td id="LC9268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     elements.</span></td>
      </tr>
      <tr>
        <td id="L9269" class="blob-num js-line-number" data-line-number="9269"></td>
        <td id="LC9269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9270" class="blob-num js-line-number" data-line-number="9270"></td>
        <td id="LC9270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9271" class="blob-num js-line-number" data-line-number="9271"></td>
        <td id="LC9271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9272" class="blob-num js-line-number" data-line-number="9272"></td>
        <td id="LC9272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9273" class="blob-num js-line-number" data-line-number="9273"></td>
        <td id="LC9273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L9274" class="blob-num js-line-number" data-line-number="9274"></td>
        <td id="LC9274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L9275" class="blob-num js-line-number" data-line-number="9275"></td>
        <td id="LC9275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.numbers = [1,2,3,4,5,6,7,8,9];</span></td>
      </tr>
      <tr>
        <td id="L9276" class="blob-num js-line-number" data-line-number="9276"></td>
        <td id="LC9276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.limit = 3;</span></td>
      </tr>
      <tr>
        <td id="L9277" class="blob-num js-line-number" data-line-number="9277"></td>
        <td id="LC9277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L9278" class="blob-num js-line-number" data-line-number="9278"></td>
        <td id="LC9278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L9279" class="blob-num js-line-number" data-line-number="9279"></td>
        <td id="LC9279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9280" class="blob-num js-line-number" data-line-number="9280"></td>
        <td id="LC9280" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Limit {{numbers}} to: &lt;input type=&quot;integer&quot; ng-model=&quot;limit&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9281" class="blob-num js-line-number" data-line-number="9281"></td>
        <td id="LC9281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;p&gt;Output: {{ numbers | limitTo:limit }}&lt;/p&gt;</span></td>
      </tr>
      <tr>
        <td id="L9282" class="blob-num js-line-number" data-line-number="9282"></td>
        <td id="LC9282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L9283" class="blob-num js-line-number" data-line-number="9283"></td>
        <td id="LC9283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9284" class="blob-num js-line-number" data-line-number="9284"></td>
        <td id="LC9284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9285" class="blob-num js-line-number" data-line-number="9285"></td>
        <td id="LC9285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should limit the numer array to first three items&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9286" class="blob-num js-line-number" data-line-number="9286"></td>
        <td id="LC9286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live input[ng-model=limit]&#39;).val()).toBe(&#39;3&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9287" class="blob-num js-line-number" data-line-number="9287"></td>
        <td id="LC9287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[1,2,3]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9288" class="blob-num js-line-number" data-line-number="9288"></td>
        <td id="LC9288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9289" class="blob-num js-line-number" data-line-number="9289"></td>
        <td id="LC9289" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9290" class="blob-num js-line-number" data-line-number="9290"></td>
        <td id="LC9290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should update the output when -3 is entered&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9291" class="blob-num js-line-number" data-line-number="9291"></td>
        <td id="LC9291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;limit&#39;).enter(-3);</span></td>
      </tr>
      <tr>
        <td id="L9292" class="blob-num js-line-number" data-line-number="9292"></td>
        <td id="LC9292" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[7,8,9]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9293" class="blob-num js-line-number" data-line-number="9293"></td>
        <td id="LC9293" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9294" class="blob-num js-line-number" data-line-number="9294"></td>
        <td id="LC9294" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9295" class="blob-num js-line-number" data-line-number="9295"></td>
        <td id="LC9295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should not exceed the maximum size of input array&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9296" class="blob-num js-line-number" data-line-number="9296"></td>
        <td id="LC9296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;limit&#39;).enter(100);</span></td>
      </tr>
      <tr>
        <td id="L9297" class="blob-num js-line-number" data-line-number="9297"></td>
        <td id="LC9297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;numbers | limitTo:limit&#39;)).toEqual(&#39;[1,2,3,4,5,6,7,8,9]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9298" class="blob-num js-line-number" data-line-number="9298"></td>
        <td id="LC9298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9299" class="blob-num js-line-number" data-line-number="9299"></td>
        <td id="LC9299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9300" class="blob-num js-line-number" data-line-number="9300"></td>
        <td id="LC9300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9301" class="blob-num js-line-number" data-line-number="9301"></td>
        <td id="LC9301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9302" class="blob-num js-line-number" data-line-number="9302"></td>
        <td id="LC9302" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">limitToFilter</span>(){</td>
      </tr>
      <tr>
        <td id="L9303" class="blob-num js-line-number" data-line-number="9303"></td>
        <td id="LC9303" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">limit</span>) {</td>
      </tr>
      <tr>
        <td id="L9304" class="blob-num js-line-number" data-line-number="9304"></td>
        <td id="LC9304" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(array <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>)) <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L9305" class="blob-num js-line-number" data-line-number="9305"></td>
        <td id="LC9305" class="blob-code blob-code-inner js-file-line">    limit <span class="pl-k">=</span> int(limit);</td>
      </tr>
      <tr>
        <td id="L9306" class="blob-num js-line-number" data-line-number="9306"></td>
        <td id="LC9306" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> out <span class="pl-k">=</span> [],</td>
      </tr>
      <tr>
        <td id="L9307" class="blob-num js-line-number" data-line-number="9307"></td>
        <td id="LC9307" class="blob-code blob-code-inner js-file-line">      i, n;</td>
      </tr>
      <tr>
        <td id="L9308" class="blob-num js-line-number" data-line-number="9308"></td>
        <td id="LC9308" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9309" class="blob-num js-line-number" data-line-number="9309"></td>
        <td id="LC9309" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// check that array is iterable</span></td>
      </tr>
      <tr>
        <td id="L9310" class="blob-num js-line-number" data-line-number="9310"></td>
        <td id="LC9310" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>array <span class="pl-k">||</span> <span class="pl-k">!</span>(array <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>))</td>
      </tr>
      <tr>
        <td id="L9311" class="blob-num js-line-number" data-line-number="9311"></td>
        <td id="LC9311" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L9312" class="blob-num js-line-number" data-line-number="9312"></td>
        <td id="LC9312" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9313" class="blob-num js-line-number" data-line-number="9313"></td>
        <td id="LC9313" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// if abs(limit) exceeds maximum length, trim it</span></td>
      </tr>
      <tr>
        <td id="L9314" class="blob-num js-line-number" data-line-number="9314"></td>
        <td id="LC9314" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (limit <span class="pl-k">&gt;</span> array.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L9315" class="blob-num js-line-number" data-line-number="9315"></td>
        <td id="LC9315" class="blob-code blob-code-inner js-file-line">      limit <span class="pl-k">=</span> array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L9316" class="blob-num js-line-number" data-line-number="9316"></td>
        <td id="LC9316" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">else</span> <span class="pl-k">if</span> (limit <span class="pl-k">&lt;</span> <span class="pl-k">-</span>array.<span class="pl-c1">length</span>)</td>
      </tr>
      <tr>
        <td id="L9317" class="blob-num js-line-number" data-line-number="9317"></td>
        <td id="LC9317" class="blob-code blob-code-inner js-file-line">      limit <span class="pl-k">=</span> <span class="pl-k">-</span>array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L9318" class="blob-num js-line-number" data-line-number="9318"></td>
        <td id="LC9318" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9319" class="blob-num js-line-number" data-line-number="9319"></td>
        <td id="LC9319" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (limit <span class="pl-k">&gt;</span> <span class="pl-c1">0</span>) {</td>
      </tr>
      <tr>
        <td id="L9320" class="blob-num js-line-number" data-line-number="9320"></td>
        <td id="LC9320" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L9321" class="blob-num js-line-number" data-line-number="9321"></td>
        <td id="LC9321" class="blob-code blob-code-inner js-file-line">      n <span class="pl-k">=</span> limit;</td>
      </tr>
      <tr>
        <td id="L9322" class="blob-num js-line-number" data-line-number="9322"></td>
        <td id="LC9322" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9323" class="blob-num js-line-number" data-line-number="9323"></td>
        <td id="LC9323" class="blob-code blob-code-inner js-file-line">      i <span class="pl-k">=</span> array.<span class="pl-c1">length</span> <span class="pl-k">+</span> limit;</td>
      </tr>
      <tr>
        <td id="L9324" class="blob-num js-line-number" data-line-number="9324"></td>
        <td id="LC9324" class="blob-code blob-code-inner js-file-line">      n <span class="pl-k">=</span> array.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L9325" class="blob-num js-line-number" data-line-number="9325"></td>
        <td id="LC9325" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9326" class="blob-num js-line-number" data-line-number="9326"></td>
        <td id="LC9326" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9327" class="blob-num js-line-number" data-line-number="9327"></td>
        <td id="LC9327" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> (; i<span class="pl-k">&lt;</span>n; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L9328" class="blob-num js-line-number" data-line-number="9328"></td>
        <td id="LC9328" class="blob-code blob-code-inner js-file-line">      out.<span class="pl-c1">push</span>(array[i]);</td>
      </tr>
      <tr>
        <td id="L9329" class="blob-num js-line-number" data-line-number="9329"></td>
        <td id="LC9329" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9330" class="blob-num js-line-number" data-line-number="9330"></td>
        <td id="LC9330" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9331" class="blob-num js-line-number" data-line-number="9331"></td>
        <td id="LC9331" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> out;</td>
      </tr>
      <tr>
        <td id="L9332" class="blob-num js-line-number" data-line-number="9332"></td>
        <td id="LC9332" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9333" class="blob-num js-line-number" data-line-number="9333"></td>
        <td id="LC9333" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9334" class="blob-num js-line-number" data-line-number="9334"></td>
        <td id="LC9334" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9335" class="blob-num js-line-number" data-line-number="9335"></td>
        <td id="LC9335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9336" class="blob-num js-line-number" data-line-number="9336"></td>
        <td id="LC9336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L9337" class="blob-num js-line-number" data-line-number="9337"></td>
        <td id="LC9337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$filter.orderBy</span></td>
      </tr>
      <tr>
        <td id="L9338" class="blob-num js-line-number" data-line-number="9338"></td>
        <td id="LC9338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@function</span></span></td>
      </tr>
      <tr>
        <td id="L9339" class="blob-num js-line-number" data-line-number="9339"></td>
        <td id="LC9339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9340" class="blob-num js-line-number" data-line-number="9340"></td>
        <td id="LC9340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9341" class="blob-num js-line-number" data-line-number="9341"></td>
        <td id="LC9341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Orders a specified `array` by the `expression` predicate.</span></td>
      </tr>
      <tr>
        <td id="L9342" class="blob-num js-line-number" data-line-number="9342"></td>
        <td id="LC9342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9343" class="blob-num js-line-number" data-line-number="9343"></td>
        <td id="LC9343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: this function is used to augment the `Array` type in Angular expressions. See</span></td>
      </tr>
      <tr>
        <td id="L9344" class="blob-num js-line-number" data-line-number="9344"></td>
        <td id="LC9344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$filter} for more informaton about Angular arrays.</span></td>
      </tr>
      <tr>
        <td id="L9345" class="blob-num js-line-number" data-line-number="9345"></td>
        <td id="LC9345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9346" class="blob-num js-line-number" data-line-number="9346"></td>
        <td id="LC9346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {Array} array The array to sort.</span></td>
      </tr>
      <tr>
        <td id="L9347" class="blob-num js-line-number" data-line-number="9347"></td>
        <td id="LC9347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {function(*)|string|Array.&lt;(function(*)|string)&gt;} expression A predicate to be</span></td>
      </tr>
      <tr>
        <td id="L9348" class="blob-num js-line-number" data-line-number="9348"></td>
        <td id="LC9348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    used by the comparator to determine the order of elements.</span></td>
      </tr>
      <tr>
        <td id="L9349" class="blob-num js-line-number" data-line-number="9349"></td>
        <td id="LC9349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9350" class="blob-num js-line-number" data-line-number="9350"></td>
        <td id="LC9350" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    Can be one of:</span></td>
      </tr>
      <tr>
        <td id="L9351" class="blob-num js-line-number" data-line-number="9351"></td>
        <td id="LC9351" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9352" class="blob-num js-line-number" data-line-number="9352"></td>
        <td id="LC9352" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - `function`: Getter function. The result of this function will be sorted using the</span></td>
      </tr>
      <tr>
        <td id="L9353" class="blob-num js-line-number" data-line-number="9353"></td>
        <td id="LC9353" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      `&lt;`, `=`, `&gt;` operator.</span></td>
      </tr>
      <tr>
        <td id="L9354" class="blob-num js-line-number" data-line-number="9354"></td>
        <td id="LC9354" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - `string`: An Angular expression which evaluates to an object to order by, such as &#39;name&#39;</span></td>
      </tr>
      <tr>
        <td id="L9355" class="blob-num js-line-number" data-line-number="9355"></td>
        <td id="LC9355" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      to sort by a property called &#39;name&#39;. Optionally prefixed with `+` or `-` to control</span></td>
      </tr>
      <tr>
        <td id="L9356" class="blob-num js-line-number" data-line-number="9356"></td>
        <td id="LC9356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      ascending or descending sort order (for example, +name or -name).</span></td>
      </tr>
      <tr>
        <td id="L9357" class="blob-num js-line-number" data-line-number="9357"></td>
        <td id="LC9357" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - `Array`: An array of function or string predicates. The first predicate in the array</span></td>
      </tr>
      <tr>
        <td id="L9358" class="blob-num js-line-number" data-line-number="9358"></td>
        <td id="LC9358" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      is used for sorting, but when two items are equivalent, the next predicate is used.</span></td>
      </tr>
      <tr>
        <td id="L9359" class="blob-num js-line-number" data-line-number="9359"></td>
        <td id="LC9359" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9360" class="blob-num js-line-number" data-line-number="9360"></td>
        <td id="LC9360" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {boolean=} reverse Reverse the order the array.</span></td>
      </tr>
      <tr>
        <td id="L9361" class="blob-num js-line-number" data-line-number="9361"></td>
        <td id="LC9361" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@returns</span> {Array} Sorted copy of the source array.</span></td>
      </tr>
      <tr>
        <td id="L9362" class="blob-num js-line-number" data-line-number="9362"></td>
        <td id="LC9362" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9363" class="blob-num js-line-number" data-line-number="9363"></td>
        <td id="LC9363" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9364" class="blob-num js-line-number" data-line-number="9364"></td>
        <td id="LC9364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9365" class="blob-num js-line-number" data-line-number="9365"></td>
        <td id="LC9365" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9366" class="blob-num js-line-number" data-line-number="9366"></td>
        <td id="LC9366" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L9367" class="blob-num js-line-number" data-line-number="9367"></td>
        <td id="LC9367" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L9368" class="blob-num js-line-number" data-line-number="9368"></td>
        <td id="LC9368" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.friends =</span></td>
      </tr>
      <tr>
        <td id="L9369" class="blob-num js-line-number" data-line-number="9369"></td>
        <td id="LC9369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               [{name:&#39;John&#39;, phone:&#39;555-1212&#39;, age:10},</span></td>
      </tr>
      <tr>
        <td id="L9370" class="blob-num js-line-number" data-line-number="9370"></td>
        <td id="LC9370" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                {name:&#39;Mary&#39;, phone:&#39;555-9876&#39;, age:19},</span></td>
      </tr>
      <tr>
        <td id="L9371" class="blob-num js-line-number" data-line-number="9371"></td>
        <td id="LC9371" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                {name:&#39;Mike&#39;, phone:&#39;555-4321&#39;, age:21},</span></td>
      </tr>
      <tr>
        <td id="L9372" class="blob-num js-line-number" data-line-number="9372"></td>
        <td id="LC9372" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                {name:&#39;Adam&#39;, phone:&#39;555-5678&#39;, age:35},</span></td>
      </tr>
      <tr>
        <td id="L9373" class="blob-num js-line-number" data-line-number="9373"></td>
        <td id="LC9373" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                {name:&#39;Julie&#39;, phone:&#39;555-8765&#39;, age:29}]</span></td>
      </tr>
      <tr>
        <td id="L9374" class="blob-num js-line-number" data-line-number="9374"></td>
        <td id="LC9374" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.predicate = &#39;-age&#39;;</span></td>
      </tr>
      <tr>
        <td id="L9375" class="blob-num js-line-number" data-line-number="9375"></td>
        <td id="LC9375" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L9376" class="blob-num js-line-number" data-line-number="9376"></td>
        <td id="LC9376" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L9377" class="blob-num js-line-number" data-line-number="9377"></td>
        <td id="LC9377" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9378" class="blob-num js-line-number" data-line-number="9378"></td>
        <td id="LC9378" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;pre&gt;Sorting predicate = {{predicate}}; reverse = {{reverse}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9379" class="blob-num js-line-number" data-line-number="9379"></td>
        <td id="LC9379" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;hr/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9380" class="blob-num js-line-number" data-line-number="9380"></td>
        <td id="LC9380" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         [ &lt;a href=&quot;&quot; ng-click=&quot;predicate=&#39;&#39;&quot;&gt;unsorted&lt;/a&gt; ]</span></td>
      </tr>
      <tr>
        <td id="L9381" class="blob-num js-line-number" data-line-number="9381"></td>
        <td id="LC9381" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;table class=&quot;friend&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9382" class="blob-num js-line-number" data-line-number="9382"></td>
        <td id="LC9382" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L9383" class="blob-num js-line-number" data-line-number="9383"></td>
        <td id="LC9383" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;name&#39;; reverse=false&quot;&gt;Name&lt;/a&gt;</span></td>
      </tr>
      <tr>
        <td id="L9384" class="blob-num js-line-number" data-line-number="9384"></td>
        <td id="LC9384" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 (&lt;a href ng-click=&quot;predicate = &#39;-name&#39;; reverse=false&quot;&gt;^&lt;/a&gt;)&lt;/th&gt;</span></td>
      </tr>
      <tr>
        <td id="L9385" class="blob-num js-line-number" data-line-number="9385"></td>
        <td id="LC9385" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;phone&#39;; reverse=!reverse&quot;&gt;Phone Number&lt;/a&gt;&lt;/th&gt;</span></td>
      </tr>
      <tr>
        <td id="L9386" class="blob-num js-line-number" data-line-number="9386"></td>
        <td id="LC9386" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;th&gt;&lt;a href=&quot;&quot; ng-click=&quot;predicate = &#39;age&#39;; reverse=!reverse&quot;&gt;Age&lt;/a&gt;&lt;/th&gt;</span></td>
      </tr>
      <tr>
        <td id="L9387" class="blob-num js-line-number" data-line-number="9387"></td>
        <td id="LC9387" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L9388" class="blob-num js-line-number" data-line-number="9388"></td>
        <td id="LC9388" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tr ng-repeat=&quot;friend in friends | orderBy:predicate:reverse&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9389" class="blob-num js-line-number" data-line-number="9389"></td>
        <td id="LC9389" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;td&gt;{{friend.name}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L9390" class="blob-num js-line-number" data-line-number="9390"></td>
        <td id="LC9390" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;td&gt;{{friend.phone}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L9391" class="blob-num js-line-number" data-line-number="9391"></td>
        <td id="LC9391" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;td&gt;{{friend.age}}&lt;/td&gt;</span></td>
      </tr>
      <tr>
        <td id="L9392" class="blob-num js-line-number" data-line-number="9392"></td>
        <td id="LC9392" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tr&gt;</span></td>
      </tr>
      <tr>
        <td id="L9393" class="blob-num js-line-number" data-line-number="9393"></td>
        <td id="LC9393" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/table&gt;</span></td>
      </tr>
      <tr>
        <td id="L9394" class="blob-num js-line-number" data-line-number="9394"></td>
        <td id="LC9394" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L9395" class="blob-num js-line-number" data-line-number="9395"></td>
        <td id="LC9395" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9396" class="blob-num js-line-number" data-line-number="9396"></td>
        <td id="LC9396" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9397" class="blob-num js-line-number" data-line-number="9397"></td>
        <td id="LC9397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should be reverse ordered by aged&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9398" class="blob-num js-line-number" data-line-number="9398"></td>
        <td id="LC9398" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;predicate&#39;)).toBe(&#39;-age&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9399" class="blob-num js-line-number" data-line-number="9399"></td>
        <td id="LC9399" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.age&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9400" class="blob-num js-line-number" data-line-number="9400"></td>
        <td id="LC9400" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;35&#39;, &#39;29&#39;, &#39;21&#39;, &#39;19&#39;, &#39;10&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9401" class="blob-num js-line-number" data-line-number="9401"></td>
        <td id="LC9401" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9402" class="blob-num js-line-number" data-line-number="9402"></td>
        <td id="LC9402" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;Adam&#39;, &#39;Julie&#39;, &#39;Mike&#39;, &#39;Mary&#39;, &#39;John&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9403" class="blob-num js-line-number" data-line-number="9403"></td>
        <td id="LC9403" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9404" class="blob-num js-line-number" data-line-number="9404"></td>
        <td id="LC9404" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9405" class="blob-num js-line-number" data-line-number="9405"></td>
        <td id="LC9405" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should reorder the table when user selects different predicate&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9406" class="blob-num js-line-number" data-line-number="9406"></td>
        <td id="LC9406" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live a:contains(&quot;Name&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9407" class="blob-num js-line-number" data-line-number="9407"></td>
        <td id="LC9407" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9408" class="blob-num js-line-number" data-line-number="9408"></td>
        <td id="LC9408" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;Adam&#39;, &#39;John&#39;, &#39;Julie&#39;, &#39;Mary&#39;, &#39;Mike&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9409" class="blob-num js-line-number" data-line-number="9409"></td>
        <td id="LC9409" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.age&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9410" class="blob-num js-line-number" data-line-number="9410"></td>
        <td id="LC9410" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;35&#39;, &#39;10&#39;, &#39;29&#39;, &#39;19&#39;, &#39;21&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9411" class="blob-num js-line-number" data-line-number="9411"></td>
        <td id="LC9411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9412" class="blob-num js-line-number" data-line-number="9412"></td>
        <td id="LC9412" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live a:contains(&quot;Phone&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9413" class="blob-num js-line-number" data-line-number="9413"></td>
        <td id="LC9413" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.phone&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9414" class="blob-num js-line-number" data-line-number="9414"></td>
        <td id="LC9414" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;555-9876&#39;, &#39;555-8765&#39;, &#39;555-5678&#39;, &#39;555-4321&#39;, &#39;555-1212&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9415" class="blob-num js-line-number" data-line-number="9415"></td>
        <td id="LC9415" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(repeater(&#39;table.friend&#39;, &#39;friend in friends&#39;).column(&#39;friend.name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L9416" class="blob-num js-line-number" data-line-number="9416"></td>
        <td id="LC9416" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toEqual([&#39;Mary&#39;, &#39;Julie&#39;, &#39;Adam&#39;, &#39;Mike&#39;, &#39;John&#39;]);</span></td>
      </tr>
      <tr>
        <td id="L9417" class="blob-num js-line-number" data-line-number="9417"></td>
        <td id="LC9417" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L9418" class="blob-num js-line-number" data-line-number="9418"></td>
        <td id="LC9418" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9419" class="blob-num js-line-number" data-line-number="9419"></td>
        <td id="LC9419" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9420" class="blob-num js-line-number" data-line-number="9420"></td>
        <td id="LC9420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9421" class="blob-num js-line-number" data-line-number="9421"></td>
        <td id="LC9421" class="blob-code blob-code-inner js-file-line">orderByFilter.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L9422" class="blob-num js-line-number" data-line-number="9422"></td>
        <td id="LC9422" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">orderByFilter</span>(<span class="pl-smi">$parse</span>){</td>
      </tr>
      <tr>
        <td id="L9423" class="blob-num js-line-number" data-line-number="9423"></td>
        <td id="LC9423" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">array</span>, <span class="pl-smi">sortPredicate</span>, <span class="pl-smi">reverseOrder</span>) {</td>
      </tr>
      <tr>
        <td id="L9424" class="blob-num js-line-number" data-line-number="9424"></td>
        <td id="LC9424" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>(array <span class="pl-k">instanceof</span> <span class="pl-c1">Array</span>)) <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L9425" class="blob-num js-line-number" data-line-number="9425"></td>
        <td id="LC9425" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>sortPredicate) <span class="pl-k">return</span> array;</td>
      </tr>
      <tr>
        <td id="L9426" class="blob-num js-line-number" data-line-number="9426"></td>
        <td id="LC9426" class="blob-code blob-code-inner js-file-line">    sortPredicate <span class="pl-k">=</span> isArray(sortPredicate) <span class="pl-k">?</span> sortPredicate<span class="pl-k">:</span> [sortPredicate];</td>
      </tr>
      <tr>
        <td id="L9427" class="blob-num js-line-number" data-line-number="9427"></td>
        <td id="LC9427" class="blob-code blob-code-inner js-file-line">    sortPredicate <span class="pl-k">=</span> map(sortPredicate, <span class="pl-k">function</span>(<span class="pl-smi">predicate</span>){</td>
      </tr>
      <tr>
        <td id="L9428" class="blob-num js-line-number" data-line-number="9428"></td>
        <td id="LC9428" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> descending <span class="pl-k">=</span> <span class="pl-c1">false</span>, get <span class="pl-k">=</span> predicate <span class="pl-k">||</span> identity;</td>
      </tr>
      <tr>
        <td id="L9429" class="blob-num js-line-number" data-line-number="9429"></td>
        <td id="LC9429" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isString(predicate)) {</td>
      </tr>
      <tr>
        <td id="L9430" class="blob-num js-line-number" data-line-number="9430"></td>
        <td id="LC9430" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((predicate.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>+<span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> predicate.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L9431" class="blob-num js-line-number" data-line-number="9431"></td>
        <td id="LC9431" class="blob-code blob-code-inner js-file-line">          descending <span class="pl-k">=</span> predicate.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9432" class="blob-num js-line-number" data-line-number="9432"></td>
        <td id="LC9432" class="blob-code blob-code-inner js-file-line">          predicate <span class="pl-k">=</span> predicate.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L9433" class="blob-num js-line-number" data-line-number="9433"></td>
        <td id="LC9433" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9434" class="blob-num js-line-number" data-line-number="9434"></td>
        <td id="LC9434" class="blob-code blob-code-inner js-file-line">        get <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(predicate);</td>
      </tr>
      <tr>
        <td id="L9435" class="blob-num js-line-number" data-line-number="9435"></td>
        <td id="LC9435" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9436" class="blob-num js-line-number" data-line-number="9436"></td>
        <td id="LC9436" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> reverseComparator(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){</td>
      </tr>
      <tr>
        <td id="L9437" class="blob-num js-line-number" data-line-number="9437"></td>
        <td id="LC9437" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> compare(get(a),get(b));</td>
      </tr>
      <tr>
        <td id="L9438" class="blob-num js-line-number" data-line-number="9438"></td>
        <td id="LC9438" class="blob-code blob-code-inner js-file-line">      }, descending);</td>
      </tr>
      <tr>
        <td id="L9439" class="blob-num js-line-number" data-line-number="9439"></td>
        <td id="LC9439" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L9440" class="blob-num js-line-number" data-line-number="9440"></td>
        <td id="LC9440" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> arrayCopy <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L9441" class="blob-num js-line-number" data-line-number="9441"></td>
        <td id="LC9441" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> array.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) { arrayCopy.<span class="pl-c1">push</span>(array[i]); }</td>
      </tr>
      <tr>
        <td id="L9442" class="blob-num js-line-number" data-line-number="9442"></td>
        <td id="LC9442" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> arrayCopy.<span class="pl-c1">sort</span>(reverseComparator(comparator, reverseOrder));</td>
      </tr>
      <tr>
        <td id="L9443" class="blob-num js-line-number" data-line-number="9443"></td>
        <td id="LC9443" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9444" class="blob-num js-line-number" data-line-number="9444"></td>
        <td id="LC9444" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">comparator</span>(<span class="pl-smi">o1</span>, <span class="pl-smi">o2</span>){</td>
      </tr>
      <tr>
        <td id="L9445" class="blob-num js-line-number" data-line-number="9445"></td>
        <td id="LC9445" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span> ( <span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>; i <span class="pl-k">&lt;</span> sortPredicate.<span class="pl-c1">length</span>; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L9446" class="blob-num js-line-number" data-line-number="9446"></td>
        <td id="LC9446" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> comp <span class="pl-k">=</span> sortPredicate[i](o1, o2);</td>
      </tr>
      <tr>
        <td id="L9447" class="blob-num js-line-number" data-line-number="9447"></td>
        <td id="LC9447" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (comp <span class="pl-k">!==</span> <span class="pl-c1">0</span>) <span class="pl-k">return</span> comp;</td>
      </tr>
      <tr>
        <td id="L9448" class="blob-num js-line-number" data-line-number="9448"></td>
        <td id="LC9448" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9449" class="blob-num js-line-number" data-line-number="9449"></td>
        <td id="LC9449" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L9450" class="blob-num js-line-number" data-line-number="9450"></td>
        <td id="LC9450" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9451" class="blob-num js-line-number" data-line-number="9451"></td>
        <td id="LC9451" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">reverseComparator</span>(<span class="pl-smi">comp</span>, <span class="pl-smi">descending</span>) {</td>
      </tr>
      <tr>
        <td id="L9452" class="blob-num js-line-number" data-line-number="9452"></td>
        <td id="LC9452" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> toBoolean(descending)</td>
      </tr>
      <tr>
        <td id="L9453" class="blob-num js-line-number" data-line-number="9453"></td>
        <td id="LC9453" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">?</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> comp(b,a);}</td>
      </tr>
      <tr>
        <td id="L9454" class="blob-num js-line-number" data-line-number="9454"></td>
        <td id="LC9454" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">:</span> comp;</td>
      </tr>
      <tr>
        <td id="L9455" class="blob-num js-line-number" data-line-number="9455"></td>
        <td id="LC9455" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9456" class="blob-num js-line-number" data-line-number="9456"></td>
        <td id="LC9456" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span> <span class="pl-en">compare</span>(<span class="pl-smi">v1</span>, <span class="pl-smi">v2</span>){</td>
      </tr>
      <tr>
        <td id="L9457" class="blob-num js-line-number" data-line-number="9457"></td>
        <td id="LC9457" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> t1 <span class="pl-k">=</span> <span class="pl-k">typeof</span> v1;</td>
      </tr>
      <tr>
        <td id="L9458" class="blob-num js-line-number" data-line-number="9458"></td>
        <td id="LC9458" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> t2 <span class="pl-k">=</span> <span class="pl-k">typeof</span> v2;</td>
      </tr>
      <tr>
        <td id="L9459" class="blob-num js-line-number" data-line-number="9459"></td>
        <td id="LC9459" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (t1 <span class="pl-k">==</span> t2) {</td>
      </tr>
      <tr>
        <td id="L9460" class="blob-num js-line-number" data-line-number="9460"></td>
        <td id="LC9460" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (t1 <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) v1 <span class="pl-k">=</span> v1.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L9461" class="blob-num js-line-number" data-line-number="9461"></td>
        <td id="LC9461" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (t1 <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>) v2 <span class="pl-k">=</span> v2.<span class="pl-c1">toLowerCase</span>();</td>
      </tr>
      <tr>
        <td id="L9462" class="blob-num js-line-number" data-line-number="9462"></td>
        <td id="LC9462" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (v1 <span class="pl-k">===</span> v2) <span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L9463" class="blob-num js-line-number" data-line-number="9463"></td>
        <td id="LC9463" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> v1 <span class="pl-k">&lt;</span> v2 <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9464" class="blob-num js-line-number" data-line-number="9464"></td>
        <td id="LC9464" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9465" class="blob-num js-line-number" data-line-number="9465"></td>
        <td id="LC9465" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> t1 <span class="pl-k">&lt;</span> t2 <span class="pl-k">?</span> <span class="pl-k">-</span><span class="pl-c1">1</span> <span class="pl-k">:</span> <span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L9466" class="blob-num js-line-number" data-line-number="9466"></td>
        <td id="LC9466" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9467" class="blob-num js-line-number" data-line-number="9467"></td>
        <td id="LC9467" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9468" class="blob-num js-line-number" data-line-number="9468"></td>
        <td id="LC9468" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9469" class="blob-num js-line-number" data-line-number="9469"></td>
        <td id="LC9469" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9470" class="blob-num js-line-number" data-line-number="9470"></td>
        <td id="LC9470" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9471" class="blob-num js-line-number" data-line-number="9471"></td>
        <td id="LC9471" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ngDirective</span>(<span class="pl-smi">directive</span>) {</td>
      </tr>
      <tr>
        <td id="L9472" class="blob-num js-line-number" data-line-number="9472"></td>
        <td id="LC9472" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isFunction(directive)) {</td>
      </tr>
      <tr>
        <td id="L9473" class="blob-num js-line-number" data-line-number="9473"></td>
        <td id="LC9473" class="blob-code blob-code-inner js-file-line">    directive <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9474" class="blob-num js-line-number" data-line-number="9474"></td>
        <td id="LC9474" class="blob-code blob-code-inner js-file-line">      link<span class="pl-k">:</span> directive</td>
      </tr>
      <tr>
        <td id="L9475" class="blob-num js-line-number" data-line-number="9475"></td>
        <td id="LC9475" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9476" class="blob-num js-line-number" data-line-number="9476"></td>
        <td id="LC9476" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9477" class="blob-num js-line-number" data-line-number="9477"></td>
        <td id="LC9477" class="blob-code blob-code-inner js-file-line">  directive.restrict <span class="pl-k">=</span> directive.restrict <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>AC<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9478" class="blob-num js-line-number" data-line-number="9478"></td>
        <td id="LC9478" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> valueFn(directive);</td>
      </tr>
      <tr>
        <td id="L9479" class="blob-num js-line-number" data-line-number="9479"></td>
        <td id="LC9479" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9480" class="blob-num js-line-number" data-line-number="9480"></td>
        <td id="LC9480" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9481" class="blob-num js-line-number" data-line-number="9481"></td>
        <td id="LC9481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L9482" class="blob-num js-line-number" data-line-number="9482"></td>
        <td id="LC9482" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Modifies the default behavior of html A tag, so that the default action is prevented when href</span></td>
      </tr>
      <tr>
        <td id="L9483" class="blob-num js-line-number" data-line-number="9483"></td>
        <td id="LC9483" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * attribute is empty.</span></td>
      </tr>
      <tr>
        <td id="L9484" class="blob-num js-line-number" data-line-number="9484"></td>
        <td id="LC9484" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9485" class="blob-num js-line-number" data-line-number="9485"></td>
        <td id="LC9485" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The reasoning for this change is to allow easy creation of action links with `ngClick` directive</span></td>
      </tr>
      <tr>
        <td id="L9486" class="blob-num js-line-number" data-line-number="9486"></td>
        <td id="LC9486" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * without changing the location or causing page reloads, e.g.:</span></td>
      </tr>
      <tr>
        <td id="L9487" class="blob-num js-line-number" data-line-number="9487"></td>
        <td id="LC9487" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;a href=&quot;&quot; ng-click=&quot;model.$save()&quot;&gt;Save&lt;/a&gt;</span></td>
      </tr>
      <tr>
        <td id="L9488" class="blob-num js-line-number" data-line-number="9488"></td>
        <td id="LC9488" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9489" class="blob-num js-line-number" data-line-number="9489"></td>
        <td id="LC9489" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> htmlAnchorDirective <span class="pl-k">=</span> valueFn({</td>
      </tr>
      <tr>
        <td id="L9490" class="blob-num js-line-number" data-line-number="9490"></td>
        <td id="LC9490" class="blob-code blob-code-inner js-file-line">  restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L9491" class="blob-num js-line-number" data-line-number="9491"></td>
        <td id="LC9491" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L9492" class="blob-num js-line-number" data-line-number="9492"></td>
        <td id="LC9492" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// turn &lt;a href ng-click=&quot;..&quot;&gt;link&lt;/a&gt; into a link in IE</span></td>
      </tr>
      <tr>
        <td id="L9493" class="blob-num js-line-number" data-line-number="9493"></td>
        <td id="LC9493" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// but only if it doesn&#39;t have name attribute, in which case it&#39;s an anchor</span></td>
      </tr>
      <tr>
        <td id="L9494" class="blob-num js-line-number" data-line-number="9494"></td>
        <td id="LC9494" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-k">!</span>attr.<span class="pl-c1">href</span>) {</td>
      </tr>
      <tr>
        <td id="L9495" class="blob-num js-line-number" data-line-number="9495"></td>
        <td id="LC9495" class="blob-code blob-code-inner js-file-line">      attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L9496" class="blob-num js-line-number" data-line-number="9496"></td>
        <td id="LC9496" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9497" class="blob-num js-line-number" data-line-number="9497"></td>
        <td id="LC9497" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9498" class="blob-num js-line-number" data-line-number="9498"></td>
        <td id="LC9498" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L9499" class="blob-num js-line-number" data-line-number="9499"></td>
        <td id="LC9499" class="blob-code blob-code-inner js-file-line">      element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>){</td>
      </tr>
      <tr>
        <td id="L9500" class="blob-num js-line-number" data-line-number="9500"></td>
        <td id="LC9500" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// if we have no href url, then don&#39;t navigate anywhere.</span></td>
      </tr>
      <tr>
        <td id="L9501" class="blob-num js-line-number" data-line-number="9501"></td>
        <td id="LC9501" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>element.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L9502" class="blob-num js-line-number" data-line-number="9502"></td>
        <td id="LC9502" class="blob-code blob-code-inner js-file-line">          <span class="pl-c1">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L9503" class="blob-num js-line-number" data-line-number="9503"></td>
        <td id="LC9503" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9504" class="blob-num js-line-number" data-line-number="9504"></td>
        <td id="LC9504" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L9505" class="blob-num js-line-number" data-line-number="9505"></td>
        <td id="LC9505" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9506" class="blob-num js-line-number" data-line-number="9506"></td>
        <td id="LC9506" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9507" class="blob-num js-line-number" data-line-number="9507"></td>
        <td id="LC9507" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L9508" class="blob-num js-line-number" data-line-number="9508"></td>
        <td id="LC9508" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9509" class="blob-num js-line-number" data-line-number="9509"></td>
        <td id="LC9509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9510" class="blob-num js-line-number" data-line-number="9510"></td>
        <td id="LC9510" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9511" class="blob-num js-line-number" data-line-number="9511"></td>
        <td id="LC9511" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngHref</span></td>
      </tr>
      <tr>
        <td id="L9512" class="blob-num js-line-number" data-line-number="9512"></td>
        <td id="LC9512" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9513" class="blob-num js-line-number" data-line-number="9513"></td>
        <td id="LC9513" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9514" class="blob-num js-line-number" data-line-number="9514"></td>
        <td id="LC9514" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9515" class="blob-num js-line-number" data-line-number="9515"></td>
        <td id="LC9515" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Using Angular markup like {{hash}} in an href attribute makes</span></td>
      </tr>
      <tr>
        <td id="L9516" class="blob-num js-line-number" data-line-number="9516"></td>
        <td id="LC9516" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * the page open to a wrong URL, if the user clicks that link before</span></td>
      </tr>
      <tr>
        <td id="L9517" class="blob-num js-line-number" data-line-number="9517"></td>
        <td id="LC9517" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * angular has a chance to replace the {{hash}} with actual URL, the</span></td>
      </tr>
      <tr>
        <td id="L9518" class="blob-num js-line-number" data-line-number="9518"></td>
        <td id="LC9518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * link will be broken and will most likely return a 404 error.</span></td>
      </tr>
      <tr>
        <td id="L9519" class="blob-num js-line-number" data-line-number="9519"></td>
        <td id="LC9519" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngHref` directive solves this problem.</span></td>
      </tr>
      <tr>
        <td id="L9520" class="blob-num js-line-number" data-line-number="9520"></td>
        <td id="LC9520" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9521" class="blob-num js-line-number" data-line-number="9521"></td>
        <td id="LC9521" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The buggy way to write it:</span></td>
      </tr>
      <tr>
        <td id="L9522" class="blob-num js-line-number" data-line-number="9522"></td>
        <td id="LC9522" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9523" class="blob-num js-line-number" data-line-number="9523"></td>
        <td id="LC9523" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;a href=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9524" class="blob-num js-line-number" data-line-number="9524"></td>
        <td id="LC9524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9525" class="blob-num js-line-number" data-line-number="9525"></td>
        <td id="LC9525" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9526" class="blob-num js-line-number" data-line-number="9526"></td>
        <td id="LC9526" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The correct way to write it:</span></td>
      </tr>
      <tr>
        <td id="L9527" class="blob-num js-line-number" data-line-number="9527"></td>
        <td id="LC9527" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9528" class="blob-num js-line-number" data-line-number="9528"></td>
        <td id="LC9528" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;a ng-href=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9529" class="blob-num js-line-number" data-line-number="9529"></td>
        <td id="LC9529" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9530" class="blob-num js-line-number" data-line-number="9530"></td>
        <td id="LC9530" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9531" class="blob-num js-line-number" data-line-number="9531"></td>
        <td id="LC9531" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element A</span></td>
      </tr>
      <tr>
        <td id="L9532" class="blob-num js-line-number" data-line-number="9532"></td>
        <td id="LC9532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {template} ngHref any string which can contain `{{}}` markup.</span></td>
      </tr>
      <tr>
        <td id="L9533" class="blob-num js-line-number" data-line-number="9533"></td>
        <td id="LC9533" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9534" class="blob-num js-line-number" data-line-number="9534"></td>
        <td id="LC9534" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9535" class="blob-num js-line-number" data-line-number="9535"></td>
        <td id="LC9535" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This example uses `link` variable inside `href` attribute:</span></td>
      </tr>
      <tr>
        <td id="L9536" class="blob-num js-line-number" data-line-number="9536"></td>
        <td id="LC9536" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9537" class="blob-num js-line-number" data-line-number="9537"></td>
        <td id="LC9537" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9538" class="blob-num js-line-number" data-line-number="9538"></td>
        <td id="LC9538" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input ng-model=&quot;value&quot; /&gt;&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9539" class="blob-num js-line-number" data-line-number="9539"></td>
        <td id="LC9539" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-1&quot; href ng-click=&quot;value = 1&quot;&gt;link 1&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9540" class="blob-num js-line-number" data-line-number="9540"></td>
        <td id="LC9540" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-2&quot; href=&quot;&quot; ng-click=&quot;value = 2&quot;&gt;link 2&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9541" class="blob-num js-line-number" data-line-number="9541"></td>
        <td id="LC9541" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-3&quot; ng-href=&quot;/{{&#39;123&#39;}}&quot;&gt;link 3&lt;/a&gt; (link, reload!)&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9542" class="blob-num js-line-number" data-line-number="9542"></td>
        <td id="LC9542" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-4&quot; href=&quot;&quot; name=&quot;xx&quot; ng-click=&quot;value = 4&quot;&gt;anchor&lt;/a&gt; (link, don&#39;t reload)&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9543" class="blob-num js-line-number" data-line-number="9543"></td>
        <td id="LC9543" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-5&quot; name=&quot;xxx&quot; ng-click=&quot;value = 5&quot;&gt;anchor&lt;/a&gt; (no link)&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L9544" class="blob-num js-line-number" data-line-number="9544"></td>
        <td id="LC9544" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;a id=&quot;link-6&quot; ng-href=&quot;{{value}}&quot;&gt;link&lt;/a&gt; (link, change location)</span></td>
      </tr>
      <tr>
        <td id="L9545" class="blob-num js-line-number" data-line-number="9545"></td>
        <td id="LC9545" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9546" class="blob-num js-line-number" data-line-number="9546"></td>
        <td id="LC9546" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9547" class="blob-num js-line-number" data-line-number="9547"></td>
        <td id="LC9547" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should execute ng-click but not reload when href without value&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9548" class="blob-num js-line-number" data-line-number="9548"></td>
        <td id="LC9548" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-1&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9549" class="blob-num js-line-number" data-line-number="9549"></td>
        <td id="LC9549" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(input(&#39;value&#39;).val()).toEqual(&#39;1&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9550" class="blob-num js-line-number" data-line-number="9550"></td>
        <td id="LC9550" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-1&#39;).attr(&#39;href&#39;)).toBe(&quot;&quot;);</span></td>
      </tr>
      <tr>
        <td id="L9551" class="blob-num js-line-number" data-line-number="9551"></td>
        <td id="LC9551" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9552" class="blob-num js-line-number" data-line-number="9552"></td>
        <td id="LC9552" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9553" class="blob-num js-line-number" data-line-number="9553"></td>
        <td id="LC9553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should execute ng-click but not reload when href empty string&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9554" class="blob-num js-line-number" data-line-number="9554"></td>
        <td id="LC9554" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-2&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9555" class="blob-num js-line-number" data-line-number="9555"></td>
        <td id="LC9555" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(input(&#39;value&#39;).val()).toEqual(&#39;2&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9556" class="blob-num js-line-number" data-line-number="9556"></td>
        <td id="LC9556" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-2&#39;).attr(&#39;href&#39;)).toBe(&quot;&quot;);</span></td>
      </tr>
      <tr>
        <td id="L9557" class="blob-num js-line-number" data-line-number="9557"></td>
        <td id="LC9557" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9558" class="blob-num js-line-number" data-line-number="9558"></td>
        <td id="LC9558" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9559" class="blob-num js-line-number" data-line-number="9559"></td>
        <td id="LC9559" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should execute ng-click and change url when ng-href specified&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9560" class="blob-num js-line-number" data-line-number="9560"></td>
        <td id="LC9560" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-3&#39;).attr(&#39;href&#39;)).toBe(&quot;/123&quot;);</span></td>
      </tr>
      <tr>
        <td id="L9561" class="blob-num js-line-number" data-line-number="9561"></td>
        <td id="LC9561" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9562" class="blob-num js-line-number" data-line-number="9562"></td>
        <td id="LC9562" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-3&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9563" class="blob-num js-line-number" data-line-number="9563"></td>
        <td id="LC9563" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(browser().window().path()).toEqual(&#39;/123&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9564" class="blob-num js-line-number" data-line-number="9564"></td>
        <td id="LC9564" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9565" class="blob-num js-line-number" data-line-number="9565"></td>
        <td id="LC9565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9566" class="blob-num js-line-number" data-line-number="9566"></td>
        <td id="LC9566" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should execute ng-click but not reload when href empty string and name specified&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9567" class="blob-num js-line-number" data-line-number="9567"></td>
        <td id="LC9567" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-4&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9568" class="blob-num js-line-number" data-line-number="9568"></td>
        <td id="LC9568" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(input(&#39;value&#39;).val()).toEqual(&#39;4&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9569" class="blob-num js-line-number" data-line-number="9569"></td>
        <td id="LC9569" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-4&#39;).attr(&#39;href&#39;)).toBe(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9570" class="blob-num js-line-number" data-line-number="9570"></td>
        <td id="LC9570" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9571" class="blob-num js-line-number" data-line-number="9571"></td>
        <td id="LC9571" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9572" class="blob-num js-line-number" data-line-number="9572"></td>
        <td id="LC9572" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should execute ng-click but not reload when no href but name specified&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9573" class="blob-num js-line-number" data-line-number="9573"></td>
        <td id="LC9573" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-5&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9574" class="blob-num js-line-number" data-line-number="9574"></td>
        <td id="LC9574" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(input(&#39;value&#39;).val()).toEqual(&#39;5&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9575" class="blob-num js-line-number" data-line-number="9575"></td>
        <td id="LC9575" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-5&#39;).attr(&#39;href&#39;)).toBe(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9576" class="blob-num js-line-number" data-line-number="9576"></td>
        <td id="LC9576" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9577" class="blob-num js-line-number" data-line-number="9577"></td>
        <td id="LC9577" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9578" class="blob-num js-line-number" data-line-number="9578"></td>
        <td id="LC9578" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should only change url when only ng-href&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9579" class="blob-num js-line-number" data-line-number="9579"></td>
        <td id="LC9579" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;value&#39;).enter(&#39;6&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9580" class="blob-num js-line-number" data-line-number="9580"></td>
        <td id="LC9580" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;#link-6&#39;).attr(&#39;href&#39;)).toBe(&#39;6&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9581" class="blob-num js-line-number" data-line-number="9581"></td>
        <td id="LC9581" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L9582" class="blob-num js-line-number" data-line-number="9582"></td>
        <td id="LC9582" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;#link-6&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L9583" class="blob-num js-line-number" data-line-number="9583"></td>
        <td id="LC9583" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(browser().location().url()).toEqual(&#39;/6&#39;);</span></td>
      </tr>
      <tr>
        <td id="L9584" class="blob-num js-line-number" data-line-number="9584"></td>
        <td id="LC9584" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9585" class="blob-num js-line-number" data-line-number="9585"></td>
        <td id="LC9585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9586" class="blob-num js-line-number" data-line-number="9586"></td>
        <td id="LC9586" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9587" class="blob-num js-line-number" data-line-number="9587"></td>
        <td id="LC9587" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9588" class="blob-num js-line-number" data-line-number="9588"></td>
        <td id="LC9588" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9589" class="blob-num js-line-number" data-line-number="9589"></td>
        <td id="LC9589" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9590" class="blob-num js-line-number" data-line-number="9590"></td>
        <td id="LC9590" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9591" class="blob-num js-line-number" data-line-number="9591"></td>
        <td id="LC9591" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngSrc</span></td>
      </tr>
      <tr>
        <td id="L9592" class="blob-num js-line-number" data-line-number="9592"></td>
        <td id="LC9592" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9593" class="blob-num js-line-number" data-line-number="9593"></td>
        <td id="LC9593" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9594" class="blob-num js-line-number" data-line-number="9594"></td>
        <td id="LC9594" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9595" class="blob-num js-line-number" data-line-number="9595"></td>
        <td id="LC9595" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Using Angular markup like `{{hash}}` in a `src` attribute doesn&#39;t</span></td>
      </tr>
      <tr>
        <td id="L9596" class="blob-num js-line-number" data-line-number="9596"></td>
        <td id="LC9596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * work right: The browser will fetch from the URL with the literal</span></td>
      </tr>
      <tr>
        <td id="L9597" class="blob-num js-line-number" data-line-number="9597"></td>
        <td id="LC9597" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * text `{{hash}}` until Angular replaces the expression inside</span></td>
      </tr>
      <tr>
        <td id="L9598" class="blob-num js-line-number" data-line-number="9598"></td>
        <td id="LC9598" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `{{hash}}`. The `ngSrc` directive solves this problem.</span></td>
      </tr>
      <tr>
        <td id="L9599" class="blob-num js-line-number" data-line-number="9599"></td>
        <td id="LC9599" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9600" class="blob-num js-line-number" data-line-number="9600"></td>
        <td id="LC9600" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The buggy way to write it:</span></td>
      </tr>
      <tr>
        <td id="L9601" class="blob-num js-line-number" data-line-number="9601"></td>
        <td id="LC9601" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9602" class="blob-num js-line-number" data-line-number="9602"></td>
        <td id="LC9602" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;img src=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9603" class="blob-num js-line-number" data-line-number="9603"></td>
        <td id="LC9603" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9604" class="blob-num js-line-number" data-line-number="9604"></td>
        <td id="LC9604" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9605" class="blob-num js-line-number" data-line-number="9605"></td>
        <td id="LC9605" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The correct way to write it:</span></td>
      </tr>
      <tr>
        <td id="L9606" class="blob-num js-line-number" data-line-number="9606"></td>
        <td id="LC9606" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9607" class="blob-num js-line-number" data-line-number="9607"></td>
        <td id="LC9607" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;img ng-src=&quot;http://www.gravatar.com/avatar/{{hash}}&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9608" class="blob-num js-line-number" data-line-number="9608"></td>
        <td id="LC9608" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9609" class="blob-num js-line-number" data-line-number="9609"></td>
        <td id="LC9609" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9610" class="blob-num js-line-number" data-line-number="9610"></td>
        <td id="LC9610" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element IMG</span></td>
      </tr>
      <tr>
        <td id="L9611" class="blob-num js-line-number" data-line-number="9611"></td>
        <td id="LC9611" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {template} ngSrc any string which can contain `{{}}` markup.</span></td>
      </tr>
      <tr>
        <td id="L9612" class="blob-num js-line-number" data-line-number="9612"></td>
        <td id="LC9612" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9613" class="blob-num js-line-number" data-line-number="9613"></td>
        <td id="LC9613" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9614" class="blob-num js-line-number" data-line-number="9614"></td>
        <td id="LC9614" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9615" class="blob-num js-line-number" data-line-number="9615"></td>
        <td id="LC9615" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9616" class="blob-num js-line-number" data-line-number="9616"></td>
        <td id="LC9616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngDisabled</span></td>
      </tr>
      <tr>
        <td id="L9617" class="blob-num js-line-number" data-line-number="9617"></td>
        <td id="LC9617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9618" class="blob-num js-line-number" data-line-number="9618"></td>
        <td id="LC9618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9619" class="blob-num js-line-number" data-line-number="9619"></td>
        <td id="LC9619" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9620" class="blob-num js-line-number" data-line-number="9620"></td>
        <td id="LC9620" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9621" class="blob-num js-line-number" data-line-number="9621"></td>
        <td id="LC9621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The following markup will make the button enabled on Chrome/Firefox but not on IE8 and older IEs:</span></td>
      </tr>
      <tr>
        <td id="L9622" class="blob-num js-line-number" data-line-number="9622"></td>
        <td id="LC9622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9623" class="blob-num js-line-number" data-line-number="9623"></td>
        <td id="LC9623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;div ng-init=&quot;scope = { isDisabled: false }&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9624" class="blob-num js-line-number" data-line-number="9624"></td>
        <td id="LC9624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  &lt;button disabled=&quot;{{scope.isDisabled}}&quot;&gt;Disabled&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L9625" class="blob-num js-line-number" data-line-number="9625"></td>
        <td id="LC9625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L9626" class="blob-num js-line-number" data-line-number="9626"></td>
        <td id="LC9626" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L9627" class="blob-num js-line-number" data-line-number="9627"></td>
        <td id="LC9627" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9628" class="blob-num js-line-number" data-line-number="9628"></td>
        <td id="LC9628" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The HTML specs do not require browsers to preserve the special attributes such as disabled.</span></td>
      </tr>
      <tr>
        <td id="L9629" class="blob-num js-line-number" data-line-number="9629"></td>
        <td id="LC9629" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (The presence of them means true and absence means false)</span></td>
      </tr>
      <tr>
        <td id="L9630" class="blob-num js-line-number" data-line-number="9630"></td>
        <td id="LC9630" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This prevents the angular compiler from correctly retrieving the binding expression.</span></td>
      </tr>
      <tr>
        <td id="L9631" class="blob-num js-line-number" data-line-number="9631"></td>
        <td id="LC9631" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To solve this problem, we introduce the `ngDisabled` directive.</span></td>
      </tr>
      <tr>
        <td id="L9632" class="blob-num js-line-number" data-line-number="9632"></td>
        <td id="LC9632" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9633" class="blob-num js-line-number" data-line-number="9633"></td>
        <td id="LC9633" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9634" class="blob-num js-line-number" data-line-number="9634"></td>
        <td id="LC9634" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9635" class="blob-num js-line-number" data-line-number="9635"></td>
        <td id="LC9635" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9636" class="blob-num js-line-number" data-line-number="9636"></td>
        <td id="LC9636" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Click me to toggle: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9637" class="blob-num js-line-number" data-line-number="9637"></td>
        <td id="LC9637" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;button ng-model=&quot;button&quot; ng-disabled=&quot;checked&quot;&gt;Button&lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L9638" class="blob-num js-line-number" data-line-number="9638"></td>
        <td id="LC9638" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9639" class="blob-num js-line-number" data-line-number="9639"></td>
        <td id="LC9639" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9640" class="blob-num js-line-number" data-line-number="9640"></td>
        <td id="LC9640" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should toggle button&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9641" class="blob-num js-line-number" data-line-number="9641"></td>
        <td id="LC9641" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live :button&#39;).prop(&#39;disabled&#39;)).toBeFalsy();</span></td>
      </tr>
      <tr>
        <td id="L9642" class="blob-num js-line-number" data-line-number="9642"></td>
        <td id="LC9642" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;checked&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L9643" class="blob-num js-line-number" data-line-number="9643"></td>
        <td id="LC9643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live :button&#39;).prop(&#39;disabled&#39;)).toBeTruthy();</span></td>
      </tr>
      <tr>
        <td id="L9644" class="blob-num js-line-number" data-line-number="9644"></td>
        <td id="LC9644" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9645" class="blob-num js-line-number" data-line-number="9645"></td>
        <td id="LC9645" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9646" class="blob-num js-line-number" data-line-number="9646"></td>
        <td id="LC9646" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9647" class="blob-num js-line-number" data-line-number="9647"></td>
        <td id="LC9647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9648" class="blob-num js-line-number" data-line-number="9648"></td>
        <td id="LC9648" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element INPUT</span></td>
      </tr>
      <tr>
        <td id="L9649" class="blob-num js-line-number" data-line-number="9649"></td>
        <td id="LC9649" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngDisabled Angular expression that will be evaluated.</span></td>
      </tr>
      <tr>
        <td id="L9650" class="blob-num js-line-number" data-line-number="9650"></td>
        <td id="LC9650" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9651" class="blob-num js-line-number" data-line-number="9651"></td>
        <td id="LC9651" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9652" class="blob-num js-line-number" data-line-number="9652"></td>
        <td id="LC9652" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9653" class="blob-num js-line-number" data-line-number="9653"></td>
        <td id="LC9653" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9654" class="blob-num js-line-number" data-line-number="9654"></td>
        <td id="LC9654" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9655" class="blob-num js-line-number" data-line-number="9655"></td>
        <td id="LC9655" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngChecked</span></td>
      </tr>
      <tr>
        <td id="L9656" class="blob-num js-line-number" data-line-number="9656"></td>
        <td id="LC9656" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9657" class="blob-num js-line-number" data-line-number="9657"></td>
        <td id="LC9657" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9658" class="blob-num js-line-number" data-line-number="9658"></td>
        <td id="LC9658" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9659" class="blob-num js-line-number" data-line-number="9659"></td>
        <td id="LC9659" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The HTML specs do not require browsers to preserve the special attributes such as checked.</span></td>
      </tr>
      <tr>
        <td id="L9660" class="blob-num js-line-number" data-line-number="9660"></td>
        <td id="LC9660" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (The presence of them means true and absence means false)</span></td>
      </tr>
      <tr>
        <td id="L9661" class="blob-num js-line-number" data-line-number="9661"></td>
        <td id="LC9661" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This prevents the angular compiler from correctly retrieving the binding expression.</span></td>
      </tr>
      <tr>
        <td id="L9662" class="blob-num js-line-number" data-line-number="9662"></td>
        <td id="LC9662" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To solve this problem, we introduce the `ngChecked` directive.</span></td>
      </tr>
      <tr>
        <td id="L9663" class="blob-num js-line-number" data-line-number="9663"></td>
        <td id="LC9663" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9664" class="blob-num js-line-number" data-line-number="9664"></td>
        <td id="LC9664" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9665" class="blob-num js-line-number" data-line-number="9665"></td>
        <td id="LC9665" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9666" class="blob-num js-line-number" data-line-number="9666"></td>
        <td id="LC9666" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Check me to check both: &lt;input type=&quot;checkbox&quot; ng-model=&quot;master&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9667" class="blob-num js-line-number" data-line-number="9667"></td>
        <td id="LC9667" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input id=&quot;checkSlave&quot; type=&quot;checkbox&quot; ng-checked=&quot;master&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9668" class="blob-num js-line-number" data-line-number="9668"></td>
        <td id="LC9668" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9669" class="blob-num js-line-number" data-line-number="9669"></td>
        <td id="LC9669" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9670" class="blob-num js-line-number" data-line-number="9670"></td>
        <td id="LC9670" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should check both checkBoxes&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9671" class="blob-num js-line-number" data-line-number="9671"></td>
        <td id="LC9671" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live #checkSlave&#39;).prop(&#39;checked&#39;)).toBeFalsy();</span></td>
      </tr>
      <tr>
        <td id="L9672" class="blob-num js-line-number" data-line-number="9672"></td>
        <td id="LC9672" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;master&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L9673" class="blob-num js-line-number" data-line-number="9673"></td>
        <td id="LC9673" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live #checkSlave&#39;).prop(&#39;checked&#39;)).toBeTruthy();</span></td>
      </tr>
      <tr>
        <td id="L9674" class="blob-num js-line-number" data-line-number="9674"></td>
        <td id="LC9674" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9675" class="blob-num js-line-number" data-line-number="9675"></td>
        <td id="LC9675" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9676" class="blob-num js-line-number" data-line-number="9676"></td>
        <td id="LC9676" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9677" class="blob-num js-line-number" data-line-number="9677"></td>
        <td id="LC9677" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9678" class="blob-num js-line-number" data-line-number="9678"></td>
        <td id="LC9678" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element INPUT</span></td>
      </tr>
      <tr>
        <td id="L9679" class="blob-num js-line-number" data-line-number="9679"></td>
        <td id="LC9679" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngChecked Angular expression that will be evaluated.</span></td>
      </tr>
      <tr>
        <td id="L9680" class="blob-num js-line-number" data-line-number="9680"></td>
        <td id="LC9680" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9681" class="blob-num js-line-number" data-line-number="9681"></td>
        <td id="LC9681" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9682" class="blob-num js-line-number" data-line-number="9682"></td>
        <td id="LC9682" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9683" class="blob-num js-line-number" data-line-number="9683"></td>
        <td id="LC9683" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9684" class="blob-num js-line-number" data-line-number="9684"></td>
        <td id="LC9684" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9685" class="blob-num js-line-number" data-line-number="9685"></td>
        <td id="LC9685" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMultiple</span></td>
      </tr>
      <tr>
        <td id="L9686" class="blob-num js-line-number" data-line-number="9686"></td>
        <td id="LC9686" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9687" class="blob-num js-line-number" data-line-number="9687"></td>
        <td id="LC9687" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9688" class="blob-num js-line-number" data-line-number="9688"></td>
        <td id="LC9688" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9689" class="blob-num js-line-number" data-line-number="9689"></td>
        <td id="LC9689" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The HTML specs do not require browsers to preserve the special attributes such as multiple.</span></td>
      </tr>
      <tr>
        <td id="L9690" class="blob-num js-line-number" data-line-number="9690"></td>
        <td id="LC9690" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (The presence of them means true and absence means false)</span></td>
      </tr>
      <tr>
        <td id="L9691" class="blob-num js-line-number" data-line-number="9691"></td>
        <td id="LC9691" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This prevents the angular compiler from correctly retrieving the binding expression.</span></td>
      </tr>
      <tr>
        <td id="L9692" class="blob-num js-line-number" data-line-number="9692"></td>
        <td id="LC9692" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To solve this problem, we introduce the `ngMultiple` directive.</span></td>
      </tr>
      <tr>
        <td id="L9693" class="blob-num js-line-number" data-line-number="9693"></td>
        <td id="LC9693" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9694" class="blob-num js-line-number" data-line-number="9694"></td>
        <td id="LC9694" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9695" class="blob-num js-line-number" data-line-number="9695"></td>
        <td id="LC9695" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9696" class="blob-num js-line-number" data-line-number="9696"></td>
        <td id="LC9696" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9697" class="blob-num js-line-number" data-line-number="9697"></td>
        <td id="LC9697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Check me check multiple: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9698" class="blob-num js-line-number" data-line-number="9698"></td>
        <td id="LC9698" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;select id=&quot;select&quot; ng-multiple=&quot;checked&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L9699" class="blob-num js-line-number" data-line-number="9699"></td>
        <td id="LC9699" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;option&gt;Misko&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9700" class="blob-num js-line-number" data-line-number="9700"></td>
        <td id="LC9700" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;option&gt;Igor&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9701" class="blob-num js-line-number" data-line-number="9701"></td>
        <td id="LC9701" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;option&gt;Vojta&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9702" class="blob-num js-line-number" data-line-number="9702"></td>
        <td id="LC9702" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;option&gt;Di&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9703" class="blob-num js-line-number" data-line-number="9703"></td>
        <td id="LC9703" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L9704" class="blob-num js-line-number" data-line-number="9704"></td>
        <td id="LC9704" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9705" class="blob-num js-line-number" data-line-number="9705"></td>
        <td id="LC9705" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9706" class="blob-num js-line-number" data-line-number="9706"></td>
        <td id="LC9706" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         it(&#39;should toggle multiple&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9707" class="blob-num js-line-number" data-line-number="9707"></td>
        <td id="LC9707" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(element(&#39;.doc-example-live #select&#39;).prop(&#39;multiple&#39;)).toBeFalsy();</span></td>
      </tr>
      <tr>
        <td id="L9708" class="blob-num js-line-number" data-line-number="9708"></td>
        <td id="LC9708" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           input(&#39;checked&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L9709" class="blob-num js-line-number" data-line-number="9709"></td>
        <td id="LC9709" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(element(&#39;.doc-example-live #select&#39;).prop(&#39;multiple&#39;)).toBeTruthy();</span></td>
      </tr>
      <tr>
        <td id="L9710" class="blob-num js-line-number" data-line-number="9710"></td>
        <td id="LC9710" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         });</span></td>
      </tr>
      <tr>
        <td id="L9711" class="blob-num js-line-number" data-line-number="9711"></td>
        <td id="LC9711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9712" class="blob-num js-line-number" data-line-number="9712"></td>
        <td id="LC9712" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9713" class="blob-num js-line-number" data-line-number="9713"></td>
        <td id="LC9713" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9714" class="blob-num js-line-number" data-line-number="9714"></td>
        <td id="LC9714" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element SELECT</span></td>
      </tr>
      <tr>
        <td id="L9715" class="blob-num js-line-number" data-line-number="9715"></td>
        <td id="LC9715" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMultiple Angular expression that will be evaluated.</span></td>
      </tr>
      <tr>
        <td id="L9716" class="blob-num js-line-number" data-line-number="9716"></td>
        <td id="LC9716" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9717" class="blob-num js-line-number" data-line-number="9717"></td>
        <td id="LC9717" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9718" class="blob-num js-line-number" data-line-number="9718"></td>
        <td id="LC9718" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9719" class="blob-num js-line-number" data-line-number="9719"></td>
        <td id="LC9719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9720" class="blob-num js-line-number" data-line-number="9720"></td>
        <td id="LC9720" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9721" class="blob-num js-line-number" data-line-number="9721"></td>
        <td id="LC9721" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngReadonly</span></td>
      </tr>
      <tr>
        <td id="L9722" class="blob-num js-line-number" data-line-number="9722"></td>
        <td id="LC9722" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9723" class="blob-num js-line-number" data-line-number="9723"></td>
        <td id="LC9723" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9724" class="blob-num js-line-number" data-line-number="9724"></td>
        <td id="LC9724" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9725" class="blob-num js-line-number" data-line-number="9725"></td>
        <td id="LC9725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The HTML specs do not require browsers to preserve the special attributes such as readonly.</span></td>
      </tr>
      <tr>
        <td id="L9726" class="blob-num js-line-number" data-line-number="9726"></td>
        <td id="LC9726" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (The presence of them means true and absence means false)</span></td>
      </tr>
      <tr>
        <td id="L9727" class="blob-num js-line-number" data-line-number="9727"></td>
        <td id="LC9727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This prevents the angular compiler from correctly retrieving the binding expression.</span></td>
      </tr>
      <tr>
        <td id="L9728" class="blob-num js-line-number" data-line-number="9728"></td>
        <td id="LC9728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To solve this problem, we introduce the `ngReadonly` directive.</span></td>
      </tr>
      <tr>
        <td id="L9729" class="blob-num js-line-number" data-line-number="9729"></td>
        <td id="LC9729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9730" class="blob-num js-line-number" data-line-number="9730"></td>
        <td id="LC9730" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9731" class="blob-num js-line-number" data-line-number="9731"></td>
        <td id="LC9731" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9732" class="blob-num js-line-number" data-line-number="9732"></td>
        <td id="LC9732" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Check me to make text readonly: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9733" class="blob-num js-line-number" data-line-number="9733"></td>
        <td id="LC9733" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input type=&quot;text&quot; ng-readonly=&quot;checked&quot; value=&quot;I&#39;m Angular&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9734" class="blob-num js-line-number" data-line-number="9734"></td>
        <td id="LC9734" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9735" class="blob-num js-line-number" data-line-number="9735"></td>
        <td id="LC9735" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9736" class="blob-num js-line-number" data-line-number="9736"></td>
        <td id="LC9736" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should toggle readonly attr&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9737" class="blob-num js-line-number" data-line-number="9737"></td>
        <td id="LC9737" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live :text&#39;).prop(&#39;readonly&#39;)).toBeFalsy();</span></td>
      </tr>
      <tr>
        <td id="L9738" class="blob-num js-line-number" data-line-number="9738"></td>
        <td id="LC9738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;checked&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L9739" class="blob-num js-line-number" data-line-number="9739"></td>
        <td id="LC9739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live :text&#39;).prop(&#39;readonly&#39;)).toBeTruthy();</span></td>
      </tr>
      <tr>
        <td id="L9740" class="blob-num js-line-number" data-line-number="9740"></td>
        <td id="LC9740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9741" class="blob-num js-line-number" data-line-number="9741"></td>
        <td id="LC9741" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9742" class="blob-num js-line-number" data-line-number="9742"></td>
        <td id="LC9742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9743" class="blob-num js-line-number" data-line-number="9743"></td>
        <td id="LC9743" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9744" class="blob-num js-line-number" data-line-number="9744"></td>
        <td id="LC9744" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element INPUT</span></td>
      </tr>
      <tr>
        <td id="L9745" class="blob-num js-line-number" data-line-number="9745"></td>
        <td id="LC9745" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} expression Angular expression that will be evaluated.</span></td>
      </tr>
      <tr>
        <td id="L9746" class="blob-num js-line-number" data-line-number="9746"></td>
        <td id="LC9746" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9747" class="blob-num js-line-number" data-line-number="9747"></td>
        <td id="LC9747" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9748" class="blob-num js-line-number" data-line-number="9748"></td>
        <td id="LC9748" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9749" class="blob-num js-line-number" data-line-number="9749"></td>
        <td id="LC9749" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9750" class="blob-num js-line-number" data-line-number="9750"></td>
        <td id="LC9750" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9751" class="blob-num js-line-number" data-line-number="9751"></td>
        <td id="LC9751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngSelected</span></td>
      </tr>
      <tr>
        <td id="L9752" class="blob-num js-line-number" data-line-number="9752"></td>
        <td id="LC9752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict A</span></td>
      </tr>
      <tr>
        <td id="L9753" class="blob-num js-line-number" data-line-number="9753"></td>
        <td id="LC9753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9754" class="blob-num js-line-number" data-line-number="9754"></td>
        <td id="LC9754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9755" class="blob-num js-line-number" data-line-number="9755"></td>
        <td id="LC9755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The HTML specs do not require browsers to preserve the special attributes such as selected.</span></td>
      </tr>
      <tr>
        <td id="L9756" class="blob-num js-line-number" data-line-number="9756"></td>
        <td id="LC9756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (The presence of them means true and absence means false)</span></td>
      </tr>
      <tr>
        <td id="L9757" class="blob-num js-line-number" data-line-number="9757"></td>
        <td id="LC9757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This prevents the angular compiler from correctly retrieving the binding expression.</span></td>
      </tr>
      <tr>
        <td id="L9758" class="blob-num js-line-number" data-line-number="9758"></td>
        <td id="LC9758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To solve this problem, we introduced the `ngSelected` directive.</span></td>
      </tr>
      <tr>
        <td id="L9759" class="blob-num js-line-number" data-line-number="9759"></td>
        <td id="LC9759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L9760" class="blob-num js-line-number" data-line-number="9760"></td>
        <td id="LC9760" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9761" class="blob-num js-line-number" data-line-number="9761"></td>
        <td id="LC9761" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9762" class="blob-num js-line-number" data-line-number="9762"></td>
        <td id="LC9762" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Check me to select: &lt;input type=&quot;checkbox&quot; ng-model=&quot;selected&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L9763" class="blob-num js-line-number" data-line-number="9763"></td>
        <td id="LC9763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;select&gt;</span></td>
      </tr>
      <tr>
        <td id="L9764" class="blob-num js-line-number" data-line-number="9764"></td>
        <td id="LC9764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;option&gt;Hello!&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9765" class="blob-num js-line-number" data-line-number="9765"></td>
        <td id="LC9765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;option id=&quot;greet&quot; ng-selected=&quot;selected&quot;&gt;Greetings!&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L9766" class="blob-num js-line-number" data-line-number="9766"></td>
        <td id="LC9766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L9767" class="blob-num js-line-number" data-line-number="9767"></td>
        <td id="LC9767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L9768" class="blob-num js-line-number" data-line-number="9768"></td>
        <td id="LC9768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9769" class="blob-num js-line-number" data-line-number="9769"></td>
        <td id="LC9769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should select Greetings!&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L9770" class="blob-num js-line-number" data-line-number="9770"></td>
        <td id="LC9770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live #greet&#39;).prop(&#39;selected&#39;)).toBeFalsy();</span></td>
      </tr>
      <tr>
        <td id="L9771" class="blob-num js-line-number" data-line-number="9771"></td>
        <td id="LC9771" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;selected&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L9772" class="blob-num js-line-number" data-line-number="9772"></td>
        <td id="LC9772" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live #greet&#39;).prop(&#39;selected&#39;)).toBeTruthy();</span></td>
      </tr>
      <tr>
        <td id="L9773" class="blob-num js-line-number" data-line-number="9773"></td>
        <td id="LC9773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L9774" class="blob-num js-line-number" data-line-number="9774"></td>
        <td id="LC9774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L9775" class="blob-num js-line-number" data-line-number="9775"></td>
        <td id="LC9775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L9776" class="blob-num js-line-number" data-line-number="9776"></td>
        <td id="LC9776" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9777" class="blob-num js-line-number" data-line-number="9777"></td>
        <td id="LC9777" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element OPTION</span></td>
      </tr>
      <tr>
        <td id="L9778" class="blob-num js-line-number" data-line-number="9778"></td>
        <td id="LC9778" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} expression Angular expression that will be evaluated.</span></td>
      </tr>
      <tr>
        <td id="L9779" class="blob-num js-line-number" data-line-number="9779"></td>
        <td id="LC9779" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9780" class="blob-num js-line-number" data-line-number="9780"></td>
        <td id="LC9780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9781" class="blob-num js-line-number" data-line-number="9781"></td>
        <td id="LC9781" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9782" class="blob-num js-line-number" data-line-number="9782"></td>
        <td id="LC9782" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngAttributeAliasDirectives <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L9783" class="blob-num js-line-number" data-line-number="9783"></td>
        <td id="LC9783" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9784" class="blob-num js-line-number" data-line-number="9784"></td>
        <td id="LC9784" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9785" class="blob-num js-line-number" data-line-number="9785"></td>
        <td id="LC9785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// boolean attrs are evaluated</span></td>
      </tr>
      <tr>
        <td id="L9786" class="blob-num js-line-number" data-line-number="9786"></td>
        <td id="LC9786" class="blob-code blob-code-inner js-file-line">forEach(<span class="pl-c1">BOOLEAN_ATTR</span>, <span class="pl-k">function</span>(<span class="pl-smi">propName</span>, <span class="pl-smi">attrName</span>) {</td>
      </tr>
      <tr>
        <td id="L9787" class="blob-num js-line-number" data-line-number="9787"></td>
        <td id="LC9787" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> normalized <span class="pl-k">=</span> directiveNormalize(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> attrName);</td>
      </tr>
      <tr>
        <td id="L9788" class="blob-num js-line-number" data-line-number="9788"></td>
        <td id="LC9788" class="blob-code blob-code-inner js-file-line">  ngAttributeAliasDirectives[normalized] <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9789" class="blob-num js-line-number" data-line-number="9789"></td>
        <td id="LC9789" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L9790" class="blob-num js-line-number" data-line-number="9790"></td>
        <td id="LC9790" class="blob-code blob-code-inner js-file-line">      priority<span class="pl-k">:</span> <span class="pl-c1">100</span>,</td>
      </tr>
      <tr>
        <td id="L9791" class="blob-num js-line-number" data-line-number="9791"></td>
        <td id="LC9791" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9792" class="blob-num js-line-number" data-line-number="9792"></td>
        <td id="LC9792" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L9793" class="blob-num js-line-number" data-line-number="9793"></td>
        <td id="LC9793" class="blob-code blob-code-inner js-file-line">          attr.$$observers[attrName] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L9794" class="blob-num js-line-number" data-line-number="9794"></td>
        <td id="LC9794" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">watch</span>(attr[normalized], <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L9795" class="blob-num js-line-number" data-line-number="9795"></td>
        <td id="LC9795" class="blob-code blob-code-inner js-file-line">            attr.$set(attrName, <span class="pl-k">!!</span>value);</td>
      </tr>
      <tr>
        <td id="L9796" class="blob-num js-line-number" data-line-number="9796"></td>
        <td id="LC9796" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L9797" class="blob-num js-line-number" data-line-number="9797"></td>
        <td id="LC9797" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L9798" class="blob-num js-line-number" data-line-number="9798"></td>
        <td id="LC9798" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9799" class="blob-num js-line-number" data-line-number="9799"></td>
        <td id="LC9799" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9800" class="blob-num js-line-number" data-line-number="9800"></td>
        <td id="LC9800" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9801" class="blob-num js-line-number" data-line-number="9801"></td>
        <td id="LC9801" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L9802" class="blob-num js-line-number" data-line-number="9802"></td>
        <td id="LC9802" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9803" class="blob-num js-line-number" data-line-number="9803"></td>
        <td id="LC9803" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9804" class="blob-num js-line-number" data-line-number="9804"></td>
        <td id="LC9804" class="blob-code blob-code-inner js-file-line"><span class="pl-c">// ng-src, ng-href are interpolated</span></td>
      </tr>
      <tr>
        <td id="L9805" class="blob-num js-line-number" data-line-number="9805"></td>
        <td id="LC9805" class="blob-code blob-code-inner js-file-line">forEach([<span class="pl-s"><span class="pl-pds">&#39;</span>src<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>href<span class="pl-pds">&#39;</span></span>], <span class="pl-k">function</span>(<span class="pl-smi">attrName</span>) {</td>
      </tr>
      <tr>
        <td id="L9806" class="blob-num js-line-number" data-line-number="9806"></td>
        <td id="LC9806" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> normalized <span class="pl-k">=</span> directiveNormalize(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> attrName);</td>
      </tr>
      <tr>
        <td id="L9807" class="blob-num js-line-number" data-line-number="9807"></td>
        <td id="LC9807" class="blob-code blob-code-inner js-file-line">  ngAttributeAliasDirectives[normalized] <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9808" class="blob-num js-line-number" data-line-number="9808"></td>
        <td id="LC9808" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L9809" class="blob-num js-line-number" data-line-number="9809"></td>
        <td id="LC9809" class="blob-code blob-code-inner js-file-line">      priority<span class="pl-k">:</span> <span class="pl-c1">99</span>, <span class="pl-c">// it needs to run after the attributes are interpolated</span></td>
      </tr>
      <tr>
        <td id="L9810" class="blob-num js-line-number" data-line-number="9810"></td>
        <td id="LC9810" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9811" class="blob-num js-line-number" data-line-number="9811"></td>
        <td id="LC9811" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L9812" class="blob-num js-line-number" data-line-number="9812"></td>
        <td id="LC9812" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> value <span class="pl-k">=</span> attr[normalized];</td>
      </tr>
      <tr>
        <td id="L9813" class="blob-num js-line-number" data-line-number="9813"></td>
        <td id="LC9813" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (value <span class="pl-k">==</span> <span class="pl-c1">undefined</span>) {</td>
      </tr>
      <tr>
        <td id="L9814" class="blob-num js-line-number" data-line-number="9814"></td>
        <td id="LC9814" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// undefined value means that the directive is being interpolated</span></td>
      </tr>
      <tr>
        <td id="L9815" class="blob-num js-line-number" data-line-number="9815"></td>
        <td id="LC9815" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// so just register observer</span></td>
      </tr>
      <tr>
        <td id="L9816" class="blob-num js-line-number" data-line-number="9816"></td>
        <td id="LC9816" class="blob-code blob-code-inner js-file-line">            attr.$$observers[attrName] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L9817" class="blob-num js-line-number" data-line-number="9817"></td>
        <td id="LC9817" class="blob-code blob-code-inner js-file-line">            attr.$observe(normalized, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L9818" class="blob-num js-line-number" data-line-number="9818"></td>
        <td id="LC9818" class="blob-code blob-code-inner js-file-line">              attr.$set(attrName, value);</td>
      </tr>
      <tr>
        <td id="L9819" class="blob-num js-line-number" data-line-number="9819"></td>
        <td id="LC9819" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L9820" class="blob-num js-line-number" data-line-number="9820"></td>
        <td id="LC9820" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9821" class="blob-num js-line-number" data-line-number="9821"></td>
        <td id="LC9821" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// value present means that no interpolation, so copy to native attribute.</span></td>
      </tr>
      <tr>
        <td id="L9822" class="blob-num js-line-number" data-line-number="9822"></td>
        <td id="LC9822" class="blob-code blob-code-inner js-file-line">            attr.$set(attrName, value);</td>
      </tr>
      <tr>
        <td id="L9823" class="blob-num js-line-number" data-line-number="9823"></td>
        <td id="LC9823" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9824" class="blob-num js-line-number" data-line-number="9824"></td>
        <td id="LC9824" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L9825" class="blob-num js-line-number" data-line-number="9825"></td>
        <td id="LC9825" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9826" class="blob-num js-line-number" data-line-number="9826"></td>
        <td id="LC9826" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L9827" class="blob-num js-line-number" data-line-number="9827"></td>
        <td id="LC9827" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9828" class="blob-num js-line-number" data-line-number="9828"></td>
        <td id="LC9828" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L9829" class="blob-num js-line-number" data-line-number="9829"></td>
        <td id="LC9829" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9830" class="blob-num js-line-number" data-line-number="9830"></td>
        <td id="LC9830" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> nullFormCtrl <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L9831" class="blob-num js-line-number" data-line-number="9831"></td>
        <td id="LC9831" class="blob-code blob-code-inner js-file-line">  $addControl<span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L9832" class="blob-num js-line-number" data-line-number="9832"></td>
        <td id="LC9832" class="blob-code blob-code-inner js-file-line">  $removeControl<span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L9833" class="blob-num js-line-number" data-line-number="9833"></td>
        <td id="LC9833" class="blob-code blob-code-inner js-file-line">  $setValidity<span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L9834" class="blob-num js-line-number" data-line-number="9834"></td>
        <td id="LC9834" class="blob-code blob-code-inner js-file-line">  $setDirty<span class="pl-k">:</span> noop</td>
      </tr>
      <tr>
        <td id="L9835" class="blob-num js-line-number" data-line-number="9835"></td>
        <td id="LC9835" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L9836" class="blob-num js-line-number" data-line-number="9836"></td>
        <td id="LC9836" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9837" class="blob-num js-line-number" data-line-number="9837"></td>
        <td id="LC9837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9838" class="blob-num js-line-number" data-line-number="9838"></td>
        <td id="LC9838" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L9839" class="blob-num js-line-number" data-line-number="9839"></td>
        <td id="LC9839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.form.FormController</span></td>
      </tr>
      <tr>
        <td id="L9840" class="blob-num js-line-number" data-line-number="9840"></td>
        <td id="LC9840" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9841" class="blob-num js-line-number" data-line-number="9841"></td>
        <td id="LC9841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $pristine True if user has not interacted with the form yet.</span></td>
      </tr>
      <tr>
        <td id="L9842" class="blob-num js-line-number" data-line-number="9842"></td>
        <td id="LC9842" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $dirty True if user has already interacted with the form.</span></td>
      </tr>
      <tr>
        <td id="L9843" class="blob-num js-line-number" data-line-number="9843"></td>
        <td id="LC9843" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $valid True if all of the containg forms and controls are valid.</span></td>
      </tr>
      <tr>
        <td id="L9844" class="blob-num js-line-number" data-line-number="9844"></td>
        <td id="LC9844" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $invalid True if at least one containing control or form is invalid.</span></td>
      </tr>
      <tr>
        <td id="L9845" class="blob-num js-line-number" data-line-number="9845"></td>
        <td id="LC9845" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9846" class="blob-num js-line-number" data-line-number="9846"></td>
        <td id="LC9846" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {Object} $error Is an object hash, containing references to all invalid controls or</span></td>
      </tr>
      <tr>
        <td id="L9847" class="blob-num js-line-number" data-line-number="9847"></td>
        <td id="LC9847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  forms, where:</span></td>
      </tr>
      <tr>
        <td id="L9848" class="blob-num js-line-number" data-line-number="9848"></td>
        <td id="LC9848" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9849" class="blob-num js-line-number" data-line-number="9849"></td>
        <td id="LC9849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - keys are validation tokens (error names) â such as `REQUIRED`, `URL` or `EMAIL`),</span></td>
      </tr>
      <tr>
        <td id="L9850" class="blob-num js-line-number" data-line-number="9850"></td>
        <td id="LC9850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - values are arrays of controls or forms that are invalid with given error.</span></td>
      </tr>
      <tr>
        <td id="L9851" class="blob-num js-line-number" data-line-number="9851"></td>
        <td id="LC9851" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9852" class="blob-num js-line-number" data-line-number="9852"></td>
        <td id="LC9852" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9853" class="blob-num js-line-number" data-line-number="9853"></td>
        <td id="LC9853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `FormController` keeps track of all its controls and nested forms as well as state of them,</span></td>
      </tr>
      <tr>
        <td id="L9854" class="blob-num js-line-number" data-line-number="9854"></td>
        <td id="LC9854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * such as being valid/invalid or dirty/pristine.</span></td>
      </tr>
      <tr>
        <td id="L9855" class="blob-num js-line-number" data-line-number="9855"></td>
        <td id="LC9855" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9856" class="blob-num js-line-number" data-line-number="9856"></td>
        <td id="LC9856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Each {@link angular.module.ng.$compileProvider.directive.form form} directive creates an instance</span></td>
      </tr>
      <tr>
        <td id="L9857" class="blob-num js-line-number" data-line-number="9857"></td>
        <td id="LC9857" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * of `FormController`.</span></td>
      </tr>
      <tr>
        <td id="L9858" class="blob-num js-line-number" data-line-number="9858"></td>
        <td id="LC9858" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9859" class="blob-num js-line-number" data-line-number="9859"></td>
        <td id="LC9859" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9860" class="blob-num js-line-number" data-line-number="9860"></td>
        <td id="LC9860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//asks for $scope to fool the BC controller module</span></td>
      </tr>
      <tr>
        <td id="L9861" class="blob-num js-line-number" data-line-number="9861"></td>
        <td id="LC9861" class="blob-code blob-code-inner js-file-line">FormController.$inject <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$element<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$attrs<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L9862" class="blob-num js-line-number" data-line-number="9862"></td>
        <td id="LC9862" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">FormController</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attrs</span>) {</td>
      </tr>
      <tr>
        <td id="L9863" class="blob-num js-line-number" data-line-number="9863"></td>
        <td id="LC9863" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> form <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L9864" class="blob-num js-line-number" data-line-number="9864"></td>
        <td id="LC9864" class="blob-code blob-code-inner js-file-line">      parentForm <span class="pl-k">=</span> element.<span class="pl-c1">parent</span>().controller(<span class="pl-s"><span class="pl-pds">&#39;</span>form<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> nullFormCtrl,</td>
      </tr>
      <tr>
        <td id="L9865" class="blob-num js-line-number" data-line-number="9865"></td>
        <td id="LC9865" class="blob-code blob-code-inner js-file-line">      invalidCount <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// used to easily determine if we are valid</span></td>
      </tr>
      <tr>
        <td id="L9866" class="blob-num js-line-number" data-line-number="9866"></td>
        <td id="LC9866" class="blob-code blob-code-inner js-file-line">      errors <span class="pl-k">=</span> form.$error <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L9867" class="blob-num js-line-number" data-line-number="9867"></td>
        <td id="LC9867" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9868" class="blob-num js-line-number" data-line-number="9868"></td>
        <td id="LC9868" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// init state</span></td>
      </tr>
      <tr>
        <td id="L9869" class="blob-num js-line-number" data-line-number="9869"></td>
        <td id="LC9869" class="blob-code blob-code-inner js-file-line">  form.$name <span class="pl-k">=</span> attrs.<span class="pl-c1">name</span>;</td>
      </tr>
      <tr>
        <td id="L9870" class="blob-num js-line-number" data-line-number="9870"></td>
        <td id="LC9870" class="blob-code blob-code-inner js-file-line">  form.$dirty <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9871" class="blob-num js-line-number" data-line-number="9871"></td>
        <td id="LC9871" class="blob-code blob-code-inner js-file-line">  form.$pristine <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9872" class="blob-num js-line-number" data-line-number="9872"></td>
        <td id="LC9872" class="blob-code blob-code-inner js-file-line">  form.$valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9873" class="blob-num js-line-number" data-line-number="9873"></td>
        <td id="LC9873" class="blob-code blob-code-inner js-file-line">  form.$invalid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9874" class="blob-num js-line-number" data-line-number="9874"></td>
        <td id="LC9874" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9875" class="blob-num js-line-number" data-line-number="9875"></td>
        <td id="LC9875" class="blob-code blob-code-inner js-file-line">  parentForm.$addControl(form);</td>
      </tr>
      <tr>
        <td id="L9876" class="blob-num js-line-number" data-line-number="9876"></td>
        <td id="LC9876" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9877" class="blob-num js-line-number" data-line-number="9877"></td>
        <td id="LC9877" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Setup initial state of the control</span></td>
      </tr>
      <tr>
        <td id="L9878" class="blob-num js-line-number" data-line-number="9878"></td>
        <td id="LC9878" class="blob-code blob-code-inner js-file-line">  element.addClass(<span class="pl-c1">PRISTINE_CLASS</span>);</td>
      </tr>
      <tr>
        <td id="L9879" class="blob-num js-line-number" data-line-number="9879"></td>
        <td id="LC9879" class="blob-code blob-code-inner js-file-line">  toggleValidCss(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L9880" class="blob-num js-line-number" data-line-number="9880"></td>
        <td id="LC9880" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9881" class="blob-num js-line-number" data-line-number="9881"></td>
        <td id="LC9881" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// convenience method for easy toggling of classes</span></td>
      </tr>
      <tr>
        <td id="L9882" class="blob-num js-line-number" data-line-number="9882"></td>
        <td id="LC9882" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">toggleValidCss</span>(<span class="pl-smi">isValid</span>, <span class="pl-smi">validationErrorKey</span>) {</td>
      </tr>
      <tr>
        <td id="L9883" class="blob-num js-line-number" data-line-number="9883"></td>
        <td id="LC9883" class="blob-code blob-code-inner js-file-line">    validationErrorKey <span class="pl-k">=</span> validationErrorKey <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> snake_case(validationErrorKey, <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L9884" class="blob-num js-line-number" data-line-number="9884"></td>
        <td id="LC9884" class="blob-code blob-code-inner js-file-line">    element.</td>
      </tr>
      <tr>
        <td id="L9885" class="blob-num js-line-number" data-line-number="9885"></td>
        <td id="LC9885" class="blob-code blob-code-inner js-file-line">      removeClass((isValid <span class="pl-k">?</span> INVALID_CLASS <span class="pl-k">:</span> <span class="pl-c1">VALID_CLASS</span>) <span class="pl-k">+</span> validationErrorKey).</td>
      </tr>
      <tr>
        <td id="L9886" class="blob-num js-line-number" data-line-number="9886"></td>
        <td id="LC9886" class="blob-code blob-code-inner js-file-line">      addClass((isValid <span class="pl-k">?</span> VALID_CLASS <span class="pl-k">:</span> <span class="pl-c1">INVALID_CLASS</span>) <span class="pl-k">+</span> validationErrorKey);</td>
      </tr>
      <tr>
        <td id="L9887" class="blob-num js-line-number" data-line-number="9887"></td>
        <td id="LC9887" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L9888" class="blob-num js-line-number" data-line-number="9888"></td>
        <td id="LC9888" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9889" class="blob-num js-line-number" data-line-number="9889"></td>
        <td id="LC9889" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">form</span>.<span class="pl-en">$addControl</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">control</span>) {</td>
      </tr>
      <tr>
        <td id="L9890" class="blob-num js-line-number" data-line-number="9890"></td>
        <td id="LC9890" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (control.$name <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>form.hasOwnProperty(control.$name)) {</td>
      </tr>
      <tr>
        <td id="L9891" class="blob-num js-line-number" data-line-number="9891"></td>
        <td id="LC9891" class="blob-code blob-code-inner js-file-line">      form[control.$name] <span class="pl-k">=</span> control;</td>
      </tr>
      <tr>
        <td id="L9892" class="blob-num js-line-number" data-line-number="9892"></td>
        <td id="LC9892" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9893" class="blob-num js-line-number" data-line-number="9893"></td>
        <td id="LC9893" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9894" class="blob-num js-line-number" data-line-number="9894"></td>
        <td id="LC9894" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9895" class="blob-num js-line-number" data-line-number="9895"></td>
        <td id="LC9895" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">form</span>.<span class="pl-en">$removeControl</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">control</span>) {</td>
      </tr>
      <tr>
        <td id="L9896" class="blob-num js-line-number" data-line-number="9896"></td>
        <td id="LC9896" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (control.$name <span class="pl-k">&amp;&amp;</span> form[control.$name] <span class="pl-k">===</span> control) {</td>
      </tr>
      <tr>
        <td id="L9897" class="blob-num js-line-number" data-line-number="9897"></td>
        <td id="LC9897" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">delete</span> form[control.$name];</td>
      </tr>
      <tr>
        <td id="L9898" class="blob-num js-line-number" data-line-number="9898"></td>
        <td id="LC9898" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9899" class="blob-num js-line-number" data-line-number="9899"></td>
        <td id="LC9899" class="blob-code blob-code-inner js-file-line">    forEach(errors, <span class="pl-k">function</span>(<span class="pl-smi">queue</span>, <span class="pl-smi">validationToken</span>) {</td>
      </tr>
      <tr>
        <td id="L9900" class="blob-num js-line-number" data-line-number="9900"></td>
        <td id="LC9900" class="blob-code blob-code-inner js-file-line">      form.$setValidity(validationToken, <span class="pl-c1">true</span>, control);</td>
      </tr>
      <tr>
        <td id="L9901" class="blob-num js-line-number" data-line-number="9901"></td>
        <td id="LC9901" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L9902" class="blob-num js-line-number" data-line-number="9902"></td>
        <td id="LC9902" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9903" class="blob-num js-line-number" data-line-number="9903"></td>
        <td id="LC9903" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9904" class="blob-num js-line-number" data-line-number="9904"></td>
        <td id="LC9904" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">form</span>.<span class="pl-en">$setValidity</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">validationToken</span>, <span class="pl-smi">isValid</span>, <span class="pl-smi">control</span>) {</td>
      </tr>
      <tr>
        <td id="L9905" class="blob-num js-line-number" data-line-number="9905"></td>
        <td id="LC9905" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> queue <span class="pl-k">=</span> errors[validationToken];</td>
      </tr>
      <tr>
        <td id="L9906" class="blob-num js-line-number" data-line-number="9906"></td>
        <td id="LC9906" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9907" class="blob-num js-line-number" data-line-number="9907"></td>
        <td id="LC9907" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isValid) {</td>
      </tr>
      <tr>
        <td id="L9908" class="blob-num js-line-number" data-line-number="9908"></td>
        <td id="LC9908" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (queue) {</td>
      </tr>
      <tr>
        <td id="L9909" class="blob-num js-line-number" data-line-number="9909"></td>
        <td id="LC9909" class="blob-code blob-code-inner js-file-line">        arrayRemove(queue, control);</td>
      </tr>
      <tr>
        <td id="L9910" class="blob-num js-line-number" data-line-number="9910"></td>
        <td id="LC9910" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>queue.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L9911" class="blob-num js-line-number" data-line-number="9911"></td>
        <td id="LC9911" class="blob-code blob-code-inner js-file-line">          invalidCount<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L9912" class="blob-num js-line-number" data-line-number="9912"></td>
        <td id="LC9912" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>invalidCount) {</td>
      </tr>
      <tr>
        <td id="L9913" class="blob-num js-line-number" data-line-number="9913"></td>
        <td id="LC9913" class="blob-code blob-code-inner js-file-line">            toggleValidCss(isValid);</td>
      </tr>
      <tr>
        <td id="L9914" class="blob-num js-line-number" data-line-number="9914"></td>
        <td id="LC9914" class="blob-code blob-code-inner js-file-line">            form.$valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9915" class="blob-num js-line-number" data-line-number="9915"></td>
        <td id="LC9915" class="blob-code blob-code-inner js-file-line">            form.$invalid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9916" class="blob-num js-line-number" data-line-number="9916"></td>
        <td id="LC9916" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L9917" class="blob-num js-line-number" data-line-number="9917"></td>
        <td id="LC9917" class="blob-code blob-code-inner js-file-line">          errors[validationToken] <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9918" class="blob-num js-line-number" data-line-number="9918"></td>
        <td id="LC9918" class="blob-code blob-code-inner js-file-line">          toggleValidCss(<span class="pl-c1">true</span>, validationToken);</td>
      </tr>
      <tr>
        <td id="L9919" class="blob-num js-line-number" data-line-number="9919"></td>
        <td id="LC9919" class="blob-code blob-code-inner js-file-line">          parentForm.$setValidity(validationToken, <span class="pl-c1">true</span>, form);</td>
      </tr>
      <tr>
        <td id="L9920" class="blob-num js-line-number" data-line-number="9920"></td>
        <td id="LC9920" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L9921" class="blob-num js-line-number" data-line-number="9921"></td>
        <td id="LC9921" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9922" class="blob-num js-line-number" data-line-number="9922"></td>
        <td id="LC9922" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9923" class="blob-num js-line-number" data-line-number="9923"></td>
        <td id="LC9923" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9924" class="blob-num js-line-number" data-line-number="9924"></td>
        <td id="LC9924" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>invalidCount) {</td>
      </tr>
      <tr>
        <td id="L9925" class="blob-num js-line-number" data-line-number="9925"></td>
        <td id="LC9925" class="blob-code blob-code-inner js-file-line">        toggleValidCss(isValid);</td>
      </tr>
      <tr>
        <td id="L9926" class="blob-num js-line-number" data-line-number="9926"></td>
        <td id="LC9926" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9927" class="blob-num js-line-number" data-line-number="9927"></td>
        <td id="LC9927" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (queue) {</td>
      </tr>
      <tr>
        <td id="L9928" class="blob-num js-line-number" data-line-number="9928"></td>
        <td id="LC9928" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (includes(queue, control)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L9929" class="blob-num js-line-number" data-line-number="9929"></td>
        <td id="LC9929" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L9930" class="blob-num js-line-number" data-line-number="9930"></td>
        <td id="LC9930" class="blob-code blob-code-inner js-file-line">        errors[validationToken] <span class="pl-k">=</span> queue <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L9931" class="blob-num js-line-number" data-line-number="9931"></td>
        <td id="LC9931" class="blob-code blob-code-inner js-file-line">        invalidCount<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L9932" class="blob-num js-line-number" data-line-number="9932"></td>
        <td id="LC9932" class="blob-code blob-code-inner js-file-line">        toggleValidCss(<span class="pl-c1">false</span>, validationToken);</td>
      </tr>
      <tr>
        <td id="L9933" class="blob-num js-line-number" data-line-number="9933"></td>
        <td id="LC9933" class="blob-code blob-code-inner js-file-line">        parentForm.$setValidity(validationToken, <span class="pl-c1">false</span>, form);</td>
      </tr>
      <tr>
        <td id="L9934" class="blob-num js-line-number" data-line-number="9934"></td>
        <td id="LC9934" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L9935" class="blob-num js-line-number" data-line-number="9935"></td>
        <td id="LC9935" class="blob-code blob-code-inner js-file-line">      queue.<span class="pl-c1">push</span>(control);</td>
      </tr>
      <tr>
        <td id="L9936" class="blob-num js-line-number" data-line-number="9936"></td>
        <td id="LC9936" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9937" class="blob-num js-line-number" data-line-number="9937"></td>
        <td id="LC9937" class="blob-code blob-code-inner js-file-line">      form.$valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9938" class="blob-num js-line-number" data-line-number="9938"></td>
        <td id="LC9938" class="blob-code blob-code-inner js-file-line">      form.$invalid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9939" class="blob-num js-line-number" data-line-number="9939"></td>
        <td id="LC9939" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L9940" class="blob-num js-line-number" data-line-number="9940"></td>
        <td id="LC9940" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9941" class="blob-num js-line-number" data-line-number="9941"></td>
        <td id="LC9941" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9942" class="blob-num js-line-number" data-line-number="9942"></td>
        <td id="LC9942" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">form</span>.<span class="pl-en">$setDirty</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L9943" class="blob-num js-line-number" data-line-number="9943"></td>
        <td id="LC9943" class="blob-code blob-code-inner js-file-line">    element.removeClass(<span class="pl-c1">PRISTINE_CLASS</span>).addClass(<span class="pl-c1">DIRTY_CLASS</span>);</td>
      </tr>
      <tr>
        <td id="L9944" class="blob-num js-line-number" data-line-number="9944"></td>
        <td id="LC9944" class="blob-code blob-code-inner js-file-line">    form.$dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L9945" class="blob-num js-line-number" data-line-number="9945"></td>
        <td id="LC9945" class="blob-code blob-code-inner js-file-line">    form.$pristine <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L9946" class="blob-num js-line-number" data-line-number="9946"></td>
        <td id="LC9946" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L9947" class="blob-num js-line-number" data-line-number="9947"></td>
        <td id="LC9947" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9948" class="blob-num js-line-number" data-line-number="9948"></td>
        <td id="LC9948" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L9949" class="blob-num js-line-number" data-line-number="9949"></td>
        <td id="LC9949" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9950" class="blob-num js-line-number" data-line-number="9950"></td>
        <td id="LC9950" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9951" class="blob-num js-line-number" data-line-number="9951"></td>
        <td id="LC9951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9952" class="blob-num js-line-number" data-line-number="9952"></td>
        <td id="LC9952" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9953" class="blob-num js-line-number" data-line-number="9953"></td>
        <td id="LC9953" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngForm</span></td>
      </tr>
      <tr>
        <td id="L9954" class="blob-num js-line-number" data-line-number="9954"></td>
        <td id="LC9954" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict EAC</span></td>
      </tr>
      <tr>
        <td id="L9955" class="blob-num js-line-number" data-line-number="9955"></td>
        <td id="LC9955" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9956" class="blob-num js-line-number" data-line-number="9956"></td>
        <td id="LC9956" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9957" class="blob-num js-line-number" data-line-number="9957"></td>
        <td id="LC9957" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Nestable alias of {@link angular.module.ng.$compileProvider.directive.form `form`} directive. HTML</span></td>
      </tr>
      <tr>
        <td id="L9958" class="blob-num js-line-number" data-line-number="9958"></td>
        <td id="LC9958" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a</span></td>
      </tr>
      <tr>
        <td id="L9959" class="blob-num js-line-number" data-line-number="9959"></td>
        <td id="LC9959" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * sub-group of controls needs to be determined.</span></td>
      </tr>
      <tr>
        <td id="L9960" class="blob-num js-line-number" data-line-number="9960"></td>
        <td id="LC9960" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9961" class="blob-num js-line-number" data-line-number="9961"></td>
        <td id="LC9961" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngForm|name Name of the form. If specified, the form controller will be published into</span></td>
      </tr>
      <tr>
        <td id="L9962" class="blob-num js-line-number" data-line-number="9962"></td>
        <td id="LC9962" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                       related scope, under this name.</span></td>
      </tr>
      <tr>
        <td id="L9963" class="blob-num js-line-number" data-line-number="9963"></td>
        <td id="LC9963" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9964" class="blob-num js-line-number" data-line-number="9964"></td>
        <td id="LC9964" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L9965" class="blob-num js-line-number" data-line-number="9965"></td>
        <td id="LC9965" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9966" class="blob-num js-line-number" data-line-number="9966"></td>
        <td id="LC9966" class="blob-code blob-code-inner js-file-line"> <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L9967" class="blob-num js-line-number" data-line-number="9967"></td>
        <td id="LC9967" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L9968" class="blob-num js-line-number" data-line-number="9968"></td>
        <td id="LC9968" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.form</span></td>
      </tr>
      <tr>
        <td id="L9969" class="blob-num js-line-number" data-line-number="9969"></td>
        <td id="LC9969" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict E</span></td>
      </tr>
      <tr>
        <td id="L9970" class="blob-num js-line-number" data-line-number="9970"></td>
        <td id="LC9970" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9971" class="blob-num js-line-number" data-line-number="9971"></td>
        <td id="LC9971" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L9972" class="blob-num js-line-number" data-line-number="9972"></td>
        <td id="LC9972" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Directive that instantiates</span></td>
      </tr>
      <tr>
        <td id="L9973" class="blob-num js-line-number" data-line-number="9973"></td>
        <td id="LC9973" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.form.FormController FormController}.</span></td>
      </tr>
      <tr>
        <td id="L9974" class="blob-num js-line-number" data-line-number="9974"></td>
        <td id="LC9974" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9975" class="blob-num js-line-number" data-line-number="9975"></td>
        <td id="LC9975" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * If `name` attribute is specified, the form controller is published onto the current scope under</span></td>
      </tr>
      <tr>
        <td id="L9976" class="blob-num js-line-number" data-line-number="9976"></td>
        <td id="LC9976" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * this name.</span></td>
      </tr>
      <tr>
        <td id="L9977" class="blob-num js-line-number" data-line-number="9977"></td>
        <td id="LC9977" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9978" class="blob-num js-line-number" data-line-number="9978"></td>
        <td id="LC9978" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Alias: {@link angular.module.ng.$compileProvider.directive.ngForm `ngForm`}</span></td>
      </tr>
      <tr>
        <td id="L9979" class="blob-num js-line-number" data-line-number="9979"></td>
        <td id="LC9979" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9980" class="blob-num js-line-number" data-line-number="9980"></td>
        <td id="LC9980" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In angular forms can be nested. This means that the outer form is valid when all of the child</span></td>
      </tr>
      <tr>
        <td id="L9981" class="blob-num js-line-number" data-line-number="9981"></td>
        <td id="LC9981" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * forms are valid as well. However browsers do not allow nesting of `&lt;form&gt;` elements, for this</span></td>
      </tr>
      <tr>
        <td id="L9982" class="blob-num js-line-number" data-line-number="9982"></td>
        <td id="LC9982" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * reason angular provides {@link angular.module.ng.$compileProvider.directive.ngForm `ngForm`} alias</span></td>
      </tr>
      <tr>
        <td id="L9983" class="blob-num js-line-number" data-line-number="9983"></td>
        <td id="LC9983" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * which behaves identical to `&lt;form&gt;` but allows form nesting.</span></td>
      </tr>
      <tr>
        <td id="L9984" class="blob-num js-line-number" data-line-number="9984"></td>
        <td id="LC9984" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9985" class="blob-num js-line-number" data-line-number="9985"></td>
        <td id="LC9985" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9986" class="blob-num js-line-number" data-line-number="9986"></td>
        <td id="LC9986" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # CSS classes</span></td>
      </tr>
      <tr>
        <td id="L9987" class="blob-num js-line-number" data-line-number="9987"></td>
        <td id="LC9987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - `ng-valid` Is set if the form is valid.</span></td>
      </tr>
      <tr>
        <td id="L9988" class="blob-num js-line-number" data-line-number="9988"></td>
        <td id="LC9988" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - `ng-invalid` Is set if the form is invalid.</span></td>
      </tr>
      <tr>
        <td id="L9989" class="blob-num js-line-number" data-line-number="9989"></td>
        <td id="LC9989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - `ng-pristine` Is set if the form is pristine.</span></td>
      </tr>
      <tr>
        <td id="L9990" class="blob-num js-line-number" data-line-number="9990"></td>
        <td id="LC9990" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - `ng-dirty` Is set if the form is dirty.</span></td>
      </tr>
      <tr>
        <td id="L9991" class="blob-num js-line-number" data-line-number="9991"></td>
        <td id="LC9991" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9992" class="blob-num js-line-number" data-line-number="9992"></td>
        <td id="LC9992" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9993" class="blob-num js-line-number" data-line-number="9993"></td>
        <td id="LC9993" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Submitting a form and preventing default action</span></td>
      </tr>
      <tr>
        <td id="L9994" class="blob-num js-line-number" data-line-number="9994"></td>
        <td id="LC9994" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L9995" class="blob-num js-line-number" data-line-number="9995"></td>
        <td id="LC9995" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Since the role of forms in client-side Angular applications is different than in classical</span></td>
      </tr>
      <tr>
        <td id="L9996" class="blob-num js-line-number" data-line-number="9996"></td>
        <td id="LC9996" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * roundtrip apps, it is desirable for the browser not to translate the form submission into a full</span></td>
      </tr>
      <tr>
        <td id="L9997" class="blob-num js-line-number" data-line-number="9997"></td>
        <td id="LC9997" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * page reload that sends the data to the server. Instead some javascript logic should be triggered</span></td>
      </tr>
      <tr>
        <td id="L9998" class="blob-num js-line-number" data-line-number="9998"></td>
        <td id="LC9998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * to handle the form submission in application specific way.</span></td>
      </tr>
      <tr>
        <td id="L9999" class="blob-num js-line-number" data-line-number="9999"></td>
        <td id="LC9999" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10000" class="blob-num js-line-number" data-line-number="10000"></td>
        <td id="LC10000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For this reason, Angular prevents the default action (form submission to the server) unless the</span></td>
      </tr>
      <tr>
        <td id="L10001" class="blob-num js-line-number" data-line-number="10001"></td>
        <td id="LC10001" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `&lt;form&gt;` element has an `action` attribute specified.</span></td>
      </tr>
      <tr>
        <td id="L10002" class="blob-num js-line-number" data-line-number="10002"></td>
        <td id="LC10002" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10003" class="blob-num js-line-number" data-line-number="10003"></td>
        <td id="LC10003" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * You can use one of the following two ways to specify what javascript method should be called when</span></td>
      </tr>
      <tr>
        <td id="L10004" class="blob-num js-line-number" data-line-number="10004"></td>
        <td id="LC10004" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * a form is submitted:</span></td>
      </tr>
      <tr>
        <td id="L10005" class="blob-num js-line-number" data-line-number="10005"></td>
        <td id="LC10005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10006" class="blob-num js-line-number" data-line-number="10006"></td>
        <td id="LC10006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - {@link angular.module.ng.$compileProvider.directive.ngSubmit ngSubmit} directive on the form element</span></td>
      </tr>
      <tr>
        <td id="L10007" class="blob-num js-line-number" data-line-number="10007"></td>
        <td id="LC10007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - {@link angular.module.ng.$compileProvider.directive.ngClick ngClick} directive on the first</span></td>
      </tr>
      <tr>
        <td id="L10008" class="blob-num js-line-number" data-line-number="10008"></td>
        <td id="LC10008" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  *  button or input field of type submit (input[type=submit])</span></td>
      </tr>
      <tr>
        <td id="L10009" class="blob-num js-line-number" data-line-number="10009"></td>
        <td id="LC10009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10010" class="blob-num js-line-number" data-line-number="10010"></td>
        <td id="LC10010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * To prevent double execution of the handler, use only one of ngSubmit or ngClick directives. This</span></td>
      </tr>
      <tr>
        <td id="L10011" class="blob-num js-line-number" data-line-number="10011"></td>
        <td id="LC10011" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * is because of the following form submission rules coming from the html spec:</span></td>
      </tr>
      <tr>
        <td id="L10012" class="blob-num js-line-number" data-line-number="10012"></td>
        <td id="LC10012" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10013" class="blob-num js-line-number" data-line-number="10013"></td>
        <td id="LC10013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - If a form has only one input field then hitting enter in this field triggers form submit</span></td>
      </tr>
      <tr>
        <td id="L10014" class="blob-num js-line-number" data-line-number="10014"></td>
        <td id="LC10014" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (`ngSubmit`)</span></td>
      </tr>
      <tr>
        <td id="L10015" class="blob-num js-line-number" data-line-number="10015"></td>
        <td id="LC10015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - if a form has has 2+ input fields and no buttons or input[type=submit] then hitting enter</span></td>
      </tr>
      <tr>
        <td id="L10016" class="blob-num js-line-number" data-line-number="10016"></td>
        <td id="LC10016" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * doesn&#39;t trigger submit</span></td>
      </tr>
      <tr>
        <td id="L10017" class="blob-num js-line-number" data-line-number="10017"></td>
        <td id="LC10017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - if a form has one or more input fields and one or more buttons or input[type=submit] then</span></td>
      </tr>
      <tr>
        <td id="L10018" class="blob-num js-line-number" data-line-number="10018"></td>
        <td id="LC10018" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * hitting enter in any of the input fields will trigger the click handler on the *first* button or</span></td>
      </tr>
      <tr>
        <td id="L10019" class="blob-num js-line-number" data-line-number="10019"></td>
        <td id="LC10019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * input[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)</span></td>
      </tr>
      <tr>
        <td id="L10020" class="blob-num js-line-number" data-line-number="10020"></td>
        <td id="LC10020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10021" class="blob-num js-line-number" data-line-number="10021"></td>
        <td id="LC10021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} name Name of the form. If specified, the form controller will be published into</span></td>
      </tr>
      <tr>
        <td id="L10022" class="blob-num js-line-number" data-line-number="10022"></td>
        <td id="LC10022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                       related scope, under this name.</span></td>
      </tr>
      <tr>
        <td id="L10023" class="blob-num js-line-number" data-line-number="10023"></td>
        <td id="LC10023" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10024" class="blob-num js-line-number" data-line-number="10024"></td>
        <td id="LC10024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10025" class="blob-num js-line-number" data-line-number="10025"></td>
        <td id="LC10025" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10026" class="blob-num js-line-number" data-line-number="10026"></td>
        <td id="LC10026" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10027" class="blob-num js-line-number" data-line-number="10027"></td>
        <td id="LC10027" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10028" class="blob-num js-line-number" data-line-number="10028"></td>
        <td id="LC10028" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10029" class="blob-num js-line-number" data-line-number="10029"></td>
        <td id="LC10029" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.userType = &#39;guest&#39;;</span></td>
      </tr>
      <tr>
        <td id="L10030" class="blob-num js-line-number" data-line-number="10030"></td>
        <td id="LC10030" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L10031" class="blob-num js-line-number" data-line-number="10031"></td>
        <td id="LC10031" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10032" class="blob-num js-line-number" data-line-number="10032"></td>
        <td id="LC10032" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10033" class="blob-num js-line-number" data-line-number="10033"></td>
        <td id="LC10033" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         userType: &lt;input name=&quot;input&quot; ng-model=&quot;userType&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10034" class="blob-num js-line-number" data-line-number="10034"></td>
        <td id="LC10034" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.REQUIRED&quot;&gt;Required!&lt;/span&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10035" class="blob-num js-line-number" data-line-number="10035"></td>
        <td id="LC10035" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;userType = {{userType}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10036" class="blob-num js-line-number" data-line-number="10036"></td>
        <td id="LC10036" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10037" class="blob-num js-line-number" data-line-number="10037"></td>
        <td id="LC10037" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10038" class="blob-num js-line-number" data-line-number="10038"></td>
        <td id="LC10038" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10039" class="blob-num js-line-number" data-line-number="10039"></td>
        <td id="LC10039" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$error.REQUIRED = {{!!myForm.$error.REQUIRED}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10040" class="blob-num js-line-number" data-line-number="10040"></td>
        <td id="LC10040" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10041" class="blob-num js-line-number" data-line-number="10041"></td>
        <td id="LC10041" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10042" class="blob-num js-line-number" data-line-number="10042"></td>
        <td id="LC10042" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10043" class="blob-num js-line-number" data-line-number="10043"></td>
        <td id="LC10043" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10044" class="blob-num js-line-number" data-line-number="10044"></td>
        <td id="LC10044" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;userType&#39;)).toEqual(&#39;guest&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10045" class="blob-num js-line-number" data-line-number="10045"></td>
        <td id="LC10045" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10046" class="blob-num js-line-number" data-line-number="10046"></td>
        <td id="LC10046" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10047" class="blob-num js-line-number" data-line-number="10047"></td>
        <td id="LC10047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10048" class="blob-num js-line-number" data-line-number="10048"></td>
        <td id="LC10048" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10049" class="blob-num js-line-number" data-line-number="10049"></td>
        <td id="LC10049" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;userType&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10050" class="blob-num js-line-number" data-line-number="10050"></td>
        <td id="LC10050" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;userType&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10051" class="blob-num js-line-number" data-line-number="10051"></td>
        <td id="LC10051" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10052" class="blob-num js-line-number" data-line-number="10052"></td>
        <td id="LC10052" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10053" class="blob-num js-line-number" data-line-number="10053"></td>
        <td id="LC10053" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10054" class="blob-num js-line-number" data-line-number="10054"></td>
        <td id="LC10054" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10055" class="blob-num js-line-number" data-line-number="10055"></td>
        <td id="LC10055" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L10056" class="blob-num js-line-number" data-line-number="10056"></td>
        <td id="LC10056" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> formDirectiveDir <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L10057" class="blob-num js-line-number" data-line-number="10057"></td>
        <td id="LC10057" class="blob-code blob-code-inner js-file-line">  name<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>form<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10058" class="blob-num js-line-number" data-line-number="10058"></td>
        <td id="LC10058" class="blob-code blob-code-inner js-file-line">  restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10059" class="blob-num js-line-number" data-line-number="10059"></td>
        <td id="LC10059" class="blob-code blob-code-inner js-file-line">  controller<span class="pl-k">:</span> FormController,</td>
      </tr>
      <tr>
        <td id="L10060" class="blob-num js-line-number" data-line-number="10060"></td>
        <td id="LC10060" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10061" class="blob-num js-line-number" data-line-number="10061"></td>
        <td id="LC10061" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L10062" class="blob-num js-line-number" data-line-number="10062"></td>
        <td id="LC10062" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">pre</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">formElement</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">controller</span>) {</td>
      </tr>
      <tr>
        <td id="L10063" class="blob-num js-line-number" data-line-number="10063"></td>
        <td id="LC10063" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>attr.<span class="pl-c1">action</span>) {</td>
      </tr>
      <tr>
        <td id="L10064" class="blob-num js-line-number" data-line-number="10064"></td>
        <td id="LC10064" class="blob-code blob-code-inner js-file-line">          formElement.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>submit<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L10065" class="blob-num js-line-number" data-line-number="10065"></td>
        <td id="LC10065" class="blob-code blob-code-inner js-file-line">            <span class="pl-c1">event</span>.preventDefault();</td>
      </tr>
      <tr>
        <td id="L10066" class="blob-num js-line-number" data-line-number="10066"></td>
        <td id="LC10066" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L10067" class="blob-num js-line-number" data-line-number="10067"></td>
        <td id="LC10067" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L10068" class="blob-num js-line-number" data-line-number="10068"></td>
        <td id="LC10068" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10069" class="blob-num js-line-number" data-line-number="10069"></td>
        <td id="LC10069" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> parentFormCtrl <span class="pl-k">=</span> formElement.<span class="pl-c1">parent</span>().controller(<span class="pl-s"><span class="pl-pds">&#39;</span>form<span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L10070" class="blob-num js-line-number" data-line-number="10070"></td>
        <td id="LC10070" class="blob-code blob-code-inner js-file-line">            alias <span class="pl-k">=</span> attr.<span class="pl-c1">name</span> <span class="pl-k">||</span> attr.ngForm;</td>
      </tr>
      <tr>
        <td id="L10071" class="blob-num js-line-number" data-line-number="10071"></td>
        <td id="LC10071" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10072" class="blob-num js-line-number" data-line-number="10072"></td>
        <td id="LC10072" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (alias) {</td>
      </tr>
      <tr>
        <td id="L10073" class="blob-num js-line-number" data-line-number="10073"></td>
        <td id="LC10073" class="blob-code blob-code-inner js-file-line">          scope[alias] <span class="pl-k">=</span> controller;</td>
      </tr>
      <tr>
        <td id="L10074" class="blob-num js-line-number" data-line-number="10074"></td>
        <td id="LC10074" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L10075" class="blob-num js-line-number" data-line-number="10075"></td>
        <td id="LC10075" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (parentFormCtrl) {</td>
      </tr>
      <tr>
        <td id="L10076" class="blob-num js-line-number" data-line-number="10076"></td>
        <td id="LC10076" class="blob-code blob-code-inner js-file-line">          formElement.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10077" class="blob-num js-line-number" data-line-number="10077"></td>
        <td id="LC10077" class="blob-code blob-code-inner js-file-line">            parentFormCtrl.$removeControl(controller);</td>
      </tr>
      <tr>
        <td id="L10078" class="blob-num js-line-number" data-line-number="10078"></td>
        <td id="LC10078" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (alias) {</td>
      </tr>
      <tr>
        <td id="L10079" class="blob-num js-line-number" data-line-number="10079"></td>
        <td id="LC10079" class="blob-code blob-code-inner js-file-line">              scope[alias] <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10080" class="blob-num js-line-number" data-line-number="10080"></td>
        <td id="LC10080" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L10081" class="blob-num js-line-number" data-line-number="10081"></td>
        <td id="LC10081" class="blob-code blob-code-inner js-file-line">            extend(controller, nullFormCtrl); <span class="pl-c">//stop propagating child destruction handlers upwards</span></td>
      </tr>
      <tr>
        <td id="L10082" class="blob-num js-line-number" data-line-number="10082"></td>
        <td id="LC10082" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L10083" class="blob-num js-line-number" data-line-number="10083"></td>
        <td id="LC10083" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L10084" class="blob-num js-line-number" data-line-number="10084"></td>
        <td id="LC10084" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10085" class="blob-num js-line-number" data-line-number="10085"></td>
        <td id="LC10085" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L10086" class="blob-num js-line-number" data-line-number="10086"></td>
        <td id="LC10086" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10087" class="blob-num js-line-number" data-line-number="10087"></td>
        <td id="LC10087" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L10088" class="blob-num js-line-number" data-line-number="10088"></td>
        <td id="LC10088" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10089" class="blob-num js-line-number" data-line-number="10089"></td>
        <td id="LC10089" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> formDirective <span class="pl-k">=</span> valueFn(formDirectiveDir);</td>
      </tr>
      <tr>
        <td id="L10090" class="blob-num js-line-number" data-line-number="10090"></td>
        <td id="LC10090" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngFormDirective <span class="pl-k">=</span> valueFn(extend(copy(formDirectiveDir), {restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>EAC<span class="pl-pds">&#39;</span></span>}));</td>
      </tr>
      <tr>
        <td id="L10091" class="blob-num js-line-number" data-line-number="10091"></td>
        <td id="LC10091" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10092" class="blob-num js-line-number" data-line-number="10092"></td>
        <td id="LC10092" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">URL_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(ftp<span class="pl-k">|</span>http<span class="pl-k">|</span>https):<span class="pl-cce">\/\/</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>:<span class="pl-k">{0,1}</span><span class="pl-c1">\w</span><span class="pl-k">*</span>@)<span class="pl-k">?</span>(<span class="pl-c1">\S</span><span class="pl-k">+</span>)(:<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span>(<span class="pl-cce">\/</span><span class="pl-k">|</span><span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-c1">\w</span>#!:<span class="pl-c1">.</span>?+=&amp;%@!<span class="pl-c1">\-<span class="pl-cce">\/</span></span>]</span>))<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L10093" class="blob-num js-line-number" data-line-number="10093"></td>
        <td id="LC10093" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">EMAIL_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">A-Za-z0-9</span><span class="pl-c1">.</span>_%+-]</span><span class="pl-k">+</span>@<span class="pl-c1">[<span class="pl-c1">A-Za-z0-9</span><span class="pl-c1">.</span>-]</span><span class="pl-k">+</span><span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">A-Za-z</span>]</span><span class="pl-k">{2,4}</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L10094" class="blob-num js-line-number" data-line-number="10094"></td>
        <td id="LC10094" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">NUMBER_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\-</span><span class="pl-k">|</span><span class="pl-cce">\+</span>)<span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span><span class="pl-k">|</span>(<span class="pl-c1">\d</span><span class="pl-k">*</span>(<span class="pl-cce">\.</span><span class="pl-c1">\d</span><span class="pl-k">*</span>)))<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L10095" class="blob-num js-line-number" data-line-number="10095"></td>
        <td id="LC10095" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10096" class="blob-num js-line-number" data-line-number="10096"></td>
        <td id="LC10096" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> inputType <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L10097" class="blob-num js-line-number" data-line-number="10097"></td>
        <td id="LC10097" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10098" class="blob-num js-line-number" data-line-number="10098"></td>
        <td id="LC10098" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10099" class="blob-num js-line-number" data-line-number="10099"></td>
        <td id="LC10099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10100" class="blob-num js-line-number" data-line-number="10100"></td>
        <td id="LC10100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.text</span></td>
      </tr>
      <tr>
        <td id="L10101" class="blob-num js-line-number" data-line-number="10101"></td>
        <td id="LC10101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10102" class="blob-num js-line-number" data-line-number="10102"></td>
        <td id="LC10102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10103" class="blob-num js-line-number" data-line-number="10103"></td>
        <td id="LC10103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Standard HTML text input with angular data binding.</span></td>
      </tr>
      <tr>
        <td id="L10104" class="blob-num js-line-number" data-line-number="10104"></td>
        <td id="LC10104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10105" class="blob-num js-line-number" data-line-number="10105"></td>
        <td id="LC10105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10106" class="blob-num js-line-number" data-line-number="10106"></td>
        <td id="LC10106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10107" class="blob-num js-line-number" data-line-number="10107"></td>
        <td id="LC10107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10108" class="blob-num js-line-number" data-line-number="10108"></td>
        <td id="LC10108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10109" class="blob-num js-line-number" data-line-number="10109"></td>
        <td id="LC10109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10110" class="blob-num js-line-number" data-line-number="10110"></td>
        <td id="LC10110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10111" class="blob-num js-line-number" data-line-number="10111"></td>
        <td id="LC10111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10112" class="blob-num js-line-number" data-line-number="10112"></td>
        <td id="LC10112" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10113" class="blob-num js-line-number" data-line-number="10113"></td>
        <td id="LC10113" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10114" class="blob-num js-line-number" data-line-number="10114"></td>
        <td id="LC10114" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10115" class="blob-num js-line-number" data-line-number="10115"></td>
        <td id="LC10115" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10116" class="blob-num js-line-number" data-line-number="10116"></td>
        <td id="LC10116" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10117" class="blob-num js-line-number" data-line-number="10117"></td>
        <td id="LC10117" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10118" class="blob-num js-line-number" data-line-number="10118"></td>
        <td id="LC10118" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10119" class="blob-num js-line-number" data-line-number="10119"></td>
        <td id="LC10119" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10120" class="blob-num js-line-number" data-line-number="10120"></td>
        <td id="LC10120" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10121" class="blob-num js-line-number" data-line-number="10121"></td>
        <td id="LC10121" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10122" class="blob-num js-line-number" data-line-number="10122"></td>
        <td id="LC10122" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10123" class="blob-num js-line-number" data-line-number="10123"></td>
        <td id="LC10123" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.text = &#39;guest&#39;;</span></td>
      </tr>
      <tr>
        <td id="L10124" class="blob-num js-line-number" data-line-number="10124"></td>
        <td id="LC10124" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.word = /^\w*$/;</span></td>
      </tr>
      <tr>
        <td id="L10125" class="blob-num js-line-number" data-line-number="10125"></td>
        <td id="LC10125" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10126" class="blob-num js-line-number" data-line-number="10126"></td>
        <td id="LC10126" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10127" class="blob-num js-line-number" data-line-number="10127"></td>
        <td id="LC10127" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10128" class="blob-num js-line-number" data-line-number="10128"></td>
        <td id="LC10128" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Single word: &lt;input type=&quot;text&quot; name=&quot;input&quot; ng-model=&quot;text&quot;</span></td>
      </tr>
      <tr>
        <td id="L10129" class="blob-num js-line-number" data-line-number="10129"></td>
        <td id="LC10129" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               ng-pattern=&quot;word&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10130" class="blob-num js-line-number" data-line-number="10130"></td>
        <td id="LC10130" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10131" class="blob-num js-line-number" data-line-number="10131"></td>
        <td id="LC10131" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Required!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10132" class="blob-num js-line-number" data-line-number="10132"></td>
        <td id="LC10132" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.pattern&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10133" class="blob-num js-line-number" data-line-number="10133"></td>
        <td id="LC10133" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Single word only!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10134" class="blob-num js-line-number" data-line-number="10134"></td>
        <td id="LC10134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10135" class="blob-num js-line-number" data-line-number="10135"></td>
        <td id="LC10135" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10136" class="blob-num js-line-number" data-line-number="10136"></td>
        <td id="LC10136" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10137" class="blob-num js-line-number" data-line-number="10137"></td>
        <td id="LC10137" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10138" class="blob-num js-line-number" data-line-number="10138"></td>
        <td id="LC10138" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10139" class="blob-num js-line-number" data-line-number="10139"></td>
        <td id="LC10139" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10140" class="blob-num js-line-number" data-line-number="10140"></td>
        <td id="LC10140" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10141" class="blob-num js-line-number" data-line-number="10141"></td>
        <td id="LC10141" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10142" class="blob-num js-line-number" data-line-number="10142"></td>
        <td id="LC10142" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10143" class="blob-num js-line-number" data-line-number="10143"></td>
        <td id="LC10143" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10144" class="blob-num js-line-number" data-line-number="10144"></td>
        <td id="LC10144" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;guest&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10145" class="blob-num js-line-number" data-line-number="10145"></td>
        <td id="LC10145" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10146" class="blob-num js-line-number" data-line-number="10146"></td>
        <td id="LC10146" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10147" class="blob-num js-line-number" data-line-number="10147"></td>
        <td id="LC10147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10148" class="blob-num js-line-number" data-line-number="10148"></td>
        <td id="LC10148" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10149" class="blob-num js-line-number" data-line-number="10149"></td>
        <td id="LC10149" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10150" class="blob-num js-line-number" data-line-number="10150"></td>
        <td id="LC10150" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10151" class="blob-num js-line-number" data-line-number="10151"></td>
        <td id="LC10151" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10152" class="blob-num js-line-number" data-line-number="10152"></td>
        <td id="LC10152" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10153" class="blob-num js-line-number" data-line-number="10153"></td>
        <td id="LC10153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10154" class="blob-num js-line-number" data-line-number="10154"></td>
        <td id="LC10154" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if multi word&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10155" class="blob-num js-line-number" data-line-number="10155"></td>
        <td id="LC10155" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;hello world&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10156" class="blob-num js-line-number" data-line-number="10156"></td>
        <td id="LC10156" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10157" class="blob-num js-line-number" data-line-number="10157"></td>
        <td id="LC10157" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10158" class="blob-num js-line-number" data-line-number="10158"></td>
        <td id="LC10158" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10159" class="blob-num js-line-number" data-line-number="10159"></td>
        <td id="LC10159" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10160" class="blob-num js-line-number" data-line-number="10160"></td>
        <td id="LC10160" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10161" class="blob-num js-line-number" data-line-number="10161"></td>
        <td id="LC10161" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>text<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> textInputType,</td>
      </tr>
      <tr>
        <td id="L10162" class="blob-num js-line-number" data-line-number="10162"></td>
        <td id="LC10162" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10163" class="blob-num js-line-number" data-line-number="10163"></td>
        <td id="LC10163" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10164" class="blob-num js-line-number" data-line-number="10164"></td>
        <td id="LC10164" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10165" class="blob-num js-line-number" data-line-number="10165"></td>
        <td id="LC10165" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10166" class="blob-num js-line-number" data-line-number="10166"></td>
        <td id="LC10166" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.number</span></td>
      </tr>
      <tr>
        <td id="L10167" class="blob-num js-line-number" data-line-number="10167"></td>
        <td id="LC10167" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10168" class="blob-num js-line-number" data-line-number="10168"></td>
        <td id="LC10168" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10169" class="blob-num js-line-number" data-line-number="10169"></td>
        <td id="LC10169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Text input with number validation and transformation. Sets the `number` validation</span></td>
      </tr>
      <tr>
        <td id="L10170" class="blob-num js-line-number" data-line-number="10170"></td>
        <td id="LC10170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * error if not a valid number.</span></td>
      </tr>
      <tr>
        <td id="L10171" class="blob-num js-line-number" data-line-number="10171"></td>
        <td id="LC10171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10172" class="blob-num js-line-number" data-line-number="10172"></td>
        <td id="LC10172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10173" class="blob-num js-line-number" data-line-number="10173"></td>
        <td id="LC10173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10174" class="blob-num js-line-number" data-line-number="10174"></td>
        <td id="LC10174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} min Sets the `min` validation error key if the value entered is less then `min`.</span></td>
      </tr>
      <tr>
        <td id="L10175" class="blob-num js-line-number" data-line-number="10175"></td>
        <td id="LC10175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} max Sets the `max` validation error key if the value entered is greater then `min`.</span></td>
      </tr>
      <tr>
        <td id="L10176" class="blob-num js-line-number" data-line-number="10176"></td>
        <td id="LC10176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10177" class="blob-num js-line-number" data-line-number="10177"></td>
        <td id="LC10177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10178" class="blob-num js-line-number" data-line-number="10178"></td>
        <td id="LC10178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10179" class="blob-num js-line-number" data-line-number="10179"></td>
        <td id="LC10179" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10180" class="blob-num js-line-number" data-line-number="10180"></td>
        <td id="LC10180" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10181" class="blob-num js-line-number" data-line-number="10181"></td>
        <td id="LC10181" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10182" class="blob-num js-line-number" data-line-number="10182"></td>
        <td id="LC10182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10183" class="blob-num js-line-number" data-line-number="10183"></td>
        <td id="LC10183" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10184" class="blob-num js-line-number" data-line-number="10184"></td>
        <td id="LC10184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10185" class="blob-num js-line-number" data-line-number="10185"></td>
        <td id="LC10185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10186" class="blob-num js-line-number" data-line-number="10186"></td>
        <td id="LC10186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10187" class="blob-num js-line-number" data-line-number="10187"></td>
        <td id="LC10187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10188" class="blob-num js-line-number" data-line-number="10188"></td>
        <td id="LC10188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10189" class="blob-num js-line-number" data-line-number="10189"></td>
        <td id="LC10189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10190" class="blob-num js-line-number" data-line-number="10190"></td>
        <td id="LC10190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10191" class="blob-num js-line-number" data-line-number="10191"></td>
        <td id="LC10191" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10192" class="blob-num js-line-number" data-line-number="10192"></td>
        <td id="LC10192" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.value = 12;</span></td>
      </tr>
      <tr>
        <td id="L10193" class="blob-num js-line-number" data-line-number="10193"></td>
        <td id="LC10193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10194" class="blob-num js-line-number" data-line-number="10194"></td>
        <td id="LC10194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10195" class="blob-num js-line-number" data-line-number="10195"></td>
        <td id="LC10195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10196" class="blob-num js-line-number" data-line-number="10196"></td>
        <td id="LC10196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Number: &lt;input type=&quot;number&quot; name=&quot;input&quot; ng-model=&quot;value&quot;</span></td>
      </tr>
      <tr>
        <td id="L10197" class="blob-num js-line-number" data-line-number="10197"></td>
        <td id="LC10197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                          min=&quot;0&quot; max=&quot;99&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10198" class="blob-num js-line-number" data-line-number="10198"></td>
        <td id="LC10198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10199" class="blob-num js-line-number" data-line-number="10199"></td>
        <td id="LC10199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Required!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10200" class="blob-num js-line-number" data-line-number="10200"></td>
        <td id="LC10200" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.number&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10201" class="blob-num js-line-number" data-line-number="10201"></td>
        <td id="LC10201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Not valid number!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10202" class="blob-num js-line-number" data-line-number="10202"></td>
        <td id="LC10202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;value = {{value}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10203" class="blob-num js-line-number" data-line-number="10203"></td>
        <td id="LC10203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10204" class="blob-num js-line-number" data-line-number="10204"></td>
        <td id="LC10204" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10205" class="blob-num js-line-number" data-line-number="10205"></td>
        <td id="LC10205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10206" class="blob-num js-line-number" data-line-number="10206"></td>
        <td id="LC10206" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10207" class="blob-num js-line-number" data-line-number="10207"></td>
        <td id="LC10207" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10208" class="blob-num js-line-number" data-line-number="10208"></td>
        <td id="LC10208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10209" class="blob-num js-line-number" data-line-number="10209"></td>
        <td id="LC10209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10210" class="blob-num js-line-number" data-line-number="10210"></td>
        <td id="LC10210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10211" class="blob-num js-line-number" data-line-number="10211"></td>
        <td id="LC10211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;value&#39;)).toEqual(&#39;12&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10212" class="blob-num js-line-number" data-line-number="10212"></td>
        <td id="LC10212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10213" class="blob-num js-line-number" data-line-number="10213"></td>
        <td id="LC10213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10214" class="blob-num js-line-number" data-line-number="10214"></td>
        <td id="LC10214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10215" class="blob-num js-line-number" data-line-number="10215"></td>
        <td id="LC10215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10216" class="blob-num js-line-number" data-line-number="10216"></td>
        <td id="LC10216" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           input(&#39;value&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10217" class="blob-num js-line-number" data-line-number="10217"></td>
        <td id="LC10217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;value&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10218" class="blob-num js-line-number" data-line-number="10218"></td>
        <td id="LC10218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10219" class="blob-num js-line-number" data-line-number="10219"></td>
        <td id="LC10219" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10220" class="blob-num js-line-number" data-line-number="10220"></td>
        <td id="LC10220" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10221" class="blob-num js-line-number" data-line-number="10221"></td>
        <td id="LC10221" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if over max&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10222" class="blob-num js-line-number" data-line-number="10222"></td>
        <td id="LC10222" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           input(&#39;value&#39;).enter(&#39;123&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10223" class="blob-num js-line-number" data-line-number="10223"></td>
        <td id="LC10223" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;value&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10224" class="blob-num js-line-number" data-line-number="10224"></td>
        <td id="LC10224" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10225" class="blob-num js-line-number" data-line-number="10225"></td>
        <td id="LC10225" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10226" class="blob-num js-line-number" data-line-number="10226"></td>
        <td id="LC10226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10227" class="blob-num js-line-number" data-line-number="10227"></td>
        <td id="LC10227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10228" class="blob-num js-line-number" data-line-number="10228"></td>
        <td id="LC10228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10229" class="blob-num js-line-number" data-line-number="10229"></td>
        <td id="LC10229" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> numberInputType,</td>
      </tr>
      <tr>
        <td id="L10230" class="blob-num js-line-number" data-line-number="10230"></td>
        <td id="LC10230" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10231" class="blob-num js-line-number" data-line-number="10231"></td>
        <td id="LC10231" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10232" class="blob-num js-line-number" data-line-number="10232"></td>
        <td id="LC10232" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10233" class="blob-num js-line-number" data-line-number="10233"></td>
        <td id="LC10233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10234" class="blob-num js-line-number" data-line-number="10234"></td>
        <td id="LC10234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.url</span></td>
      </tr>
      <tr>
        <td id="L10235" class="blob-num js-line-number" data-line-number="10235"></td>
        <td id="LC10235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10236" class="blob-num js-line-number" data-line-number="10236"></td>
        <td id="LC10236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10237" class="blob-num js-line-number" data-line-number="10237"></td>
        <td id="LC10237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Text input with URL validation. Sets the `url` validation error key if the content is not a</span></td>
      </tr>
      <tr>
        <td id="L10238" class="blob-num js-line-number" data-line-number="10238"></td>
        <td id="LC10238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * valid URL.</span></td>
      </tr>
      <tr>
        <td id="L10239" class="blob-num js-line-number" data-line-number="10239"></td>
        <td id="LC10239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10240" class="blob-num js-line-number" data-line-number="10240"></td>
        <td id="LC10240" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10241" class="blob-num js-line-number" data-line-number="10241"></td>
        <td id="LC10241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10242" class="blob-num js-line-number" data-line-number="10242"></td>
        <td id="LC10242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10243" class="blob-num js-line-number" data-line-number="10243"></td>
        <td id="LC10243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10244" class="blob-num js-line-number" data-line-number="10244"></td>
        <td id="LC10244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10245" class="blob-num js-line-number" data-line-number="10245"></td>
        <td id="LC10245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10246" class="blob-num js-line-number" data-line-number="10246"></td>
        <td id="LC10246" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10247" class="blob-num js-line-number" data-line-number="10247"></td>
        <td id="LC10247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10248" class="blob-num js-line-number" data-line-number="10248"></td>
        <td id="LC10248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10249" class="blob-num js-line-number" data-line-number="10249"></td>
        <td id="LC10249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10250" class="blob-num js-line-number" data-line-number="10250"></td>
        <td id="LC10250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10251" class="blob-num js-line-number" data-line-number="10251"></td>
        <td id="LC10251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10252" class="blob-num js-line-number" data-line-number="10252"></td>
        <td id="LC10252" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10253" class="blob-num js-line-number" data-line-number="10253"></td>
        <td id="LC10253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10254" class="blob-num js-line-number" data-line-number="10254"></td>
        <td id="LC10254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10255" class="blob-num js-line-number" data-line-number="10255"></td>
        <td id="LC10255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10256" class="blob-num js-line-number" data-line-number="10256"></td>
        <td id="LC10256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10257" class="blob-num js-line-number" data-line-number="10257"></td>
        <td id="LC10257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10258" class="blob-num js-line-number" data-line-number="10258"></td>
        <td id="LC10258" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.text = &#39;http://google.com&#39;;</span></td>
      </tr>
      <tr>
        <td id="L10259" class="blob-num js-line-number" data-line-number="10259"></td>
        <td id="LC10259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10260" class="blob-num js-line-number" data-line-number="10260"></td>
        <td id="LC10260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10261" class="blob-num js-line-number" data-line-number="10261"></td>
        <td id="LC10261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10262" class="blob-num js-line-number" data-line-number="10262"></td>
        <td id="LC10262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           URL: &lt;input type=&quot;url&quot; name=&quot;input&quot; ng-model=&quot;text&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10263" class="blob-num js-line-number" data-line-number="10263"></td>
        <td id="LC10263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10264" class="blob-num js-line-number" data-line-number="10264"></td>
        <td id="LC10264" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Required!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10265" class="blob-num js-line-number" data-line-number="10265"></td>
        <td id="LC10265" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.url&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10266" class="blob-num js-line-number" data-line-number="10266"></td>
        <td id="LC10266" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Not valid url!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10267" class="blob-num js-line-number" data-line-number="10267"></td>
        <td id="LC10267" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10268" class="blob-num js-line-number" data-line-number="10268"></td>
        <td id="LC10268" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10269" class="blob-num js-line-number" data-line-number="10269"></td>
        <td id="LC10269" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10270" class="blob-num js-line-number" data-line-number="10270"></td>
        <td id="LC10270" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10271" class="blob-num js-line-number" data-line-number="10271"></td>
        <td id="LC10271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10272" class="blob-num js-line-number" data-line-number="10272"></td>
        <td id="LC10272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;myForm.$error.url = {{!!myForm.$error.url}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10273" class="blob-num js-line-number" data-line-number="10273"></td>
        <td id="LC10273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10274" class="blob-num js-line-number" data-line-number="10274"></td>
        <td id="LC10274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10275" class="blob-num js-line-number" data-line-number="10275"></td>
        <td id="LC10275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10276" class="blob-num js-line-number" data-line-number="10276"></td>
        <td id="LC10276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10277" class="blob-num js-line-number" data-line-number="10277"></td>
        <td id="LC10277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;http://google.com&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10278" class="blob-num js-line-number" data-line-number="10278"></td>
        <td id="LC10278" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10279" class="blob-num js-line-number" data-line-number="10279"></td>
        <td id="LC10279" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10280" class="blob-num js-line-number" data-line-number="10280"></td>
        <td id="LC10280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10281" class="blob-num js-line-number" data-line-number="10281"></td>
        <td id="LC10281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10282" class="blob-num js-line-number" data-line-number="10282"></td>
        <td id="LC10282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10283" class="blob-num js-line-number" data-line-number="10283"></td>
        <td id="LC10283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10284" class="blob-num js-line-number" data-line-number="10284"></td>
        <td id="LC10284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10285" class="blob-num js-line-number" data-line-number="10285"></td>
        <td id="LC10285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10286" class="blob-num js-line-number" data-line-number="10286"></td>
        <td id="LC10286" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10287" class="blob-num js-line-number" data-line-number="10287"></td>
        <td id="LC10287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if not url&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10288" class="blob-num js-line-number" data-line-number="10288"></td>
        <td id="LC10288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;xxx&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10289" class="blob-num js-line-number" data-line-number="10289"></td>
        <td id="LC10289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10290" class="blob-num js-line-number" data-line-number="10290"></td>
        <td id="LC10290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10291" class="blob-num js-line-number" data-line-number="10291"></td>
        <td id="LC10291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10292" class="blob-num js-line-number" data-line-number="10292"></td>
        <td id="LC10292" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10293" class="blob-num js-line-number" data-line-number="10293"></td>
        <td id="LC10293" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10294" class="blob-num js-line-number" data-line-number="10294"></td>
        <td id="LC10294" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>url<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> urlInputType,</td>
      </tr>
      <tr>
        <td id="L10295" class="blob-num js-line-number" data-line-number="10295"></td>
        <td id="LC10295" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10296" class="blob-num js-line-number" data-line-number="10296"></td>
        <td id="LC10296" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10297" class="blob-num js-line-number" data-line-number="10297"></td>
        <td id="LC10297" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10298" class="blob-num js-line-number" data-line-number="10298"></td>
        <td id="LC10298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10299" class="blob-num js-line-number" data-line-number="10299"></td>
        <td id="LC10299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.email</span></td>
      </tr>
      <tr>
        <td id="L10300" class="blob-num js-line-number" data-line-number="10300"></td>
        <td id="LC10300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10301" class="blob-num js-line-number" data-line-number="10301"></td>
        <td id="LC10301" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10302" class="blob-num js-line-number" data-line-number="10302"></td>
        <td id="LC10302" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Text input with email validation. Sets the `email` validation error key if not a valid email</span></td>
      </tr>
      <tr>
        <td id="L10303" class="blob-num js-line-number" data-line-number="10303"></td>
        <td id="LC10303" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * address.</span></td>
      </tr>
      <tr>
        <td id="L10304" class="blob-num js-line-number" data-line-number="10304"></td>
        <td id="LC10304" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10305" class="blob-num js-line-number" data-line-number="10305"></td>
        <td id="LC10305" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10306" class="blob-num js-line-number" data-line-number="10306"></td>
        <td id="LC10306" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10307" class="blob-num js-line-number" data-line-number="10307"></td>
        <td id="LC10307" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10308" class="blob-num js-line-number" data-line-number="10308"></td>
        <td id="LC10308" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10309" class="blob-num js-line-number" data-line-number="10309"></td>
        <td id="LC10309" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10310" class="blob-num js-line-number" data-line-number="10310"></td>
        <td id="LC10310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10311" class="blob-num js-line-number" data-line-number="10311"></td>
        <td id="LC10311" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10312" class="blob-num js-line-number" data-line-number="10312"></td>
        <td id="LC10312" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10313" class="blob-num js-line-number" data-line-number="10313"></td>
        <td id="LC10313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10314" class="blob-num js-line-number" data-line-number="10314"></td>
        <td id="LC10314" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10315" class="blob-num js-line-number" data-line-number="10315"></td>
        <td id="LC10315" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10316" class="blob-num js-line-number" data-line-number="10316"></td>
        <td id="LC10316" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10317" class="blob-num js-line-number" data-line-number="10317"></td>
        <td id="LC10317" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10318" class="blob-num js-line-number" data-line-number="10318"></td>
        <td id="LC10318" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10319" class="blob-num js-line-number" data-line-number="10319"></td>
        <td id="LC10319" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10320" class="blob-num js-line-number" data-line-number="10320"></td>
        <td id="LC10320" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10321" class="blob-num js-line-number" data-line-number="10321"></td>
        <td id="LC10321" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.text = &#39;me@example.com&#39;;</span></td>
      </tr>
      <tr>
        <td id="L10322" class="blob-num js-line-number" data-line-number="10322"></td>
        <td id="LC10322" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10323" class="blob-num js-line-number" data-line-number="10323"></td>
        <td id="LC10323" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10324" class="blob-num js-line-number" data-line-number="10324"></td>
        <td id="LC10324" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10325" class="blob-num js-line-number" data-line-number="10325"></td>
        <td id="LC10325" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Email: &lt;input type=&quot;email&quot; name=&quot;input&quot; ng-model=&quot;text&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10326" class="blob-num js-line-number" data-line-number="10326"></td>
        <td id="LC10326" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10327" class="blob-num js-line-number" data-line-number="10327"></td>
        <td id="LC10327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               Required!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10328" class="blob-num js-line-number" data-line-number="10328"></td>
        <td id="LC10328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;span class=&quot;error&quot; ng-show=&quot;myForm.input.$error.email&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10329" class="blob-num js-line-number" data-line-number="10329"></td>
        <td id="LC10329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               Not valid email!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10330" class="blob-num js-line-number" data-line-number="10330"></td>
        <td id="LC10330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;text = {{text}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10331" class="blob-num js-line-number" data-line-number="10331"></td>
        <td id="LC10331" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;myForm.input.$valid = {{myForm.input.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10332" class="blob-num js-line-number" data-line-number="10332"></td>
        <td id="LC10332" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;myForm.input.$error = {{myForm.input.$error}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10333" class="blob-num js-line-number" data-line-number="10333"></td>
        <td id="LC10333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10334" class="blob-num js-line-number" data-line-number="10334"></td>
        <td id="LC10334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10335" class="blob-num js-line-number" data-line-number="10335"></td>
        <td id="LC10335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             &lt;tt&gt;myForm.$error.email = {{!!myForm.$error.email}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10336" class="blob-num js-line-number" data-line-number="10336"></td>
        <td id="LC10336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10337" class="blob-num js-line-number" data-line-number="10337"></td>
        <td id="LC10337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10338" class="blob-num js-line-number" data-line-number="10338"></td>
        <td id="LC10338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10339" class="blob-num js-line-number" data-line-number="10339"></td>
        <td id="LC10339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10340" class="blob-num js-line-number" data-line-number="10340"></td>
        <td id="LC10340" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;me@example.com&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10341" class="blob-num js-line-number" data-line-number="10341"></td>
        <td id="LC10341" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10342" class="blob-num js-line-number" data-line-number="10342"></td>
        <td id="LC10342" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10343" class="blob-num js-line-number" data-line-number="10343"></td>
        <td id="LC10343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10344" class="blob-num js-line-number" data-line-number="10344"></td>
        <td id="LC10344" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10345" class="blob-num js-line-number" data-line-number="10345"></td>
        <td id="LC10345" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10346" class="blob-num js-line-number" data-line-number="10346"></td>
        <td id="LC10346" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;text&#39;)).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10347" class="blob-num js-line-number" data-line-number="10347"></td>
        <td id="LC10347" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10348" class="blob-num js-line-number" data-line-number="10348"></td>
        <td id="LC10348" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10349" class="blob-num js-line-number" data-line-number="10349"></td>
        <td id="LC10349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10350" class="blob-num js-line-number" data-line-number="10350"></td>
        <td id="LC10350" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should be invalid if not email&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10351" class="blob-num js-line-number" data-line-number="10351"></td>
        <td id="LC10351" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;text&#39;).enter(&#39;xxx&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10352" class="blob-num js-line-number" data-line-number="10352"></td>
        <td id="LC10352" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;myForm.input.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10353" class="blob-num js-line-number" data-line-number="10353"></td>
        <td id="LC10353" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10354" class="blob-num js-line-number" data-line-number="10354"></td>
        <td id="LC10354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10355" class="blob-num js-line-number" data-line-number="10355"></td>
        <td id="LC10355" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10356" class="blob-num js-line-number" data-line-number="10356"></td>
        <td id="LC10356" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10357" class="blob-num js-line-number" data-line-number="10357"></td>
        <td id="LC10357" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>email<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> emailInputType,</td>
      </tr>
      <tr>
        <td id="L10358" class="blob-num js-line-number" data-line-number="10358"></td>
        <td id="LC10358" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10359" class="blob-num js-line-number" data-line-number="10359"></td>
        <td id="LC10359" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10360" class="blob-num js-line-number" data-line-number="10360"></td>
        <td id="LC10360" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10361" class="blob-num js-line-number" data-line-number="10361"></td>
        <td id="LC10361" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10362" class="blob-num js-line-number" data-line-number="10362"></td>
        <td id="LC10362" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.radio</span></td>
      </tr>
      <tr>
        <td id="L10363" class="blob-num js-line-number" data-line-number="10363"></td>
        <td id="LC10363" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10364" class="blob-num js-line-number" data-line-number="10364"></td>
        <td id="LC10364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10365" class="blob-num js-line-number" data-line-number="10365"></td>
        <td id="LC10365" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * HTML radio button.</span></td>
      </tr>
      <tr>
        <td id="L10366" class="blob-num js-line-number" data-line-number="10366"></td>
        <td id="LC10366" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10367" class="blob-num js-line-number" data-line-number="10367"></td>
        <td id="LC10367" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10368" class="blob-num js-line-number" data-line-number="10368"></td>
        <td id="LC10368" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} value The value to which the expression should be set when selected.</span></td>
      </tr>
      <tr>
        <td id="L10369" class="blob-num js-line-number" data-line-number="10369"></td>
        <td id="LC10369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10370" class="blob-num js-line-number" data-line-number="10370"></td>
        <td id="LC10370" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10371" class="blob-num js-line-number" data-line-number="10371"></td>
        <td id="LC10371" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10372" class="blob-num js-line-number" data-line-number="10372"></td>
        <td id="LC10372" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10373" class="blob-num js-line-number" data-line-number="10373"></td>
        <td id="LC10373" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10374" class="blob-num js-line-number" data-line-number="10374"></td>
        <td id="LC10374" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10375" class="blob-num js-line-number" data-line-number="10375"></td>
        <td id="LC10375" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10376" class="blob-num js-line-number" data-line-number="10376"></td>
        <td id="LC10376" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10377" class="blob-num js-line-number" data-line-number="10377"></td>
        <td id="LC10377" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10378" class="blob-num js-line-number" data-line-number="10378"></td>
        <td id="LC10378" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.color = &#39;blue&#39;;</span></td>
      </tr>
      <tr>
        <td id="L10379" class="blob-num js-line-number" data-line-number="10379"></td>
        <td id="LC10379" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10380" class="blob-num js-line-number" data-line-number="10380"></td>
        <td id="LC10380" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10381" class="blob-num js-line-number" data-line-number="10381"></td>
        <td id="LC10381" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10382" class="blob-num js-line-number" data-line-number="10382"></td>
        <td id="LC10382" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;red&quot;&gt;  Red &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10383" class="blob-num js-line-number" data-line-number="10383"></td>
        <td id="LC10383" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;green&quot;&gt; Green &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10384" class="blob-num js-line-number" data-line-number="10384"></td>
        <td id="LC10384" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;input type=&quot;radio&quot; ng-model=&quot;color&quot; value=&quot;blue&quot;&gt; Blue &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10385" class="blob-num js-line-number" data-line-number="10385"></td>
        <td id="LC10385" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;color = {{color}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10386" class="blob-num js-line-number" data-line-number="10386"></td>
        <td id="LC10386" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10387" class="blob-num js-line-number" data-line-number="10387"></td>
        <td id="LC10387" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10388" class="blob-num js-line-number" data-line-number="10388"></td>
        <td id="LC10388" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10389" class="blob-num js-line-number" data-line-number="10389"></td>
        <td id="LC10389" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should change state&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10390" class="blob-num js-line-number" data-line-number="10390"></td>
        <td id="LC10390" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;color&#39;)).toEqual(&#39;blue&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10391" class="blob-num js-line-number" data-line-number="10391"></td>
        <td id="LC10391" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10392" class="blob-num js-line-number" data-line-number="10392"></td>
        <td id="LC10392" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;color&#39;).select(&#39;red&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10393" class="blob-num js-line-number" data-line-number="10393"></td>
        <td id="LC10393" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;color&#39;)).toEqual(&#39;red&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10394" class="blob-num js-line-number" data-line-number="10394"></td>
        <td id="LC10394" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10395" class="blob-num js-line-number" data-line-number="10395"></td>
        <td id="LC10395" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10396" class="blob-num js-line-number" data-line-number="10396"></td>
        <td id="LC10396" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10397" class="blob-num js-line-number" data-line-number="10397"></td>
        <td id="LC10397" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10398" class="blob-num js-line-number" data-line-number="10398"></td>
        <td id="LC10398" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>radio<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> radioInputType,</td>
      </tr>
      <tr>
        <td id="L10399" class="blob-num js-line-number" data-line-number="10399"></td>
        <td id="LC10399" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10400" class="blob-num js-line-number" data-line-number="10400"></td>
        <td id="LC10400" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10401" class="blob-num js-line-number" data-line-number="10401"></td>
        <td id="LC10401" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10402" class="blob-num js-line-number" data-line-number="10402"></td>
        <td id="LC10402" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc inputType</span></td>
      </tr>
      <tr>
        <td id="L10403" class="blob-num js-line-number" data-line-number="10403"></td>
        <td id="LC10403" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input.checkbox</span></td>
      </tr>
      <tr>
        <td id="L10404" class="blob-num js-line-number" data-line-number="10404"></td>
        <td id="LC10404" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10405" class="blob-num js-line-number" data-line-number="10405"></td>
        <td id="LC10405" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10406" class="blob-num js-line-number" data-line-number="10406"></td>
        <td id="LC10406" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * HTML checkbox.</span></td>
      </tr>
      <tr>
        <td id="L10407" class="blob-num js-line-number" data-line-number="10407"></td>
        <td id="LC10407" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10408" class="blob-num js-line-number" data-line-number="10408"></td>
        <td id="LC10408" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10409" class="blob-num js-line-number" data-line-number="10409"></td>
        <td id="LC10409" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10410" class="blob-num js-line-number" data-line-number="10410"></td>
        <td id="LC10410" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngTrueValue The value to which the expression should be set when selected.</span></td>
      </tr>
      <tr>
        <td id="L10411" class="blob-num js-line-number" data-line-number="10411"></td>
        <td id="LC10411" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngFalseValue The value to which the expression should be set when not selected.</span></td>
      </tr>
      <tr>
        <td id="L10412" class="blob-num js-line-number" data-line-number="10412"></td>
        <td id="LC10412" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10413" class="blob-num js-line-number" data-line-number="10413"></td>
        <td id="LC10413" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10414" class="blob-num js-line-number" data-line-number="10414"></td>
        <td id="LC10414" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10415" class="blob-num js-line-number" data-line-number="10415"></td>
        <td id="LC10415" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10416" class="blob-num js-line-number" data-line-number="10416"></td>
        <td id="LC10416" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10417" class="blob-num js-line-number" data-line-number="10417"></td>
        <td id="LC10417" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10418" class="blob-num js-line-number" data-line-number="10418"></td>
        <td id="LC10418" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10419" class="blob-num js-line-number" data-line-number="10419"></td>
        <td id="LC10419" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10420" class="blob-num js-line-number" data-line-number="10420"></td>
        <td id="LC10420" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.value1 = true;</span></td>
      </tr>
      <tr>
        <td id="L10421" class="blob-num js-line-number" data-line-number="10421"></td>
        <td id="LC10421" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             $scope.value2 = &#39;YES&#39;</span></td>
      </tr>
      <tr>
        <td id="L10422" class="blob-num js-line-number" data-line-number="10422"></td>
        <td id="LC10422" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           }</span></td>
      </tr>
      <tr>
        <td id="L10423" class="blob-num js-line-number" data-line-number="10423"></td>
        <td id="LC10423" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10424" class="blob-num js-line-number" data-line-number="10424"></td>
        <td id="LC10424" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10425" class="blob-num js-line-number" data-line-number="10425"></td>
        <td id="LC10425" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Value1: &lt;input type=&quot;checkbox&quot; ng-model=&quot;value1&quot;&gt; &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10426" class="blob-num js-line-number" data-line-number="10426"></td>
        <td id="LC10426" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Value2: &lt;input type=&quot;checkbox&quot; ng-model=&quot;value2&quot;</span></td>
      </tr>
      <tr>
        <td id="L10427" class="blob-num js-line-number" data-line-number="10427"></td>
        <td id="LC10427" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                          ng-true-value=&quot;YES&quot; ng-false-value=&quot;NO&quot;&gt; &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10428" class="blob-num js-line-number" data-line-number="10428"></td>
        <td id="LC10428" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;value1 = {{value1}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10429" class="blob-num js-line-number" data-line-number="10429"></td>
        <td id="LC10429" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;tt&gt;value2 = {{value2}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10430" class="blob-num js-line-number" data-line-number="10430"></td>
        <td id="LC10430" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10431" class="blob-num js-line-number" data-line-number="10431"></td>
        <td id="LC10431" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10432" class="blob-num js-line-number" data-line-number="10432"></td>
        <td id="LC10432" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10433" class="blob-num js-line-number" data-line-number="10433"></td>
        <td id="LC10433" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          it(&#39;should change state&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10434" class="blob-num js-line-number" data-line-number="10434"></td>
        <td id="LC10434" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;value1&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10435" class="blob-num js-line-number" data-line-number="10435"></td>
        <td id="LC10435" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;value2&#39;)).toEqual(&#39;YES&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10436" class="blob-num js-line-number" data-line-number="10436"></td>
        <td id="LC10436" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10437" class="blob-num js-line-number" data-line-number="10437"></td>
        <td id="LC10437" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;value1&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L10438" class="blob-num js-line-number" data-line-number="10438"></td>
        <td id="LC10438" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            input(&#39;value2&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L10439" class="blob-num js-line-number" data-line-number="10439"></td>
        <td id="LC10439" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;value1&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10440" class="blob-num js-line-number" data-line-number="10440"></td>
        <td id="LC10440" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            expect(binding(&#39;value2&#39;)).toEqual(&#39;NO&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10441" class="blob-num js-line-number" data-line-number="10441"></td>
        <td id="LC10441" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L10442" class="blob-num js-line-number" data-line-number="10442"></td>
        <td id="LC10442" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10443" class="blob-num js-line-number" data-line-number="10443"></td>
        <td id="LC10443" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10444" class="blob-num js-line-number" data-line-number="10444"></td>
        <td id="LC10444" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10445" class="blob-num js-line-number" data-line-number="10445"></td>
        <td id="LC10445" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>checkbox<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> checkboxInputType,</td>
      </tr>
      <tr>
        <td id="L10446" class="blob-num js-line-number" data-line-number="10446"></td>
        <td id="LC10446" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10447" class="blob-num js-line-number" data-line-number="10447"></td>
        <td id="LC10447" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>hidden<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L10448" class="blob-num js-line-number" data-line-number="10448"></td>
        <td id="LC10448" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>button<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L10449" class="blob-num js-line-number" data-line-number="10449"></td>
        <td id="LC10449" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>submit<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> noop,</td>
      </tr>
      <tr>
        <td id="L10450" class="blob-num js-line-number" data-line-number="10450"></td>
        <td id="LC10450" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>reset<span class="pl-pds">&#39;</span></span><span class="pl-k">:</span> noop</td>
      </tr>
      <tr>
        <td id="L10451" class="blob-num js-line-number" data-line-number="10451"></td>
        <td id="LC10451" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L10452" class="blob-num js-line-number" data-line-number="10452"></td>
        <td id="LC10452" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10453" class="blob-num js-line-number" data-line-number="10453"></td>
        <td id="LC10453" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10454" class="blob-num js-line-number" data-line-number="10454"></td>
        <td id="LC10454" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">isEmpty</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10455" class="blob-num js-line-number" data-line-number="10455"></td>
        <td id="LC10455" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> isUndefined(value) <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> value <span class="pl-k">!==</span> value;</td>
      </tr>
      <tr>
        <td id="L10456" class="blob-num js-line-number" data-line-number="10456"></td>
        <td id="LC10456" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10457" class="blob-num js-line-number" data-line-number="10457"></td>
        <td id="LC10457" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10458" class="blob-num js-line-number" data-line-number="10458"></td>
        <td id="LC10458" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10459" class="blob-num js-line-number" data-line-number="10459"></td>
        <td id="LC10459" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">textInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>, <span class="pl-smi">$sniffer</span>, <span class="pl-smi">$browser</span>) {</td>
      </tr>
      <tr>
        <td id="L10460" class="blob-num js-line-number" data-line-number="10460"></td>
        <td id="LC10460" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10461" class="blob-num js-line-number" data-line-number="10461"></td>
        <td id="LC10461" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">listener</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10462" class="blob-num js-line-number" data-line-number="10462"></td>
        <td id="LC10462" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> trim(element.val());</td>
      </tr>
      <tr>
        <td id="L10463" class="blob-num js-line-number" data-line-number="10463"></td>
        <td id="LC10463" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10464" class="blob-num js-line-number" data-line-number="10464"></td>
        <td id="LC10464" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ctrl.$viewValue <span class="pl-k">!==</span> value) {</td>
      </tr>
      <tr>
        <td id="L10465" class="blob-num js-line-number" data-line-number="10465"></td>
        <td id="LC10465" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10466" class="blob-num js-line-number" data-line-number="10466"></td>
        <td id="LC10466" class="blob-code blob-code-inner js-file-line">        ctrl.$setViewValue(value);</td>
      </tr>
      <tr>
        <td id="L10467" class="blob-num js-line-number" data-line-number="10467"></td>
        <td id="LC10467" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L10468" class="blob-num js-line-number" data-line-number="10468"></td>
        <td id="LC10468" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10469" class="blob-num js-line-number" data-line-number="10469"></td>
        <td id="LC10469" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10470" class="blob-num js-line-number" data-line-number="10470"></td>
        <td id="LC10470" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10471" class="blob-num js-line-number" data-line-number="10471"></td>
        <td id="LC10471" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// if the browser does support &quot;input&quot; event, we are fine</span></td>
      </tr>
      <tr>
        <td id="L10472" class="blob-num js-line-number" data-line-number="10472"></td>
        <td id="LC10472" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> ($sniffer.hasEvent(<span class="pl-s"><span class="pl-pds">&#39;</span>input<span class="pl-pds">&#39;</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L10473" class="blob-num js-line-number" data-line-number="10473"></td>
        <td id="LC10473" class="blob-code blob-code-inner js-file-line">    element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>input<span class="pl-pds">&#39;</span></span>, listener);</td>
      </tr>
      <tr>
        <td id="L10474" class="blob-num js-line-number" data-line-number="10474"></td>
        <td id="LC10474" class="blob-code blob-code-inner js-file-line">  } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10475" class="blob-num js-line-number" data-line-number="10475"></td>
        <td id="LC10475" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> timeout;</td>
      </tr>
      <tr>
        <td id="L10476" class="blob-num js-line-number" data-line-number="10476"></td>
        <td id="LC10476" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10477" class="blob-num js-line-number" data-line-number="10477"></td>
        <td id="LC10477" class="blob-code blob-code-inner js-file-line">    element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>keydown<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L10478" class="blob-num js-line-number" data-line-number="10478"></td>
        <td id="LC10478" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> key <span class="pl-k">=</span> <span class="pl-c1">event</span>.keyCode;</td>
      </tr>
      <tr>
        <td id="L10479" class="blob-num js-line-number" data-line-number="10479"></td>
        <td id="LC10479" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10480" class="blob-num js-line-number" data-line-number="10480"></td>
        <td id="LC10480" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// ignore</span></td>
      </tr>
      <tr>
        <td id="L10481" class="blob-num js-line-number" data-line-number="10481"></td>
        <td id="LC10481" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">//    command            modifiers                   arrows</span></td>
      </tr>
      <tr>
        <td id="L10482" class="blob-num js-line-number" data-line-number="10482"></td>
        <td id="LC10482" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (key <span class="pl-k">===</span> <span class="pl-c1">91</span> <span class="pl-k">||</span> (<span class="pl-c1">15</span> <span class="pl-k">&lt;</span> key <span class="pl-k">&amp;&amp;</span> key <span class="pl-k">&lt;</span> <span class="pl-c1">19</span>) <span class="pl-k">||</span> (<span class="pl-c1">37</span> <span class="pl-k">&lt;=</span> key <span class="pl-k">&amp;&amp;</span> key <span class="pl-k">&lt;=</span> <span class="pl-c1">40</span>)) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L10483" class="blob-num js-line-number" data-line-number="10483"></td>
        <td id="LC10483" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10484" class="blob-num js-line-number" data-line-number="10484"></td>
        <td id="LC10484" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>timeout) {</td>
      </tr>
      <tr>
        <td id="L10485" class="blob-num js-line-number" data-line-number="10485"></td>
        <td id="LC10485" class="blob-code blob-code-inner js-file-line">        timeout <span class="pl-k">=</span> $browser.<span class="pl-c1">defer</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10486" class="blob-num js-line-number" data-line-number="10486"></td>
        <td id="LC10486" class="blob-code blob-code-inner js-file-line">          listener();</td>
      </tr>
      <tr>
        <td id="L10487" class="blob-num js-line-number" data-line-number="10487"></td>
        <td id="LC10487" class="blob-code blob-code-inner js-file-line">          timeout <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L10488" class="blob-num js-line-number" data-line-number="10488"></td>
        <td id="LC10488" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L10489" class="blob-num js-line-number" data-line-number="10489"></td>
        <td id="LC10489" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10490" class="blob-num js-line-number" data-line-number="10490"></td>
        <td id="LC10490" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L10491" class="blob-num js-line-number" data-line-number="10491"></td>
        <td id="LC10491" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10492" class="blob-num js-line-number" data-line-number="10492"></td>
        <td id="LC10492" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// if user paste into input using mouse, we need &quot;change&quot; event to catch it</span></td>
      </tr>
      <tr>
        <td id="L10493" class="blob-num js-line-number" data-line-number="10493"></td>
        <td id="LC10493" class="blob-code blob-code-inner js-file-line">    element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>change<span class="pl-pds">&#39;</span></span>, listener);</td>
      </tr>
      <tr>
        <td id="L10494" class="blob-num js-line-number" data-line-number="10494"></td>
        <td id="LC10494" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10495" class="blob-num js-line-number" data-line-number="10495"></td>
        <td id="LC10495" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10496" class="blob-num js-line-number" data-line-number="10496"></td>
        <td id="LC10496" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10497" class="blob-num js-line-number" data-line-number="10497"></td>
        <td id="LC10497" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">ctrl</span>.<span class="pl-en">$render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10498" class="blob-num js-line-number" data-line-number="10498"></td>
        <td id="LC10498" class="blob-code blob-code-inner js-file-line">    element.val(isEmpty(ctrl.$viewValue) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> ctrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L10499" class="blob-num js-line-number" data-line-number="10499"></td>
        <td id="LC10499" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10500" class="blob-num js-line-number" data-line-number="10500"></td>
        <td id="LC10500" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10501" class="blob-num js-line-number" data-line-number="10501"></td>
        <td id="LC10501" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// pattern validator</span></td>
      </tr>
      <tr>
        <td id="L10502" class="blob-num js-line-number" data-line-number="10502"></td>
        <td id="LC10502" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> pattern <span class="pl-k">=</span> attr.ngPattern,</td>
      </tr>
      <tr>
        <td id="L10503" class="blob-num js-line-number" data-line-number="10503"></td>
        <td id="LC10503" class="blob-code blob-code-inner js-file-line">      patternValidator;</td>
      </tr>
      <tr>
        <td id="L10504" class="blob-num js-line-number" data-line-number="10504"></td>
        <td id="LC10504" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10505" class="blob-num js-line-number" data-line-number="10505"></td>
        <td id="LC10505" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">validate</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">regexp</span>, <span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10506" class="blob-num js-line-number" data-line-number="10506"></td>
        <td id="LC10506" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isEmpty(value) <span class="pl-k">||</span> regexp.<span class="pl-c1">test</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L10507" class="blob-num js-line-number" data-line-number="10507"></td>
        <td id="LC10507" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>pattern<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10508" class="blob-num js-line-number" data-line-number="10508"></td>
        <td id="LC10508" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10509" class="blob-num js-line-number" data-line-number="10509"></td>
        <td id="LC10509" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10510" class="blob-num js-line-number" data-line-number="10510"></td>
        <td id="LC10510" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>pattern<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10511" class="blob-num js-line-number" data-line-number="10511"></td>
        <td id="LC10511" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10512" class="blob-num js-line-number" data-line-number="10512"></td>
        <td id="LC10512" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10513" class="blob-num js-line-number" data-line-number="10513"></td>
        <td id="LC10513" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10514" class="blob-num js-line-number" data-line-number="10514"></td>
        <td id="LC10514" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10515" class="blob-num js-line-number" data-line-number="10515"></td>
        <td id="LC10515" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (pattern) {</td>
      </tr>
      <tr>
        <td id="L10516" class="blob-num js-line-number" data-line-number="10516"></td>
        <td id="LC10516" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (pattern.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\/</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-cce">\/</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>)) {</td>
      </tr>
      <tr>
        <td id="L10517" class="blob-num js-line-number" data-line-number="10517"></td>
        <td id="LC10517" class="blob-code blob-code-inner js-file-line">      pattern <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(pattern.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>, pattern.<span class="pl-c1">length</span> <span class="pl-k">-</span> <span class="pl-c1">2</span>));</td>
      </tr>
      <tr>
        <td id="L10518" class="blob-num js-line-number" data-line-number="10518"></td>
        <td id="LC10518" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">patternValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10519" class="blob-num js-line-number" data-line-number="10519"></td>
        <td id="LC10519" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> validate(pattern, value)</td>
      </tr>
      <tr>
        <td id="L10520" class="blob-num js-line-number" data-line-number="10520"></td>
        <td id="LC10520" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L10521" class="blob-num js-line-number" data-line-number="10521"></td>
        <td id="LC10521" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10522" class="blob-num js-line-number" data-line-number="10522"></td>
        <td id="LC10522" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">patternValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10523" class="blob-num js-line-number" data-line-number="10523"></td>
        <td id="LC10523" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> patternObj <span class="pl-k">=</span> scope.$<span class="pl-c1">eval</span>(pattern);</td>
      </tr>
      <tr>
        <td id="L10524" class="blob-num js-line-number" data-line-number="10524"></td>
        <td id="LC10524" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10525" class="blob-num js-line-number" data-line-number="10525"></td>
        <td id="LC10525" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>patternObj <span class="pl-k">||</span> <span class="pl-k">!</span>patternObj.test) {</td>
      </tr>
      <tr>
        <td id="L10526" class="blob-num js-line-number" data-line-number="10526"></td>
        <td id="LC10526" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Expected <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> pattern <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> to be a RegExp but was <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> patternObj);</td>
      </tr>
      <tr>
        <td id="L10527" class="blob-num js-line-number" data-line-number="10527"></td>
        <td id="LC10527" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L10528" class="blob-num js-line-number" data-line-number="10528"></td>
        <td id="LC10528" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> validate(patternObj, value);</td>
      </tr>
      <tr>
        <td id="L10529" class="blob-num js-line-number" data-line-number="10529"></td>
        <td id="LC10529" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L10530" class="blob-num js-line-number" data-line-number="10530"></td>
        <td id="LC10530" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10531" class="blob-num js-line-number" data-line-number="10531"></td>
        <td id="LC10531" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10532" class="blob-num js-line-number" data-line-number="10532"></td>
        <td id="LC10532" class="blob-code blob-code-inner js-file-line">    ctrl.$formatters.<span class="pl-c1">push</span>(patternValidator);</td>
      </tr>
      <tr>
        <td id="L10533" class="blob-num js-line-number" data-line-number="10533"></td>
        <td id="LC10533" class="blob-code blob-code-inner js-file-line">    ctrl.$parsers.<span class="pl-c1">push</span>(patternValidator);</td>
      </tr>
      <tr>
        <td id="L10534" class="blob-num js-line-number" data-line-number="10534"></td>
        <td id="LC10534" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10535" class="blob-num js-line-number" data-line-number="10535"></td>
        <td id="LC10535" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10536" class="blob-num js-line-number" data-line-number="10536"></td>
        <td id="LC10536" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// min length validator</span></td>
      </tr>
      <tr>
        <td id="L10537" class="blob-num js-line-number" data-line-number="10537"></td>
        <td id="LC10537" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (attr.ngMinlength) {</td>
      </tr>
      <tr>
        <td id="L10538" class="blob-num js-line-number" data-line-number="10538"></td>
        <td id="LC10538" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> minlength <span class="pl-k">=</span> int(attr.ngMinlength);</td>
      </tr>
      <tr>
        <td id="L10539" class="blob-num js-line-number" data-line-number="10539"></td>
        <td id="LC10539" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">minLengthValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10540" class="blob-num js-line-number" data-line-number="10540"></td>
        <td id="LC10540" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>isEmpty(value) <span class="pl-k">&amp;&amp;</span> value.<span class="pl-c1">length</span> <span class="pl-k">&lt;</span> minlength) {</td>
      </tr>
      <tr>
        <td id="L10541" class="blob-num js-line-number" data-line-number="10541"></td>
        <td id="LC10541" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>minlength<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10542" class="blob-num js-line-number" data-line-number="10542"></td>
        <td id="LC10542" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10543" class="blob-num js-line-number" data-line-number="10543"></td>
        <td id="LC10543" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10544" class="blob-num js-line-number" data-line-number="10544"></td>
        <td id="LC10544" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>minlength<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10545" class="blob-num js-line-number" data-line-number="10545"></td>
        <td id="LC10545" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10546" class="blob-num js-line-number" data-line-number="10546"></td>
        <td id="LC10546" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10547" class="blob-num js-line-number" data-line-number="10547"></td>
        <td id="LC10547" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L10548" class="blob-num js-line-number" data-line-number="10548"></td>
        <td id="LC10548" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10549" class="blob-num js-line-number" data-line-number="10549"></td>
        <td id="LC10549" class="blob-code blob-code-inner js-file-line">    ctrl.$parsers.<span class="pl-c1">push</span>(minLengthValidator);</td>
      </tr>
      <tr>
        <td id="L10550" class="blob-num js-line-number" data-line-number="10550"></td>
        <td id="LC10550" class="blob-code blob-code-inner js-file-line">    ctrl.$formatters.<span class="pl-c1">push</span>(minLengthValidator);</td>
      </tr>
      <tr>
        <td id="L10551" class="blob-num js-line-number" data-line-number="10551"></td>
        <td id="LC10551" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10552" class="blob-num js-line-number" data-line-number="10552"></td>
        <td id="LC10552" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10553" class="blob-num js-line-number" data-line-number="10553"></td>
        <td id="LC10553" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// max length validator</span></td>
      </tr>
      <tr>
        <td id="L10554" class="blob-num js-line-number" data-line-number="10554"></td>
        <td id="LC10554" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (attr.ngMaxlength) {</td>
      </tr>
      <tr>
        <td id="L10555" class="blob-num js-line-number" data-line-number="10555"></td>
        <td id="LC10555" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> maxlength <span class="pl-k">=</span> int(attr.ngMaxlength);</td>
      </tr>
      <tr>
        <td id="L10556" class="blob-num js-line-number" data-line-number="10556"></td>
        <td id="LC10556" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">maxLengthValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10557" class="blob-num js-line-number" data-line-number="10557"></td>
        <td id="LC10557" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>isEmpty(value) <span class="pl-k">&amp;&amp;</span> value.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> maxlength) {</td>
      </tr>
      <tr>
        <td id="L10558" class="blob-num js-line-number" data-line-number="10558"></td>
        <td id="LC10558" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>maxlength<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10559" class="blob-num js-line-number" data-line-number="10559"></td>
        <td id="LC10559" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10560" class="blob-num js-line-number" data-line-number="10560"></td>
        <td id="LC10560" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10561" class="blob-num js-line-number" data-line-number="10561"></td>
        <td id="LC10561" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>maxlength<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10562" class="blob-num js-line-number" data-line-number="10562"></td>
        <td id="LC10562" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10563" class="blob-num js-line-number" data-line-number="10563"></td>
        <td id="LC10563" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10564" class="blob-num js-line-number" data-line-number="10564"></td>
        <td id="LC10564" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L10565" class="blob-num js-line-number" data-line-number="10565"></td>
        <td id="LC10565" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10566" class="blob-num js-line-number" data-line-number="10566"></td>
        <td id="LC10566" class="blob-code blob-code-inner js-file-line">    ctrl.$parsers.<span class="pl-c1">push</span>(maxLengthValidator);</td>
      </tr>
      <tr>
        <td id="L10567" class="blob-num js-line-number" data-line-number="10567"></td>
        <td id="LC10567" class="blob-code blob-code-inner js-file-line">    ctrl.$formatters.<span class="pl-c1">push</span>(maxLengthValidator);</td>
      </tr>
      <tr>
        <td id="L10568" class="blob-num js-line-number" data-line-number="10568"></td>
        <td id="LC10568" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10569" class="blob-num js-line-number" data-line-number="10569"></td>
        <td id="LC10569" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10570" class="blob-num js-line-number" data-line-number="10570"></td>
        <td id="LC10570" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10571" class="blob-num js-line-number" data-line-number="10571"></td>
        <td id="LC10571" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">numberInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>, <span class="pl-smi">$sniffer</span>, <span class="pl-smi">$browser</span>) {</td>
      </tr>
      <tr>
        <td id="L10572" class="blob-num js-line-number" data-line-number="10572"></td>
        <td id="LC10572" class="blob-code blob-code-inner js-file-line">  textInputType(scope, element, attr, ctrl, $sniffer, $browser);</td>
      </tr>
      <tr>
        <td id="L10573" class="blob-num js-line-number" data-line-number="10573"></td>
        <td id="LC10573" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10574" class="blob-num js-line-number" data-line-number="10574"></td>
        <td id="LC10574" class="blob-code blob-code-inner js-file-line">  ctrl.$parsers.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10575" class="blob-num js-line-number" data-line-number="10575"></td>
        <td id="LC10575" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> empty <span class="pl-k">=</span> isEmpty(value);</td>
      </tr>
      <tr>
        <td id="L10576" class="blob-num js-line-number" data-line-number="10576"></td>
        <td id="LC10576" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (empty <span class="pl-k">||</span> <span class="pl-c1">NUMBER_REGEXP</span>.<span class="pl-c1">test</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L10577" class="blob-num js-line-number" data-line-number="10577"></td>
        <td id="LC10577" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10578" class="blob-num js-line-number" data-line-number="10578"></td>
        <td id="LC10578" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> null <span class="pl-k">:</span> (empty <span class="pl-k">?</span> value <span class="pl-k">:</span> <span class="pl-c1">parseFloat</span>(value));</td>
      </tr>
      <tr>
        <td id="L10579" class="blob-num js-line-number" data-line-number="10579"></td>
        <td id="LC10579" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10580" class="blob-num js-line-number" data-line-number="10580"></td>
        <td id="LC10580" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10581" class="blob-num js-line-number" data-line-number="10581"></td>
        <td id="LC10581" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10582" class="blob-num js-line-number" data-line-number="10582"></td>
        <td id="LC10582" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10583" class="blob-num js-line-number" data-line-number="10583"></td>
        <td id="LC10583" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10584" class="blob-num js-line-number" data-line-number="10584"></td>
        <td id="LC10584" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10585" class="blob-num js-line-number" data-line-number="10585"></td>
        <td id="LC10585" class="blob-code blob-code-inner js-file-line">  ctrl.$formatters.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10586" class="blob-num js-line-number" data-line-number="10586"></td>
        <td id="LC10586" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> isEmpty(value) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> value;</td>
      </tr>
      <tr>
        <td id="L10587" class="blob-num js-line-number" data-line-number="10587"></td>
        <td id="LC10587" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10588" class="blob-num js-line-number" data-line-number="10588"></td>
        <td id="LC10588" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10589" class="blob-num js-line-number" data-line-number="10589"></td>
        <td id="LC10589" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (attr.min) {</td>
      </tr>
      <tr>
        <td id="L10590" class="blob-num js-line-number" data-line-number="10590"></td>
        <td id="LC10590" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> min <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(attr.min);</td>
      </tr>
      <tr>
        <td id="L10591" class="blob-num js-line-number" data-line-number="10591"></td>
        <td id="LC10591" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">minValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10592" class="blob-num js-line-number" data-line-number="10592"></td>
        <td id="LC10592" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>isEmpty(value) <span class="pl-k">&amp;&amp;</span> value <span class="pl-k">&lt;</span> min) {</td>
      </tr>
      <tr>
        <td id="L10593" class="blob-num js-line-number" data-line-number="10593"></td>
        <td id="LC10593" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>min<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10594" class="blob-num js-line-number" data-line-number="10594"></td>
        <td id="LC10594" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10595" class="blob-num js-line-number" data-line-number="10595"></td>
        <td id="LC10595" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10596" class="blob-num js-line-number" data-line-number="10596"></td>
        <td id="LC10596" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>min<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10597" class="blob-num js-line-number" data-line-number="10597"></td>
        <td id="LC10597" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10598" class="blob-num js-line-number" data-line-number="10598"></td>
        <td id="LC10598" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10599" class="blob-num js-line-number" data-line-number="10599"></td>
        <td id="LC10599" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L10600" class="blob-num js-line-number" data-line-number="10600"></td>
        <td id="LC10600" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10601" class="blob-num js-line-number" data-line-number="10601"></td>
        <td id="LC10601" class="blob-code blob-code-inner js-file-line">    ctrl.$parsers.<span class="pl-c1">push</span>(minValidator);</td>
      </tr>
      <tr>
        <td id="L10602" class="blob-num js-line-number" data-line-number="10602"></td>
        <td id="LC10602" class="blob-code blob-code-inner js-file-line">    ctrl.$formatters.<span class="pl-c1">push</span>(minValidator);</td>
      </tr>
      <tr>
        <td id="L10603" class="blob-num js-line-number" data-line-number="10603"></td>
        <td id="LC10603" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10604" class="blob-num js-line-number" data-line-number="10604"></td>
        <td id="LC10604" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10605" class="blob-num js-line-number" data-line-number="10605"></td>
        <td id="LC10605" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (attr.max) {</td>
      </tr>
      <tr>
        <td id="L10606" class="blob-num js-line-number" data-line-number="10606"></td>
        <td id="LC10606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> max <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(attr.max);</td>
      </tr>
      <tr>
        <td id="L10607" class="blob-num js-line-number" data-line-number="10607"></td>
        <td id="LC10607" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> <span class="pl-en">maxValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10608" class="blob-num js-line-number" data-line-number="10608"></td>
        <td id="LC10608" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>isEmpty(value) <span class="pl-k">&amp;&amp;</span> value <span class="pl-k">&gt;</span> max) {</td>
      </tr>
      <tr>
        <td id="L10609" class="blob-num js-line-number" data-line-number="10609"></td>
        <td id="LC10609" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>max<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10610" class="blob-num js-line-number" data-line-number="10610"></td>
        <td id="LC10610" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10611" class="blob-num js-line-number" data-line-number="10611"></td>
        <td id="LC10611" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10612" class="blob-num js-line-number" data-line-number="10612"></td>
        <td id="LC10612" class="blob-code blob-code-inner js-file-line">        ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>max<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10613" class="blob-num js-line-number" data-line-number="10613"></td>
        <td id="LC10613" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10614" class="blob-num js-line-number" data-line-number="10614"></td>
        <td id="LC10614" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10615" class="blob-num js-line-number" data-line-number="10615"></td>
        <td id="LC10615" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L10616" class="blob-num js-line-number" data-line-number="10616"></td>
        <td id="LC10616" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10617" class="blob-num js-line-number" data-line-number="10617"></td>
        <td id="LC10617" class="blob-code blob-code-inner js-file-line">    ctrl.$parsers.<span class="pl-c1">push</span>(maxValidator);</td>
      </tr>
      <tr>
        <td id="L10618" class="blob-num js-line-number" data-line-number="10618"></td>
        <td id="LC10618" class="blob-code blob-code-inner js-file-line">    ctrl.$formatters.<span class="pl-c1">push</span>(maxValidator);</td>
      </tr>
      <tr>
        <td id="L10619" class="blob-num js-line-number" data-line-number="10619"></td>
        <td id="LC10619" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10620" class="blob-num js-line-number" data-line-number="10620"></td>
        <td id="LC10620" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10621" class="blob-num js-line-number" data-line-number="10621"></td>
        <td id="LC10621" class="blob-code blob-code-inner js-file-line">  ctrl.$formatters.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10622" class="blob-num js-line-number" data-line-number="10622"></td>
        <td id="LC10622" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10623" class="blob-num js-line-number" data-line-number="10623"></td>
        <td id="LC10623" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isEmpty(value) <span class="pl-k">||</span> isNumber(value)) {</td>
      </tr>
      <tr>
        <td id="L10624" class="blob-num js-line-number" data-line-number="10624"></td>
        <td id="LC10624" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10625" class="blob-num js-line-number" data-line-number="10625"></td>
        <td id="LC10625" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10626" class="blob-num js-line-number" data-line-number="10626"></td>
        <td id="LC10626" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10627" class="blob-num js-line-number" data-line-number="10627"></td>
        <td id="LC10627" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>number<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10628" class="blob-num js-line-number" data-line-number="10628"></td>
        <td id="LC10628" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10629" class="blob-num js-line-number" data-line-number="10629"></td>
        <td id="LC10629" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10630" class="blob-num js-line-number" data-line-number="10630"></td>
        <td id="LC10630" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10631" class="blob-num js-line-number" data-line-number="10631"></td>
        <td id="LC10631" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10632" class="blob-num js-line-number" data-line-number="10632"></td>
        <td id="LC10632" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10633" class="blob-num js-line-number" data-line-number="10633"></td>
        <td id="LC10633" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">urlInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>, <span class="pl-smi">$sniffer</span>, <span class="pl-smi">$browser</span>) {</td>
      </tr>
      <tr>
        <td id="L10634" class="blob-num js-line-number" data-line-number="10634"></td>
        <td id="LC10634" class="blob-code blob-code-inner js-file-line">  textInputType(scope, element, attr, ctrl, $sniffer, $browser);</td>
      </tr>
      <tr>
        <td id="L10635" class="blob-num js-line-number" data-line-number="10635"></td>
        <td id="LC10635" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10636" class="blob-num js-line-number" data-line-number="10636"></td>
        <td id="LC10636" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">urlValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10637" class="blob-num js-line-number" data-line-number="10637"></td>
        <td id="LC10637" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isEmpty(value) <span class="pl-k">||</span> <span class="pl-c1">URL_REGEXP</span>.<span class="pl-c1">test</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L10638" class="blob-num js-line-number" data-line-number="10638"></td>
        <td id="LC10638" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>url<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10639" class="blob-num js-line-number" data-line-number="10639"></td>
        <td id="LC10639" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10640" class="blob-num js-line-number" data-line-number="10640"></td>
        <td id="LC10640" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10641" class="blob-num js-line-number" data-line-number="10641"></td>
        <td id="LC10641" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>url<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10642" class="blob-num js-line-number" data-line-number="10642"></td>
        <td id="LC10642" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10643" class="blob-num js-line-number" data-line-number="10643"></td>
        <td id="LC10643" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10644" class="blob-num js-line-number" data-line-number="10644"></td>
        <td id="LC10644" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10645" class="blob-num js-line-number" data-line-number="10645"></td>
        <td id="LC10645" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10646" class="blob-num js-line-number" data-line-number="10646"></td>
        <td id="LC10646" class="blob-code blob-code-inner js-file-line">  ctrl.$formatters.<span class="pl-c1">push</span>(urlValidator);</td>
      </tr>
      <tr>
        <td id="L10647" class="blob-num js-line-number" data-line-number="10647"></td>
        <td id="LC10647" class="blob-code blob-code-inner js-file-line">  ctrl.$parsers.<span class="pl-c1">push</span>(urlValidator);</td>
      </tr>
      <tr>
        <td id="L10648" class="blob-num js-line-number" data-line-number="10648"></td>
        <td id="LC10648" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10649" class="blob-num js-line-number" data-line-number="10649"></td>
        <td id="LC10649" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10650" class="blob-num js-line-number" data-line-number="10650"></td>
        <td id="LC10650" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">emailInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>, <span class="pl-smi">$sniffer</span>, <span class="pl-smi">$browser</span>) {</td>
      </tr>
      <tr>
        <td id="L10651" class="blob-num js-line-number" data-line-number="10651"></td>
        <td id="LC10651" class="blob-code blob-code-inner js-file-line">  textInputType(scope, element, attr, ctrl, $sniffer, $browser);</td>
      </tr>
      <tr>
        <td id="L10652" class="blob-num js-line-number" data-line-number="10652"></td>
        <td id="LC10652" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10653" class="blob-num js-line-number" data-line-number="10653"></td>
        <td id="LC10653" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-en">emailValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10654" class="blob-num js-line-number" data-line-number="10654"></td>
        <td id="LC10654" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isEmpty(value) <span class="pl-k">||</span> <span class="pl-c1">EMAIL_REGEXP</span>.<span class="pl-c1">test</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L10655" class="blob-num js-line-number" data-line-number="10655"></td>
        <td id="LC10655" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>email<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10656" class="blob-num js-line-number" data-line-number="10656"></td>
        <td id="LC10656" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L10657" class="blob-num js-line-number" data-line-number="10657"></td>
        <td id="LC10657" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10658" class="blob-num js-line-number" data-line-number="10658"></td>
        <td id="LC10658" class="blob-code blob-code-inner js-file-line">      ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>email<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10659" class="blob-num js-line-number" data-line-number="10659"></td>
        <td id="LC10659" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L10660" class="blob-num js-line-number" data-line-number="10660"></td>
        <td id="LC10660" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10661" class="blob-num js-line-number" data-line-number="10661"></td>
        <td id="LC10661" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10662" class="blob-num js-line-number" data-line-number="10662"></td>
        <td id="LC10662" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10663" class="blob-num js-line-number" data-line-number="10663"></td>
        <td id="LC10663" class="blob-code blob-code-inner js-file-line">  ctrl.$formatters.<span class="pl-c1">push</span>(emailValidator);</td>
      </tr>
      <tr>
        <td id="L10664" class="blob-num js-line-number" data-line-number="10664"></td>
        <td id="LC10664" class="blob-code blob-code-inner js-file-line">  ctrl.$parsers.<span class="pl-c1">push</span>(emailValidator);</td>
      </tr>
      <tr>
        <td id="L10665" class="blob-num js-line-number" data-line-number="10665"></td>
        <td id="LC10665" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10666" class="blob-num js-line-number" data-line-number="10666"></td>
        <td id="LC10666" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10667" class="blob-num js-line-number" data-line-number="10667"></td>
        <td id="LC10667" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">radioInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L10668" class="blob-num js-line-number" data-line-number="10668"></td>
        <td id="LC10668" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// make the name unique, if not defined</span></td>
      </tr>
      <tr>
        <td id="L10669" class="blob-num js-line-number" data-line-number="10669"></td>
        <td id="LC10669" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (isUndefined(attr.<span class="pl-c1">name</span>)) {</td>
      </tr>
      <tr>
        <td id="L10670" class="blob-num js-line-number" data-line-number="10670"></td>
        <td id="LC10670" class="blob-code blob-code-inner js-file-line">    element.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>name<span class="pl-pds">&#39;</span></span>, nextUid());</td>
      </tr>
      <tr>
        <td id="L10671" class="blob-num js-line-number" data-line-number="10671"></td>
        <td id="LC10671" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10672" class="blob-num js-line-number" data-line-number="10672"></td>
        <td id="LC10672" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10673" class="blob-num js-line-number" data-line-number="10673"></td>
        <td id="LC10673" class="blob-code blob-code-inner js-file-line">  element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10674" class="blob-num js-line-number" data-line-number="10674"></td>
        <td id="LC10674" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (element[<span class="pl-c1">0</span>].<span class="pl-c1">checked</span>) {</td>
      </tr>
      <tr>
        <td id="L10675" class="blob-num js-line-number" data-line-number="10675"></td>
        <td id="LC10675" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10676" class="blob-num js-line-number" data-line-number="10676"></td>
        <td id="LC10676" class="blob-code blob-code-inner js-file-line">        ctrl.$setViewValue(attr.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L10677" class="blob-num js-line-number" data-line-number="10677"></td>
        <td id="LC10677" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L10678" class="blob-num js-line-number" data-line-number="10678"></td>
        <td id="LC10678" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10679" class="blob-num js-line-number" data-line-number="10679"></td>
        <td id="LC10679" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10680" class="blob-num js-line-number" data-line-number="10680"></td>
        <td id="LC10680" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10681" class="blob-num js-line-number" data-line-number="10681"></td>
        <td id="LC10681" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">ctrl</span>.<span class="pl-en">$render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10682" class="blob-num js-line-number" data-line-number="10682"></td>
        <td id="LC10682" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> value <span class="pl-k">=</span> attr.<span class="pl-c1">value</span>;</td>
      </tr>
      <tr>
        <td id="L10683" class="blob-num js-line-number" data-line-number="10683"></td>
        <td id="LC10683" class="blob-code blob-code-inner js-file-line">    element[<span class="pl-c1">0</span>].<span class="pl-c1">checked</span> <span class="pl-k">=</span> (value <span class="pl-k">==</span> ctrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L10684" class="blob-num js-line-number" data-line-number="10684"></td>
        <td id="LC10684" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10685" class="blob-num js-line-number" data-line-number="10685"></td>
        <td id="LC10685" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10686" class="blob-num js-line-number" data-line-number="10686"></td>
        <td id="LC10686" class="blob-code blob-code-inner js-file-line">  attr.$observe(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>, ctrl.$render);</td>
      </tr>
      <tr>
        <td id="L10687" class="blob-num js-line-number" data-line-number="10687"></td>
        <td id="LC10687" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10688" class="blob-num js-line-number" data-line-number="10688"></td>
        <td id="LC10688" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10689" class="blob-num js-line-number" data-line-number="10689"></td>
        <td id="LC10689" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">checkboxInputType</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L10690" class="blob-num js-line-number" data-line-number="10690"></td>
        <td id="LC10690" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> trueValue <span class="pl-k">=</span> attr.ngTrueValue,</td>
      </tr>
      <tr>
        <td id="L10691" class="blob-num js-line-number" data-line-number="10691"></td>
        <td id="LC10691" class="blob-code blob-code-inner js-file-line">      falseValue <span class="pl-k">=</span> attr.ngFalseValue;</td>
      </tr>
      <tr>
        <td id="L10692" class="blob-num js-line-number" data-line-number="10692"></td>
        <td id="LC10692" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10693" class="blob-num js-line-number" data-line-number="10693"></td>
        <td id="LC10693" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>isString(trueValue)) trueValue <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10694" class="blob-num js-line-number" data-line-number="10694"></td>
        <td id="LC10694" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">if</span> (<span class="pl-k">!</span>isString(falseValue)) falseValue <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10695" class="blob-num js-line-number" data-line-number="10695"></td>
        <td id="LC10695" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10696" class="blob-num js-line-number" data-line-number="10696"></td>
        <td id="LC10696" class="blob-code blob-code-inner js-file-line">  element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>click<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10697" class="blob-num js-line-number" data-line-number="10697"></td>
        <td id="LC10697" class="blob-code blob-code-inner js-file-line">    scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10698" class="blob-num js-line-number" data-line-number="10698"></td>
        <td id="LC10698" class="blob-code blob-code-inner js-file-line">      ctrl.$setViewValue(element[<span class="pl-c1">0</span>].<span class="pl-c1">checked</span>);</td>
      </tr>
      <tr>
        <td id="L10699" class="blob-num js-line-number" data-line-number="10699"></td>
        <td id="LC10699" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L10700" class="blob-num js-line-number" data-line-number="10700"></td>
        <td id="LC10700" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10701" class="blob-num js-line-number" data-line-number="10701"></td>
        <td id="LC10701" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10702" class="blob-num js-line-number" data-line-number="10702"></td>
        <td id="LC10702" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">ctrl</span>.<span class="pl-en">$render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10703" class="blob-num js-line-number" data-line-number="10703"></td>
        <td id="LC10703" class="blob-code blob-code-inner js-file-line">    element[<span class="pl-c1">0</span>].<span class="pl-c1">checked</span> <span class="pl-k">=</span> ctrl.$viewValue;</td>
      </tr>
      <tr>
        <td id="L10704" class="blob-num js-line-number" data-line-number="10704"></td>
        <td id="LC10704" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10705" class="blob-num js-line-number" data-line-number="10705"></td>
        <td id="LC10705" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10706" class="blob-num js-line-number" data-line-number="10706"></td>
        <td id="LC10706" class="blob-code blob-code-inner js-file-line">  ctrl.$formatters.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10707" class="blob-num js-line-number" data-line-number="10707"></td>
        <td id="LC10707" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">===</span> trueValue;</td>
      </tr>
      <tr>
        <td id="L10708" class="blob-num js-line-number" data-line-number="10708"></td>
        <td id="LC10708" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10709" class="blob-num js-line-number" data-line-number="10709"></td>
        <td id="LC10709" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10710" class="blob-num js-line-number" data-line-number="10710"></td>
        <td id="LC10710" class="blob-code blob-code-inner js-file-line">  ctrl.$parsers.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10711" class="blob-num js-line-number" data-line-number="10711"></td>
        <td id="LC10711" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> value <span class="pl-k">?</span> trueValue <span class="pl-k">:</span> falseValue;</td>
      </tr>
      <tr>
        <td id="L10712" class="blob-num js-line-number" data-line-number="10712"></td>
        <td id="LC10712" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L10713" class="blob-num js-line-number" data-line-number="10713"></td>
        <td id="LC10713" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L10714" class="blob-num js-line-number" data-line-number="10714"></td>
        <td id="LC10714" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10715" class="blob-num js-line-number" data-line-number="10715"></td>
        <td id="LC10715" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10716" class="blob-num js-line-number" data-line-number="10716"></td>
        <td id="LC10716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10717" class="blob-num js-line-number" data-line-number="10717"></td>
        <td id="LC10717" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L10718" class="blob-num js-line-number" data-line-number="10718"></td>
        <td id="LC10718" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.textarea</span></td>
      </tr>
      <tr>
        <td id="L10719" class="blob-num js-line-number" data-line-number="10719"></td>
        <td id="LC10719" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10720" class="blob-num js-line-number" data-line-number="10720"></td>
        <td id="LC10720" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10721" class="blob-num js-line-number" data-line-number="10721"></td>
        <td id="LC10721" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * HTML textarea element control with angular data-binding. The data-binding and validation</span></td>
      </tr>
      <tr>
        <td id="L10722" class="blob-num js-line-number" data-line-number="10722"></td>
        <td id="LC10722" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * properties of this element are exactly the same as those of the</span></td>
      </tr>
      <tr>
        <td id="L10723" class="blob-num js-line-number" data-line-number="10723"></td>
        <td id="LC10723" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.input input element}.</span></td>
      </tr>
      <tr>
        <td id="L10724" class="blob-num js-line-number" data-line-number="10724"></td>
        <td id="LC10724" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10725" class="blob-num js-line-number" data-line-number="10725"></td>
        <td id="LC10725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10726" class="blob-num js-line-number" data-line-number="10726"></td>
        <td id="LC10726" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10727" class="blob-num js-line-number" data-line-number="10727"></td>
        <td id="LC10727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10728" class="blob-num js-line-number" data-line-number="10728"></td>
        <td id="LC10728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10729" class="blob-num js-line-number" data-line-number="10729"></td>
        <td id="LC10729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10730" class="blob-num js-line-number" data-line-number="10730"></td>
        <td id="LC10730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10731" class="blob-num js-line-number" data-line-number="10731"></td>
        <td id="LC10731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10732" class="blob-num js-line-number" data-line-number="10732"></td>
        <td id="LC10732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10733" class="blob-num js-line-number" data-line-number="10733"></td>
        <td id="LC10733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10734" class="blob-num js-line-number" data-line-number="10734"></td>
        <td id="LC10734" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10735" class="blob-num js-line-number" data-line-number="10735"></td>
        <td id="LC10735" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10736" class="blob-num js-line-number" data-line-number="10736"></td>
        <td id="LC10736" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10737" class="blob-num js-line-number" data-line-number="10737"></td>
        <td id="LC10737" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L10738" class="blob-num js-line-number" data-line-number="10738"></td>
        <td id="LC10738" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10739" class="blob-num js-line-number" data-line-number="10739"></td>
        <td id="LC10739" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10740" class="blob-num js-line-number" data-line-number="10740"></td>
        <td id="LC10740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10741" class="blob-num js-line-number" data-line-number="10741"></td>
        <td id="LC10741" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L10742" class="blob-num js-line-number" data-line-number="10742"></td>
        <td id="LC10742" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.input</span></td>
      </tr>
      <tr>
        <td id="L10743" class="blob-num js-line-number" data-line-number="10743"></td>
        <td id="LC10743" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict E</span></td>
      </tr>
      <tr>
        <td id="L10744" class="blob-num js-line-number" data-line-number="10744"></td>
        <td id="LC10744" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10745" class="blob-num js-line-number" data-line-number="10745"></td>
        <td id="LC10745" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10746" class="blob-num js-line-number" data-line-number="10746"></td>
        <td id="LC10746" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * HTML input element control with angular data-binding. Input control follows HTML5 input types</span></td>
      </tr>
      <tr>
        <td id="L10747" class="blob-num js-line-number" data-line-number="10747"></td>
        <td id="LC10747" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and polyfills the HTML5 validation behavior for older browsers.</span></td>
      </tr>
      <tr>
        <td id="L10748" class="blob-num js-line-number" data-line-number="10748"></td>
        <td id="LC10748" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10749" class="blob-num js-line-number" data-line-number="10749"></td>
        <td id="LC10749" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} ngModel Assignable angular expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L10750" class="blob-num js-line-number" data-line-number="10750"></td>
        <td id="LC10750" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} name Property name of the form under which the control is published.</span></td>
      </tr>
      <tr>
        <td id="L10751" class="blob-num js-line-number" data-line-number="10751"></td>
        <td id="LC10751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} required Sets `required` validation error key if the value is not entered.</span></td>
      </tr>
      <tr>
        <td id="L10752" class="blob-num js-line-number" data-line-number="10752"></td>
        <td id="LC10752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} ngMinlength Sets `minlength` validation error key if the value is shorter than</span></td>
      </tr>
      <tr>
        <td id="L10753" class="blob-num js-line-number" data-line-number="10753"></td>
        <td id="LC10753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    minlength.</span></td>
      </tr>
      <tr>
        <td id="L10754" class="blob-num js-line-number" data-line-number="10754"></td>
        <td id="LC10754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} ngMaxlength Sets `maxlength` validation error key if the value is longer than</span></td>
      </tr>
      <tr>
        <td id="L10755" class="blob-num js-line-number" data-line-number="10755"></td>
        <td id="LC10755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    maxlength.</span></td>
      </tr>
      <tr>
        <td id="L10756" class="blob-num js-line-number" data-line-number="10756"></td>
        <td id="LC10756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngPattern Sets `pattern` validation error key if the value does not match the</span></td>
      </tr>
      <tr>
        <td id="L10757" class="blob-num js-line-number" data-line-number="10757"></td>
        <td id="LC10757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    RegExp pattern expression. Expected value is `/regexp/` for inline patterns or `regexp` for</span></td>
      </tr>
      <tr>
        <td id="L10758" class="blob-num js-line-number" data-line-number="10758"></td>
        <td id="LC10758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    patterns defined as scope expressions.</span></td>
      </tr>
      <tr>
        <td id="L10759" class="blob-num js-line-number" data-line-number="10759"></td>
        <td id="LC10759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngChange Angular expression to be executed when input changes due to user</span></td>
      </tr>
      <tr>
        <td id="L10760" class="blob-num js-line-number" data-line-number="10760"></td>
        <td id="LC10760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    interaction with the input element.</span></td>
      </tr>
      <tr>
        <td id="L10761" class="blob-num js-line-number" data-line-number="10761"></td>
        <td id="LC10761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10762" class="blob-num js-line-number" data-line-number="10762"></td>
        <td id="LC10762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L10763" class="blob-num js-line-number" data-line-number="10763"></td>
        <td id="LC10763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10764" class="blob-num js-line-number" data-line-number="10764"></td>
        <td id="LC10764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10765" class="blob-num js-line-number" data-line-number="10765"></td>
        <td id="LC10765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10766" class="blob-num js-line-number" data-line-number="10766"></td>
        <td id="LC10766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L10767" class="blob-num js-line-number" data-line-number="10767"></td>
        <td id="LC10767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.user = {name: &#39;guest&#39;, last: &#39;visitor&#39;};</span></td>
      </tr>
      <tr>
        <td id="L10768" class="blob-num js-line-number" data-line-number="10768"></td>
        <td id="LC10768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L10769" class="blob-num js-line-number" data-line-number="10769"></td>
        <td id="LC10769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L10770" class="blob-num js-line-number" data-line-number="10770"></td>
        <td id="LC10770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10771" class="blob-num js-line-number" data-line-number="10771"></td>
        <td id="LC10771" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;form name=&quot;myForm&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10772" class="blob-num js-line-number" data-line-number="10772"></td>
        <td id="LC10772" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           User name: &lt;input type=&quot;text&quot; name=&quot;userName&quot; ng-model=&quot;user.name&quot; required&gt;</span></td>
      </tr>
      <tr>
        <td id="L10773" class="blob-num js-line-number" data-line-number="10773"></td>
        <td id="LC10773" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.userName.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10774" class="blob-num js-line-number" data-line-number="10774"></td>
        <td id="LC10774" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Required!&lt;/span&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10775" class="blob-num js-line-number" data-line-number="10775"></td>
        <td id="LC10775" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Last name: &lt;input type=&quot;text&quot; name=&quot;lastName&quot; ng-model=&quot;user.last&quot;</span></td>
      </tr>
      <tr>
        <td id="L10776" class="blob-num js-line-number" data-line-number="10776"></td>
        <td id="LC10776" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             ng-minlength=&quot;3&quot; ng-maxlength=&quot;10&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10777" class="blob-num js-line-number" data-line-number="10777"></td>
        <td id="LC10777" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.lastName.$error.minlength&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10778" class="blob-num js-line-number" data-line-number="10778"></td>
        <td id="LC10778" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Too short!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L10779" class="blob-num js-line-number" data-line-number="10779"></td>
        <td id="LC10779" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span class=&quot;error&quot; ng-show=&quot;myForm.lastName.$error.maxlength&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L10780" class="blob-num js-line-number" data-line-number="10780"></td>
        <td id="LC10780" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             Too long!&lt;/span&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10781" class="blob-num js-line-number" data-line-number="10781"></td>
        <td id="LC10781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L10782" class="blob-num js-line-number" data-line-number="10782"></td>
        <td id="LC10782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;hr&gt;</span></td>
      </tr>
      <tr>
        <td id="L10783" class="blob-num js-line-number" data-line-number="10783"></td>
        <td id="LC10783" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;user = {{user}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L10784" class="blob-num js-line-number" data-line-number="10784"></td>
        <td id="LC10784" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.userName.$valid = {{myForm.userName.$valid}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10785" class="blob-num js-line-number" data-line-number="10785"></td>
        <td id="LC10785" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.userName.$error = {{myForm.userName.$error}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10786" class="blob-num js-line-number" data-line-number="10786"></td>
        <td id="LC10786" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.lastName.$valid = {{myForm.lastName.$valid}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10787" class="blob-num js-line-number" data-line-number="10787"></td>
        <td id="LC10787" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.userName.$error = {{myForm.lastName.$error}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10788" class="blob-num js-line-number" data-line-number="10788"></td>
        <td id="LC10788" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10789" class="blob-num js-line-number" data-line-number="10789"></td>
        <td id="LC10789" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10790" class="blob-num js-line-number" data-line-number="10790"></td>
        <td id="LC10790" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$error.minlength = {{!!myForm.$error.minlength}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10791" class="blob-num js-line-number" data-line-number="10791"></td>
        <td id="LC10791" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$error.maxlength = {{!!myForm.$error.maxlength}}&lt;/tt&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L10792" class="blob-num js-line-number" data-line-number="10792"></td>
        <td id="LC10792" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L10793" class="blob-num js-line-number" data-line-number="10793"></td>
        <td id="LC10793" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L10794" class="blob-num js-line-number" data-line-number="10794"></td>
        <td id="LC10794" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10795" class="blob-num js-line-number" data-line-number="10795"></td>
        <td id="LC10795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10796" class="blob-num js-line-number" data-line-number="10796"></td>
        <td id="LC10796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;,&quot;last&quot;:&quot;visitor&quot;}&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10797" class="blob-num js-line-number" data-line-number="10797"></td>
        <td id="LC10797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.userName.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10798" class="blob-num js-line-number" data-line-number="10798"></td>
        <td id="LC10798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10799" class="blob-num js-line-number" data-line-number="10799"></td>
        <td id="LC10799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10800" class="blob-num js-line-number" data-line-number="10800"></td>
        <td id="LC10800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10801" class="blob-num js-line-number" data-line-number="10801"></td>
        <td id="LC10801" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be invalid if empty when required&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10802" class="blob-num js-line-number" data-line-number="10802"></td>
        <td id="LC10802" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;user.name&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10803" class="blob-num js-line-number" data-line-number="10803"></td>
        <td id="LC10803" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;last&quot;:&quot;visitor&quot;}&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10804" class="blob-num js-line-number" data-line-number="10804"></td>
        <td id="LC10804" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.userName.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10805" class="blob-num js-line-number" data-line-number="10805"></td>
        <td id="LC10805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10806" class="blob-num js-line-number" data-line-number="10806"></td>
        <td id="LC10806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10807" class="blob-num js-line-number" data-line-number="10807"></td>
        <td id="LC10807" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10808" class="blob-num js-line-number" data-line-number="10808"></td>
        <td id="LC10808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be valid if empty when min length is set&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10809" class="blob-num js-line-number" data-line-number="10809"></td>
        <td id="LC10809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;user.last&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10810" class="blob-num js-line-number" data-line-number="10810"></td>
        <td id="LC10810" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;,&quot;last&quot;:&quot;&quot;}&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10811" class="blob-num js-line-number" data-line-number="10811"></td>
        <td id="LC10811" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10812" class="blob-num js-line-number" data-line-number="10812"></td>
        <td id="LC10812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10813" class="blob-num js-line-number" data-line-number="10813"></td>
        <td id="LC10813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10814" class="blob-num js-line-number" data-line-number="10814"></td>
        <td id="LC10814" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10815" class="blob-num js-line-number" data-line-number="10815"></td>
        <td id="LC10815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be invalid if less than required min length&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10816" class="blob-num js-line-number" data-line-number="10816"></td>
        <td id="LC10816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;user.last&#39;).enter(&#39;xx&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10817" class="blob-num js-line-number" data-line-number="10817"></td>
        <td id="LC10817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;user&#39;)).toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;}&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10818" class="blob-num js-line-number" data-line-number="10818"></td>
        <td id="LC10818" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10819" class="blob-num js-line-number" data-line-number="10819"></td>
        <td id="LC10819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.lastName.$error&#39;)).toMatch(/minlength/);</span></td>
      </tr>
      <tr>
        <td id="L10820" class="blob-num js-line-number" data-line-number="10820"></td>
        <td id="LC10820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10821" class="blob-num js-line-number" data-line-number="10821"></td>
        <td id="LC10821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10822" class="blob-num js-line-number" data-line-number="10822"></td>
        <td id="LC10822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L10823" class="blob-num js-line-number" data-line-number="10823"></td>
        <td id="LC10823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be invalid if longer than max length&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L10824" class="blob-num js-line-number" data-line-number="10824"></td>
        <td id="LC10824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;user.last&#39;).enter(&#39;some ridiculously long name&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10825" class="blob-num js-line-number" data-line-number="10825"></td>
        <td id="LC10825" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;user&#39;))</span></td>
      </tr>
      <tr>
        <td id="L10826" class="blob-num js-line-number" data-line-number="10826"></td>
        <td id="LC10826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            .toEqual(&#39;{&quot;name&quot;:&quot;guest&quot;}&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10827" class="blob-num js-line-number" data-line-number="10827"></td>
        <td id="LC10827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.lastName.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10828" class="blob-num js-line-number" data-line-number="10828"></td>
        <td id="LC10828" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.lastName.$error&#39;)).toMatch(/maxlength/);</span></td>
      </tr>
      <tr>
        <td id="L10829" class="blob-num js-line-number" data-line-number="10829"></td>
        <td id="LC10829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L10830" class="blob-num js-line-number" data-line-number="10830"></td>
        <td id="LC10830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L10831" class="blob-num js-line-number" data-line-number="10831"></td>
        <td id="LC10831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L10832" class="blob-num js-line-number" data-line-number="10832"></td>
        <td id="LC10832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L10833" class="blob-num js-line-number" data-line-number="10833"></td>
        <td id="LC10833" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L10834" class="blob-num js-line-number" data-line-number="10834"></td>
        <td id="LC10834" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> inputDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$browser<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$sniffer<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$browser</span>, <span class="pl-smi">$sniffer</span>) {</td>
      </tr>
      <tr>
        <td id="L10835" class="blob-num js-line-number" data-line-number="10835"></td>
        <td id="LC10835" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L10836" class="blob-num js-line-number" data-line-number="10836"></td>
        <td id="LC10836" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10837" class="blob-num js-line-number" data-line-number="10837"></td>
        <td id="LC10837" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?ngModel<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10838" class="blob-num js-line-number" data-line-number="10838"></td>
        <td id="LC10838" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L10839" class="blob-num js-line-number" data-line-number="10839"></td>
        <td id="LC10839" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (ctrl) {</td>
      </tr>
      <tr>
        <td id="L10840" class="blob-num js-line-number" data-line-number="10840"></td>
        <td id="LC10840" class="blob-code blob-code-inner js-file-line">        (inputType[lowercase(attr.<span class="pl-c1">type</span>)] <span class="pl-k">||</span> inputType.<span class="pl-c1">text</span>)(scope, element, attr, ctrl, $sniffer,</td>
      </tr>
      <tr>
        <td id="L10841" class="blob-num js-line-number" data-line-number="10841"></td>
        <td id="LC10841" class="blob-code blob-code-inner js-file-line">                                                            $browser);</td>
      </tr>
      <tr>
        <td id="L10842" class="blob-num js-line-number" data-line-number="10842"></td>
        <td id="LC10842" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10843" class="blob-num js-line-number" data-line-number="10843"></td>
        <td id="LC10843" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10844" class="blob-num js-line-number" data-line-number="10844"></td>
        <td id="LC10844" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10845" class="blob-num js-line-number" data-line-number="10845"></td>
        <td id="LC10845" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L10846" class="blob-num js-line-number" data-line-number="10846"></td>
        <td id="LC10846" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10847" class="blob-num js-line-number" data-line-number="10847"></td>
        <td id="LC10847" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">VALID_CLASS</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-valid<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10848" class="blob-num js-line-number" data-line-number="10848"></td>
        <td id="LC10848" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">INVALID_CLASS</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-invalid<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10849" class="blob-num js-line-number" data-line-number="10849"></td>
        <td id="LC10849" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">PRISTINE_CLASS</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-pristine<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10850" class="blob-num js-line-number" data-line-number="10850"></td>
        <td id="LC10850" class="blob-code blob-code-inner js-file-line">    <span class="pl-c1">DIRTY_CLASS</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-dirty<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L10851" class="blob-num js-line-number" data-line-number="10851"></td>
        <td id="LC10851" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10852" class="blob-num js-line-number" data-line-number="10852"></td>
        <td id="LC10852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10853" class="blob-num js-line-number" data-line-number="10853"></td>
        <td id="LC10853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc object</span></td>
      </tr>
      <tr>
        <td id="L10854" class="blob-num js-line-number" data-line-number="10854"></td>
        <td id="LC10854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngModel.NgModelController</span></td>
      </tr>
      <tr>
        <td id="L10855" class="blob-num js-line-number" data-line-number="10855"></td>
        <td id="LC10855" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10856" class="blob-num js-line-number" data-line-number="10856"></td>
        <td id="LC10856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {string} $viewValue Actual string value in the view.</span></td>
      </tr>
      <tr>
        <td id="L10857" class="blob-num js-line-number" data-line-number="10857"></td>
        <td id="LC10857" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {*} $modelValue The value in the model, that the control is bound to.</span></td>
      </tr>
      <tr>
        <td id="L10858" class="blob-num js-line-number" data-line-number="10858"></td>
        <td id="LC10858" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {Array.&lt;Function&gt;} $parsers Whenever the control reads value from the DOM, it executes</span></td>
      </tr>
      <tr>
        <td id="L10859" class="blob-num js-line-number" data-line-number="10859"></td>
        <td id="LC10859" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     all of these functions to sanitize / convert the value as well as validate.</span></td>
      </tr>
      <tr>
        <td id="L10860" class="blob-num js-line-number" data-line-number="10860"></td>
        <td id="LC10860" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10861" class="blob-num js-line-number" data-line-number="10861"></td>
        <td id="LC10861" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {Array.&lt;Function&gt;} $formatters Whenever the model value changes, it executes all of</span></td>
      </tr>
      <tr>
        <td id="L10862" class="blob-num js-line-number" data-line-number="10862"></td>
        <td id="LC10862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     these functions to convert the value as well as validate.</span></td>
      </tr>
      <tr>
        <td id="L10863" class="blob-num js-line-number" data-line-number="10863"></td>
        <td id="LC10863" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10864" class="blob-num js-line-number" data-line-number="10864"></td>
        <td id="LC10864" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {Object} $error An bject hash with all errors as keys.</span></td>
      </tr>
      <tr>
        <td id="L10865" class="blob-num js-line-number" data-line-number="10865"></td>
        <td id="LC10865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10866" class="blob-num js-line-number" data-line-number="10866"></td>
        <td id="LC10866" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $pristine True if user has not interacted with the control yet.</span></td>
      </tr>
      <tr>
        <td id="L10867" class="blob-num js-line-number" data-line-number="10867"></td>
        <td id="LC10867" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $dirty True if user has already interacted with the control.</span></td>
      </tr>
      <tr>
        <td id="L10868" class="blob-num js-line-number" data-line-number="10868"></td>
        <td id="LC10868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $valid True if there is no error.</span></td>
      </tr>
      <tr>
        <td id="L10869" class="blob-num js-line-number" data-line-number="10869"></td>
        <td id="LC10869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@property</span> {boolean} $invalid True if at least one error on the control.</span></td>
      </tr>
      <tr>
        <td id="L10870" class="blob-num js-line-number" data-line-number="10870"></td>
        <td id="LC10870" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10871" class="blob-num js-line-number" data-line-number="10871"></td>
        <td id="LC10871" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10872" class="blob-num js-line-number" data-line-number="10872"></td>
        <td id="LC10872" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L10873" class="blob-num js-line-number" data-line-number="10873"></td>
        <td id="LC10873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L10874" class="blob-num js-line-number" data-line-number="10874"></td>
        <td id="LC10874" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> NgModelController <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$exceptionHandler<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$attrs<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>ngModel<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$element<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L10875" class="blob-num js-line-number" data-line-number="10875"></td>
        <td id="LC10875" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">function</span>(<span class="pl-smi">$scope</span>, <span class="pl-smi">$exceptionHandler</span>, <span class="pl-smi">$attr</span>, <span class="pl-smi">ngModel</span>, <span class="pl-smi">$element</span>) {</td>
      </tr>
      <tr>
        <td id="L10876" class="blob-num js-line-number" data-line-number="10876"></td>
        <td id="LC10876" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$viewValue <span class="pl-k">=</span> <span class="pl-c1">Number</span>.<span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L10877" class="blob-num js-line-number" data-line-number="10877"></td>
        <td id="LC10877" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$modelValue <span class="pl-k">=</span> <span class="pl-c1">Number</span>.<span class="pl-c1">NaN</span>;</td>
      </tr>
      <tr>
        <td id="L10878" class="blob-num js-line-number" data-line-number="10878"></td>
        <td id="LC10878" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$parsers <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L10879" class="blob-num js-line-number" data-line-number="10879"></td>
        <td id="LC10879" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$formatters <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L10880" class="blob-num js-line-number" data-line-number="10880"></td>
        <td id="LC10880" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$viewChangeListeners <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L10881" class="blob-num js-line-number" data-line-number="10881"></td>
        <td id="LC10881" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$pristine <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10882" class="blob-num js-line-number" data-line-number="10882"></td>
        <td id="LC10882" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$dirty <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10883" class="blob-num js-line-number" data-line-number="10883"></td>
        <td id="LC10883" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10884" class="blob-num js-line-number" data-line-number="10884"></td>
        <td id="LC10884" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$invalid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10885" class="blob-num js-line-number" data-line-number="10885"></td>
        <td id="LC10885" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$render <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L10886" class="blob-num js-line-number" data-line-number="10886"></td>
        <td id="LC10886" class="blob-code blob-code-inner js-file-line">  <span class="pl-v">this</span>.$name <span class="pl-k">=</span> $attr.<span class="pl-c1">name</span>;</td>
      </tr>
      <tr>
        <td id="L10887" class="blob-num js-line-number" data-line-number="10887"></td>
        <td id="LC10887" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10888" class="blob-num js-line-number" data-line-number="10888"></td>
        <td id="LC10888" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> parentForm <span class="pl-k">=</span> $element.inheritedData(<span class="pl-s"><span class="pl-pds">&#39;</span>$formController<span class="pl-pds">&#39;</span></span>) <span class="pl-k">||</span> nullFormCtrl,</td>
      </tr>
      <tr>
        <td id="L10889" class="blob-num js-line-number" data-line-number="10889"></td>
        <td id="LC10889" class="blob-code blob-code-inner js-file-line">      invalidCount <span class="pl-k">=</span> <span class="pl-c1">0</span>, <span class="pl-c">// used to easily determine if we are valid</span></td>
      </tr>
      <tr>
        <td id="L10890" class="blob-num js-line-number" data-line-number="10890"></td>
        <td id="LC10890" class="blob-code blob-code-inner js-file-line">      $error <span class="pl-k">=</span> <span class="pl-v">this</span>.$error <span class="pl-k">=</span> {}; <span class="pl-c">// keep invalid keys here</span></td>
      </tr>
      <tr>
        <td id="L10891" class="blob-num js-line-number" data-line-number="10891"></td>
        <td id="LC10891" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10892" class="blob-num js-line-number" data-line-number="10892"></td>
        <td id="LC10892" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10893" class="blob-num js-line-number" data-line-number="10893"></td>
        <td id="LC10893" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// Setup initial state of the control</span></td>
      </tr>
      <tr>
        <td id="L10894" class="blob-num js-line-number" data-line-number="10894"></td>
        <td id="LC10894" class="blob-code blob-code-inner js-file-line">  $element.addClass(<span class="pl-c1">PRISTINE_CLASS</span>);</td>
      </tr>
      <tr>
        <td id="L10895" class="blob-num js-line-number" data-line-number="10895"></td>
        <td id="LC10895" class="blob-code blob-code-inner js-file-line">  toggleValidCss(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10896" class="blob-num js-line-number" data-line-number="10896"></td>
        <td id="LC10896" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10897" class="blob-num js-line-number" data-line-number="10897"></td>
        <td id="LC10897" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// convenience method for easy toggling of classes</span></td>
      </tr>
      <tr>
        <td id="L10898" class="blob-num js-line-number" data-line-number="10898"></td>
        <td id="LC10898" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span> <span class="pl-en">toggleValidCss</span>(<span class="pl-smi">isValid</span>, <span class="pl-smi">validationErrorKey</span>) {</td>
      </tr>
      <tr>
        <td id="L10899" class="blob-num js-line-number" data-line-number="10899"></td>
        <td id="LC10899" class="blob-code blob-code-inner js-file-line">    validationErrorKey <span class="pl-k">=</span> validationErrorKey <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> snake_case(validationErrorKey, <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L10900" class="blob-num js-line-number" data-line-number="10900"></td>
        <td id="LC10900" class="blob-code blob-code-inner js-file-line">    $element.</td>
      </tr>
      <tr>
        <td id="L10901" class="blob-num js-line-number" data-line-number="10901"></td>
        <td id="LC10901" class="blob-code blob-code-inner js-file-line">      removeClass((isValid <span class="pl-k">?</span> INVALID_CLASS <span class="pl-k">:</span> <span class="pl-c1">VALID_CLASS</span>) <span class="pl-k">+</span> validationErrorKey).</td>
      </tr>
      <tr>
        <td id="L10902" class="blob-num js-line-number" data-line-number="10902"></td>
        <td id="LC10902" class="blob-code blob-code-inner js-file-line">      addClass((isValid <span class="pl-k">?</span> VALID_CLASS <span class="pl-k">:</span> <span class="pl-c1">INVALID_CLASS</span>) <span class="pl-k">+</span> validationErrorKey);</td>
      </tr>
      <tr>
        <td id="L10903" class="blob-num js-line-number" data-line-number="10903"></td>
        <td id="LC10903" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L10904" class="blob-num js-line-number" data-line-number="10904"></td>
        <td id="LC10904" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10905" class="blob-num js-line-number" data-line-number="10905"></td>
        <td id="LC10905" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10906" class="blob-num js-line-number" data-line-number="10906"></td>
        <td id="LC10906" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L10907" class="blob-num js-line-number" data-line-number="10907"></td>
        <td id="LC10907" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngModel.NgModelController#$setValidity</span></td>
      </tr>
      <tr>
        <td id="L10908" class="blob-num js-line-number" data-line-number="10908"></td>
        <td id="LC10908" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$compileProvider.directive.ngModel.NgModelController</span></td>
      </tr>
      <tr>
        <td id="L10909" class="blob-num js-line-number" data-line-number="10909"></td>
        <td id="LC10909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10910" class="blob-num js-line-number" data-line-number="10910"></td>
        <td id="LC10910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10911" class="blob-num js-line-number" data-line-number="10911"></td>
        <td id="LC10911" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Change the validity state, and notifies the form when the control changes validity. (i.e. it</span></td>
      </tr>
      <tr>
        <td id="L10912" class="blob-num js-line-number" data-line-number="10912"></td>
        <td id="LC10912" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * does not notify form if given validator is already marked as invalid).</span></td>
      </tr>
      <tr>
        <td id="L10913" class="blob-num js-line-number" data-line-number="10913"></td>
        <td id="LC10913" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10914" class="blob-num js-line-number" data-line-number="10914"></td>
        <td id="LC10914" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method should be called by validators - i.e. the parser or formatter functions.</span></td>
      </tr>
      <tr>
        <td id="L10915" class="blob-num js-line-number" data-line-number="10915"></td>
        <td id="LC10915" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10916" class="blob-num js-line-number" data-line-number="10916"></td>
        <td id="LC10916" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} validationErrorKey Name of the validator. the `validationErrorKey` will assign</span></td>
      </tr>
      <tr>
        <td id="L10917" class="blob-num js-line-number" data-line-number="10917"></td>
        <td id="LC10917" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *        to `$error[validationErrorKey]=isValid` so that it is available for data-binding.</span></td>
      </tr>
      <tr>
        <td id="L10918" class="blob-num js-line-number" data-line-number="10918"></td>
        <td id="LC10918" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *        The `validationErrorKey` should be in camelCase and will get converted into dash-case</span></td>
      </tr>
      <tr>
        <td id="L10919" class="blob-num js-line-number" data-line-number="10919"></td>
        <td id="LC10919" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *        for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`</span></td>
      </tr>
      <tr>
        <td id="L10920" class="blob-num js-line-number" data-line-number="10920"></td>
        <td id="LC10920" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *        class and can be bound to as  `{{someForm.someControl.$error.myError}}` .</span></td>
      </tr>
      <tr>
        <td id="L10921" class="blob-num js-line-number" data-line-number="10921"></td>
        <td id="LC10921" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {boolean} isValid Whether the current state is valid (true) or invalid (false).</span></td>
      </tr>
      <tr>
        <td id="L10922" class="blob-num js-line-number" data-line-number="10922"></td>
        <td id="LC10922" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10923" class="blob-num js-line-number" data-line-number="10923"></td>
        <td id="LC10923" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$setValidity</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">validationErrorKey</span>, <span class="pl-smi">isValid</span>) {</td>
      </tr>
      <tr>
        <td id="L10924" class="blob-num js-line-number" data-line-number="10924"></td>
        <td id="LC10924" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> ($error[validationErrorKey] <span class="pl-k">===</span> <span class="pl-k">!</span>isValid) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L10925" class="blob-num js-line-number" data-line-number="10925"></td>
        <td id="LC10925" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10926" class="blob-num js-line-number" data-line-number="10926"></td>
        <td id="LC10926" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (isValid) {</td>
      </tr>
      <tr>
        <td id="L10927" class="blob-num js-line-number" data-line-number="10927"></td>
        <td id="LC10927" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> ($error[validationErrorKey]) invalidCount<span class="pl-k">--</span>;</td>
      </tr>
      <tr>
        <td id="L10928" class="blob-num js-line-number" data-line-number="10928"></td>
        <td id="LC10928" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>invalidCount) {</td>
      </tr>
      <tr>
        <td id="L10929" class="blob-num js-line-number" data-line-number="10929"></td>
        <td id="LC10929" class="blob-code blob-code-inner js-file-line">        toggleValidCss(<span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L10930" class="blob-num js-line-number" data-line-number="10930"></td>
        <td id="LC10930" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$valid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10931" class="blob-num js-line-number" data-line-number="10931"></td>
        <td id="LC10931" class="blob-code blob-code-inner js-file-line">        <span class="pl-v">this</span>.$invalid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10932" class="blob-num js-line-number" data-line-number="10932"></td>
        <td id="LC10932" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L10933" class="blob-num js-line-number" data-line-number="10933"></td>
        <td id="LC10933" class="blob-code blob-code-inner js-file-line">    } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L10934" class="blob-num js-line-number" data-line-number="10934"></td>
        <td id="LC10934" class="blob-code blob-code-inner js-file-line">      toggleValidCss(<span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L10935" class="blob-num js-line-number" data-line-number="10935"></td>
        <td id="LC10935" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$invalid <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10936" class="blob-num js-line-number" data-line-number="10936"></td>
        <td id="LC10936" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$valid <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10937" class="blob-num js-line-number" data-line-number="10937"></td>
        <td id="LC10937" class="blob-code blob-code-inner js-file-line">      invalidCount<span class="pl-k">++</span>;</td>
      </tr>
      <tr>
        <td id="L10938" class="blob-num js-line-number" data-line-number="10938"></td>
        <td id="LC10938" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10939" class="blob-num js-line-number" data-line-number="10939"></td>
        <td id="LC10939" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10940" class="blob-num js-line-number" data-line-number="10940"></td>
        <td id="LC10940" class="blob-code blob-code-inner js-file-line">    $error[validationErrorKey] <span class="pl-k">=</span> <span class="pl-k">!</span>isValid;</td>
      </tr>
      <tr>
        <td id="L10941" class="blob-num js-line-number" data-line-number="10941"></td>
        <td id="LC10941" class="blob-code blob-code-inner js-file-line">    toggleValidCss(isValid, validationErrorKey);</td>
      </tr>
      <tr>
        <td id="L10942" class="blob-num js-line-number" data-line-number="10942"></td>
        <td id="LC10942" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10943" class="blob-num js-line-number" data-line-number="10943"></td>
        <td id="LC10943" class="blob-code blob-code-inner js-file-line">    parentForm.$setValidity(validationErrorKey, isValid, <span class="pl-v">this</span>);</td>
      </tr>
      <tr>
        <td id="L10944" class="blob-num js-line-number" data-line-number="10944"></td>
        <td id="LC10944" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10945" class="blob-num js-line-number" data-line-number="10945"></td>
        <td id="LC10945" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10946" class="blob-num js-line-number" data-line-number="10946"></td>
        <td id="LC10946" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10947" class="blob-num js-line-number" data-line-number="10947"></td>
        <td id="LC10947" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L10948" class="blob-num js-line-number" data-line-number="10948"></td>
        <td id="LC10948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @ngdoc function</span></td>
      </tr>
      <tr>
        <td id="L10949" class="blob-num js-line-number" data-line-number="10949"></td>
        <td id="LC10949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngModel.NgModelController#$setViewValue</span></td>
      </tr>
      <tr>
        <td id="L10950" class="blob-num js-line-number" data-line-number="10950"></td>
        <td id="LC10950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * @methodOf angular.module.ng.$compileProvider.directive.ngModel.NgModelController</span></td>
      </tr>
      <tr>
        <td id="L10951" class="blob-num js-line-number" data-line-number="10951"></td>
        <td id="LC10951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10952" class="blob-num js-line-number" data-line-number="10952"></td>
        <td id="LC10952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L10953" class="blob-num js-line-number" data-line-number="10953"></td>
        <td id="LC10953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * Read a value from view.</span></td>
      </tr>
      <tr>
        <td id="L10954" class="blob-num js-line-number" data-line-number="10954"></td>
        <td id="LC10954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10955" class="blob-num js-line-number" data-line-number="10955"></td>
        <td id="LC10955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * This method should be called from within a DOM event handler.</span></td>
      </tr>
      <tr>
        <td id="L10956" class="blob-num js-line-number" data-line-number="10956"></td>
        <td id="LC10956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * For example {@link angular.module.ng.$compileProvider.directive.input input} or</span></td>
      </tr>
      <tr>
        <td id="L10957" class="blob-num js-line-number" data-line-number="10957"></td>
        <td id="LC10957" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * {@link angular.module.ng.$compileProvider.directive.select select} directives call it.</span></td>
      </tr>
      <tr>
        <td id="L10958" class="blob-num js-line-number" data-line-number="10958"></td>
        <td id="LC10958" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10959" class="blob-num js-line-number" data-line-number="10959"></td>
        <td id="LC10959" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * It internally calls all `formatters` and if resulted value is valid, updates the model and</span></td>
      </tr>
      <tr>
        <td id="L10960" class="blob-num js-line-number" data-line-number="10960"></td>
        <td id="LC10960" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * calls all registered change listeners.</span></td>
      </tr>
      <tr>
        <td id="L10961" class="blob-num js-line-number" data-line-number="10961"></td>
        <td id="LC10961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   *</span></td>
      </tr>
      <tr>
        <td id="L10962" class="blob-num js-line-number" data-line-number="10962"></td>
        <td id="LC10962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   * <span class="pl-k">@param</span> {string} value Value from the view.</span></td>
      </tr>
      <tr>
        <td id="L10963" class="blob-num js-line-number" data-line-number="10963"></td>
        <td id="LC10963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   */</span></td>
      </tr>
      <tr>
        <td id="L10964" class="blob-num js-line-number" data-line-number="10964"></td>
        <td id="LC10964" class="blob-code blob-code-inner js-file-line">  <span class="pl-c1">this</span>.<span class="pl-en">$setViewValue</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10965" class="blob-num js-line-number" data-line-number="10965"></td>
        <td id="LC10965" class="blob-code blob-code-inner js-file-line">    <span class="pl-v">this</span>.$viewValue <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L10966" class="blob-num js-line-number" data-line-number="10966"></td>
        <td id="LC10966" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10967" class="blob-num js-line-number" data-line-number="10967"></td>
        <td id="LC10967" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// change to dirty</span></td>
      </tr>
      <tr>
        <td id="L10968" class="blob-num js-line-number" data-line-number="10968"></td>
        <td id="LC10968" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.$pristine) {</td>
      </tr>
      <tr>
        <td id="L10969" class="blob-num js-line-number" data-line-number="10969"></td>
        <td id="LC10969" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$dirty <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L10970" class="blob-num js-line-number" data-line-number="10970"></td>
        <td id="LC10970" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$pristine <span class="pl-k">=</span> <span class="pl-c1">false</span>;</td>
      </tr>
      <tr>
        <td id="L10971" class="blob-num js-line-number" data-line-number="10971"></td>
        <td id="LC10971" class="blob-code blob-code-inner js-file-line">      $element.removeClass(<span class="pl-c1">PRISTINE_CLASS</span>).addClass(<span class="pl-c1">DIRTY_CLASS</span>);</td>
      </tr>
      <tr>
        <td id="L10972" class="blob-num js-line-number" data-line-number="10972"></td>
        <td id="LC10972" class="blob-code blob-code-inner js-file-line">      parentForm.$setDirty();</td>
      </tr>
      <tr>
        <td id="L10973" class="blob-num js-line-number" data-line-number="10973"></td>
        <td id="LC10973" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10974" class="blob-num js-line-number" data-line-number="10974"></td>
        <td id="LC10974" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10975" class="blob-num js-line-number" data-line-number="10975"></td>
        <td id="LC10975" class="blob-code blob-code-inner js-file-line">    forEach(<span class="pl-v">this</span>.$parsers, <span class="pl-k">function</span>(<span class="pl-smi">fn</span>) {</td>
      </tr>
      <tr>
        <td id="L10976" class="blob-num js-line-number" data-line-number="10976"></td>
        <td id="LC10976" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">=</span> fn(value);</td>
      </tr>
      <tr>
        <td id="L10977" class="blob-num js-line-number" data-line-number="10977"></td>
        <td id="LC10977" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L10978" class="blob-num js-line-number" data-line-number="10978"></td>
        <td id="LC10978" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10979" class="blob-num js-line-number" data-line-number="10979"></td>
        <td id="LC10979" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (<span class="pl-v">this</span>.$modelValue <span class="pl-k">!==</span> value) {</td>
      </tr>
      <tr>
        <td id="L10980" class="blob-num js-line-number" data-line-number="10980"></td>
        <td id="LC10980" class="blob-code blob-code-inner js-file-line">      <span class="pl-v">this</span>.$modelValue <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L10981" class="blob-num js-line-number" data-line-number="10981"></td>
        <td id="LC10981" class="blob-code blob-code-inner js-file-line">      ngModel(value);</td>
      </tr>
      <tr>
        <td id="L10982" class="blob-num js-line-number" data-line-number="10982"></td>
        <td id="LC10982" class="blob-code blob-code-inner js-file-line">      forEach(<span class="pl-v">this</span>.$viewChangeListeners, <span class="pl-k">function</span>(<span class="pl-smi">listener</span>) {</td>
      </tr>
      <tr>
        <td id="L10983" class="blob-num js-line-number" data-line-number="10983"></td>
        <td id="LC10983" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">try</span> {</td>
      </tr>
      <tr>
        <td id="L10984" class="blob-num js-line-number" data-line-number="10984"></td>
        <td id="LC10984" class="blob-code blob-code-inner js-file-line">          listener();</td>
      </tr>
      <tr>
        <td id="L10985" class="blob-num js-line-number" data-line-number="10985"></td>
        <td id="LC10985" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">catch</span>(e) {</td>
      </tr>
      <tr>
        <td id="L10986" class="blob-num js-line-number" data-line-number="10986"></td>
        <td id="LC10986" class="blob-code blob-code-inner js-file-line">          $exceptionHandler(e);</td>
      </tr>
      <tr>
        <td id="L10987" class="blob-num js-line-number" data-line-number="10987"></td>
        <td id="LC10987" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L10988" class="blob-num js-line-number" data-line-number="10988"></td>
        <td id="LC10988" class="blob-code blob-code-inner js-file-line">      })</td>
      </tr>
      <tr>
        <td id="L10989" class="blob-num js-line-number" data-line-number="10989"></td>
        <td id="LC10989" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L10990" class="blob-num js-line-number" data-line-number="10990"></td>
        <td id="LC10990" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L10991" class="blob-num js-line-number" data-line-number="10991"></td>
        <td id="LC10991" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10992" class="blob-num js-line-number" data-line-number="10992"></td>
        <td id="LC10992" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">// model -&gt; value</span></td>
      </tr>
      <tr>
        <td id="L10993" class="blob-num js-line-number" data-line-number="10993"></td>
        <td id="LC10993" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> ctrl <span class="pl-k">=</span> <span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L10994" class="blob-num js-line-number" data-line-number="10994"></td>
        <td id="LC10994" class="blob-code blob-code-inner js-file-line">  $scope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L10995" class="blob-num js-line-number" data-line-number="10995"></td>
        <td id="LC10995" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> ngModel();</td>
      </tr>
      <tr>
        <td id="L10996" class="blob-num js-line-number" data-line-number="10996"></td>
        <td id="LC10996" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L10997" class="blob-num js-line-number" data-line-number="10997"></td>
        <td id="LC10997" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L10998" class="blob-num js-line-number" data-line-number="10998"></td>
        <td id="LC10998" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// ignore change from view</span></td>
      </tr>
      <tr>
        <td id="L10999" class="blob-num js-line-number" data-line-number="10999"></td>
        <td id="LC10999" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ctrl.$modelValue <span class="pl-k">===</span> value) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L11000" class="blob-num js-line-number" data-line-number="11000"></td>
        <td id="LC11000" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11001" class="blob-num js-line-number" data-line-number="11001"></td>
        <td id="LC11001" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> formatters <span class="pl-k">=</span> ctrl.$formatters,</td>
      </tr>
      <tr>
        <td id="L11002" class="blob-num js-line-number" data-line-number="11002"></td>
        <td id="LC11002" class="blob-code blob-code-inner js-file-line">        idx <span class="pl-k">=</span> formatters.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L11003" class="blob-num js-line-number" data-line-number="11003"></td>
        <td id="LC11003" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11004" class="blob-num js-line-number" data-line-number="11004"></td>
        <td id="LC11004" class="blob-code blob-code-inner js-file-line">    ctrl.$modelValue <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L11005" class="blob-num js-line-number" data-line-number="11005"></td>
        <td id="LC11005" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">while</span>(idx<span class="pl-k">--</span>) {</td>
      </tr>
      <tr>
        <td id="L11006" class="blob-num js-line-number" data-line-number="11006"></td>
        <td id="LC11006" class="blob-code blob-code-inner js-file-line">      value <span class="pl-k">=</span> formatters[idx](value);</td>
      </tr>
      <tr>
        <td id="L11007" class="blob-num js-line-number" data-line-number="11007"></td>
        <td id="LC11007" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11008" class="blob-num js-line-number" data-line-number="11008"></td>
        <td id="LC11008" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11009" class="blob-num js-line-number" data-line-number="11009"></td>
        <td id="LC11009" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (ctrl.$viewValue <span class="pl-k">!==</span> value) {</td>
      </tr>
      <tr>
        <td id="L11010" class="blob-num js-line-number" data-line-number="11010"></td>
        <td id="LC11010" class="blob-code blob-code-inner js-file-line">      ctrl.$viewValue <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L11011" class="blob-num js-line-number" data-line-number="11011"></td>
        <td id="LC11011" class="blob-code blob-code-inner js-file-line">      ctrl.$render();</td>
      </tr>
      <tr>
        <td id="L11012" class="blob-num js-line-number" data-line-number="11012"></td>
        <td id="LC11012" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11013" class="blob-num js-line-number" data-line-number="11013"></td>
        <td id="LC11013" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L11014" class="blob-num js-line-number" data-line-number="11014"></td>
        <td id="LC11014" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11015" class="blob-num js-line-number" data-line-number="11015"></td>
        <td id="LC11015" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11016" class="blob-num js-line-number" data-line-number="11016"></td>
        <td id="LC11016" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11017" class="blob-num js-line-number" data-line-number="11017"></td>
        <td id="LC11017" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11018" class="blob-num js-line-number" data-line-number="11018"></td>
        <td id="LC11018" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11019" class="blob-num js-line-number" data-line-number="11019"></td>
        <td id="LC11019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngModel</span></td>
      </tr>
      <tr>
        <td id="L11020" class="blob-num js-line-number" data-line-number="11020"></td>
        <td id="LC11020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11021" class="blob-num js-line-number" data-line-number="11021"></td>
        <td id="LC11021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element input</span></td>
      </tr>
      <tr>
        <td id="L11022" class="blob-num js-line-number" data-line-number="11022"></td>
        <td id="LC11022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11023" class="blob-num js-line-number" data-line-number="11023"></td>
        <td id="LC11023" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11024" class="blob-num js-line-number" data-line-number="11024"></td>
        <td id="LC11024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Is directive that tells Angular to do two-way data binding. It works together with `input`,</span></td>
      </tr>
      <tr>
        <td id="L11025" class="blob-num js-line-number" data-line-number="11025"></td>
        <td id="LC11025" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `select`, `textarea`. You can easily write your own directives to use `ngModel` as well.</span></td>
      </tr>
      <tr>
        <td id="L11026" class="blob-num js-line-number" data-line-number="11026"></td>
        <td id="LC11026" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11027" class="blob-num js-line-number" data-line-number="11027"></td>
        <td id="LC11027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngModel` is responsible for:</span></td>
      </tr>
      <tr>
        <td id="L11028" class="blob-num js-line-number" data-line-number="11028"></td>
        <td id="LC11028" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11029" class="blob-num js-line-number" data-line-number="11029"></td>
        <td id="LC11029" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - binding the view into the model, which other directives such as `input`, `textarea` or `select`</span></td>
      </tr>
      <tr>
        <td id="L11030" class="blob-num js-line-number" data-line-number="11030"></td>
        <td id="LC11030" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   require,</span></td>
      </tr>
      <tr>
        <td id="L11031" class="blob-num js-line-number" data-line-number="11031"></td>
        <td id="LC11031" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - providing validation behavior (i.e. required, number, email, url),</span></td>
      </tr>
      <tr>
        <td id="L11032" class="blob-num js-line-number" data-line-number="11032"></td>
        <td id="LC11032" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - keeping state of the control (valid/invalid, dirty/pristine, validation errors),</span></td>
      </tr>
      <tr>
        <td id="L11033" class="blob-num js-line-number" data-line-number="11033"></td>
        <td id="LC11033" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - setting related css class onto the element (`ng-valid`, `ng-invalid`, `ng-dirty`, `ng-pristine`),</span></td>
      </tr>
      <tr>
        <td id="L11034" class="blob-num js-line-number" data-line-number="11034"></td>
        <td id="LC11034" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * - register the control with parent {@link angular.module.ng.$compileProvider.directive.form form}.</span></td>
      </tr>
      <tr>
        <td id="L11035" class="blob-num js-line-number" data-line-number="11035"></td>
        <td id="LC11035" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11036" class="blob-num js-line-number" data-line-number="11036"></td>
        <td id="LC11036" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For basic examples, how to use `ngModel`, see:</span></td>
      </tr>
      <tr>
        <td id="L11037" class="blob-num js-line-number" data-line-number="11037"></td>
        <td id="LC11037" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11038" class="blob-num js-line-number" data-line-number="11038"></td>
        <td id="LC11038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - {@link angular.module.ng.$compileProvider.directive.input input}</span></td>
      </tr>
      <tr>
        <td id="L11039" class="blob-num js-line-number" data-line-number="11039"></td>
        <td id="LC11039" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.text text}</span></td>
      </tr>
      <tr>
        <td id="L11040" class="blob-num js-line-number" data-line-number="11040"></td>
        <td id="LC11040" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.checkbox checkbox}</span></td>
      </tr>
      <tr>
        <td id="L11041" class="blob-num js-line-number" data-line-number="11041"></td>
        <td id="LC11041" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.radio radio}</span></td>
      </tr>
      <tr>
        <td id="L11042" class="blob-num js-line-number" data-line-number="11042"></td>
        <td id="LC11042" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.number number}</span></td>
      </tr>
      <tr>
        <td id="L11043" class="blob-num js-line-number" data-line-number="11043"></td>
        <td id="LC11043" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.email email}</span></td>
      </tr>
      <tr>
        <td id="L11044" class="blob-num js-line-number" data-line-number="11044"></td>
        <td id="LC11044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *    - {@link angular.module.ng.$compileProvider.directive.input.url url}</span></td>
      </tr>
      <tr>
        <td id="L11045" class="blob-num js-line-number" data-line-number="11045"></td>
        <td id="LC11045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - {@link angular.module.ng.$compileProvider.directive.select select}</span></td>
      </tr>
      <tr>
        <td id="L11046" class="blob-num js-line-number" data-line-number="11046"></td>
        <td id="LC11046" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  - {@link angular.module.ng.$compileProvider.directive.textarea textarea}</span></td>
      </tr>
      <tr>
        <td id="L11047" class="blob-num js-line-number" data-line-number="11047"></td>
        <td id="LC11047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11048" class="blob-num js-line-number" data-line-number="11048"></td>
        <td id="LC11048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11049" class="blob-num js-line-number" data-line-number="11049"></td>
        <td id="LC11049" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngModelDirective <span class="pl-k">=</span> [<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11050" class="blob-num js-line-number" data-line-number="11050"></td>
        <td id="LC11050" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11051" class="blob-num js-line-number" data-line-number="11051"></td>
        <td id="LC11051" class="blob-code blob-code-inner js-file-line">    inject<span class="pl-k">:</span> {</td>
      </tr>
      <tr>
        <td id="L11052" class="blob-num js-line-number" data-line-number="11052"></td>
        <td id="LC11052" class="blob-code blob-code-inner js-file-line">      ngModel<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>accessor<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L11053" class="blob-num js-line-number" data-line-number="11053"></td>
        <td id="LC11053" class="blob-code blob-code-inner js-file-line">    },</td>
      </tr>
      <tr>
        <td id="L11054" class="blob-num js-line-number" data-line-number="11054"></td>
        <td id="LC11054" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>ngModel<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>^?form<span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L11055" class="blob-num js-line-number" data-line-number="11055"></td>
        <td id="LC11055" class="blob-code blob-code-inner js-file-line">    controller<span class="pl-k">:</span> NgModelController,</td>
      </tr>
      <tr>
        <td id="L11056" class="blob-num js-line-number" data-line-number="11056"></td>
        <td id="LC11056" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrls</span>) {</td>
      </tr>
      <tr>
        <td id="L11057" class="blob-num js-line-number" data-line-number="11057"></td>
        <td id="LC11057" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// notify others, especially parent forms</span></td>
      </tr>
      <tr>
        <td id="L11058" class="blob-num js-line-number" data-line-number="11058"></td>
        <td id="LC11058" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11059" class="blob-num js-line-number" data-line-number="11059"></td>
        <td id="LC11059" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> modelCtrl <span class="pl-k">=</span> ctrls[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L11060" class="blob-num js-line-number" data-line-number="11060"></td>
        <td id="LC11060" class="blob-code blob-code-inner js-file-line">          formCtrl <span class="pl-k">=</span> ctrls[<span class="pl-c1">1</span>] <span class="pl-k">||</span> nullFormCtrl;</td>
      </tr>
      <tr>
        <td id="L11061" class="blob-num js-line-number" data-line-number="11061"></td>
        <td id="LC11061" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11062" class="blob-num js-line-number" data-line-number="11062"></td>
        <td id="LC11062" class="blob-code blob-code-inner js-file-line">      formCtrl.$addControl(modelCtrl);</td>
      </tr>
      <tr>
        <td id="L11063" class="blob-num js-line-number" data-line-number="11063"></td>
        <td id="LC11063" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11064" class="blob-num js-line-number" data-line-number="11064"></td>
        <td id="LC11064" class="blob-code blob-code-inner js-file-line">      element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11065" class="blob-num js-line-number" data-line-number="11065"></td>
        <td id="LC11065" class="blob-code blob-code-inner js-file-line">        formCtrl.$removeControl(modelCtrl);</td>
      </tr>
      <tr>
        <td id="L11066" class="blob-num js-line-number" data-line-number="11066"></td>
        <td id="LC11066" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L11067" class="blob-num js-line-number" data-line-number="11067"></td>
        <td id="LC11067" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11068" class="blob-num js-line-number" data-line-number="11068"></td>
        <td id="LC11068" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11069" class="blob-num js-line-number" data-line-number="11069"></td>
        <td id="LC11069" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11070" class="blob-num js-line-number" data-line-number="11070"></td>
        <td id="LC11070" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11071" class="blob-num js-line-number" data-line-number="11071"></td>
        <td id="LC11071" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11072" class="blob-num js-line-number" data-line-number="11072"></td>
        <td id="LC11072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11073" class="blob-num js-line-number" data-line-number="11073"></td>
        <td id="LC11073" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11074" class="blob-num js-line-number" data-line-number="11074"></td>
        <td id="LC11074" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngChange</span></td>
      </tr>
      <tr>
        <td id="L11075" class="blob-num js-line-number" data-line-number="11075"></td>
        <td id="LC11075" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict E</span></td>
      </tr>
      <tr>
        <td id="L11076" class="blob-num js-line-number" data-line-number="11076"></td>
        <td id="LC11076" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11077" class="blob-num js-line-number" data-line-number="11077"></td>
        <td id="LC11077" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11078" class="blob-num js-line-number" data-line-number="11078"></td>
        <td id="LC11078" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Evaluate given expression when user changes the input.</span></td>
      </tr>
      <tr>
        <td id="L11079" class="blob-num js-line-number" data-line-number="11079"></td>
        <td id="LC11079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The expression is not evaluated when the value change is coming from the model.</span></td>
      </tr>
      <tr>
        <td id="L11080" class="blob-num js-line-number" data-line-number="11080"></td>
        <td id="LC11080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11081" class="blob-num js-line-number" data-line-number="11081"></td>
        <td id="LC11081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note, this directive requires `ngModel` to be present.</span></td>
      </tr>
      <tr>
        <td id="L11082" class="blob-num js-line-number" data-line-number="11082"></td>
        <td id="LC11082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11083" class="blob-num js-line-number" data-line-number="11083"></td>
        <td id="LC11083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element input</span></td>
      </tr>
      <tr>
        <td id="L11084" class="blob-num js-line-number" data-line-number="11084"></td>
        <td id="LC11084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11085" class="blob-num js-line-number" data-line-number="11085"></td>
        <td id="LC11085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11086" class="blob-num js-line-number" data-line-number="11086"></td>
        <td id="LC11086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11087" class="blob-num js-line-number" data-line-number="11087"></td>
        <td id="LC11087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11088" class="blob-num js-line-number" data-line-number="11088"></td>
        <td id="LC11088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11089" class="blob-num js-line-number" data-line-number="11089"></td>
        <td id="LC11089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       function Controller($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11090" class="blob-num js-line-number" data-line-number="11090"></td>
        <td id="LC11090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         $scope.counter = 0;</span></td>
      </tr>
      <tr>
        <td id="L11091" class="blob-num js-line-number" data-line-number="11091"></td>
        <td id="LC11091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         $scope.change = function() {</span></td>
      </tr>
      <tr>
        <td id="L11092" class="blob-num js-line-number" data-line-number="11092"></td>
        <td id="LC11092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *           $scope.counter++;</span></td>
      </tr>
      <tr>
        <td id="L11093" class="blob-num js-line-number" data-line-number="11093"></td>
        <td id="LC11093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         };</span></td>
      </tr>
      <tr>
        <td id="L11094" class="blob-num js-line-number" data-line-number="11094"></td>
        <td id="LC11094" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       }</span></td>
      </tr>
      <tr>
        <td id="L11095" class="blob-num js-line-number" data-line-number="11095"></td>
        <td id="LC11095" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11096" class="blob-num js-line-number" data-line-number="11096"></td>
        <td id="LC11096" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     &lt;div ng-controller=&quot;Controller&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11097" class="blob-num js-line-number" data-line-number="11097"></td>
        <td id="LC11097" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       &lt;input type=&quot;checkbox&quot; ng-model=&quot;confirmed&quot; ng-change=&quot;change()&quot; id=&quot;ng-change-example1&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11098" class="blob-num js-line-number" data-line-number="11098"></td>
        <td id="LC11098" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       &lt;input type=&quot;checkbox&quot; ng-model=&quot;confirmed&quot; id=&quot;ng-change-example2&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11099" class="blob-num js-line-number" data-line-number="11099"></td>
        <td id="LC11099" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       &lt;label for=&quot;ng-change-example2&quot;&gt;Confirmed&lt;/label&gt;&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11100" class="blob-num js-line-number" data-line-number="11100"></td>
        <td id="LC11100" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       debug = {{confirmed}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11101" class="blob-num js-line-number" data-line-number="11101"></td>
        <td id="LC11101" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       counter = {{counter}}</span></td>
      </tr>
      <tr>
        <td id="L11102" class="blob-num js-line-number" data-line-number="11102"></td>
        <td id="LC11102" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11103" class="blob-num js-line-number" data-line-number="11103"></td>
        <td id="LC11103" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11104" class="blob-num js-line-number" data-line-number="11104"></td>
        <td id="LC11104" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11105" class="blob-num js-line-number" data-line-number="11105"></td>
        <td id="LC11105" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     it(&#39;should evaluate the expression if changing from view&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11106" class="blob-num js-line-number" data-line-number="11106"></td>
        <td id="LC11106" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(binding(&#39;counter&#39;)).toEqual(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11107" class="blob-num js-line-number" data-line-number="11107"></td>
        <td id="LC11107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       element(&#39;#ng-change-example1&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11108" class="blob-num js-line-number" data-line-number="11108"></td>
        <td id="LC11108" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(binding(&#39;counter&#39;)).toEqual(&#39;1&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11109" class="blob-num js-line-number" data-line-number="11109"></td>
        <td id="LC11109" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(binding(&#39;confirmed&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11110" class="blob-num js-line-number" data-line-number="11110"></td>
        <td id="LC11110" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L11111" class="blob-num js-line-number" data-line-number="11111"></td>
        <td id="LC11111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11112" class="blob-num js-line-number" data-line-number="11112"></td>
        <td id="LC11112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     it(&#39;should not evaluate the expression if changing from model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11113" class="blob-num js-line-number" data-line-number="11113"></td>
        <td id="LC11113" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       element(&#39;#ng-change-example2&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11114" class="blob-num js-line-number" data-line-number="11114"></td>
        <td id="LC11114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(binding(&#39;counter&#39;)).toEqual(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11115" class="blob-num js-line-number" data-line-number="11115"></td>
        <td id="LC11115" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *       expect(binding(&#39;confirmed&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11116" class="blob-num js-line-number" data-line-number="11116"></td>
        <td id="LC11116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     });</span></td>
      </tr>
      <tr>
        <td id="L11117" class="blob-num js-line-number" data-line-number="11117"></td>
        <td id="LC11117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11118" class="blob-num js-line-number" data-line-number="11118"></td>
        <td id="LC11118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11119" class="blob-num js-line-number" data-line-number="11119"></td>
        <td id="LC11119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11120" class="blob-num js-line-number" data-line-number="11120"></td>
        <td id="LC11120" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngChangeDirective <span class="pl-k">=</span> valueFn({</td>
      </tr>
      <tr>
        <td id="L11121" class="blob-num js-line-number" data-line-number="11121"></td>
        <td id="LC11121" class="blob-code blob-code-inner js-file-line">  require<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ngModel<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11122" class="blob-num js-line-number" data-line-number="11122"></td>
        <td id="LC11122" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L11123" class="blob-num js-line-number" data-line-number="11123"></td>
        <td id="LC11123" class="blob-code blob-code-inner js-file-line">    ctrl.$viewChangeListeners.<span class="pl-c1">push</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11124" class="blob-num js-line-number" data-line-number="11124"></td>
        <td id="LC11124" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">eval</span>(attr.ngChange);</td>
      </tr>
      <tr>
        <td id="L11125" class="blob-num js-line-number" data-line-number="11125"></td>
        <td id="LC11125" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L11126" class="blob-num js-line-number" data-line-number="11126"></td>
        <td id="LC11126" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L11127" class="blob-num js-line-number" data-line-number="11127"></td>
        <td id="LC11127" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L11128" class="blob-num js-line-number" data-line-number="11128"></td>
        <td id="LC11128" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11129" class="blob-num js-line-number" data-line-number="11129"></td>
        <td id="LC11129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11130" class="blob-num js-line-number" data-line-number="11130"></td>
        <td id="LC11130" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> requiredDirective <span class="pl-k">=</span> [<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11131" class="blob-num js-line-number" data-line-number="11131"></td>
        <td id="LC11131" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11132" class="blob-num js-line-number" data-line-number="11132"></td>
        <td id="LC11132" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?ngModel<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11133" class="blob-num js-line-number" data-line-number="11133"></td>
        <td id="LC11133" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">elm</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L11134" class="blob-num js-line-number" data-line-number="11134"></td>
        <td id="LC11134" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>ctrl) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L11135" class="blob-num js-line-number" data-line-number="11135"></td>
        <td id="LC11135" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11136" class="blob-num js-line-number" data-line-number="11136"></td>
        <td id="LC11136" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-en">validator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11137" class="blob-num js-line-number" data-line-number="11137"></td>
        <td id="LC11137" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (attr.required <span class="pl-k">&amp;&amp;</span> (isEmpty(value) <span class="pl-k">||</span> value <span class="pl-k">===</span> <span class="pl-c1">false</span>)) {</td>
      </tr>
      <tr>
        <td id="L11138" class="blob-num js-line-number" data-line-number="11138"></td>
        <td id="LC11138" class="blob-code blob-code-inner js-file-line">          ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>required<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L11139" class="blob-num js-line-number" data-line-number="11139"></td>
        <td id="LC11139" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L11140" class="blob-num js-line-number" data-line-number="11140"></td>
        <td id="LC11140" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L11141" class="blob-num js-line-number" data-line-number="11141"></td>
        <td id="LC11141" class="blob-code blob-code-inner js-file-line">          ctrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>required<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L11142" class="blob-num js-line-number" data-line-number="11142"></td>
        <td id="LC11142" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L11143" class="blob-num js-line-number" data-line-number="11143"></td>
        <td id="LC11143" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L11144" class="blob-num js-line-number" data-line-number="11144"></td>
        <td id="LC11144" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L11145" class="blob-num js-line-number" data-line-number="11145"></td>
        <td id="LC11145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11146" class="blob-num js-line-number" data-line-number="11146"></td>
        <td id="LC11146" class="blob-code blob-code-inner js-file-line">      ctrl.$formatters.<span class="pl-c1">push</span>(validator);</td>
      </tr>
      <tr>
        <td id="L11147" class="blob-num js-line-number" data-line-number="11147"></td>
        <td id="LC11147" class="blob-code blob-code-inner js-file-line">      ctrl.$parsers.<span class="pl-c1">unshift</span>(validator);</td>
      </tr>
      <tr>
        <td id="L11148" class="blob-num js-line-number" data-line-number="11148"></td>
        <td id="LC11148" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11149" class="blob-num js-line-number" data-line-number="11149"></td>
        <td id="LC11149" class="blob-code blob-code-inner js-file-line">      attr.$observe(<span class="pl-s"><span class="pl-pds">&#39;</span>required<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11150" class="blob-num js-line-number" data-line-number="11150"></td>
        <td id="LC11150" class="blob-code blob-code-inner js-file-line">        validator(ctrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L11151" class="blob-num js-line-number" data-line-number="11151"></td>
        <td id="LC11151" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L11152" class="blob-num js-line-number" data-line-number="11152"></td>
        <td id="LC11152" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11153" class="blob-num js-line-number" data-line-number="11153"></td>
        <td id="LC11153" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11154" class="blob-num js-line-number" data-line-number="11154"></td>
        <td id="LC11154" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11155" class="blob-num js-line-number" data-line-number="11155"></td>
        <td id="LC11155" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11156" class="blob-num js-line-number" data-line-number="11156"></td>
        <td id="LC11156" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11157" class="blob-num js-line-number" data-line-number="11157"></td>
        <td id="LC11157" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11158" class="blob-num js-line-number" data-line-number="11158"></td>
        <td id="LC11158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11159" class="blob-num js-line-number" data-line-number="11159"></td>
        <td id="LC11159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngList</span></td>
      </tr>
      <tr>
        <td id="L11160" class="blob-num js-line-number" data-line-number="11160"></td>
        <td id="LC11160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11161" class="blob-num js-line-number" data-line-number="11161"></td>
        <td id="LC11161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11162" class="blob-num js-line-number" data-line-number="11162"></td>
        <td id="LC11162" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Text input that converts between comma-seperated string into an array of strings.</span></td>
      </tr>
      <tr>
        <td id="L11163" class="blob-num js-line-number" data-line-number="11163"></td>
        <td id="LC11163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11164" class="blob-num js-line-number" data-line-number="11164"></td>
        <td id="LC11164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element input</span></td>
      </tr>
      <tr>
        <td id="L11165" class="blob-num js-line-number" data-line-number="11165"></td>
        <td id="LC11165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} ngList optional delimiter that should be used to split the value. If</span></td>
      </tr>
      <tr>
        <td id="L11166" class="blob-num js-line-number" data-line-number="11166"></td>
        <td id="LC11166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   specified in form `/something/` then the value will be converted into a regular expression.</span></td>
      </tr>
      <tr>
        <td id="L11167" class="blob-num js-line-number" data-line-number="11167"></td>
        <td id="LC11167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11168" class="blob-num js-line-number" data-line-number="11168"></td>
        <td id="LC11168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11169" class="blob-num js-line-number" data-line-number="11169"></td>
        <td id="LC11169" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11170" class="blob-num js-line-number" data-line-number="11170"></td>
        <td id="LC11170" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11171" class="blob-num js-line-number" data-line-number="11171"></td>
        <td id="LC11171" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11172" class="blob-num js-line-number" data-line-number="11172"></td>
        <td id="LC11172" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11173" class="blob-num js-line-number" data-line-number="11173"></td>
        <td id="LC11173" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.names = [&#39;igor&#39;, &#39;misko&#39;, &#39;vojta&#39;];</span></td>
      </tr>
      <tr>
        <td id="L11174" class="blob-num js-line-number" data-line-number="11174"></td>
        <td id="LC11174" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L11175" class="blob-num js-line-number" data-line-number="11175"></td>
        <td id="LC11175" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11176" class="blob-num js-line-number" data-line-number="11176"></td>
        <td id="LC11176" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;form name=&quot;myForm&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11177" class="blob-num js-line-number" data-line-number="11177"></td>
        <td id="LC11177" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         List: &lt;input name=&quot;namesInput&quot; ng-model=&quot;names&quot; ng-list required&gt;</span></td>
      </tr>
      <tr>
        <td id="L11178" class="blob-num js-line-number" data-line-number="11178"></td>
        <td id="LC11178" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;span class=&quot;error&quot; ng-show=&quot;myForm.list.$error.required&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11179" class="blob-num js-line-number" data-line-number="11179"></td>
        <td id="LC11179" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           Required!&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L11180" class="blob-num js-line-number" data-line-number="11180"></td>
        <td id="LC11180" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;names = {{names}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11181" class="blob-num js-line-number" data-line-number="11181"></td>
        <td id="LC11181" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.namesInput.$valid = {{myForm.namesInput.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11182" class="blob-num js-line-number" data-line-number="11182"></td>
        <td id="LC11182" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.namesInput.$error = {{myForm.namesInput.$error}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11183" class="blob-num js-line-number" data-line-number="11183"></td>
        <td id="LC11183" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$valid = {{myForm.$valid}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11184" class="blob-num js-line-number" data-line-number="11184"></td>
        <td id="LC11184" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;tt&gt;myForm.$error.required = {{!!myForm.$error.required}}&lt;/tt&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11185" class="blob-num js-line-number" data-line-number="11185"></td>
        <td id="LC11185" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L11186" class="blob-num js-line-number" data-line-number="11186"></td>
        <td id="LC11186" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11187" class="blob-num js-line-number" data-line-number="11187"></td>
        <td id="LC11187" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11188" class="blob-num js-line-number" data-line-number="11188"></td>
        <td id="LC11188" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should initialize to model&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11189" class="blob-num js-line-number" data-line-number="11189"></td>
        <td id="LC11189" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;names&#39;)).toEqual(&#39;[&quot;igor&quot;,&quot;misko&quot;,&quot;vojta&quot;]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11190" class="blob-num js-line-number" data-line-number="11190"></td>
        <td id="LC11190" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.namesInput.$valid&#39;)).toEqual(&#39;true&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11191" class="blob-num js-line-number" data-line-number="11191"></td>
        <td id="LC11191" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L11192" class="blob-num js-line-number" data-line-number="11192"></td>
        <td id="LC11192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11193" class="blob-num js-line-number" data-line-number="11193"></td>
        <td id="LC11193" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should be invalid if empty&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11194" class="blob-num js-line-number" data-line-number="11194"></td>
        <td id="LC11194" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;names&#39;).enter(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11195" class="blob-num js-line-number" data-line-number="11195"></td>
        <td id="LC11195" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;names&#39;)).toEqual(&#39;[]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11196" class="blob-num js-line-number" data-line-number="11196"></td>
        <td id="LC11196" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;myForm.namesInput.$valid&#39;)).toEqual(&#39;false&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11197" class="blob-num js-line-number" data-line-number="11197"></td>
        <td id="LC11197" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L11198" class="blob-num js-line-number" data-line-number="11198"></td>
        <td id="LC11198" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11199" class="blob-num js-line-number" data-line-number="11199"></td>
        <td id="LC11199" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11200" class="blob-num js-line-number" data-line-number="11200"></td>
        <td id="LC11200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11201" class="blob-num js-line-number" data-line-number="11201"></td>
        <td id="LC11201" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">ngListDirective</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11202" class="blob-num js-line-number" data-line-number="11202"></td>
        <td id="LC11202" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11203" class="blob-num js-line-number" data-line-number="11203"></td>
        <td id="LC11203" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ngModel<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11204" class="blob-num js-line-number" data-line-number="11204"></td>
        <td id="LC11204" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L11205" class="blob-num js-line-number" data-line-number="11205"></td>
        <td id="LC11205" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-cce">\/</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-cce">\/</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(attr.ngList),</td>
      </tr>
      <tr>
        <td id="L11206" class="blob-num js-line-number" data-line-number="11206"></td>
        <td id="LC11206" class="blob-code blob-code-inner js-file-line">          separator <span class="pl-k">=</span> match <span class="pl-k">&amp;&amp;</span> <span class="pl-k">new</span> <span class="pl-en">RegExp</span>(match[<span class="pl-c1">1</span>]) <span class="pl-k">||</span> attr.ngList <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span>,<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L11207" class="blob-num js-line-number" data-line-number="11207"></td>
        <td id="LC11207" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11208" class="blob-num js-line-number" data-line-number="11208"></td>
        <td id="LC11208" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> <span class="pl-en">parse</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">viewValue</span>) {</td>
      </tr>
      <tr>
        <td id="L11209" class="blob-num js-line-number" data-line-number="11209"></td>
        <td id="LC11209" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> list <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L11210" class="blob-num js-line-number" data-line-number="11210"></td>
        <td id="LC11210" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11211" class="blob-num js-line-number" data-line-number="11211"></td>
        <td id="LC11211" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (viewValue) {</td>
      </tr>
      <tr>
        <td id="L11212" class="blob-num js-line-number" data-line-number="11212"></td>
        <td id="LC11212" class="blob-code blob-code-inner js-file-line">          forEach(viewValue.<span class="pl-c1">split</span>(separator), <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11213" class="blob-num js-line-number" data-line-number="11213"></td>
        <td id="LC11213" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (value) list.<span class="pl-c1">push</span>(trim(value));</td>
      </tr>
      <tr>
        <td id="L11214" class="blob-num js-line-number" data-line-number="11214"></td>
        <td id="LC11214" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L11215" class="blob-num js-line-number" data-line-number="11215"></td>
        <td id="LC11215" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L11216" class="blob-num js-line-number" data-line-number="11216"></td>
        <td id="LC11216" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11217" class="blob-num js-line-number" data-line-number="11217"></td>
        <td id="LC11217" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> list;</td>
      </tr>
      <tr>
        <td id="L11218" class="blob-num js-line-number" data-line-number="11218"></td>
        <td id="LC11218" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L11219" class="blob-num js-line-number" data-line-number="11219"></td>
        <td id="LC11219" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11220" class="blob-num js-line-number" data-line-number="11220"></td>
        <td id="LC11220" class="blob-code blob-code-inner js-file-line">      ctrl.$parsers.<span class="pl-c1">push</span>(parse);</td>
      </tr>
      <tr>
        <td id="L11221" class="blob-num js-line-number" data-line-number="11221"></td>
        <td id="LC11221" class="blob-code blob-code-inner js-file-line">      ctrl.$formatters.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11222" class="blob-num js-line-number" data-line-number="11222"></td>
        <td id="LC11222" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (isArray(value) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>equals(<span class="pl-c1">parse</span>(ctrl.$viewValue), value)) {</td>
      </tr>
      <tr>
        <td id="L11223" class="blob-num js-line-number" data-line-number="11223"></td>
        <td id="LC11223" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> value.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>, <span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L11224" class="blob-num js-line-number" data-line-number="11224"></td>
        <td id="LC11224" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L11225" class="blob-num js-line-number" data-line-number="11225"></td>
        <td id="LC11225" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11226" class="blob-num js-line-number" data-line-number="11226"></td>
        <td id="LC11226" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L11227" class="blob-num js-line-number" data-line-number="11227"></td>
        <td id="LC11227" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L11228" class="blob-num js-line-number" data-line-number="11228"></td>
        <td id="LC11228" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11229" class="blob-num js-line-number" data-line-number="11229"></td>
        <td id="LC11229" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11230" class="blob-num js-line-number" data-line-number="11230"></td>
        <td id="LC11230" class="blob-code blob-code-inner js-file-line">};</td>
      </tr>
      <tr>
        <td id="L11231" class="blob-num js-line-number" data-line-number="11231"></td>
        <td id="LC11231" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11232" class="blob-num js-line-number" data-line-number="11232"></td>
        <td id="LC11232" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11233" class="blob-num js-line-number" data-line-number="11233"></td>
        <td id="LC11233" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">CONSTANT_VALUE_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span>(true<span class="pl-k">|</span>false<span class="pl-k">|</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>;</td>
      </tr>
      <tr>
        <td id="L11234" class="blob-num js-line-number" data-line-number="11234"></td>
        <td id="LC11234" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11235" class="blob-num js-line-number" data-line-number="11235"></td>
        <td id="LC11235" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngValueDirective <span class="pl-k">=</span> [<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11236" class="blob-num js-line-number" data-line-number="11236"></td>
        <td id="LC11236" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11237" class="blob-num js-line-number" data-line-number="11237"></td>
        <td id="LC11237" class="blob-code blob-code-inner js-file-line">    priority<span class="pl-k">:</span> <span class="pl-c1">100</span>,</td>
      </tr>
      <tr>
        <td id="L11238" class="blob-num js-line-number" data-line-number="11238"></td>
        <td id="LC11238" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">tpl</span>, <span class="pl-smi">tplAttr</span>) {</td>
      </tr>
      <tr>
        <td id="L11239" class="blob-num js-line-number" data-line-number="11239"></td>
        <td id="LC11239" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-c1">CONSTANT_VALUE_REGEXP</span>.<span class="pl-c1">test</span>(tplAttr.ngValue)) {</td>
      </tr>
      <tr>
        <td id="L11240" class="blob-num js-line-number" data-line-number="11240"></td>
        <td id="LC11240" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">elm</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11241" class="blob-num js-line-number" data-line-number="11241"></td>
        <td id="LC11241" class="blob-code blob-code-inner js-file-line">          attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>, scope.$<span class="pl-c1">eval</span>(attr.ngValue));</td>
      </tr>
      <tr>
        <td id="L11242" class="blob-num js-line-number" data-line-number="11242"></td>
        <td id="LC11242" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L11243" class="blob-num js-line-number" data-line-number="11243"></td>
        <td id="LC11243" class="blob-code blob-code-inner js-file-line">      } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L11244" class="blob-num js-line-number" data-line-number="11244"></td>
        <td id="LC11244" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">elm</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11245" class="blob-num js-line-number" data-line-number="11245"></td>
        <td id="LC11245" class="blob-code blob-code-inner js-file-line">          attr.$$observers.<span class="pl-c1">value</span> <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L11246" class="blob-num js-line-number" data-line-number="11246"></td>
        <td id="LC11246" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">watch</span>(attr.ngValue, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11247" class="blob-num js-line-number" data-line-number="11247"></td>
        <td id="LC11247" class="blob-code blob-code-inner js-file-line">            attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>, value, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L11248" class="blob-num js-line-number" data-line-number="11248"></td>
        <td id="LC11248" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L11249" class="blob-num js-line-number" data-line-number="11249"></td>
        <td id="LC11249" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L11250" class="blob-num js-line-number" data-line-number="11250"></td>
        <td id="LC11250" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L11251" class="blob-num js-line-number" data-line-number="11251"></td>
        <td id="LC11251" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L11252" class="blob-num js-line-number" data-line-number="11252"></td>
        <td id="LC11252" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11253" class="blob-num js-line-number" data-line-number="11253"></td>
        <td id="LC11253" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11254" class="blob-num js-line-number" data-line-number="11254"></td>
        <td id="LC11254" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11255" class="blob-num js-line-number" data-line-number="11255"></td>
        <td id="LC11255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11256" class="blob-num js-line-number" data-line-number="11256"></td>
        <td id="LC11256" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11257" class="blob-num js-line-number" data-line-number="11257"></td>
        <td id="LC11257" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngBind</span></td>
      </tr>
      <tr>
        <td id="L11258" class="blob-num js-line-number" data-line-number="11258"></td>
        <td id="LC11258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11259" class="blob-num js-line-number" data-line-number="11259"></td>
        <td id="LC11259" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11260" class="blob-num js-line-number" data-line-number="11260"></td>
        <td id="LC11260" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngBind` attribute tells Angular to replace the text content of the specified HTML element</span></td>
      </tr>
      <tr>
        <td id="L11261" class="blob-num js-line-number" data-line-number="11261"></td>
        <td id="LC11261" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * with the value of a given expression, and to update the text content when the value of that</span></td>
      </tr>
      <tr>
        <td id="L11262" class="blob-num js-line-number" data-line-number="11262"></td>
        <td id="LC11262" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * expression changes.</span></td>
      </tr>
      <tr>
        <td id="L11263" class="blob-num js-line-number" data-line-number="11263"></td>
        <td id="LC11263" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11264" class="blob-num js-line-number" data-line-number="11264"></td>
        <td id="LC11264" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Typically, you don&#39;t use `ngBind` directly, but instead you use the double curly markup like</span></td>
      </tr>
      <tr>
        <td id="L11265" class="blob-num js-line-number" data-line-number="11265"></td>
        <td id="LC11265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `{{ expression }}` which is similar but less verbose.</span></td>
      </tr>
      <tr>
        <td id="L11266" class="blob-num js-line-number" data-line-number="11266"></td>
        <td id="LC11266" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11267" class="blob-num js-line-number" data-line-number="11267"></td>
        <td id="LC11267" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Once scenario in which the use of `ngBind` is prefered over `{{ expression }}` binding is when</span></td>
      </tr>
      <tr>
        <td id="L11268" class="blob-num js-line-number" data-line-number="11268"></td>
        <td id="LC11268" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * it&#39;s desirable to put bindings into template that is momentarily displayed by the browser in its</span></td>
      </tr>
      <tr>
        <td id="L11269" class="blob-num js-line-number" data-line-number="11269"></td>
        <td id="LC11269" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * raw state before Angular compiles it. Since `ngBind` is an element attribute, it makes the</span></td>
      </tr>
      <tr>
        <td id="L11270" class="blob-num js-line-number" data-line-number="11270"></td>
        <td id="LC11270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * bindings invisible to the user while the page is loading.</span></td>
      </tr>
      <tr>
        <td id="L11271" class="blob-num js-line-number" data-line-number="11271"></td>
        <td id="LC11271" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11272" class="blob-num js-line-number" data-line-number="11272"></td>
        <td id="LC11272" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * An alternative solution to this problem would be using the</span></td>
      </tr>
      <tr>
        <td id="L11273" class="blob-num js-line-number" data-line-number="11273"></td>
        <td id="LC11273" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngCloak ngCloak} directive.</span></td>
      </tr>
      <tr>
        <td id="L11274" class="blob-num js-line-number" data-line-number="11274"></td>
        <td id="LC11274" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11275" class="blob-num js-line-number" data-line-number="11275"></td>
        <td id="LC11275" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11276" class="blob-num js-line-number" data-line-number="11276"></td>
        <td id="LC11276" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11277" class="blob-num js-line-number" data-line-number="11277"></td>
        <td id="LC11277" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngBind {@link guide/dev_guide.expressions Expression} to evaluate.</span></td>
      </tr>
      <tr>
        <td id="L11278" class="blob-num js-line-number" data-line-number="11278"></td>
        <td id="LC11278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11279" class="blob-num js-line-number" data-line-number="11279"></td>
        <td id="LC11279" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11280" class="blob-num js-line-number" data-line-number="11280"></td>
        <td id="LC11280" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Enter a name in the Live Preview text box; the greeting below the text box changes instantly.</span></td>
      </tr>
      <tr>
        <td id="L11281" class="blob-num js-line-number" data-line-number="11281"></td>
        <td id="LC11281" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11282" class="blob-num js-line-number" data-line-number="11282"></td>
        <td id="LC11282" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11283" class="blob-num js-line-number" data-line-number="11283"></td>
        <td id="LC11283" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11284" class="blob-num js-line-number" data-line-number="11284"></td>
        <td id="LC11284" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11285" class="blob-num js-line-number" data-line-number="11285"></td>
        <td id="LC11285" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.name = &#39;Whirled&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11286" class="blob-num js-line-number" data-line-number="11286"></td>
        <td id="LC11286" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L11287" class="blob-num js-line-number" data-line-number="11287"></td>
        <td id="LC11287" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11288" class="blob-num js-line-number" data-line-number="11288"></td>
        <td id="LC11288" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11289" class="blob-num js-line-number" data-line-number="11289"></td>
        <td id="LC11289" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Enter name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L11290" class="blob-num js-line-number" data-line-number="11290"></td>
        <td id="LC11290" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         Hello &lt;span ng-bind=&quot;name&quot;&gt;&lt;/span&gt;!</span></td>
      </tr>
      <tr>
        <td id="L11291" class="blob-num js-line-number" data-line-number="11291"></td>
        <td id="LC11291" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11292" class="blob-num js-line-number" data-line-number="11292"></td>
        <td id="LC11292" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11293" class="blob-num js-line-number" data-line-number="11293"></td>
        <td id="LC11293" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11294" class="blob-num js-line-number" data-line-number="11294"></td>
        <td id="LC11294" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-bind&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11295" class="blob-num js-line-number" data-line-number="11295"></td>
        <td id="LC11295" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).toBe(&#39;Whirled&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11296" class="blob-num js-line-number" data-line-number="11296"></td>
        <td id="LC11296" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         using(&#39;.doc-example-live&#39;).input(&#39;name&#39;).enter(&#39;world&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11297" class="blob-num js-line-number" data-line-number="11297"></td>
        <td id="LC11297" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).toBe(&#39;world&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11298" class="blob-num js-line-number" data-line-number="11298"></td>
        <td id="LC11298" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11299" class="blob-num js-line-number" data-line-number="11299"></td>
        <td id="LC11299" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11300" class="blob-num js-line-number" data-line-number="11300"></td>
        <td id="LC11300" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11301" class="blob-num js-line-number" data-line-number="11301"></td>
        <td id="LC11301" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11302" class="blob-num js-line-number" data-line-number="11302"></td>
        <td id="LC11302" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngBindDirective <span class="pl-k">=</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11303" class="blob-num js-line-number" data-line-number="11303"></td>
        <td id="LC11303" class="blob-code blob-code-inner js-file-line">  element.addClass(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-binding<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$binding<span class="pl-pds">&#39;</span></span>, attr.ngBind);</td>
      </tr>
      <tr>
        <td id="L11304" class="blob-num js-line-number" data-line-number="11304"></td>
        <td id="LC11304" class="blob-code blob-code-inner js-file-line">  scope.$<span class="pl-c1">watch</span>(attr.ngBind, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11305" class="blob-num js-line-number" data-line-number="11305"></td>
        <td id="LC11305" class="blob-code blob-code-inner js-file-line">    element.<span class="pl-c1">text</span>(value <span class="pl-k">==</span> <span class="pl-c1">undefined</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> value);</td>
      </tr>
      <tr>
        <td id="L11306" class="blob-num js-line-number" data-line-number="11306"></td>
        <td id="LC11306" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L11307" class="blob-num js-line-number" data-line-number="11307"></td>
        <td id="LC11307" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L11308" class="blob-num js-line-number" data-line-number="11308"></td>
        <td id="LC11308" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11309" class="blob-num js-line-number" data-line-number="11309"></td>
        <td id="LC11309" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11310" class="blob-num js-line-number" data-line-number="11310"></td>
        <td id="LC11310" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11311" class="blob-num js-line-number" data-line-number="11311"></td>
        <td id="LC11311" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11312" class="blob-num js-line-number" data-line-number="11312"></td>
        <td id="LC11312" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngBindTemplate</span></td>
      </tr>
      <tr>
        <td id="L11313" class="blob-num js-line-number" data-line-number="11313"></td>
        <td id="LC11313" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11314" class="blob-num js-line-number" data-line-number="11314"></td>
        <td id="LC11314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11315" class="blob-num js-line-number" data-line-number="11315"></td>
        <td id="LC11315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngBindTemplate` directive specifies that the element</span></td>
      </tr>
      <tr>
        <td id="L11316" class="blob-num js-line-number" data-line-number="11316"></td>
        <td id="LC11316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * text should be replaced with the template in ngBindTemplate.</span></td>
      </tr>
      <tr>
        <td id="L11317" class="blob-num js-line-number" data-line-number="11317"></td>
        <td id="LC11317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Unlike ngBind the ngBindTemplate can contain multiple `{{` `}}`</span></td>
      </tr>
      <tr>
        <td id="L11318" class="blob-num js-line-number" data-line-number="11318"></td>
        <td id="LC11318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * expressions. (This is required since some HTML elements</span></td>
      </tr>
      <tr>
        <td id="L11319" class="blob-num js-line-number" data-line-number="11319"></td>
        <td id="LC11319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * can not have SPAN elements such as TITLE, or OPTION to name a few.)</span></td>
      </tr>
      <tr>
        <td id="L11320" class="blob-num js-line-number" data-line-number="11320"></td>
        <td id="LC11320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11321" class="blob-num js-line-number" data-line-number="11321"></td>
        <td id="LC11321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11322" class="blob-num js-line-number" data-line-number="11322"></td>
        <td id="LC11322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} ngBindTemplate template of form</span></td>
      </tr>
      <tr>
        <td id="L11323" class="blob-num js-line-number" data-line-number="11323"></td>
        <td id="LC11323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;tt&gt;{{&lt;/tt&gt; &lt;tt&gt;expression&lt;/tt&gt; &lt;tt&gt;}}&lt;/tt&gt; to eval.</span></td>
      </tr>
      <tr>
        <td id="L11324" class="blob-num js-line-number" data-line-number="11324"></td>
        <td id="LC11324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11325" class="blob-num js-line-number" data-line-number="11325"></td>
        <td id="LC11325" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11326" class="blob-num js-line-number" data-line-number="11326"></td>
        <td id="LC11326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Try it here: enter text in text box and watch the greeting change.</span></td>
      </tr>
      <tr>
        <td id="L11327" class="blob-num js-line-number" data-line-number="11327"></td>
        <td id="LC11327" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11328" class="blob-num js-line-number" data-line-number="11328"></td>
        <td id="LC11328" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11329" class="blob-num js-line-number" data-line-number="11329"></td>
        <td id="LC11329" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11330" class="blob-num js-line-number" data-line-number="11330"></td>
        <td id="LC11330" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11331" class="blob-num js-line-number" data-line-number="11331"></td>
        <td id="LC11331" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.salutation = &#39;Hello&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11332" class="blob-num js-line-number" data-line-number="11332"></td>
        <td id="LC11332" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.name = &#39;World&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11333" class="blob-num js-line-number" data-line-number="11333"></td>
        <td id="LC11333" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L11334" class="blob-num js-line-number" data-line-number="11334"></td>
        <td id="LC11334" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11335" class="blob-num js-line-number" data-line-number="11335"></td>
        <td id="LC11335" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11336" class="blob-num js-line-number" data-line-number="11336"></td>
        <td id="LC11336" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Salutation: &lt;input type=&quot;text&quot; ng-model=&quot;salutation&quot;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L11337" class="blob-num js-line-number" data-line-number="11337"></td>
        <td id="LC11337" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L11338" class="blob-num js-line-number" data-line-number="11338"></td>
        <td id="LC11338" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;pre ng-bind-template=&quot;{{salutation}} {{name}}!&quot;&gt;&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L11339" class="blob-num js-line-number" data-line-number="11339"></td>
        <td id="LC11339" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11340" class="blob-num js-line-number" data-line-number="11340"></td>
        <td id="LC11340" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11341" class="blob-num js-line-number" data-line-number="11341"></td>
        <td id="LC11341" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11342" class="blob-num js-line-number" data-line-number="11342"></td>
        <td id="LC11342" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-bind&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11343" class="blob-num js-line-number" data-line-number="11343"></td>
        <td id="LC11343" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;salutation&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11344" class="blob-num js-line-number" data-line-number="11344"></td>
        <td id="LC11344" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;Hello&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11345" class="blob-num js-line-number" data-line-number="11345"></td>
        <td id="LC11345" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11346" class="blob-num js-line-number" data-line-number="11346"></td>
        <td id="LC11346" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;World&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11347" class="blob-num js-line-number" data-line-number="11347"></td>
        <td id="LC11347" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         using(&#39;.doc-example-live&#39;).input(&#39;salutation&#39;).enter(&#39;Greetings&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11348" class="blob-num js-line-number" data-line-number="11348"></td>
        <td id="LC11348" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         using(&#39;.doc-example-live&#39;).input(&#39;name&#39;).enter(&#39;user&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11349" class="blob-num js-line-number" data-line-number="11349"></td>
        <td id="LC11349" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;salutation&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11350" class="blob-num js-line-number" data-line-number="11350"></td>
        <td id="LC11350" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;Greetings&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11351" class="blob-num js-line-number" data-line-number="11351"></td>
        <td id="LC11351" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;name&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11352" class="blob-num js-line-number" data-line-number="11352"></td>
        <td id="LC11352" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;user&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11353" class="blob-num js-line-number" data-line-number="11353"></td>
        <td id="LC11353" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11354" class="blob-num js-line-number" data-line-number="11354"></td>
        <td id="LC11354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11355" class="blob-num js-line-number" data-line-number="11355"></td>
        <td id="LC11355" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11356" class="blob-num js-line-number" data-line-number="11356"></td>
        <td id="LC11356" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11357" class="blob-num js-line-number" data-line-number="11357"></td>
        <td id="LC11357" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngBindTemplateDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$interpolate<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L11358" class="blob-num js-line-number" data-line-number="11358"></td>
        <td id="LC11358" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11359" class="blob-num js-line-number" data-line-number="11359"></td>
        <td id="LC11359" class="blob-code blob-code-inner js-file-line">    <span class="pl-c">// TODO: move this to scenario runner</span></td>
      </tr>
      <tr>
        <td id="L11360" class="blob-num js-line-number" data-line-number="11360"></td>
        <td id="LC11360" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> interpolateFn <span class="pl-k">=</span> $interpolate(element.attr(attr.$attr.ngBindTemplate));</td>
      </tr>
      <tr>
        <td id="L11361" class="blob-num js-line-number" data-line-number="11361"></td>
        <td id="LC11361" class="blob-code blob-code-inner js-file-line">    element.addClass(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-binding<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$binding<span class="pl-pds">&#39;</span></span>, interpolateFn);</td>
      </tr>
      <tr>
        <td id="L11362" class="blob-num js-line-number" data-line-number="11362"></td>
        <td id="LC11362" class="blob-code blob-code-inner js-file-line">    attr.$observe(<span class="pl-s"><span class="pl-pds">&#39;</span>ngBindTemplate<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11363" class="blob-num js-line-number" data-line-number="11363"></td>
        <td id="LC11363" class="blob-code blob-code-inner js-file-line">      element.<span class="pl-c1">text</span>(value);</td>
      </tr>
      <tr>
        <td id="L11364" class="blob-num js-line-number" data-line-number="11364"></td>
        <td id="LC11364" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L11365" class="blob-num js-line-number" data-line-number="11365"></td>
        <td id="LC11365" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L11366" class="blob-num js-line-number" data-line-number="11366"></td>
        <td id="LC11366" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11367" class="blob-num js-line-number" data-line-number="11367"></td>
        <td id="LC11367" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11368" class="blob-num js-line-number" data-line-number="11368"></td>
        <td id="LC11368" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11369" class="blob-num js-line-number" data-line-number="11369"></td>
        <td id="LC11369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11370" class="blob-num js-line-number" data-line-number="11370"></td>
        <td id="LC11370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11371" class="blob-num js-line-number" data-line-number="11371"></td>
        <td id="LC11371" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngBindHtmlUnsafe</span></td>
      </tr>
      <tr>
        <td id="L11372" class="blob-num js-line-number" data-line-number="11372"></td>
        <td id="LC11372" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11373" class="blob-num js-line-number" data-line-number="11373"></td>
        <td id="LC11373" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11374" class="blob-num js-line-number" data-line-number="11374"></td>
        <td id="LC11374" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Creates a binding that will innerHTML the result of evaluating the `expression` into the current</span></td>
      </tr>
      <tr>
        <td id="L11375" class="blob-num js-line-number" data-line-number="11375"></td>
        <td id="LC11375" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * element. *The innerHTML-ed content will not be sanitized!* You should use this directive only if</span></td>
      </tr>
      <tr>
        <td id="L11376" class="blob-num js-line-number" data-line-number="11376"></td>
        <td id="LC11376" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngBindHtml ngBindHtml} directive is too</span></td>
      </tr>
      <tr>
        <td id="L11377" class="blob-num js-line-number" data-line-number="11377"></td>
        <td id="LC11377" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * restrictive and when you absolutely trust the source of the content you are binding to.</span></td>
      </tr>
      <tr>
        <td id="L11378" class="blob-num js-line-number" data-line-number="11378"></td>
        <td id="LC11378" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11379" class="blob-num js-line-number" data-line-number="11379"></td>
        <td id="LC11379" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ngSanitize.$sanitize $sanitize} docs for examples.</span></td>
      </tr>
      <tr>
        <td id="L11380" class="blob-num js-line-number" data-line-number="11380"></td>
        <td id="LC11380" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11381" class="blob-num js-line-number" data-line-number="11381"></td>
        <td id="LC11381" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11382" class="blob-num js-line-number" data-line-number="11382"></td>
        <td id="LC11382" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngBindHtmlUnsafe {@link guide/dev_guide.expressions Expression} to evaluate.</span></td>
      </tr>
      <tr>
        <td id="L11383" class="blob-num js-line-number" data-line-number="11383"></td>
        <td id="LC11383" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11384" class="blob-num js-line-number" data-line-number="11384"></td>
        <td id="LC11384" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngBindHtmlUnsafeDirective <span class="pl-k">=</span> [<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11385" class="blob-num js-line-number" data-line-number="11385"></td>
        <td id="LC11385" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11386" class="blob-num js-line-number" data-line-number="11386"></td>
        <td id="LC11386" class="blob-code blob-code-inner js-file-line">    element.addClass(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-binding<span class="pl-pds">&#39;</span></span>).<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$binding<span class="pl-pds">&#39;</span></span>, attr.ngBindHtmlUnsafe);</td>
      </tr>
      <tr>
        <td id="L11387" class="blob-num js-line-number" data-line-number="11387"></td>
        <td id="LC11387" class="blob-code blob-code-inner js-file-line">    scope.$<span class="pl-c1">watch</span>(attr.ngBindHtmlUnsafe, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L11388" class="blob-num js-line-number" data-line-number="11388"></td>
        <td id="LC11388" class="blob-code blob-code-inner js-file-line">      element.html(value <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L11389" class="blob-num js-line-number" data-line-number="11389"></td>
        <td id="LC11389" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L11390" class="blob-num js-line-number" data-line-number="11390"></td>
        <td id="LC11390" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11391" class="blob-num js-line-number" data-line-number="11391"></td>
        <td id="LC11391" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11392" class="blob-num js-line-number" data-line-number="11392"></td>
        <td id="LC11392" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11393" class="blob-num js-line-number" data-line-number="11393"></td>
        <td id="LC11393" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">classDirective</span>(<span class="pl-smi">name</span>, <span class="pl-smi">selector</span>) {</td>
      </tr>
      <tr>
        <td id="L11394" class="blob-num js-line-number" data-line-number="11394"></td>
        <td id="LC11394" class="blob-code blob-code-inner js-file-line">  name <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ngClass<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name;</td>
      </tr>
      <tr>
        <td id="L11395" class="blob-num js-line-number" data-line-number="11395"></td>
        <td id="LC11395" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11396" class="blob-num js-line-number" data-line-number="11396"></td>
        <td id="LC11396" class="blob-code blob-code-inner js-file-line">    scope.$<span class="pl-c1">watch</span>(attr[name], <span class="pl-k">function</span>(<span class="pl-smi">newVal</span>, <span class="pl-smi">oldVal</span>) {</td>
      </tr>
      <tr>
        <td id="L11397" class="blob-num js-line-number" data-line-number="11397"></td>
        <td id="LC11397" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (selector <span class="pl-k">===</span> <span class="pl-c1">true</span> <span class="pl-k">||</span> scope.$index <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">===</span> selector) {</td>
      </tr>
      <tr>
        <td id="L11398" class="blob-num js-line-number" data-line-number="11398"></td>
        <td id="LC11398" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (oldVal <span class="pl-k">&amp;&amp;</span> (newVal <span class="pl-k">!==</span> oldVal)) {</td>
      </tr>
      <tr>
        <td id="L11399" class="blob-num js-line-number" data-line-number="11399"></td>
        <td id="LC11399" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">if</span> (isObject(oldVal) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isArray(oldVal))</td>
      </tr>
      <tr>
        <td id="L11400" class="blob-num js-line-number" data-line-number="11400"></td>
        <td id="LC11400" class="blob-code blob-code-inner js-file-line">             oldVal <span class="pl-k">=</span> map(oldVal, <span class="pl-k">function</span>(<span class="pl-smi">v</span>, <span class="pl-smi">k</span>) { <span class="pl-k">if</span> (v) <span class="pl-k">return</span> k });</td>
      </tr>
      <tr>
        <td id="L11401" class="blob-num js-line-number" data-line-number="11401"></td>
        <td id="LC11401" class="blob-code blob-code-inner js-file-line">           element.removeClass(isArray(oldVal) <span class="pl-k">?</span> oldVal.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> oldVal);</td>
      </tr>
      <tr>
        <td id="L11402" class="blob-num js-line-number" data-line-number="11402"></td>
        <td id="LC11402" class="blob-code blob-code-inner js-file-line">         }</td>
      </tr>
      <tr>
        <td id="L11403" class="blob-num js-line-number" data-line-number="11403"></td>
        <td id="LC11403" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (isObject(newVal) <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>isArray(newVal))</td>
      </tr>
      <tr>
        <td id="L11404" class="blob-num js-line-number" data-line-number="11404"></td>
        <td id="LC11404" class="blob-code blob-code-inner js-file-line">            newVal <span class="pl-k">=</span> map(newVal, <span class="pl-k">function</span>(<span class="pl-smi">v</span>, <span class="pl-smi">k</span>) { <span class="pl-k">if</span> (v) <span class="pl-k">return</span> k });</td>
      </tr>
      <tr>
        <td id="L11405" class="blob-num js-line-number" data-line-number="11405"></td>
        <td id="LC11405" class="blob-code blob-code-inner js-file-line">         <span class="pl-k">if</span> (newVal) element.addClass(isArray(newVal) <span class="pl-k">?</span> newVal.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>) <span class="pl-k">:</span> newVal);      }</td>
      </tr>
      <tr>
        <td id="L11406" class="blob-num js-line-number" data-line-number="11406"></td>
        <td id="LC11406" class="blob-code blob-code-inner js-file-line">    }, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L11407" class="blob-num js-line-number" data-line-number="11407"></td>
        <td id="LC11407" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L11408" class="blob-num js-line-number" data-line-number="11408"></td>
        <td id="LC11408" class="blob-code blob-code-inner js-file-line">}</td>
      </tr>
      <tr>
        <td id="L11409" class="blob-num js-line-number" data-line-number="11409"></td>
        <td id="LC11409" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11410" class="blob-num js-line-number" data-line-number="11410"></td>
        <td id="LC11410" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11411" class="blob-num js-line-number" data-line-number="11411"></td>
        <td id="LC11411" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11412" class="blob-num js-line-number" data-line-number="11412"></td>
        <td id="LC11412" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngClass</span></td>
      </tr>
      <tr>
        <td id="L11413" class="blob-num js-line-number" data-line-number="11413"></td>
        <td id="LC11413" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11414" class="blob-num js-line-number" data-line-number="11414"></td>
        <td id="LC11414" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11415" class="blob-num js-line-number" data-line-number="11415"></td>
        <td id="LC11415" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngClass` allows you to set CSS class on HTML element dynamically by databinding an</span></td>
      </tr>
      <tr>
        <td id="L11416" class="blob-num js-line-number" data-line-number="11416"></td>
        <td id="LC11416" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * expression that represents all classes to be added.</span></td>
      </tr>
      <tr>
        <td id="L11417" class="blob-num js-line-number" data-line-number="11417"></td>
        <td id="LC11417" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11418" class="blob-num js-line-number" data-line-number="11418"></td>
        <td id="LC11418" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The directive won&#39;t add duplicate classes if a particular class was already set.</span></td>
      </tr>
      <tr>
        <td id="L11419" class="blob-num js-line-number" data-line-number="11419"></td>
        <td id="LC11419" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11420" class="blob-num js-line-number" data-line-number="11420"></td>
        <td id="LC11420" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When the expression changes, the previously added classes are removed and only then the classes</span></td>
      </tr>
      <tr>
        <td id="L11421" class="blob-num js-line-number" data-line-number="11421"></td>
        <td id="LC11421" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * new classes are added.</span></td>
      </tr>
      <tr>
        <td id="L11422" class="blob-num js-line-number" data-line-number="11422"></td>
        <td id="LC11422" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11423" class="blob-num js-line-number" data-line-number="11423"></td>
        <td id="LC11423" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11424" class="blob-num js-line-number" data-line-number="11424"></td>
        <td id="LC11424" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngClass {@link guide/dev_guide.expressions Expression} to eval. The result</span></td>
      </tr>
      <tr>
        <td id="L11425" class="blob-num js-line-number" data-line-number="11425"></td>
        <td id="LC11425" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   of the evaluation can be a string representing space delimited class</span></td>
      </tr>
      <tr>
        <td id="L11426" class="blob-num js-line-number" data-line-number="11426"></td>
        <td id="LC11426" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   names, an array, or a map of class names to boolean values.</span></td>
      </tr>
      <tr>
        <td id="L11427" class="blob-num js-line-number" data-line-number="11427"></td>
        <td id="LC11427" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11428" class="blob-num js-line-number" data-line-number="11428"></td>
        <td id="LC11428" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11429" class="blob-num js-line-number" data-line-number="11429"></td>
        <td id="LC11429" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11430" class="blob-num js-line-number" data-line-number="11430"></td>
        <td id="LC11430" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11431" class="blob-num js-line-number" data-line-number="11431"></td>
        <td id="LC11431" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;input type=&quot;button&quot; value=&quot;set&quot; ng-click=&quot;myVar=&#39;ng-invalid&#39;&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11432" class="blob-num js-line-number" data-line-number="11432"></td>
        <td id="LC11432" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;input type=&quot;button&quot; value=&quot;clear&quot; ng-click=&quot;myVar=&#39;&#39;&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11433" class="blob-num js-line-number" data-line-number="11433"></td>
        <td id="LC11433" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L11434" class="blob-num js-line-number" data-line-number="11434"></td>
        <td id="LC11434" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;span ng-class=&quot;myVar&quot;&gt;Sample Text &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L11435" class="blob-num js-line-number" data-line-number="11435"></td>
        <td id="LC11435" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11436" class="blob-num js-line-number" data-line-number="11436"></td>
        <td id="LC11436" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11437" class="blob-num js-line-number" data-line-number="11437"></td>
        <td id="LC11437" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-class&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11438" class="blob-num js-line-number" data-line-number="11438"></td>
        <td id="LC11438" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).not().</span></td>
      </tr>
      <tr>
        <td id="L11439" class="blob-num js-line-number" data-line-number="11439"></td>
        <td id="LC11439" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/ng-invalid/);</span></td>
      </tr>
      <tr>
        <td id="L11440" class="blob-num js-line-number" data-line-number="11440"></td>
        <td id="LC11440" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11441" class="blob-num js-line-number" data-line-number="11441"></td>
        <td id="LC11441" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         using(&#39;.doc-example-live&#39;).element(&#39;:button:first&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11442" class="blob-num js-line-number" data-line-number="11442"></td>
        <td id="LC11442" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11443" class="blob-num js-line-number" data-line-number="11443"></td>
        <td id="LC11443" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11444" class="blob-num js-line-number" data-line-number="11444"></td>
        <td id="LC11444" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/ng-invalid/);</span></td>
      </tr>
      <tr>
        <td id="L11445" class="blob-num js-line-number" data-line-number="11445"></td>
        <td id="LC11445" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11446" class="blob-num js-line-number" data-line-number="11446"></td>
        <td id="LC11446" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         using(&#39;.doc-example-live&#39;).element(&#39;:button:last&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11447" class="blob-num js-line-number" data-line-number="11447"></td>
        <td id="LC11447" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11448" class="blob-num js-line-number" data-line-number="11448"></td>
        <td id="LC11448" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).prop(&#39;className&#39;)).not().</span></td>
      </tr>
      <tr>
        <td id="L11449" class="blob-num js-line-number" data-line-number="11449"></td>
        <td id="LC11449" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/ng-invalid/);</span></td>
      </tr>
      <tr>
        <td id="L11450" class="blob-num js-line-number" data-line-number="11450"></td>
        <td id="LC11450" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11451" class="blob-num js-line-number" data-line-number="11451"></td>
        <td id="LC11451" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11452" class="blob-num js-line-number" data-line-number="11452"></td>
        <td id="LC11452" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11453" class="blob-num js-line-number" data-line-number="11453"></td>
        <td id="LC11453" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11454" class="blob-num js-line-number" data-line-number="11454"></td>
        <td id="LC11454" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngClassDirective <span class="pl-k">=</span> classDirective(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L11455" class="blob-num js-line-number" data-line-number="11455"></td>
        <td id="LC11455" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11456" class="blob-num js-line-number" data-line-number="11456"></td>
        <td id="LC11456" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11457" class="blob-num js-line-number" data-line-number="11457"></td>
        <td id="LC11457" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11458" class="blob-num js-line-number" data-line-number="11458"></td>
        <td id="LC11458" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngClassOdd</span></td>
      </tr>
      <tr>
        <td id="L11459" class="blob-num js-line-number" data-line-number="11459"></td>
        <td id="LC11459" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11460" class="blob-num js-line-number" data-line-number="11460"></td>
        <td id="LC11460" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11461" class="blob-num js-line-number" data-line-number="11461"></td>
        <td id="LC11461" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngClassOdd` and `ngClassEven` directives work exactly as</span></td>
      </tr>
      <tr>
        <td id="L11462" class="blob-num js-line-number" data-line-number="11462"></td>
        <td id="LC11462" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngClass ngClass}, except it works in</span></td>
      </tr>
      <tr>
        <td id="L11463" class="blob-num js-line-number" data-line-number="11463"></td>
        <td id="LC11463" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * conjunction with `ngRepeat` and takes affect only on odd (even) rows.</span></td>
      </tr>
      <tr>
        <td id="L11464" class="blob-num js-line-number" data-line-number="11464"></td>
        <td id="LC11464" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11465" class="blob-num js-line-number" data-line-number="11465"></td>
        <td id="LC11465" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This directive can be applied only within a scope of an</span></td>
      </tr>
      <tr>
        <td id="L11466" class="blob-num js-line-number" data-line-number="11466"></td>
        <td id="LC11466" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngRepeat ngRepeat}.</span></td>
      </tr>
      <tr>
        <td id="L11467" class="blob-num js-line-number" data-line-number="11467"></td>
        <td id="LC11467" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11468" class="blob-num js-line-number" data-line-number="11468"></td>
        <td id="LC11468" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11469" class="blob-num js-line-number" data-line-number="11469"></td>
        <td id="LC11469" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngClassOdd {@link guide/dev_guide.expressions Expression} to eval. The result</span></td>
      </tr>
      <tr>
        <td id="L11470" class="blob-num js-line-number" data-line-number="11470"></td>
        <td id="LC11470" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   of the evaluation can be a string representing space delimited class names or an array.</span></td>
      </tr>
      <tr>
        <td id="L11471" class="blob-num js-line-number" data-line-number="11471"></td>
        <td id="LC11471" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11472" class="blob-num js-line-number" data-line-number="11472"></td>
        <td id="LC11472" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11473" class="blob-num js-line-number" data-line-number="11473"></td>
        <td id="LC11473" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11474" class="blob-num js-line-number" data-line-number="11474"></td>
        <td id="LC11474" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11475" class="blob-num js-line-number" data-line-number="11475"></td>
        <td id="LC11475" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;ol ng-init=&quot;names=[&#39;John&#39;, &#39;Mary&#39;, &#39;Cate&#39;, &#39;Suz&#39;]&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11476" class="blob-num js-line-number" data-line-number="11476"></td>
        <td id="LC11476" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;li ng-repeat=&quot;name in names&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11477" class="blob-num js-line-number" data-line-number="11477"></td>
        <td id="LC11477" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span ng-class-odd=&quot;&#39;ng-format-negative&#39;&quot;</span></td>
      </tr>
      <tr>
        <td id="L11478" class="blob-num js-line-number" data-line-number="11478"></td>
        <td id="LC11478" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 ng-class-even=&quot;&#39;ng-invalid&#39;&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11479" class="blob-num js-line-number" data-line-number="11479"></td>
        <td id="LC11479" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             {{name}} &amp;nbsp; &amp;nbsp; &amp;nbsp;</span></td>
      </tr>
      <tr>
        <td id="L11480" class="blob-num js-line-number" data-line-number="11480"></td>
        <td id="LC11480" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L11481" class="blob-num js-line-number" data-line-number="11481"></td>
        <td id="LC11481" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L11482" class="blob-num js-line-number" data-line-number="11482"></td>
        <td id="LC11482" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/ol&gt;</span></td>
      </tr>
      <tr>
        <td id="L11483" class="blob-num js-line-number" data-line-number="11483"></td>
        <td id="LC11483" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11484" class="blob-num js-line-number" data-line-number="11484"></td>
        <td id="LC11484" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11485" class="blob-num js-line-number" data-line-number="11485"></td>
        <td id="LC11485" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-class-odd and ng-class-even&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11486" class="blob-num js-line-number" data-line-number="11486"></td>
        <td id="LC11486" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:first span&#39;).prop(&#39;className&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11487" class="blob-num js-line-number" data-line-number="11487"></td>
        <td id="LC11487" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/ng-format-negative/);</span></td>
      </tr>
      <tr>
        <td id="L11488" class="blob-num js-line-number" data-line-number="11488"></td>
        <td id="LC11488" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:last span&#39;).prop(&#39;className&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11489" class="blob-num js-line-number" data-line-number="11489"></td>
        <td id="LC11489" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/ng-invalid/);</span></td>
      </tr>
      <tr>
        <td id="L11490" class="blob-num js-line-number" data-line-number="11490"></td>
        <td id="LC11490" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11491" class="blob-num js-line-number" data-line-number="11491"></td>
        <td id="LC11491" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11492" class="blob-num js-line-number" data-line-number="11492"></td>
        <td id="LC11492" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11493" class="blob-num js-line-number" data-line-number="11493"></td>
        <td id="LC11493" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11494" class="blob-num js-line-number" data-line-number="11494"></td>
        <td id="LC11494" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngClassOddDirective <span class="pl-k">=</span> classDirective(<span class="pl-s"><span class="pl-pds">&#39;</span>Odd<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L11495" class="blob-num js-line-number" data-line-number="11495"></td>
        <td id="LC11495" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11496" class="blob-num js-line-number" data-line-number="11496"></td>
        <td id="LC11496" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11497" class="blob-num js-line-number" data-line-number="11497"></td>
        <td id="LC11497" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11498" class="blob-num js-line-number" data-line-number="11498"></td>
        <td id="LC11498" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngClassEven</span></td>
      </tr>
      <tr>
        <td id="L11499" class="blob-num js-line-number" data-line-number="11499"></td>
        <td id="LC11499" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11500" class="blob-num js-line-number" data-line-number="11500"></td>
        <td id="LC11500" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11501" class="blob-num js-line-number" data-line-number="11501"></td>
        <td id="LC11501" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngClassOdd` and `ngClassEven` works exactly as</span></td>
      </tr>
      <tr>
        <td id="L11502" class="blob-num js-line-number" data-line-number="11502"></td>
        <td id="LC11502" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngClass ngClass}, except it works in</span></td>
      </tr>
      <tr>
        <td id="L11503" class="blob-num js-line-number" data-line-number="11503"></td>
        <td id="LC11503" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * conjunction with `ngRepeat` and takes affect only on odd (even) rows.</span></td>
      </tr>
      <tr>
        <td id="L11504" class="blob-num js-line-number" data-line-number="11504"></td>
        <td id="LC11504" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11505" class="blob-num js-line-number" data-line-number="11505"></td>
        <td id="LC11505" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This directive can be applied only within a scope of an</span></td>
      </tr>
      <tr>
        <td id="L11506" class="blob-num js-line-number" data-line-number="11506"></td>
        <td id="LC11506" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link angular.module.ng.$compileProvider.directive.ngRepeat ngRepeat}.</span></td>
      </tr>
      <tr>
        <td id="L11507" class="blob-num js-line-number" data-line-number="11507"></td>
        <td id="LC11507" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11508" class="blob-num js-line-number" data-line-number="11508"></td>
        <td id="LC11508" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11509" class="blob-num js-line-number" data-line-number="11509"></td>
        <td id="LC11509" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngClassEven {@link guide/dev_guide.expressions Expression} to eval. The</span></td>
      </tr>
      <tr>
        <td id="L11510" class="blob-num js-line-number" data-line-number="11510"></td>
        <td id="LC11510" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   result of the evaluation can be a string representing space delimited class names or an array.</span></td>
      </tr>
      <tr>
        <td id="L11511" class="blob-num js-line-number" data-line-number="11511"></td>
        <td id="LC11511" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11512" class="blob-num js-line-number" data-line-number="11512"></td>
        <td id="LC11512" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11513" class="blob-num js-line-number" data-line-number="11513"></td>
        <td id="LC11513" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11514" class="blob-num js-line-number" data-line-number="11514"></td>
        <td id="LC11514" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11515" class="blob-num js-line-number" data-line-number="11515"></td>
        <td id="LC11515" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;ol ng-init=&quot;names=[&#39;John&#39;, &#39;Mary&#39;, &#39;Cate&#39;, &#39;Suz&#39;]&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11516" class="blob-num js-line-number" data-line-number="11516"></td>
        <td id="LC11516" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;li ng-repeat=&quot;name in names&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11517" class="blob-num js-line-number" data-line-number="11517"></td>
        <td id="LC11517" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;span ng-class-odd=&quot;&#39;odd&#39;&quot; ng-class-even=&quot;&#39;even&#39;&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11518" class="blob-num js-line-number" data-line-number="11518"></td>
        <td id="LC11518" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             {{name}} &amp;nbsp; &amp;nbsp; &amp;nbsp;</span></td>
      </tr>
      <tr>
        <td id="L11519" class="blob-num js-line-number" data-line-number="11519"></td>
        <td id="LC11519" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           &lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L11520" class="blob-num js-line-number" data-line-number="11520"></td>
        <td id="LC11520" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L11521" class="blob-num js-line-number" data-line-number="11521"></td>
        <td id="LC11521" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/ol&gt;</span></td>
      </tr>
      <tr>
        <td id="L11522" class="blob-num js-line-number" data-line-number="11522"></td>
        <td id="LC11522" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11523" class="blob-num js-line-number" data-line-number="11523"></td>
        <td id="LC11523" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11524" class="blob-num js-line-number" data-line-number="11524"></td>
        <td id="LC11524" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-class-odd and ng-class-even&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11525" class="blob-num js-line-number" data-line-number="11525"></td>
        <td id="LC11525" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:first span&#39;).prop(&#39;className&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11526" class="blob-num js-line-number" data-line-number="11526"></td>
        <td id="LC11526" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/odd/);</span></td>
      </tr>
      <tr>
        <td id="L11527" class="blob-num js-line-number" data-line-number="11527"></td>
        <td id="LC11527" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:last span&#39;).prop(&#39;className&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11528" class="blob-num js-line-number" data-line-number="11528"></td>
        <td id="LC11528" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/even/);</span></td>
      </tr>
      <tr>
        <td id="L11529" class="blob-num js-line-number" data-line-number="11529"></td>
        <td id="LC11529" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11530" class="blob-num js-line-number" data-line-number="11530"></td>
        <td id="LC11530" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11531" class="blob-num js-line-number" data-line-number="11531"></td>
        <td id="LC11531" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11532" class="blob-num js-line-number" data-line-number="11532"></td>
        <td id="LC11532" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11533" class="blob-num js-line-number" data-line-number="11533"></td>
        <td id="LC11533" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngClassEvenDirective <span class="pl-k">=</span> classDirective(<span class="pl-s"><span class="pl-pds">&#39;</span>Even<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L11534" class="blob-num js-line-number" data-line-number="11534"></td>
        <td id="LC11534" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11535" class="blob-num js-line-number" data-line-number="11535"></td>
        <td id="LC11535" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11536" class="blob-num js-line-number" data-line-number="11536"></td>
        <td id="LC11536" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11537" class="blob-num js-line-number" data-line-number="11537"></td>
        <td id="LC11537" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngCloak</span></td>
      </tr>
      <tr>
        <td id="L11538" class="blob-num js-line-number" data-line-number="11538"></td>
        <td id="LC11538" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11539" class="blob-num js-line-number" data-line-number="11539"></td>
        <td id="LC11539" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11540" class="blob-num js-line-number" data-line-number="11540"></td>
        <td id="LC11540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngCloak` directive is used to prevent the Angular html template from being briefly</span></td>
      </tr>
      <tr>
        <td id="L11541" class="blob-num js-line-number" data-line-number="11541"></td>
        <td id="LC11541" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * displayed by the browser in its raw (uncompiled) form while your application is loading. Use this</span></td>
      </tr>
      <tr>
        <td id="L11542" class="blob-num js-line-number" data-line-number="11542"></td>
        <td id="LC11542" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * directive to avoid the undesirable flicker effect caused by the html template display.</span></td>
      </tr>
      <tr>
        <td id="L11543" class="blob-num js-line-number" data-line-number="11543"></td>
        <td id="LC11543" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11544" class="blob-num js-line-number" data-line-number="11544"></td>
        <td id="LC11544" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The directive can be applied to the `&lt;body&gt;` element, but typically a fine-grained application is</span></td>
      </tr>
      <tr>
        <td id="L11545" class="blob-num js-line-number" data-line-number="11545"></td>
        <td id="LC11545" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * prefered in order to benefit from progressive rendering of the browser view.</span></td>
      </tr>
      <tr>
        <td id="L11546" class="blob-num js-line-number" data-line-number="11546"></td>
        <td id="LC11546" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11547" class="blob-num js-line-number" data-line-number="11547"></td>
        <td id="LC11547" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngCloak` works in cooperation with a css rule that is embedded within `angular.js` and</span></td>
      </tr>
      <tr>
        <td id="L11548" class="blob-num js-line-number" data-line-number="11548"></td>
        <td id="LC11548" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  `angular.min.js` files. Following is the css rule:</span></td>
      </tr>
      <tr>
        <td id="L11549" class="blob-num js-line-number" data-line-number="11549"></td>
        <td id="LC11549" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11550" class="blob-num js-line-number" data-line-number="11550"></td>
        <td id="LC11550" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L11551" class="blob-num js-line-number" data-line-number="11551"></td>
        <td id="LC11551" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * [ng\:cloak], [ng-cloak], .ng-cloak {</span></td>
      </tr>
      <tr>
        <td id="L11552" class="blob-num js-line-number" data-line-number="11552"></td>
        <td id="LC11552" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   display: none;</span></td>
      </tr>
      <tr>
        <td id="L11553" class="blob-num js-line-number" data-line-number="11553"></td>
        <td id="LC11553" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * }</span></td>
      </tr>
      <tr>
        <td id="L11554" class="blob-num js-line-number" data-line-number="11554"></td>
        <td id="LC11554" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L11555" class="blob-num js-line-number" data-line-number="11555"></td>
        <td id="LC11555" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11556" class="blob-num js-line-number" data-line-number="11556"></td>
        <td id="LC11556" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When this css rule is loaded by the browser, all html elements (including their children) that</span></td>
      </tr>
      <tr>
        <td id="L11557" class="blob-num js-line-number" data-line-number="11557"></td>
        <td id="LC11557" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * are tagged with the `ng-cloak` directive are hidden. When Angular comes across this directive</span></td>
      </tr>
      <tr>
        <td id="L11558" class="blob-num js-line-number" data-line-number="11558"></td>
        <td id="LC11558" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * during the compilation of the template it deletes the `ngCloak` element attribute, which</span></td>
      </tr>
      <tr>
        <td id="L11559" class="blob-num js-line-number" data-line-number="11559"></td>
        <td id="LC11559" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * makes the compiled element visible.</span></td>
      </tr>
      <tr>
        <td id="L11560" class="blob-num js-line-number" data-line-number="11560"></td>
        <td id="LC11560" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11561" class="blob-num js-line-number" data-line-number="11561"></td>
        <td id="LC11561" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * For the best result, `angular.js` script must be loaded in the head section of the html file;</span></td>
      </tr>
      <tr>
        <td id="L11562" class="blob-num js-line-number" data-line-number="11562"></td>
        <td id="LC11562" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * alternatively, the css rule (above) must be included in the external stylesheet of the</span></td>
      </tr>
      <tr>
        <td id="L11563" class="blob-num js-line-number" data-line-number="11563"></td>
        <td id="LC11563" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * application.</span></td>
      </tr>
      <tr>
        <td id="L11564" class="blob-num js-line-number" data-line-number="11564"></td>
        <td id="LC11564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11565" class="blob-num js-line-number" data-line-number="11565"></td>
        <td id="LC11565" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Legacy browsers, like IE7, do not provide attribute selector support (added in CSS 2.1) so they</span></td>
      </tr>
      <tr>
        <td id="L11566" class="blob-num js-line-number" data-line-number="11566"></td>
        <td id="LC11566" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * cannot match the `[ng\:cloak]` selector. To work around this limitation, you must add the css</span></td>
      </tr>
      <tr>
        <td id="L11567" class="blob-num js-line-number" data-line-number="11567"></td>
        <td id="LC11567" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * class `ngCloak` in addition to `ngCloak` directive as shown in the example below.</span></td>
      </tr>
      <tr>
        <td id="L11568" class="blob-num js-line-number" data-line-number="11568"></td>
        <td id="LC11568" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11569" class="blob-num js-line-number" data-line-number="11569"></td>
        <td id="LC11569" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11570" class="blob-num js-line-number" data-line-number="11570"></td>
        <td id="LC11570" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11571" class="blob-num js-line-number" data-line-number="11571"></td>
        <td id="LC11571" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11572" class="blob-num js-line-number" data-line-number="11572"></td>
        <td id="LC11572" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11573" class="blob-num js-line-number" data-line-number="11573"></td>
        <td id="LC11573" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11574" class="blob-num js-line-number" data-line-number="11574"></td>
        <td id="LC11574" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div id=&quot;template1&quot; ng-cloak&gt;{{ &#39;hello&#39; }}&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11575" class="blob-num js-line-number" data-line-number="11575"></td>
        <td id="LC11575" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div id=&quot;template2&quot; ng-cloak class=&quot;ng-cloak&quot;&gt;{{ &#39;hello IE7&#39; }}&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11576" class="blob-num js-line-number" data-line-number="11576"></td>
        <td id="LC11576" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11577" class="blob-num js-line-number" data-line-number="11577"></td>
        <td id="LC11577" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11578" class="blob-num js-line-number" data-line-number="11578"></td>
        <td id="LC11578" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should remove the template directive and css class&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11579" class="blob-num js-line-number" data-line-number="11579"></td>
        <td id="LC11579" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live #template1&#39;).attr(&#39;ng-cloak&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11580" class="blob-num js-line-number" data-line-number="11580"></td>
        <td id="LC11580" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           not().toBeDefined();</span></td>
      </tr>
      <tr>
        <td id="L11581" class="blob-num js-line-number" data-line-number="11581"></td>
        <td id="LC11581" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live #template2&#39;).attr(&#39;ng-cloak&#39;)).</span></td>
      </tr>
      <tr>
        <td id="L11582" class="blob-num js-line-number" data-line-number="11582"></td>
        <td id="LC11582" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           not().toBeDefined();</span></td>
      </tr>
      <tr>
        <td id="L11583" class="blob-num js-line-number" data-line-number="11583"></td>
        <td id="LC11583" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11584" class="blob-num js-line-number" data-line-number="11584"></td>
        <td id="LC11584" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11585" class="blob-num js-line-number" data-line-number="11585"></td>
        <td id="LC11585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11586" class="blob-num js-line-number" data-line-number="11586"></td>
        <td id="LC11586" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11587" class="blob-num js-line-number" data-line-number="11587"></td>
        <td id="LC11587" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11588" class="blob-num js-line-number" data-line-number="11588"></td>
        <td id="LC11588" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngCloakDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L11589" class="blob-num js-line-number" data-line-number="11589"></td>
        <td id="LC11589" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11590" class="blob-num js-line-number" data-line-number="11590"></td>
        <td id="LC11590" class="blob-code blob-code-inner js-file-line">    attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>ngCloak<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">undefined</span>);</td>
      </tr>
      <tr>
        <td id="L11591" class="blob-num js-line-number" data-line-number="11591"></td>
        <td id="LC11591" class="blob-code blob-code-inner js-file-line">    element.removeClass(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-cloak<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L11592" class="blob-num js-line-number" data-line-number="11592"></td>
        <td id="LC11592" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L11593" class="blob-num js-line-number" data-line-number="11593"></td>
        <td id="LC11593" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L11594" class="blob-num js-line-number" data-line-number="11594"></td>
        <td id="LC11594" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11595" class="blob-num js-line-number" data-line-number="11595"></td>
        <td id="LC11595" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11596" class="blob-num js-line-number" data-line-number="11596"></td>
        <td id="LC11596" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11597" class="blob-num js-line-number" data-line-number="11597"></td>
        <td id="LC11597" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngController</span></td>
      </tr>
      <tr>
        <td id="L11598" class="blob-num js-line-number" data-line-number="11598"></td>
        <td id="LC11598" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11599" class="blob-num js-line-number" data-line-number="11599"></td>
        <td id="LC11599" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11600" class="blob-num js-line-number" data-line-number="11600"></td>
        <td id="LC11600" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngController` directive assigns behavior to a scope. This is a key aspect of how angular</span></td>
      </tr>
      <tr>
        <td id="L11601" class="blob-num js-line-number" data-line-number="11601"></td>
        <td id="LC11601" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * supports the principles behind the Model-View-Controller design pattern.</span></td>
      </tr>
      <tr>
        <td id="L11602" class="blob-num js-line-number" data-line-number="11602"></td>
        <td id="LC11602" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11603" class="blob-num js-line-number" data-line-number="11603"></td>
        <td id="LC11603" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * MVC components in angular:</span></td>
      </tr>
      <tr>
        <td id="L11604" class="blob-num js-line-number" data-line-number="11604"></td>
        <td id="LC11604" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11605" class="blob-num js-line-number" data-line-number="11605"></td>
        <td id="LC11605" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * Model â The Model is data in scope properties; scopes are attached to the DOM.</span></td>
      </tr>
      <tr>
        <td id="L11606" class="blob-num js-line-number" data-line-number="11606"></td>
        <td id="LC11606" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * View â The template (HTML with data bindings) is rendered into the View.</span></td>
      </tr>
      <tr>
        <td id="L11607" class="blob-num js-line-number" data-line-number="11607"></td>
        <td id="LC11607" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * Controller â The `ngController` directive specifies a Controller class; the class has</span></td>
      </tr>
      <tr>
        <td id="L11608" class="blob-num js-line-number" data-line-number="11608"></td>
        <td id="LC11608" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   methods that typically express the business logic behind the application.</span></td>
      </tr>
      <tr>
        <td id="L11609" class="blob-num js-line-number" data-line-number="11609"></td>
        <td id="LC11609" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11610" class="blob-num js-line-number" data-line-number="11610"></td>
        <td id="LC11610" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note that an alternative way to define controllers is via the `{@link angular.module.ng.$route}`</span></td>
      </tr>
      <tr>
        <td id="L11611" class="blob-num js-line-number" data-line-number="11611"></td>
        <td id="LC11611" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * service.</span></td>
      </tr>
      <tr>
        <td id="L11612" class="blob-num js-line-number" data-line-number="11612"></td>
        <td id="LC11612" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11613" class="blob-num js-line-number" data-line-number="11613"></td>
        <td id="LC11613" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11614" class="blob-num js-line-number" data-line-number="11614"></td>
        <td id="LC11614" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @scope</span></td>
      </tr>
      <tr>
        <td id="L11615" class="blob-num js-line-number" data-line-number="11615"></td>
        <td id="LC11615" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngController Name of a globally accessible constructor function or an</span></td>
      </tr>
      <tr>
        <td id="L11616" class="blob-num js-line-number" data-line-number="11616"></td>
        <td id="LC11616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     {@link guide/dev_guide.expressions expression} that on the current scope evaluates to a</span></td>
      </tr>
      <tr>
        <td id="L11617" class="blob-num js-line-number" data-line-number="11617"></td>
        <td id="LC11617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     constructor function.</span></td>
      </tr>
      <tr>
        <td id="L11618" class="blob-num js-line-number" data-line-number="11618"></td>
        <td id="LC11618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11619" class="blob-num js-line-number" data-line-number="11619"></td>
        <td id="LC11619" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11620" class="blob-num js-line-number" data-line-number="11620"></td>
        <td id="LC11620" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Here is a simple form for editing user contact information. Adding, removing, clearing, and</span></td>
      </tr>
      <tr>
        <td id="L11621" class="blob-num js-line-number" data-line-number="11621"></td>
        <td id="LC11621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * greeting are methods declared on the controller (see source tab). These methods can</span></td>
      </tr>
      <tr>
        <td id="L11622" class="blob-num js-line-number" data-line-number="11622"></td>
        <td id="LC11622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * easily be called from the angular markup. Notice that the scope becomes the `this` for the</span></td>
      </tr>
      <tr>
        <td id="L11623" class="blob-num js-line-number" data-line-number="11623"></td>
        <td id="LC11623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * controller&#39;s instance. This allows for easy access to the view data from the controller. Also</span></td>
      </tr>
      <tr>
        <td id="L11624" class="blob-num js-line-number" data-line-number="11624"></td>
        <td id="LC11624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * notice that any changes to the data are automatically reflected in the View without the need</span></td>
      </tr>
      <tr>
        <td id="L11625" class="blob-num js-line-number" data-line-number="11625"></td>
        <td id="LC11625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * for a manual update.</span></td>
      </tr>
      <tr>
        <td id="L11626" class="blob-num js-line-number" data-line-number="11626"></td>
        <td id="LC11626" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11627" class="blob-num js-line-number" data-line-number="11627"></td>
        <td id="LC11627" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11628" class="blob-num js-line-number" data-line-number="11628"></td>
        <td id="LC11628" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;script type=&quot;text/javascript&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11629" class="blob-num js-line-number" data-line-number="11629"></td>
        <td id="LC11629" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        function SettingsController($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11630" class="blob-num js-line-number" data-line-number="11630"></td>
        <td id="LC11630" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.name = &quot;John Smith&quot;;</span></td>
      </tr>
      <tr>
        <td id="L11631" class="blob-num js-line-number" data-line-number="11631"></td>
        <td id="LC11631" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.contacts = [</span></td>
      </tr>
      <tr>
        <td id="L11632" class="blob-num js-line-number" data-line-number="11632"></td>
        <td id="LC11632" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {type:&#39;phone&#39;, value:&#39;408 555 1212&#39;},</span></td>
      </tr>
      <tr>
        <td id="L11633" class="blob-num js-line-number" data-line-number="11633"></td>
        <td id="LC11633" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {type:&#39;email&#39;, value:&#39;john.smith@example.org&#39;} ];</span></td>
      </tr>
      <tr>
        <td id="L11634" class="blob-num js-line-number" data-line-number="11634"></td>
        <td id="LC11634" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11635" class="blob-num js-line-number" data-line-number="11635"></td>
        <td id="LC11635" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.greet = function() {</span></td>
      </tr>
      <tr>
        <td id="L11636" class="blob-num js-line-number" data-line-number="11636"></td>
        <td id="LC11636" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           alert(this.name);</span></td>
      </tr>
      <tr>
        <td id="L11637" class="blob-num js-line-number" data-line-number="11637"></td>
        <td id="LC11637" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L11638" class="blob-num js-line-number" data-line-number="11638"></td>
        <td id="LC11638" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11639" class="blob-num js-line-number" data-line-number="11639"></td>
        <td id="LC11639" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.addContact = function() {</span></td>
      </tr>
      <tr>
        <td id="L11640" class="blob-num js-line-number" data-line-number="11640"></td>
        <td id="LC11640" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           this.contacts.push({type:&#39;email&#39;, value:&#39;yourname@example.org&#39;});</span></td>
      </tr>
      <tr>
        <td id="L11641" class="blob-num js-line-number" data-line-number="11641"></td>
        <td id="LC11641" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L11642" class="blob-num js-line-number" data-line-number="11642"></td>
        <td id="LC11642" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11643" class="blob-num js-line-number" data-line-number="11643"></td>
        <td id="LC11643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.removeContact = function(contactToRemove) {</span></td>
      </tr>
      <tr>
        <td id="L11644" class="blob-num js-line-number" data-line-number="11644"></td>
        <td id="LC11644" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var index = this.contacts.indexOf(contactToRemove);</span></td>
      </tr>
      <tr>
        <td id="L11645" class="blob-num js-line-number" data-line-number="11645"></td>
        <td id="LC11645" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           this.contacts.splice(index, 1);</span></td>
      </tr>
      <tr>
        <td id="L11646" class="blob-num js-line-number" data-line-number="11646"></td>
        <td id="LC11646" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L11647" class="blob-num js-line-number" data-line-number="11647"></td>
        <td id="LC11647" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11648" class="blob-num js-line-number" data-line-number="11648"></td>
        <td id="LC11648" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.clearContact = function(contact) {</span></td>
      </tr>
      <tr>
        <td id="L11649" class="blob-num js-line-number" data-line-number="11649"></td>
        <td id="LC11649" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           contact.type = &#39;phone&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11650" class="blob-num js-line-number" data-line-number="11650"></td>
        <td id="LC11650" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           contact.value = &#39;&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11651" class="blob-num js-line-number" data-line-number="11651"></td>
        <td id="LC11651" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L11652" class="blob-num js-line-number" data-line-number="11652"></td>
        <td id="LC11652" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        }</span></td>
      </tr>
      <tr>
        <td id="L11653" class="blob-num js-line-number" data-line-number="11653"></td>
        <td id="LC11653" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11654" class="blob-num js-line-number" data-line-number="11654"></td>
        <td id="LC11654" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;div ng-controller=&quot;SettingsController&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11655" class="blob-num js-line-number" data-line-number="11655"></td>
        <td id="LC11655" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Name: &lt;input type=&quot;text&quot; ng-model=&quot;name&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11656" class="blob-num js-line-number" data-line-number="11656"></td>
        <td id="LC11656" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        [ &lt;a href=&quot;&quot; ng-click=&quot;greet()&quot;&gt;greet&lt;/a&gt; ]&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11657" class="blob-num js-line-number" data-line-number="11657"></td>
        <td id="LC11657" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Contact:</span></td>
      </tr>
      <tr>
        <td id="L11658" class="blob-num js-line-number" data-line-number="11658"></td>
        <td id="LC11658" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L11659" class="blob-num js-line-number" data-line-number="11659"></td>
        <td id="LC11659" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;li ng-repeat=&quot;contact in contacts&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11660" class="blob-num js-line-number" data-line-number="11660"></td>
        <td id="LC11660" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;select ng-model=&quot;contact.type&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11661" class="blob-num js-line-number" data-line-number="11661"></td>
        <td id="LC11661" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               &lt;option&gt;phone&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L11662" class="blob-num js-line-number" data-line-number="11662"></td>
        <td id="LC11662" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               &lt;option&gt;email&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L11663" class="blob-num js-line-number" data-line-number="11663"></td>
        <td id="LC11663" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L11664" class="blob-num js-line-number" data-line-number="11664"></td>
        <td id="LC11664" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;input type=&quot;text&quot; ng-model=&quot;contact.value&quot;/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11665" class="blob-num js-line-number" data-line-number="11665"></td>
        <td id="LC11665" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            [ &lt;a href=&quot;&quot; ng-click=&quot;clearContact(contact)&quot;&gt;clear&lt;/a&gt;</span></td>
      </tr>
      <tr>
        <td id="L11666" class="blob-num js-line-number" data-line-number="11666"></td>
        <td id="LC11666" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            | &lt;a href=&quot;&quot; ng-click=&quot;removeContact(contact)&quot;&gt;X&lt;/a&gt; ]</span></td>
      </tr>
      <tr>
        <td id="L11667" class="blob-num js-line-number" data-line-number="11667"></td>
        <td id="LC11667" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L11668" class="blob-num js-line-number" data-line-number="11668"></td>
        <td id="LC11668" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;li&gt;[ &lt;a href=&quot;&quot; ng-click=&quot;addContact()&quot;&gt;add&lt;/a&gt; ]&lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L11669" class="blob-num js-line-number" data-line-number="11669"></td>
        <td id="LC11669" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L11670" class="blob-num js-line-number" data-line-number="11670"></td>
        <td id="LC11670" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11671" class="blob-num js-line-number" data-line-number="11671"></td>
        <td id="LC11671" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11672" class="blob-num js-line-number" data-line-number="11672"></td>
        <td id="LC11672" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11673" class="blob-num js-line-number" data-line-number="11673"></td>
        <td id="LC11673" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check controller&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11674" class="blob-num js-line-number" data-line-number="11674"></td>
        <td id="LC11674" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live div&gt;:input&#39;).val()).toBe(&#39;John Smith&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11675" class="blob-num js-line-number" data-line-number="11675"></td>
        <td id="LC11675" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:nth-child(1) input&#39;).val())</span></td>
      </tr>
      <tr>
        <td id="L11676" class="blob-num js-line-number" data-line-number="11676"></td>
        <td id="LC11676" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           .toBe(&#39;408 555 1212&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11677" class="blob-num js-line-number" data-line-number="11677"></td>
        <td id="LC11677" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:nth-child(2) input&#39;).val())</span></td>
      </tr>
      <tr>
        <td id="L11678" class="blob-num js-line-number" data-line-number="11678"></td>
        <td id="LC11678" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           .toBe(&#39;john.smith@example.org&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11679" class="blob-num js-line-number" data-line-number="11679"></td>
        <td id="LC11679" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11680" class="blob-num js-line-number" data-line-number="11680"></td>
        <td id="LC11680" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live li:first a:contains(&quot;clear&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11681" class="blob-num js-line-number" data-line-number="11681"></td>
        <td id="LC11681" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:first input&#39;).val()).toBe(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11682" class="blob-num js-line-number" data-line-number="11682"></td>
        <td id="LC11682" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L11683" class="blob-num js-line-number" data-line-number="11683"></td>
        <td id="LC11683" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live li:last a:contains(&quot;add&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11684" class="blob-num js-line-number" data-line-number="11684"></td>
        <td id="LC11684" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live li:nth-child(3) input&#39;).val())</span></td>
      </tr>
      <tr>
        <td id="L11685" class="blob-num js-line-number" data-line-number="11685"></td>
        <td id="LC11685" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           .toBe(&#39;yourname@example.org&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11686" class="blob-num js-line-number" data-line-number="11686"></td>
        <td id="LC11686" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11687" class="blob-num js-line-number" data-line-number="11687"></td>
        <td id="LC11687" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11688" class="blob-num js-line-number" data-line-number="11688"></td>
        <td id="LC11688" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11689" class="blob-num js-line-number" data-line-number="11689"></td>
        <td id="LC11689" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11690" class="blob-num js-line-number" data-line-number="11690"></td>
        <td id="LC11690" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngControllerDirective <span class="pl-k">=</span> [<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11691" class="blob-num js-line-number" data-line-number="11691"></td>
        <td id="LC11691" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11692" class="blob-num js-line-number" data-line-number="11692"></td>
        <td id="LC11692" class="blob-code blob-code-inner js-file-line">    scope<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L11693" class="blob-num js-line-number" data-line-number="11693"></td>
        <td id="LC11693" class="blob-code blob-code-inner js-file-line">    controller<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>@<span class="pl-pds">&#39;</span></span></td>
      </tr>
      <tr>
        <td id="L11694" class="blob-num js-line-number" data-line-number="11694"></td>
        <td id="LC11694" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L11695" class="blob-num js-line-number" data-line-number="11695"></td>
        <td id="LC11695" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L11696" class="blob-num js-line-number" data-line-number="11696"></td>
        <td id="LC11696" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11697" class="blob-num js-line-number" data-line-number="11697"></td>
        <td id="LC11697" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11698" class="blob-num js-line-number" data-line-number="11698"></td>
        <td id="LC11698" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11699" class="blob-num js-line-number" data-line-number="11699"></td>
        <td id="LC11699" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngClick</span></td>
      </tr>
      <tr>
        <td id="L11700" class="blob-num js-line-number" data-line-number="11700"></td>
        <td id="LC11700" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11701" class="blob-num js-line-number" data-line-number="11701"></td>
        <td id="LC11701" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11702" class="blob-num js-line-number" data-line-number="11702"></td>
        <td id="LC11702" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The ngClick allows you to specify custom behavior when</span></td>
      </tr>
      <tr>
        <td id="L11703" class="blob-num js-line-number" data-line-number="11703"></td>
        <td id="LC11703" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * element is clicked.</span></td>
      </tr>
      <tr>
        <td id="L11704" class="blob-num js-line-number" data-line-number="11704"></td>
        <td id="LC11704" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11705" class="blob-num js-line-number" data-line-number="11705"></td>
        <td id="LC11705" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11706" class="blob-num js-line-number" data-line-number="11706"></td>
        <td id="LC11706" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngClick {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11707" class="blob-num js-line-number" data-line-number="11707"></td>
        <td id="LC11707" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * click. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11708" class="blob-num js-line-number" data-line-number="11708"></td>
        <td id="LC11708" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11709" class="blob-num js-line-number" data-line-number="11709"></td>
        <td id="LC11709" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11710" class="blob-num js-line-number" data-line-number="11710"></td>
        <td id="LC11710" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11711" class="blob-num js-line-number" data-line-number="11711"></td>
        <td id="LC11711" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11712" class="blob-num js-line-number" data-line-number="11712"></td>
        <td id="LC11712" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;button ng-click=&quot;count = count + 1&quot; ng-init=&quot;count=0&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11713" class="blob-num js-line-number" data-line-number="11713"></td>
        <td id="LC11713" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Increment</span></td>
      </tr>
      <tr>
        <td id="L11714" class="blob-num js-line-number" data-line-number="11714"></td>
        <td id="LC11714" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/button&gt;</span></td>
      </tr>
      <tr>
        <td id="L11715" class="blob-num js-line-number" data-line-number="11715"></td>
        <td id="LC11715" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      count: {{count}}</span></td>
      </tr>
      <tr>
        <td id="L11716" class="blob-num js-line-number" data-line-number="11716"></td>
        <td id="LC11716" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11717" class="blob-num js-line-number" data-line-number="11717"></td>
        <td id="LC11717" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11718" class="blob-num js-line-number" data-line-number="11718"></td>
        <td id="LC11718" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-click&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11719" class="blob-num js-line-number" data-line-number="11719"></td>
        <td id="LC11719" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;count&#39;)).toBe(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11720" class="blob-num js-line-number" data-line-number="11720"></td>
        <td id="LC11720" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live :button&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11721" class="blob-num js-line-number" data-line-number="11721"></td>
        <td id="LC11721" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;count&#39;)).toBe(&#39;1&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11722" class="blob-num js-line-number" data-line-number="11722"></td>
        <td id="LC11722" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11723" class="blob-num js-line-number" data-line-number="11723"></td>
        <td id="LC11723" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11724" class="blob-num js-line-number" data-line-number="11724"></td>
        <td id="LC11724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11725" class="blob-num js-line-number" data-line-number="11725"></td>
        <td id="LC11725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11726" class="blob-num js-line-number" data-line-number="11726"></td>
        <td id="LC11726" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/*</span></td>
      </tr>
      <tr>
        <td id="L11727" class="blob-num js-line-number" data-line-number="11727"></td>
        <td id="LC11727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * A directive that allows creation of custom onclick handlers that are defined as angular</span></td>
      </tr>
      <tr>
        <td id="L11728" class="blob-num js-line-number" data-line-number="11728"></td>
        <td id="LC11728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * expressions and are compiled and executed within the current scope.</span></td>
      </tr>
      <tr>
        <td id="L11729" class="blob-num js-line-number" data-line-number="11729"></td>
        <td id="LC11729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11730" class="blob-num js-line-number" data-line-number="11730"></td>
        <td id="LC11730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Events that are handled via these handler are always configured not to propagate further.</span></td>
      </tr>
      <tr>
        <td id="L11731" class="blob-num js-line-number" data-line-number="11731"></td>
        <td id="LC11731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11732" class="blob-num js-line-number" data-line-number="11732"></td>
        <td id="LC11732" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngEventDirectives <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L11733" class="blob-num js-line-number" data-line-number="11733"></td>
        <td id="LC11733" class="blob-code blob-code-inner js-file-line">forEach(</td>
      </tr>
      <tr>
        <td id="L11734" class="blob-num js-line-number" data-line-number="11734"></td>
        <td id="LC11734" class="blob-code blob-code-inner js-file-line">  <span class="pl-s"><span class="pl-pds">&#39;</span>click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave<span class="pl-pds">&#39;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&#39;</span> <span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L11735" class="blob-num js-line-number" data-line-number="11735"></td>
        <td id="LC11735" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">function</span>(<span class="pl-smi">name</span>) {</td>
      </tr>
      <tr>
        <td id="L11736" class="blob-num js-line-number" data-line-number="11736"></td>
        <td id="LC11736" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> directiveName <span class="pl-k">=</span> directiveNormalize(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> name);</td>
      </tr>
      <tr>
        <td id="L11737" class="blob-num js-line-number" data-line-number="11737"></td>
        <td id="LC11737" class="blob-code blob-code-inner js-file-line">    ngEventDirectives[directiveName] <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$parse</span>) {</td>
      </tr>
      <tr>
        <td id="L11738" class="blob-num js-line-number" data-line-number="11738"></td>
        <td id="LC11738" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11739" class="blob-num js-line-number" data-line-number="11739"></td>
        <td id="LC11739" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> fn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(attr[directiveName]);</td>
      </tr>
      <tr>
        <td id="L11740" class="blob-num js-line-number" data-line-number="11740"></td>
        <td id="LC11740" class="blob-code blob-code-inner js-file-line">        element.bind(lowercase(name), <span class="pl-k">function</span>(<span class="pl-smi">event</span>) {</td>
      </tr>
      <tr>
        <td id="L11741" class="blob-num js-line-number" data-line-number="11741"></td>
        <td id="LC11741" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11742" class="blob-num js-line-number" data-line-number="11742"></td>
        <td id="LC11742" class="blob-code blob-code-inner js-file-line">            fn(scope, {$event<span class="pl-k">:</span><span class="pl-c1">event</span>});</td>
      </tr>
      <tr>
        <td id="L11743" class="blob-num js-line-number" data-line-number="11743"></td>
        <td id="LC11743" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L11744" class="blob-num js-line-number" data-line-number="11744"></td>
        <td id="LC11744" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L11745" class="blob-num js-line-number" data-line-number="11745"></td>
        <td id="LC11745" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L11746" class="blob-num js-line-number" data-line-number="11746"></td>
        <td id="LC11746" class="blob-code blob-code-inner js-file-line">    }];</td>
      </tr>
      <tr>
        <td id="L11747" class="blob-num js-line-number" data-line-number="11747"></td>
        <td id="LC11747" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L11748" class="blob-num js-line-number" data-line-number="11748"></td>
        <td id="LC11748" class="blob-code blob-code-inner js-file-line">);</td>
      </tr>
      <tr>
        <td id="L11749" class="blob-num js-line-number" data-line-number="11749"></td>
        <td id="LC11749" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11750" class="blob-num js-line-number" data-line-number="11750"></td>
        <td id="LC11750" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11751" class="blob-num js-line-number" data-line-number="11751"></td>
        <td id="LC11751" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11752" class="blob-num js-line-number" data-line-number="11752"></td>
        <td id="LC11752" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngDblclick</span></td>
      </tr>
      <tr>
        <td id="L11753" class="blob-num js-line-number" data-line-number="11753"></td>
        <td id="LC11753" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11754" class="blob-num js-line-number" data-line-number="11754"></td>
        <td id="LC11754" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11755" class="blob-num js-line-number" data-line-number="11755"></td>
        <td id="LC11755" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngDblclick` directive allows you to specify custom behavior on dblclick event.</span></td>
      </tr>
      <tr>
        <td id="L11756" class="blob-num js-line-number" data-line-number="11756"></td>
        <td id="LC11756" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11757" class="blob-num js-line-number" data-line-number="11757"></td>
        <td id="LC11757" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11758" class="blob-num js-line-number" data-line-number="11758"></td>
        <td id="LC11758" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngDblclick {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11759" class="blob-num js-line-number" data-line-number="11759"></td>
        <td id="LC11759" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * dblclick. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11760" class="blob-num js-line-number" data-line-number="11760"></td>
        <td id="LC11760" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11761" class="blob-num js-line-number" data-line-number="11761"></td>
        <td id="LC11761" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11762" class="blob-num js-line-number" data-line-number="11762"></td>
        <td id="LC11762" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11763" class="blob-num js-line-number" data-line-number="11763"></td>
        <td id="LC11763" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11764" class="blob-num js-line-number" data-line-number="11764"></td>
        <td id="LC11764" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11765" class="blob-num js-line-number" data-line-number="11765"></td>
        <td id="LC11765" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11766" class="blob-num js-line-number" data-line-number="11766"></td>
        <td id="LC11766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11767" class="blob-num js-line-number" data-line-number="11767"></td>
        <td id="LC11767" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11768" class="blob-num js-line-number" data-line-number="11768"></td>
        <td id="LC11768" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMousedown</span></td>
      </tr>
      <tr>
        <td id="L11769" class="blob-num js-line-number" data-line-number="11769"></td>
        <td id="LC11769" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11770" class="blob-num js-line-number" data-line-number="11770"></td>
        <td id="LC11770" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11771" class="blob-num js-line-number" data-line-number="11771"></td>
        <td id="LC11771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The ngMousedown directive allows you to specify custom behavior on mousedown event.</span></td>
      </tr>
      <tr>
        <td id="L11772" class="blob-num js-line-number" data-line-number="11772"></td>
        <td id="LC11772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11773" class="blob-num js-line-number" data-line-number="11773"></td>
        <td id="LC11773" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11774" class="blob-num js-line-number" data-line-number="11774"></td>
        <td id="LC11774" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMousedown {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11775" class="blob-num js-line-number" data-line-number="11775"></td>
        <td id="LC11775" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mousedown. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11776" class="blob-num js-line-number" data-line-number="11776"></td>
        <td id="LC11776" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11777" class="blob-num js-line-number" data-line-number="11777"></td>
        <td id="LC11777" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11778" class="blob-num js-line-number" data-line-number="11778"></td>
        <td id="LC11778" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11779" class="blob-num js-line-number" data-line-number="11779"></td>
        <td id="LC11779" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11780" class="blob-num js-line-number" data-line-number="11780"></td>
        <td id="LC11780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11781" class="blob-num js-line-number" data-line-number="11781"></td>
        <td id="LC11781" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11782" class="blob-num js-line-number" data-line-number="11782"></td>
        <td id="LC11782" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11783" class="blob-num js-line-number" data-line-number="11783"></td>
        <td id="LC11783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11784" class="blob-num js-line-number" data-line-number="11784"></td>
        <td id="LC11784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMouseup</span></td>
      </tr>
      <tr>
        <td id="L11785" class="blob-num js-line-number" data-line-number="11785"></td>
        <td id="LC11785" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11786" class="blob-num js-line-number" data-line-number="11786"></td>
        <td id="LC11786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11787" class="blob-num js-line-number" data-line-number="11787"></td>
        <td id="LC11787" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Specify custom behavior on mouseup event.</span></td>
      </tr>
      <tr>
        <td id="L11788" class="blob-num js-line-number" data-line-number="11788"></td>
        <td id="LC11788" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11789" class="blob-num js-line-number" data-line-number="11789"></td>
        <td id="LC11789" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11790" class="blob-num js-line-number" data-line-number="11790"></td>
        <td id="LC11790" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMouseup {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11791" class="blob-num js-line-number" data-line-number="11791"></td>
        <td id="LC11791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mouseup. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11792" class="blob-num js-line-number" data-line-number="11792"></td>
        <td id="LC11792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11793" class="blob-num js-line-number" data-line-number="11793"></td>
        <td id="LC11793" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11794" class="blob-num js-line-number" data-line-number="11794"></td>
        <td id="LC11794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11795" class="blob-num js-line-number" data-line-number="11795"></td>
        <td id="LC11795" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11796" class="blob-num js-line-number" data-line-number="11796"></td>
        <td id="LC11796" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11797" class="blob-num js-line-number" data-line-number="11797"></td>
        <td id="LC11797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11798" class="blob-num js-line-number" data-line-number="11798"></td>
        <td id="LC11798" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11799" class="blob-num js-line-number" data-line-number="11799"></td>
        <td id="LC11799" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMouseover</span></td>
      </tr>
      <tr>
        <td id="L11800" class="blob-num js-line-number" data-line-number="11800"></td>
        <td id="LC11800" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11801" class="blob-num js-line-number" data-line-number="11801"></td>
        <td id="LC11801" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11802" class="blob-num js-line-number" data-line-number="11802"></td>
        <td id="LC11802" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Specify custom behavior on mouseover event.</span></td>
      </tr>
      <tr>
        <td id="L11803" class="blob-num js-line-number" data-line-number="11803"></td>
        <td id="LC11803" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11804" class="blob-num js-line-number" data-line-number="11804"></td>
        <td id="LC11804" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11805" class="blob-num js-line-number" data-line-number="11805"></td>
        <td id="LC11805" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMouseover {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11806" class="blob-num js-line-number" data-line-number="11806"></td>
        <td id="LC11806" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mouseover. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11807" class="blob-num js-line-number" data-line-number="11807"></td>
        <td id="LC11807" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11808" class="blob-num js-line-number" data-line-number="11808"></td>
        <td id="LC11808" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11809" class="blob-num js-line-number" data-line-number="11809"></td>
        <td id="LC11809" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11810" class="blob-num js-line-number" data-line-number="11810"></td>
        <td id="LC11810" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11811" class="blob-num js-line-number" data-line-number="11811"></td>
        <td id="LC11811" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11812" class="blob-num js-line-number" data-line-number="11812"></td>
        <td id="LC11812" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11813" class="blob-num js-line-number" data-line-number="11813"></td>
        <td id="LC11813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11814" class="blob-num js-line-number" data-line-number="11814"></td>
        <td id="LC11814" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11815" class="blob-num js-line-number" data-line-number="11815"></td>
        <td id="LC11815" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMouseenter</span></td>
      </tr>
      <tr>
        <td id="L11816" class="blob-num js-line-number" data-line-number="11816"></td>
        <td id="LC11816" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11817" class="blob-num js-line-number" data-line-number="11817"></td>
        <td id="LC11817" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11818" class="blob-num js-line-number" data-line-number="11818"></td>
        <td id="LC11818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Specify custom behavior on mouseenter event.</span></td>
      </tr>
      <tr>
        <td id="L11819" class="blob-num js-line-number" data-line-number="11819"></td>
        <td id="LC11819" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11820" class="blob-num js-line-number" data-line-number="11820"></td>
        <td id="LC11820" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11821" class="blob-num js-line-number" data-line-number="11821"></td>
        <td id="LC11821" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMouseenter {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11822" class="blob-num js-line-number" data-line-number="11822"></td>
        <td id="LC11822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mouseenter. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11823" class="blob-num js-line-number" data-line-number="11823"></td>
        <td id="LC11823" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11824" class="blob-num js-line-number" data-line-number="11824"></td>
        <td id="LC11824" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11825" class="blob-num js-line-number" data-line-number="11825"></td>
        <td id="LC11825" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11826" class="blob-num js-line-number" data-line-number="11826"></td>
        <td id="LC11826" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11827" class="blob-num js-line-number" data-line-number="11827"></td>
        <td id="LC11827" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11828" class="blob-num js-line-number" data-line-number="11828"></td>
        <td id="LC11828" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11829" class="blob-num js-line-number" data-line-number="11829"></td>
        <td id="LC11829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11830" class="blob-num js-line-number" data-line-number="11830"></td>
        <td id="LC11830" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11831" class="blob-num js-line-number" data-line-number="11831"></td>
        <td id="LC11831" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMouseleave</span></td>
      </tr>
      <tr>
        <td id="L11832" class="blob-num js-line-number" data-line-number="11832"></td>
        <td id="LC11832" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11833" class="blob-num js-line-number" data-line-number="11833"></td>
        <td id="LC11833" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11834" class="blob-num js-line-number" data-line-number="11834"></td>
        <td id="LC11834" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Specify custom behavior on mouseleave event.</span></td>
      </tr>
      <tr>
        <td id="L11835" class="blob-num js-line-number" data-line-number="11835"></td>
        <td id="LC11835" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11836" class="blob-num js-line-number" data-line-number="11836"></td>
        <td id="LC11836" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11837" class="blob-num js-line-number" data-line-number="11837"></td>
        <td id="LC11837" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMouseleave {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11838" class="blob-num js-line-number" data-line-number="11838"></td>
        <td id="LC11838" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mouseleave. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11839" class="blob-num js-line-number" data-line-number="11839"></td>
        <td id="LC11839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11840" class="blob-num js-line-number" data-line-number="11840"></td>
        <td id="LC11840" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11841" class="blob-num js-line-number" data-line-number="11841"></td>
        <td id="LC11841" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11842" class="blob-num js-line-number" data-line-number="11842"></td>
        <td id="LC11842" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11843" class="blob-num js-line-number" data-line-number="11843"></td>
        <td id="LC11843" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11844" class="blob-num js-line-number" data-line-number="11844"></td>
        <td id="LC11844" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11845" class="blob-num js-line-number" data-line-number="11845"></td>
        <td id="LC11845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11846" class="blob-num js-line-number" data-line-number="11846"></td>
        <td id="LC11846" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11847" class="blob-num js-line-number" data-line-number="11847"></td>
        <td id="LC11847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngMousemove</span></td>
      </tr>
      <tr>
        <td id="L11848" class="blob-num js-line-number" data-line-number="11848"></td>
        <td id="LC11848" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11849" class="blob-num js-line-number" data-line-number="11849"></td>
        <td id="LC11849" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11850" class="blob-num js-line-number" data-line-number="11850"></td>
        <td id="LC11850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Specify custom behavior on mousemove event.</span></td>
      </tr>
      <tr>
        <td id="L11851" class="blob-num js-line-number" data-line-number="11851"></td>
        <td id="LC11851" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11852" class="blob-num js-line-number" data-line-number="11852"></td>
        <td id="LC11852" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L11853" class="blob-num js-line-number" data-line-number="11853"></td>
        <td id="LC11853" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngMousemove {@link guide/dev_guide.expressions Expression} to evaluate upon</span></td>
      </tr>
      <tr>
        <td id="L11854" class="blob-num js-line-number" data-line-number="11854"></td>
        <td id="LC11854" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * mousemove. (Event object is available as `$event`)</span></td>
      </tr>
      <tr>
        <td id="L11855" class="blob-num js-line-number" data-line-number="11855"></td>
        <td id="LC11855" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11856" class="blob-num js-line-number" data-line-number="11856"></td>
        <td id="LC11856" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11857" class="blob-num js-line-number" data-line-number="11857"></td>
        <td id="LC11857" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * See {@link angular.module.ng.$compileProvider.directive.ngClick ngClick}</span></td>
      </tr>
      <tr>
        <td id="L11858" class="blob-num js-line-number" data-line-number="11858"></td>
        <td id="LC11858" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11859" class="blob-num js-line-number" data-line-number="11859"></td>
        <td id="LC11859" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11860" class="blob-num js-line-number" data-line-number="11860"></td>
        <td id="LC11860" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11861" class="blob-num js-line-number" data-line-number="11861"></td>
        <td id="LC11861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11862" class="blob-num js-line-number" data-line-number="11862"></td>
        <td id="LC11862" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11863" class="blob-num js-line-number" data-line-number="11863"></td>
        <td id="LC11863" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngSubmit</span></td>
      </tr>
      <tr>
        <td id="L11864" class="blob-num js-line-number" data-line-number="11864"></td>
        <td id="LC11864" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11865" class="blob-num js-line-number" data-line-number="11865"></td>
        <td id="LC11865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11866" class="blob-num js-line-number" data-line-number="11866"></td>
        <td id="LC11866" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Enables binding angular expressions to onsubmit events.</span></td>
      </tr>
      <tr>
        <td id="L11867" class="blob-num js-line-number" data-line-number="11867"></td>
        <td id="LC11867" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11868" class="blob-num js-line-number" data-line-number="11868"></td>
        <td id="LC11868" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Additionally it prevents the default action (which for form means sending the request to the</span></td>
      </tr>
      <tr>
        <td id="L11869" class="blob-num js-line-number" data-line-number="11869"></td>
        <td id="LC11869" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * server and reloading the current page).</span></td>
      </tr>
      <tr>
        <td id="L11870" class="blob-num js-line-number" data-line-number="11870"></td>
        <td id="LC11870" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11871" class="blob-num js-line-number" data-line-number="11871"></td>
        <td id="LC11871" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element form</span></td>
      </tr>
      <tr>
        <td id="L11872" class="blob-num js-line-number" data-line-number="11872"></td>
        <td id="LC11872" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngSubmit {@link guide/dev_guide.expressions Expression} to eval.</span></td>
      </tr>
      <tr>
        <td id="L11873" class="blob-num js-line-number" data-line-number="11873"></td>
        <td id="LC11873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11874" class="blob-num js-line-number" data-line-number="11874"></td>
        <td id="LC11874" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11875" class="blob-num js-line-number" data-line-number="11875"></td>
        <td id="LC11875" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11876" class="blob-num js-line-number" data-line-number="11876"></td>
        <td id="LC11876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11877" class="blob-num js-line-number" data-line-number="11877"></td>
        <td id="LC11877" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11878" class="blob-num js-line-number" data-line-number="11878"></td>
        <td id="LC11878" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11879" class="blob-num js-line-number" data-line-number="11879"></td>
        <td id="LC11879" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.list = [];</span></td>
      </tr>
      <tr>
        <td id="L11880" class="blob-num js-line-number" data-line-number="11880"></td>
        <td id="LC11880" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.text = &#39;hello&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11881" class="blob-num js-line-number" data-line-number="11881"></td>
        <td id="LC11881" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.submit = function() {</span></td>
      </tr>
      <tr>
        <td id="L11882" class="blob-num js-line-number" data-line-number="11882"></td>
        <td id="LC11882" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            if (this.text) {</span></td>
      </tr>
      <tr>
        <td id="L11883" class="blob-num js-line-number" data-line-number="11883"></td>
        <td id="LC11883" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              this.list.push(this.text);</span></td>
      </tr>
      <tr>
        <td id="L11884" class="blob-num js-line-number" data-line-number="11884"></td>
        <td id="LC11884" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              this.text = &#39;&#39;;</span></td>
      </tr>
      <tr>
        <td id="L11885" class="blob-num js-line-number" data-line-number="11885"></td>
        <td id="LC11885" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            }</span></td>
      </tr>
      <tr>
        <td id="L11886" class="blob-num js-line-number" data-line-number="11886"></td>
        <td id="LC11886" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          };</span></td>
      </tr>
      <tr>
        <td id="L11887" class="blob-num js-line-number" data-line-number="11887"></td>
        <td id="LC11887" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        }</span></td>
      </tr>
      <tr>
        <td id="L11888" class="blob-num js-line-number" data-line-number="11888"></td>
        <td id="LC11888" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11889" class="blob-num js-line-number" data-line-number="11889"></td>
        <td id="LC11889" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;form ng-submit=&quot;submit()&quot; ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11890" class="blob-num js-line-number" data-line-number="11890"></td>
        <td id="LC11890" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Enter text and hit enter:</span></td>
      </tr>
      <tr>
        <td id="L11891" class="blob-num js-line-number" data-line-number="11891"></td>
        <td id="LC11891" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input type=&quot;text&quot; ng-model=&quot;text&quot; name=&quot;text&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11892" class="blob-num js-line-number" data-line-number="11892"></td>
        <td id="LC11892" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input type=&quot;submit&quot; id=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span></td>
      </tr>
      <tr>
        <td id="L11893" class="blob-num js-line-number" data-line-number="11893"></td>
        <td id="LC11893" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;pre&gt;list={{list}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L11894" class="blob-num js-line-number" data-line-number="11894"></td>
        <td id="LC11894" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/form&gt;</span></td>
      </tr>
      <tr>
        <td id="L11895" class="blob-num js-line-number" data-line-number="11895"></td>
        <td id="LC11895" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11896" class="blob-num js-line-number" data-line-number="11896"></td>
        <td id="LC11896" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11897" class="blob-num js-line-number" data-line-number="11897"></td>
        <td id="LC11897" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-submit&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11898" class="blob-num js-line-number" data-line-number="11898"></td>
        <td id="LC11898" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;list&#39;)).toBe(&#39;[]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11899" class="blob-num js-line-number" data-line-number="11899"></td>
        <td id="LC11899" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live #submit&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11900" class="blob-num js-line-number" data-line-number="11900"></td>
        <td id="LC11900" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;list&#39;)).toBe(&#39;[&quot;hello&quot;]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11901" class="blob-num js-line-number" data-line-number="11901"></td>
        <td id="LC11901" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(input(&#39;text&#39;).val()).toBe(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11902" class="blob-num js-line-number" data-line-number="11902"></td>
        <td id="LC11902" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11903" class="blob-num js-line-number" data-line-number="11903"></td>
        <td id="LC11903" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should ignore empty strings&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11904" class="blob-num js-line-number" data-line-number="11904"></td>
        <td id="LC11904" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;list&#39;)).toBe(&#39;[]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11905" class="blob-num js-line-number" data-line-number="11905"></td>
        <td id="LC11905" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live #submit&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11906" class="blob-num js-line-number" data-line-number="11906"></td>
        <td id="LC11906" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live #submit&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L11907" class="blob-num js-line-number" data-line-number="11907"></td>
        <td id="LC11907" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;list&#39;)).toBe(&#39;[&quot;hello&quot;]&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11908" class="blob-num js-line-number" data-line-number="11908"></td>
        <td id="LC11908" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L11909" class="blob-num js-line-number" data-line-number="11909"></td>
        <td id="LC11909" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11910" class="blob-num js-line-number" data-line-number="11910"></td>
        <td id="LC11910" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11911" class="blob-num js-line-number" data-line-number="11911"></td>
        <td id="LC11911" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11912" class="blob-num js-line-number" data-line-number="11912"></td>
        <td id="LC11912" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngSubmitDirective <span class="pl-k">=</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attrs</span>) {</td>
      </tr>
      <tr>
        <td id="L11913" class="blob-num js-line-number" data-line-number="11913"></td>
        <td id="LC11913" class="blob-code blob-code-inner js-file-line">  element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>submit<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L11914" class="blob-num js-line-number" data-line-number="11914"></td>
        <td id="LC11914" class="blob-code blob-code-inner js-file-line">    scope.$<span class="pl-c1">apply</span>(attrs.ngSubmit);</td>
      </tr>
      <tr>
        <td id="L11915" class="blob-num js-line-number" data-line-number="11915"></td>
        <td id="LC11915" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L11916" class="blob-num js-line-number" data-line-number="11916"></td>
        <td id="LC11916" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L11917" class="blob-num js-line-number" data-line-number="11917"></td>
        <td id="LC11917" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11918" class="blob-num js-line-number" data-line-number="11918"></td>
        <td id="LC11918" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11919" class="blob-num js-line-number" data-line-number="11919"></td>
        <td id="LC11919" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L11920" class="blob-num js-line-number" data-line-number="11920"></td>
        <td id="LC11920" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngInclude</span></td>
      </tr>
      <tr>
        <td id="L11921" class="blob-num js-line-number" data-line-number="11921"></td>
        <td id="LC11921" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict ECA</span></td>
      </tr>
      <tr>
        <td id="L11922" class="blob-num js-line-number" data-line-number="11922"></td>
        <td id="LC11922" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11923" class="blob-num js-line-number" data-line-number="11923"></td>
        <td id="LC11923" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11924" class="blob-num js-line-number" data-line-number="11924"></td>
        <td id="LC11924" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Fetches, compiles and includes an external HTML fragment.</span></td>
      </tr>
      <tr>
        <td id="L11925" class="blob-num js-line-number" data-line-number="11925"></td>
        <td id="LC11925" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11926" class="blob-num js-line-number" data-line-number="11926"></td>
        <td id="LC11926" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Keep in mind that Same Origin Policy applies to included resources</span></td>
      </tr>
      <tr>
        <td id="L11927" class="blob-num js-line-number" data-line-number="11927"></td>
        <td id="LC11927" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (e.g. ngInclude won&#39;t work for cross-domain requests on all browsers and for</span></td>
      </tr>
      <tr>
        <td id="L11928" class="blob-num js-line-number" data-line-number="11928"></td>
        <td id="LC11928" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  file:// access on some browsers).</span></td>
      </tr>
      <tr>
        <td id="L11929" class="blob-num js-line-number" data-line-number="11929"></td>
        <td id="LC11929" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11930" class="blob-num js-line-number" data-line-number="11930"></td>
        <td id="LC11930" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @scope</span></td>
      </tr>
      <tr>
        <td id="L11931" class="blob-num js-line-number" data-line-number="11931"></td>
        <td id="LC11931" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11932" class="blob-num js-line-number" data-line-number="11932"></td>
        <td id="LC11932" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} ngInclude|src angular expression evaluating to URL. If the source is a string constant,</span></td>
      </tr>
      <tr>
        <td id="L11933" class="blob-num js-line-number" data-line-number="11933"></td>
        <td id="LC11933" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                 make sure you wrap it in quotes, e.g. `src=&quot;&#39;myPartialTemplate.html&#39;&quot;`.</span></td>
      </tr>
      <tr>
        <td id="L11934" class="blob-num js-line-number" data-line-number="11934"></td>
        <td id="LC11934" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} onload Expression to evaluate when a new partial is loaded.</span></td>
      </tr>
      <tr>
        <td id="L11935" class="blob-num js-line-number" data-line-number="11935"></td>
        <td id="LC11935" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11936" class="blob-num js-line-number" data-line-number="11936"></td>
        <td id="LC11936" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} autoscroll Whether `ngInclude` should call {@link angular.module.ng.$anchorScroll</span></td>
      </tr>
      <tr>
        <td id="L11937" class="blob-num js-line-number" data-line-number="11937"></td>
        <td id="LC11937" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                  $anchorScroll} to scroll the viewport after the content is loaded.</span></td>
      </tr>
      <tr>
        <td id="L11938" class="blob-num js-line-number" data-line-number="11938"></td>
        <td id="LC11938" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11939" class="blob-num js-line-number" data-line-number="11939"></td>
        <td id="LC11939" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                  - If the attribute is not set, disable scrolling.</span></td>
      </tr>
      <tr>
        <td id="L11940" class="blob-num js-line-number" data-line-number="11940"></td>
        <td id="LC11940" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                  - If the attribute is set without value, enable scrolling.</span></td>
      </tr>
      <tr>
        <td id="L11941" class="blob-num js-line-number" data-line-number="11941"></td>
        <td id="LC11941" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                  - Otherwise enable scrolling only if the expression evaluates to truthy value.</span></td>
      </tr>
      <tr>
        <td id="L11942" class="blob-num js-line-number" data-line-number="11942"></td>
        <td id="LC11942" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L11943" class="blob-num js-line-number" data-line-number="11943"></td>
        <td id="LC11943" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L11944" class="blob-num js-line-number" data-line-number="11944"></td>
        <td id="LC11944" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11945" class="blob-num js-line-number" data-line-number="11945"></td>
        <td id="LC11945" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source jsfiddle=&quot;false&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11946" class="blob-num js-line-number" data-line-number="11946"></td>
        <td id="LC11946" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11947" class="blob-num js-line-number" data-line-number="11947"></td>
        <td id="LC11947" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L11948" class="blob-num js-line-number" data-line-number="11948"></td>
        <td id="LC11948" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.templates =</span></td>
      </tr>
      <tr>
        <td id="L11949" class="blob-num js-line-number" data-line-number="11949"></td>
        <td id="LC11949" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             [ { name: &#39;template1.html&#39;, url: &#39;examples/ng-include/template1.html&#39;}</span></td>
      </tr>
      <tr>
        <td id="L11950" class="blob-num js-line-number" data-line-number="11950"></td>
        <td id="LC11950" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             , { name: &#39;template2.html&#39;, url: &#39;examples/ng-include/template2.html&#39;} ];</span></td>
      </tr>
      <tr>
        <td id="L11951" class="blob-num js-line-number" data-line-number="11951"></td>
        <td id="LC11951" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.template = $scope.templates[0];</span></td>
      </tr>
      <tr>
        <td id="L11952" class="blob-num js-line-number" data-line-number="11952"></td>
        <td id="LC11952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L11953" class="blob-num js-line-number" data-line-number="11953"></td>
        <td id="LC11953" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L11954" class="blob-num js-line-number" data-line-number="11954"></td>
        <td id="LC11954" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11955" class="blob-num js-line-number" data-line-number="11955"></td>
        <td id="LC11955" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;select ng-model=&quot;template&quot; ng-options=&quot;t.name for t in templates&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L11956" class="blob-num js-line-number" data-line-number="11956"></td>
        <td id="LC11956" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;option value=&quot;&quot;&gt;(blank)&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L11957" class="blob-num js-line-number" data-line-number="11957"></td>
        <td id="LC11957" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L11958" class="blob-num js-line-number" data-line-number="11958"></td>
        <td id="LC11958" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         url of the template: &lt;tt&gt;&lt;a href=&quot;{{template.url}}&quot;&gt;{{template.url}}&lt;/a&gt;&lt;/tt&gt;</span></td>
      </tr>
      <tr>
        <td id="L11959" class="blob-num js-line-number" data-line-number="11959"></td>
        <td id="LC11959" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;hr/&gt;</span></td>
      </tr>
      <tr>
        <td id="L11960" class="blob-num js-line-number" data-line-number="11960"></td>
        <td id="LC11960" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;div ng-include src=&quot;template.url&quot;&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11961" class="blob-num js-line-number" data-line-number="11961"></td>
        <td id="LC11961" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L11962" class="blob-num js-line-number" data-line-number="11962"></td>
        <td id="LC11962" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L11963" class="blob-num js-line-number" data-line-number="11963"></td>
        <td id="LC11963" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11964" class="blob-num js-line-number" data-line-number="11964"></td>
        <td id="LC11964" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should load template1.html&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11965" class="blob-num js-line-number" data-line-number="11965"></td>
        <td id="LC11965" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L11966" class="blob-num js-line-number" data-line-number="11966"></td>
        <td id="LC11966" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;Content of template1.html\n&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11967" class="blob-num js-line-number" data-line-number="11967"></td>
        <td id="LC11967" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L11968" class="blob-num js-line-number" data-line-number="11968"></td>
        <td id="LC11968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should load template2.html&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11969" class="blob-num js-line-number" data-line-number="11969"></td>
        <td id="LC11969" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         select(&#39;template&#39;).option(&#39;1&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11970" class="blob-num js-line-number" data-line-number="11970"></td>
        <td id="LC11970" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L11971" class="blob-num js-line-number" data-line-number="11971"></td>
        <td id="LC11971" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toBe(&#39;Content of template2.html\n&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11972" class="blob-num js-line-number" data-line-number="11972"></td>
        <td id="LC11972" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L11973" class="blob-num js-line-number" data-line-number="11973"></td>
        <td id="LC11973" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should change to blank&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L11974" class="blob-num js-line-number" data-line-number="11974"></td>
        <td id="LC11974" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         select(&#39;template&#39;).option(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11975" class="blob-num js-line-number" data-line-number="11975"></td>
        <td id="LC11975" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-include]&#39;).text()).toEqual(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L11976" class="blob-num js-line-number" data-line-number="11976"></td>
        <td id="LC11976" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L11977" class="blob-num js-line-number" data-line-number="11977"></td>
        <td id="LC11977" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L11978" class="blob-num js-line-number" data-line-number="11978"></td>
        <td id="LC11978" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L11979" class="blob-num js-line-number" data-line-number="11979"></td>
        <td id="LC11979" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11980" class="blob-num js-line-number" data-line-number="11980"></td>
        <td id="LC11980" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11981" class="blob-num js-line-number" data-line-number="11981"></td>
        <td id="LC11981" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L11982" class="blob-num js-line-number" data-line-number="11982"></td>
        <td id="LC11982" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L11983" class="blob-num js-line-number" data-line-number="11983"></td>
        <td id="LC11983" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L11984" class="blob-num js-line-number" data-line-number="11984"></td>
        <td id="LC11984" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngInclude#$includeContentLoaded</span></td>
      </tr>
      <tr>
        <td id="L11985" class="blob-num js-line-number" data-line-number="11985"></td>
        <td id="LC11985" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @eventOf angular.module.ng.$compileProvider.directive.ngInclude</span></td>
      </tr>
      <tr>
        <td id="L11986" class="blob-num js-line-number" data-line-number="11986"></td>
        <td id="LC11986" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @eventType emit on the current ngInclude scope</span></td>
      </tr>
      <tr>
        <td id="L11987" class="blob-num js-line-number" data-line-number="11987"></td>
        <td id="LC11987" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L11988" class="blob-num js-line-number" data-line-number="11988"></td>
        <td id="LC11988" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Emitted every time the ngInclude content is reloaded.</span></td>
      </tr>
      <tr>
        <td id="L11989" class="blob-num js-line-number" data-line-number="11989"></td>
        <td id="LC11989" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L11990" class="blob-num js-line-number" data-line-number="11990"></td>
        <td id="LC11990" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngIncludeDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$http<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$templateCache<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$anchorScroll<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$compile<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11991" class="blob-num js-line-number" data-line-number="11991"></td>
        <td id="LC11991" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">function</span>(<span class="pl-smi">$http</span>,   <span class="pl-smi">$templateCache</span>,   <span class="pl-smi">$anchorScroll</span>,   <span class="pl-smi">$compile</span>) {</td>
      </tr>
      <tr>
        <td id="L11992" class="blob-num js-line-number" data-line-number="11992"></td>
        <td id="LC11992" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L11993" class="blob-num js-line-number" data-line-number="11993"></td>
        <td id="LC11993" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ECA<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11994" class="blob-num js-line-number" data-line-number="11994"></td>
        <td id="LC11994" class="blob-code blob-code-inner js-file-line">    terminal<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L11995" class="blob-num js-line-number" data-line-number="11995"></td>
        <td id="LC11995" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L11996" class="blob-num js-line-number" data-line-number="11996"></td>
        <td id="LC11996" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> srcExp <span class="pl-k">=</span> attr.ngInclude <span class="pl-k">||</span> attr.src,</td>
      </tr>
      <tr>
        <td id="L11997" class="blob-num js-line-number" data-line-number="11997"></td>
        <td id="LC11997" class="blob-code blob-code-inner js-file-line">          onloadExp <span class="pl-k">=</span> attr.onload <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L11998" class="blob-num js-line-number" data-line-number="11998"></td>
        <td id="LC11998" class="blob-code blob-code-inner js-file-line">          autoScrollExp <span class="pl-k">=</span> attr.autoscroll;</td>
      </tr>
      <tr>
        <td id="L11999" class="blob-num js-line-number" data-line-number="11999"></td>
        <td id="LC11999" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12000" class="blob-num js-line-number" data-line-number="12000"></td>
        <td id="LC12000" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>) {</td>
      </tr>
      <tr>
        <td id="L12001" class="blob-num js-line-number" data-line-number="12001"></td>
        <td id="LC12001" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> changeCounter <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L12002" class="blob-num js-line-number" data-line-number="12002"></td>
        <td id="LC12002" class="blob-code blob-code-inner js-file-line">            childScope;</td>
      </tr>
      <tr>
        <td id="L12003" class="blob-num js-line-number" data-line-number="12003"></td>
        <td id="LC12003" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12004" class="blob-num js-line-number" data-line-number="12004"></td>
        <td id="LC12004" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">clearContent</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L12005" class="blob-num js-line-number" data-line-number="12005"></td>
        <td id="LC12005" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (childScope) {</td>
      </tr>
      <tr>
        <td id="L12006" class="blob-num js-line-number" data-line-number="12006"></td>
        <td id="LC12006" class="blob-code blob-code-inner js-file-line">            childScope.$destroy();</td>
      </tr>
      <tr>
        <td id="L12007" class="blob-num js-line-number" data-line-number="12007"></td>
        <td id="LC12007" class="blob-code blob-code-inner js-file-line">            childScope <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L12008" class="blob-num js-line-number" data-line-number="12008"></td>
        <td id="LC12008" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12009" class="blob-num js-line-number" data-line-number="12009"></td>
        <td id="LC12009" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12010" class="blob-num js-line-number" data-line-number="12010"></td>
        <td id="LC12010" class="blob-code blob-code-inner js-file-line">          element.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12011" class="blob-num js-line-number" data-line-number="12011"></td>
        <td id="LC12011" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L12012" class="blob-num js-line-number" data-line-number="12012"></td>
        <td id="LC12012" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12013" class="blob-num js-line-number" data-line-number="12013"></td>
        <td id="LC12013" class="blob-code blob-code-inner js-file-line">        scope.$<span class="pl-c1">watch</span>(srcExp, <span class="pl-k">function</span>(<span class="pl-smi">src</span>) {</td>
      </tr>
      <tr>
        <td id="L12014" class="blob-num js-line-number" data-line-number="12014"></td>
        <td id="LC12014" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> thisChangeId <span class="pl-k">=</span> <span class="pl-k">++</span>changeCounter;</td>
      </tr>
      <tr>
        <td id="L12015" class="blob-num js-line-number" data-line-number="12015"></td>
        <td id="LC12015" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12016" class="blob-num js-line-number" data-line-number="12016"></td>
        <td id="LC12016" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (src) {</td>
      </tr>
      <tr>
        <td id="L12017" class="blob-num js-line-number" data-line-number="12017"></td>
        <td id="LC12017" class="blob-code blob-code-inner js-file-line">            $http.get(src, {cache<span class="pl-k">:</span> $templateCache}).success(<span class="pl-k">function</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L12018" class="blob-num js-line-number" data-line-number="12018"></td>
        <td id="LC12018" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (thisChangeId <span class="pl-k">!==</span> changeCounter) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L12019" class="blob-num js-line-number" data-line-number="12019"></td>
        <td id="LC12019" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12020" class="blob-num js-line-number" data-line-number="12020"></td>
        <td id="LC12020" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (childScope) childScope.$destroy();</td>
      </tr>
      <tr>
        <td id="L12021" class="blob-num js-line-number" data-line-number="12021"></td>
        <td id="LC12021" class="blob-code blob-code-inner js-file-line">              childScope <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>();</td>
      </tr>
      <tr>
        <td id="L12022" class="blob-num js-line-number" data-line-number="12022"></td>
        <td id="LC12022" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12023" class="blob-num js-line-number" data-line-number="12023"></td>
        <td id="LC12023" class="blob-code blob-code-inner js-file-line">              element.html(response);</td>
      </tr>
      <tr>
        <td id="L12024" class="blob-num js-line-number" data-line-number="12024"></td>
        <td id="LC12024" class="blob-code blob-code-inner js-file-line">              $<span class="pl-c1">compile</span>(element.contents())(childScope);</td>
      </tr>
      <tr>
        <td id="L12025" class="blob-num js-line-number" data-line-number="12025"></td>
        <td id="LC12025" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12026" class="blob-num js-line-number" data-line-number="12026"></td>
        <td id="LC12026" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (isDefined(autoScrollExp) <span class="pl-k">&amp;&amp;</span> (<span class="pl-k">!</span>autoScrollExp <span class="pl-k">||</span> scope.$<span class="pl-c1">eval</span>(autoScrollExp))) {</td>
      </tr>
      <tr>
        <td id="L12027" class="blob-num js-line-number" data-line-number="12027"></td>
        <td id="LC12027" class="blob-code blob-code-inner js-file-line">                $anchorScroll();</td>
      </tr>
      <tr>
        <td id="L12028" class="blob-num js-line-number" data-line-number="12028"></td>
        <td id="LC12028" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L12029" class="blob-num js-line-number" data-line-number="12029"></td>
        <td id="LC12029" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12030" class="blob-num js-line-number" data-line-number="12030"></td>
        <td id="LC12030" class="blob-code blob-code-inner js-file-line">              childScope.$emit(<span class="pl-s"><span class="pl-pds">&#39;</span>$includeContentLoaded<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12031" class="blob-num js-line-number" data-line-number="12031"></td>
        <td id="LC12031" class="blob-code blob-code-inner js-file-line">              scope.$<span class="pl-c1">eval</span>(onloadExp);</td>
      </tr>
      <tr>
        <td id="L12032" class="blob-num js-line-number" data-line-number="12032"></td>
        <td id="LC12032" class="blob-code blob-code-inner js-file-line">            })<span class="pl-c1">.error</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L12033" class="blob-num js-line-number" data-line-number="12033"></td>
        <td id="LC12033" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (thisChangeId <span class="pl-k">===</span> changeCounter) clearContent();</td>
      </tr>
      <tr>
        <td id="L12034" class="blob-num js-line-number" data-line-number="12034"></td>
        <td id="LC12034" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L12035" class="blob-num js-line-number" data-line-number="12035"></td>
        <td id="LC12035" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> clearContent();</td>
      </tr>
      <tr>
        <td id="L12036" class="blob-num js-line-number" data-line-number="12036"></td>
        <td id="LC12036" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L12037" class="blob-num js-line-number" data-line-number="12037"></td>
        <td id="LC12037" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L12038" class="blob-num js-line-number" data-line-number="12038"></td>
        <td id="LC12038" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12039" class="blob-num js-line-number" data-line-number="12039"></td>
        <td id="LC12039" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L12040" class="blob-num js-line-number" data-line-number="12040"></td>
        <td id="LC12040" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L12041" class="blob-num js-line-number" data-line-number="12041"></td>
        <td id="LC12041" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12042" class="blob-num js-line-number" data-line-number="12042"></td>
        <td id="LC12042" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12043" class="blob-num js-line-number" data-line-number="12043"></td>
        <td id="LC12043" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12044" class="blob-num js-line-number" data-line-number="12044"></td>
        <td id="LC12044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngInit</span></td>
      </tr>
      <tr>
        <td id="L12045" class="blob-num js-line-number" data-line-number="12045"></td>
        <td id="LC12045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12046" class="blob-num js-line-number" data-line-number="12046"></td>
        <td id="LC12046" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12047" class="blob-num js-line-number" data-line-number="12047"></td>
        <td id="LC12047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngInit` directive specifies initialization tasks to be executed</span></td>
      </tr>
      <tr>
        <td id="L12048" class="blob-num js-line-number" data-line-number="12048"></td>
        <td id="LC12048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *  before the template enters execution mode during bootstrap.</span></td>
      </tr>
      <tr>
        <td id="L12049" class="blob-num js-line-number" data-line-number="12049"></td>
        <td id="LC12049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12050" class="blob-num js-line-number" data-line-number="12050"></td>
        <td id="LC12050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12051" class="blob-num js-line-number" data-line-number="12051"></td>
        <td id="LC12051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngInit {@link guide/dev_guide.expressions Expression} to eval.</span></td>
      </tr>
      <tr>
        <td id="L12052" class="blob-num js-line-number" data-line-number="12052"></td>
        <td id="LC12052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12053" class="blob-num js-line-number" data-line-number="12053"></td>
        <td id="LC12053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12054" class="blob-num js-line-number" data-line-number="12054"></td>
        <td id="LC12054" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12055" class="blob-num js-line-number" data-line-number="12055"></td>
        <td id="LC12055" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12056" class="blob-num js-line-number" data-line-number="12056"></td>
        <td id="LC12056" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;div ng-init=&quot;greeting=&#39;Hello&#39;; person=&#39;World&#39;&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12057" class="blob-num js-line-number" data-line-number="12057"></td>
        <td id="LC12057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      {{greeting}} {{person}}!</span></td>
      </tr>
      <tr>
        <td id="L12058" class="blob-num js-line-number" data-line-number="12058"></td>
        <td id="LC12058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12059" class="blob-num js-line-number" data-line-number="12059"></td>
        <td id="LC12059" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12060" class="blob-num js-line-number" data-line-number="12060"></td>
        <td id="LC12060" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12061" class="blob-num js-line-number" data-line-number="12061"></td>
        <td id="LC12061" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check greeting&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12062" class="blob-num js-line-number" data-line-number="12062"></td>
        <td id="LC12062" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;greeting&#39;)).toBe(&#39;Hello&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12063" class="blob-num js-line-number" data-line-number="12063"></td>
        <td id="LC12063" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(binding(&#39;person&#39;)).toBe(&#39;World&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12064" class="blob-num js-line-number" data-line-number="12064"></td>
        <td id="LC12064" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L12065" class="blob-num js-line-number" data-line-number="12065"></td>
        <td id="LC12065" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12066" class="blob-num js-line-number" data-line-number="12066"></td>
        <td id="LC12066" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12067" class="blob-num js-line-number" data-line-number="12067"></td>
        <td id="LC12067" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12068" class="blob-num js-line-number" data-line-number="12068"></td>
        <td id="LC12068" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngInitDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L12069" class="blob-num js-line-number" data-line-number="12069"></td>
        <td id="LC12069" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L12070" class="blob-num js-line-number" data-line-number="12070"></td>
        <td id="LC12070" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L12071" class="blob-num js-line-number" data-line-number="12071"></td>
        <td id="LC12071" class="blob-code blob-code-inner js-file-line">      <span class="pl-en">pre</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attrs</span>) {</td>
      </tr>
      <tr>
        <td id="L12072" class="blob-num js-line-number" data-line-number="12072"></td>
        <td id="LC12072" class="blob-code blob-code-inner js-file-line">        scope.$<span class="pl-c1">eval</span>(attrs.ngInit);</td>
      </tr>
      <tr>
        <td id="L12073" class="blob-num js-line-number" data-line-number="12073"></td>
        <td id="LC12073" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12074" class="blob-num js-line-number" data-line-number="12074"></td>
        <td id="LC12074" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12075" class="blob-num js-line-number" data-line-number="12075"></td>
        <td id="LC12075" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12076" class="blob-num js-line-number" data-line-number="12076"></td>
        <td id="LC12076" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12077" class="blob-num js-line-number" data-line-number="12077"></td>
        <td id="LC12077" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12078" class="blob-num js-line-number" data-line-number="12078"></td>
        <td id="LC12078" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12079" class="blob-num js-line-number" data-line-number="12079"></td>
        <td id="LC12079" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12080" class="blob-num js-line-number" data-line-number="12080"></td>
        <td id="LC12080" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngNonBindable</span></td>
      </tr>
      <tr>
        <td id="L12081" class="blob-num js-line-number" data-line-number="12081"></td>
        <td id="LC12081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @priority 1000</span></td>
      </tr>
      <tr>
        <td id="L12082" class="blob-num js-line-number" data-line-number="12082"></td>
        <td id="LC12082" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12083" class="blob-num js-line-number" data-line-number="12083"></td>
        <td id="LC12083" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12084" class="blob-num js-line-number" data-line-number="12084"></td>
        <td id="LC12084" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Sometimes it is necessary to write code which looks like bindings but which should be left alone</span></td>
      </tr>
      <tr>
        <td id="L12085" class="blob-num js-line-number" data-line-number="12085"></td>
        <td id="LC12085" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * by angular. Use `ngNonBindable` to make angular ignore a chunk of HTML.</span></td>
      </tr>
      <tr>
        <td id="L12086" class="blob-num js-line-number" data-line-number="12086"></td>
        <td id="LC12086" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12087" class="blob-num js-line-number" data-line-number="12087"></td>
        <td id="LC12087" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12088" class="blob-num js-line-number" data-line-number="12088"></td>
        <td id="LC12088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12089" class="blob-num js-line-number" data-line-number="12089"></td>
        <td id="LC12089" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12090" class="blob-num js-line-number" data-line-number="12090"></td>
        <td id="LC12090" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In this example there are two location where a simple binding (`{{}}`) is present, but the one</span></td>
      </tr>
      <tr>
        <td id="L12091" class="blob-num js-line-number" data-line-number="12091"></td>
        <td id="LC12091" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * wrapped in `ngNonBindable` is left alone.</span></td>
      </tr>
      <tr>
        <td id="L12092" class="blob-num js-line-number" data-line-number="12092"></td>
        <td id="LC12092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12093" class="blob-num js-line-number" data-line-number="12093"></td>
        <td id="LC12093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12094" class="blob-num js-line-number" data-line-number="12094"></td>
        <td id="LC12094" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12095" class="blob-num js-line-number" data-line-number="12095"></td>
        <td id="LC12095" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12096" class="blob-num js-line-number" data-line-number="12096"></td>
        <td id="LC12096" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div&gt;Normal: {{1 + 2}}&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12097" class="blob-num js-line-number" data-line-number="12097"></td>
        <td id="LC12097" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-non-bindable&gt;Ignored: {{1 + 2}}&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12098" class="blob-num js-line-number" data-line-number="12098"></td>
        <td id="LC12098" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12099" class="blob-num js-line-number" data-line-number="12099"></td>
        <td id="LC12099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12100" class="blob-num js-line-number" data-line-number="12100"></td>
        <td id="LC12100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-non-bindable&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12101" class="blob-num js-line-number" data-line-number="12101"></td>
        <td id="LC12101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).binding(&#39;1 + 2&#39;)).toBe(&#39;3&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12102" class="blob-num js-line-number" data-line-number="12102"></td>
        <td id="LC12102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(using(&#39;.doc-example-live&#39;).element(&#39;div:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12103" class="blob-num js-line-number" data-line-number="12103"></td>
        <td id="LC12103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           toMatch(/1 \+ 2/);</span></td>
      </tr>
      <tr>
        <td id="L12104" class="blob-num js-line-number" data-line-number="12104"></td>
        <td id="LC12104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L12105" class="blob-num js-line-number" data-line-number="12105"></td>
        <td id="LC12105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12106" class="blob-num js-line-number" data-line-number="12106"></td>
        <td id="LC12106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12107" class="blob-num js-line-number" data-line-number="12107"></td>
        <td id="LC12107" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12108" class="blob-num js-line-number" data-line-number="12108"></td>
        <td id="LC12108" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngNonBindableDirective <span class="pl-k">=</span> ngDirective({ terminal<span class="pl-k">:</span> <span class="pl-c1">true</span>, priority<span class="pl-k">:</span> <span class="pl-c1">1000</span> });</td>
      </tr>
      <tr>
        <td id="L12109" class="blob-num js-line-number" data-line-number="12109"></td>
        <td id="LC12109" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12110" class="blob-num js-line-number" data-line-number="12110"></td>
        <td id="LC12110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12111" class="blob-num js-line-number" data-line-number="12111"></td>
        <td id="LC12111" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12112" class="blob-num js-line-number" data-line-number="12112"></td>
        <td id="LC12112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngPluralize</span></td>
      </tr>
      <tr>
        <td id="L12113" class="blob-num js-line-number" data-line-number="12113"></td>
        <td id="LC12113" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict EA</span></td>
      </tr>
      <tr>
        <td id="L12114" class="blob-num js-line-number" data-line-number="12114"></td>
        <td id="LC12114" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12115" class="blob-num js-line-number" data-line-number="12115"></td>
        <td id="LC12115" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12116" class="blob-num js-line-number" data-line-number="12116"></td>
        <td id="LC12116" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Overview</span></td>
      </tr>
      <tr>
        <td id="L12117" class="blob-num js-line-number" data-line-number="12117"></td>
        <td id="LC12117" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngPluralize` is a directive that displays messages according to en-US localization rules.</span></td>
      </tr>
      <tr>
        <td id="L12118" class="blob-num js-line-number" data-line-number="12118"></td>
        <td id="LC12118" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * These rules are bundled with angular.js and the rules can be overridden</span></td>
      </tr>
      <tr>
        <td id="L12119" class="blob-num js-line-number" data-line-number="12119"></td>
        <td id="LC12119" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * (see {@link guide/dev_guide.i18n Angular i18n} dev guide). You configure ngPluralize directive</span></td>
      </tr>
      <tr>
        <td id="L12120" class="blob-num js-line-number" data-line-number="12120"></td>
        <td id="LC12120" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * by specifying the mappings between</span></td>
      </tr>
      <tr>
        <td id="L12121" class="blob-num js-line-number" data-line-number="12121"></td>
        <td id="LC12121" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html</span></td>
      </tr>
      <tr>
        <td id="L12122" class="blob-num js-line-number" data-line-number="12122"></td>
        <td id="LC12122" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * plural categories} and the strings to be displayed.</span></td>
      </tr>
      <tr>
        <td id="L12123" class="blob-num js-line-number" data-line-number="12123"></td>
        <td id="LC12123" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12124" class="blob-num js-line-number" data-line-number="12124"></td>
        <td id="LC12124" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Plural categories and explicit number rules</span></td>
      </tr>
      <tr>
        <td id="L12125" class="blob-num js-line-number" data-line-number="12125"></td>
        <td id="LC12125" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * There are two</span></td>
      </tr>
      <tr>
        <td id="L12126" class="blob-num js-line-number" data-line-number="12126"></td>
        <td id="LC12126" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * {@link http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html</span></td>
      </tr>
      <tr>
        <td id="L12127" class="blob-num js-line-number" data-line-number="12127"></td>
        <td id="LC12127" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * plural categories} in Angular&#39;s default en-US locale: &quot;one&quot; and &quot;other&quot;.</span></td>
      </tr>
      <tr>
        <td id="L12128" class="blob-num js-line-number" data-line-number="12128"></td>
        <td id="LC12128" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12129" class="blob-num js-line-number" data-line-number="12129"></td>
        <td id="LC12129" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * While a pural category may match many numbers (for example, in en-US locale, &quot;other&quot; can match</span></td>
      </tr>
      <tr>
        <td id="L12130" class="blob-num js-line-number" data-line-number="12130"></td>
        <td id="LC12130" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * any number that is not 1), an explicit number rule can only match one number. For example, the</span></td>
      </tr>
      <tr>
        <td id="L12131" class="blob-num js-line-number" data-line-number="12131"></td>
        <td id="LC12131" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * explicit number rule for &quot;3&quot; matches the number 3. You will see the use of plural categories</span></td>
      </tr>
      <tr>
        <td id="L12132" class="blob-num js-line-number" data-line-number="12132"></td>
        <td id="LC12132" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and explicit number rules throughout later parts of this documentation.</span></td>
      </tr>
      <tr>
        <td id="L12133" class="blob-num js-line-number" data-line-number="12133"></td>
        <td id="LC12133" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12134" class="blob-num js-line-number" data-line-number="12134"></td>
        <td id="LC12134" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Configuring ngPluralize</span></td>
      </tr>
      <tr>
        <td id="L12135" class="blob-num js-line-number" data-line-number="12135"></td>
        <td id="LC12135" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * You configure ngPluralize by providing 2 attributes: `count` and `when`.</span></td>
      </tr>
      <tr>
        <td id="L12136" class="blob-num js-line-number" data-line-number="12136"></td>
        <td id="LC12136" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * You can also provide an optional attribute, `offset`.</span></td>
      </tr>
      <tr>
        <td id="L12137" class="blob-num js-line-number" data-line-number="12137"></td>
        <td id="LC12137" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12138" class="blob-num js-line-number" data-line-number="12138"></td>
        <td id="LC12138" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The value of the `count` attribute can be either a string or an {@link guide/dev_guide.expressions</span></td>
      </tr>
      <tr>
        <td id="L12139" class="blob-num js-line-number" data-line-number="12139"></td>
        <td id="LC12139" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Angular expression}; these are evaluated on the current scope for its binded value.</span></td>
      </tr>
      <tr>
        <td id="L12140" class="blob-num js-line-number" data-line-number="12140"></td>
        <td id="LC12140" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12141" class="blob-num js-line-number" data-line-number="12141"></td>
        <td id="LC12141" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `when` attribute specifies the mappings between plural categories and the actual</span></td>
      </tr>
      <tr>
        <td id="L12142" class="blob-num js-line-number" data-line-number="12142"></td>
        <td id="LC12142" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * string to be displayed. The value of the attribute should be a JSON object so that Angular</span></td>
      </tr>
      <tr>
        <td id="L12143" class="blob-num js-line-number" data-line-number="12143"></td>
        <td id="LC12143" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * can interpret it correctly.</span></td>
      </tr>
      <tr>
        <td id="L12144" class="blob-num js-line-number" data-line-number="12144"></td>
        <td id="LC12144" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12145" class="blob-num js-line-number" data-line-number="12145"></td>
        <td id="LC12145" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The following example shows how to configure ngPluralize:</span></td>
      </tr>
      <tr>
        <td id="L12146" class="blob-num js-line-number" data-line-number="12146"></td>
        <td id="LC12146" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12147" class="blob-num js-line-number" data-line-number="12147"></td>
        <td id="LC12147" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12148" class="blob-num js-line-number" data-line-number="12148"></td>
        <td id="LC12148" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;ng-pluralize count=&quot;personCount&quot;</span></td>
      </tr>
      <tr>
        <td id="L12149" class="blob-num js-line-number" data-line-number="12149"></td>
        <td id="LC12149" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                 when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12150" class="blob-num js-line-number" data-line-number="12150"></td>
        <td id="LC12150" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;one&#39;: &#39;1 person is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12151" class="blob-num js-line-number" data-line-number="12151"></td>
        <td id="LC12151" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;other&#39;: &#39;{} people are viewing.&#39;}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12152" class="blob-num js-line-number" data-line-number="12152"></td>
        <td id="LC12152" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/ng-pluralize&gt;</span></td>
      </tr>
      <tr>
        <td id="L12153" class="blob-num js-line-number" data-line-number="12153"></td>
        <td id="LC12153" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12154" class="blob-num js-line-number" data-line-number="12154"></td>
        <td id="LC12154" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12155" class="blob-num js-line-number" data-line-number="12155"></td>
        <td id="LC12155" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In the example, `&quot;0: Nobody is viewing.&quot;` is an explicit number rule. If you did not</span></td>
      </tr>
      <tr>
        <td id="L12156" class="blob-num js-line-number" data-line-number="12156"></td>
        <td id="LC12156" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * specify this rule, 0 would be matched to the &quot;other&quot; category and &quot;0 people are viewing&quot;</span></td>
      </tr>
      <tr>
        <td id="L12157" class="blob-num js-line-number" data-line-number="12157"></td>
        <td id="LC12157" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * would be shown instead of &quot;Nobody is viewing&quot;. You can specify an explicit number rule for</span></td>
      </tr>
      <tr>
        <td id="L12158" class="blob-num js-line-number" data-line-number="12158"></td>
        <td id="LC12158" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * other numbers, for example 12, so that instead of showing &quot;12 people are viewing&quot;, you can</span></td>
      </tr>
      <tr>
        <td id="L12159" class="blob-num js-line-number" data-line-number="12159"></td>
        <td id="LC12159" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * show &quot;a dozen people are viewing&quot;.</span></td>
      </tr>
      <tr>
        <td id="L12160" class="blob-num js-line-number" data-line-number="12160"></td>
        <td id="LC12160" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12161" class="blob-num js-line-number" data-line-number="12161"></td>
        <td id="LC12161" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * You can use a set of closed braces(`{}`) as a placeholder for the number that you want substituted</span></td>
      </tr>
      <tr>
        <td id="L12162" class="blob-num js-line-number" data-line-number="12162"></td>
        <td id="LC12162" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * into pluralized strings. In the previous example, Angular will replace `{}` with</span></td>
      </tr>
      <tr>
        <td id="L12163" class="blob-num js-line-number" data-line-number="12163"></td>
        <td id="LC12163" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;span ng-non-bindable&gt;`{{personCount}}`&lt;/span&gt;. The closed braces `{}` is a placeholder</span></td>
      </tr>
      <tr>
        <td id="L12164" class="blob-num js-line-number" data-line-number="12164"></td>
        <td id="LC12164" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * for &lt;span ng-non-bindable&gt;{{numberExpression}}&lt;/span&gt;.</span></td>
      </tr>
      <tr>
        <td id="L12165" class="blob-num js-line-number" data-line-number="12165"></td>
        <td id="LC12165" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12166" class="blob-num js-line-number" data-line-number="12166"></td>
        <td id="LC12166" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Configuring ngPluralize with offset</span></td>
      </tr>
      <tr>
        <td id="L12167" class="blob-num js-line-number" data-line-number="12167"></td>
        <td id="LC12167" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `offset` attribute allows further customization of pluralized text, which can result in</span></td>
      </tr>
      <tr>
        <td id="L12168" class="blob-num js-line-number" data-line-number="12168"></td>
        <td id="LC12168" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * a better user experience. For example, instead of the message &quot;4 people are viewing this document&quot;,</span></td>
      </tr>
      <tr>
        <td id="L12169" class="blob-num js-line-number" data-line-number="12169"></td>
        <td id="LC12169" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * you might display &quot;John, Kate and 2 others are viewing this document&quot;.</span></td>
      </tr>
      <tr>
        <td id="L12170" class="blob-num js-line-number" data-line-number="12170"></td>
        <td id="LC12170" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The offset attribute allows you to offset a number by any desired value.</span></td>
      </tr>
      <tr>
        <td id="L12171" class="blob-num js-line-number" data-line-number="12171"></td>
        <td id="LC12171" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Let&#39;s take a look at an example:</span></td>
      </tr>
      <tr>
        <td id="L12172" class="blob-num js-line-number" data-line-number="12172"></td>
        <td id="LC12172" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12173" class="blob-num js-line-number" data-line-number="12173"></td>
        <td id="LC12173" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12174" class="blob-num js-line-number" data-line-number="12174"></td>
        <td id="LC12174" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;ng-pluralize count=&quot;personCount&quot; offset=2</span></td>
      </tr>
      <tr>
        <td id="L12175" class="blob-num js-line-number" data-line-number="12175"></td>
        <td id="LC12175" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *               when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12176" class="blob-num js-line-number" data-line-number="12176"></td>
        <td id="LC12176" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;1&#39;: &#39;{{person1}} is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12177" class="blob-num js-line-number" data-line-number="12177"></td>
        <td id="LC12177" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;2&#39;: &#39;{{person1}} and {{person2}} are viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12178" class="blob-num js-line-number" data-line-number="12178"></td>
        <td id="LC12178" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;one&#39;: &#39;{{person1}}, {{person2}} and one other person are viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12179" class="blob-num js-line-number" data-line-number="12179"></td>
        <td id="LC12179" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *                      &#39;other&#39;: &#39;{{person1}}, {{person2}} and {} other people are viewing.&#39;}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12180" class="blob-num js-line-number" data-line-number="12180"></td>
        <td id="LC12180" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/ng-pluralize&gt;</span></td>
      </tr>
      <tr>
        <td id="L12181" class="blob-num js-line-number" data-line-number="12181"></td>
        <td id="LC12181" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12182" class="blob-num js-line-number" data-line-number="12182"></td>
        <td id="LC12182" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12183" class="blob-num js-line-number" data-line-number="12183"></td>
        <td id="LC12183" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Notice that we are still using two plural categories(one, other), but we added</span></td>
      </tr>
      <tr>
        <td id="L12184" class="blob-num js-line-number" data-line-number="12184"></td>
        <td id="LC12184" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * three explicit number rules 0, 1 and 2.</span></td>
      </tr>
      <tr>
        <td id="L12185" class="blob-num js-line-number" data-line-number="12185"></td>
        <td id="LC12185" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When one person, perhaps John, views the document, &quot;John is viewing&quot; will be shown.</span></td>
      </tr>
      <tr>
        <td id="L12186" class="blob-num js-line-number" data-line-number="12186"></td>
        <td id="LC12186" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When three people view the document, no explicit number rule is found, so</span></td>
      </tr>
      <tr>
        <td id="L12187" class="blob-num js-line-number" data-line-number="12187"></td>
        <td id="LC12187" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * an offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.</span></td>
      </tr>
      <tr>
        <td id="L12188" class="blob-num js-line-number" data-line-number="12188"></td>
        <td id="LC12188" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * In this case, plural category &#39;one&#39; is matched and &quot;John, Marry and one other person are viewing&quot;</span></td>
      </tr>
      <tr>
        <td id="L12189" class="blob-num js-line-number" data-line-number="12189"></td>
        <td id="LC12189" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * is shown.</span></td>
      </tr>
      <tr>
        <td id="L12190" class="blob-num js-line-number" data-line-number="12190"></td>
        <td id="LC12190" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12191" class="blob-num js-line-number" data-line-number="12191"></td>
        <td id="LC12191" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note that when you specify offsets, you must provide explicit number rules for</span></td>
      </tr>
      <tr>
        <td id="L12192" class="blob-num js-line-number" data-line-number="12192"></td>
        <td id="LC12192" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * numbers from 0 up to and including the offset. If you use an offset of 3, for example,</span></td>
      </tr>
      <tr>
        <td id="L12193" class="blob-num js-line-number" data-line-number="12193"></td>
        <td id="LC12193" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for</span></td>
      </tr>
      <tr>
        <td id="L12194" class="blob-num js-line-number" data-line-number="12194"></td>
        <td id="LC12194" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * plural categories &quot;one&quot; and &quot;other&quot;.</span></td>
      </tr>
      <tr>
        <td id="L12195" class="blob-num js-line-number" data-line-number="12195"></td>
        <td id="LC12195" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12196" class="blob-num js-line-number" data-line-number="12196"></td>
        <td id="LC12196" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string|expression} count The variable to be bounded to.</span></td>
      </tr>
      <tr>
        <td id="L12197" class="blob-num js-line-number" data-line-number="12197"></td>
        <td id="LC12197" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} when The mapping between plural category to its correspoding strings.</span></td>
      </tr>
      <tr>
        <td id="L12198" class="blob-num js-line-number" data-line-number="12198"></td>
        <td id="LC12198" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {number=} offset Offset to deduct from the total number.</span></td>
      </tr>
      <tr>
        <td id="L12199" class="blob-num js-line-number" data-line-number="12199"></td>
        <td id="LC12199" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12200" class="blob-num js-line-number" data-line-number="12200"></td>
        <td id="LC12200" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12201" class="blob-num js-line-number" data-line-number="12201"></td>
        <td id="LC12201" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12202" class="blob-num js-line-number" data-line-number="12202"></td>
        <td id="LC12202" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12203" class="blob-num js-line-number" data-line-number="12203"></td>
        <td id="LC12203" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12204" class="blob-num js-line-number" data-line-number="12204"></td>
        <td id="LC12204" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L12205" class="blob-num js-line-number" data-line-number="12205"></td>
        <td id="LC12205" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.person1 = &#39;Igor&#39;;</span></td>
      </tr>
      <tr>
        <td id="L12206" class="blob-num js-line-number" data-line-number="12206"></td>
        <td id="LC12206" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.person2 = &#39;Misko&#39;;</span></td>
      </tr>
      <tr>
        <td id="L12207" class="blob-num js-line-number" data-line-number="12207"></td>
        <td id="LC12207" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.personCount = 1;</span></td>
      </tr>
      <tr>
        <td id="L12208" class="blob-num js-line-number" data-line-number="12208"></td>
        <td id="LC12208" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L12209" class="blob-num js-line-number" data-line-number="12209"></td>
        <td id="LC12209" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12210" class="blob-num js-line-number" data-line-number="12210"></td>
        <td id="LC12210" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12211" class="blob-num js-line-number" data-line-number="12211"></td>
        <td id="LC12211" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Person 1:&lt;input type=&quot;text&quot; ng-model=&quot;person1&quot; value=&quot;Igor&quot; /&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12212" class="blob-num js-line-number" data-line-number="12212"></td>
        <td id="LC12212" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Person 2:&lt;input type=&quot;text&quot; ng-model=&quot;person2&quot; value=&quot;Misko&quot; /&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12213" class="blob-num js-line-number" data-line-number="12213"></td>
        <td id="LC12213" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Number of People:&lt;input type=&quot;text&quot; ng-model=&quot;personCount&quot; value=&quot;1&quot; /&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12214" class="blob-num js-line-number" data-line-number="12214"></td>
        <td id="LC12214" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12215" class="blob-num js-line-number" data-line-number="12215"></td>
        <td id="LC12215" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;!--- Example with simple pluralization rules for en locale ---&gt;</span></td>
      </tr>
      <tr>
        <td id="L12216" class="blob-num js-line-number" data-line-number="12216"></td>
        <td id="LC12216" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Without Offset:</span></td>
      </tr>
      <tr>
        <td id="L12217" class="blob-num js-line-number" data-line-number="12217"></td>
        <td id="LC12217" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;ng-pluralize count=&quot;personCount&quot;</span></td>
      </tr>
      <tr>
        <td id="L12218" class="blob-num js-line-number" data-line-number="12218"></td>
        <td id="LC12218" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12219" class="blob-num js-line-number" data-line-number="12219"></td>
        <td id="LC12219" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;one&#39;: &#39;1 person is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12220" class="blob-num js-line-number" data-line-number="12220"></td>
        <td id="LC12220" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;other&#39;: &#39;{} people are viewing.&#39;}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12221" class="blob-num js-line-number" data-line-number="12221"></td>
        <td id="LC12221" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/ng-pluralize&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L12222" class="blob-num js-line-number" data-line-number="12222"></td>
        <td id="LC12222" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12223" class="blob-num js-line-number" data-line-number="12223"></td>
        <td id="LC12223" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;!--- Example with offset ---&gt;</span></td>
      </tr>
      <tr>
        <td id="L12224" class="blob-num js-line-number" data-line-number="12224"></td>
        <td id="LC12224" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          With Offset(2):</span></td>
      </tr>
      <tr>
        <td id="L12225" class="blob-num js-line-number" data-line-number="12225"></td>
        <td id="LC12225" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;ng-pluralize count=&quot;personCount&quot; offset=2</span></td>
      </tr>
      <tr>
        <td id="L12226" class="blob-num js-line-number" data-line-number="12226"></td>
        <td id="LC12226" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                        when=&quot;{&#39;0&#39;: &#39;Nobody is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12227" class="blob-num js-line-number" data-line-number="12227"></td>
        <td id="LC12227" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;1&#39;: &#39;{{person1}} is viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12228" class="blob-num js-line-number" data-line-number="12228"></td>
        <td id="LC12228" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;2&#39;: &#39;{{person1}} and {{person2}} are viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12229" class="blob-num js-line-number" data-line-number="12229"></td>
        <td id="LC12229" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;one&#39;: &#39;{{person1}}, {{person2}} and one other person are viewing.&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12230" class="blob-num js-line-number" data-line-number="12230"></td>
        <td id="LC12230" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                               &#39;other&#39;: &#39;{{person1}}, {{person2}} and {} other people are viewing.&#39;}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12231" class="blob-num js-line-number" data-line-number="12231"></td>
        <td id="LC12231" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/ng-pluralize&gt;</span></td>
      </tr>
      <tr>
        <td id="L12232" class="blob-num js-line-number" data-line-number="12232"></td>
        <td id="LC12232" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12233" class="blob-num js-line-number" data-line-number="12233"></td>
        <td id="LC12233" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12234" class="blob-num js-line-number" data-line-number="12234"></td>
        <td id="LC12234" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12235" class="blob-num js-line-number" data-line-number="12235"></td>
        <td id="LC12235" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should show correct pluralized string&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12236" class="blob-num js-line-number" data-line-number="12236"></td>
        <td id="LC12236" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12237" class="blob-num js-line-number" data-line-number="12237"></td>
        <td id="LC12237" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                             toBe(&#39;1 person is viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12238" class="blob-num js-line-number" data-line-number="12238"></td>
        <td id="LC12238" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12239" class="blob-num js-line-number" data-line-number="12239"></td>
        <td id="LC12239" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                                toBe(&#39;Igor is viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12240" class="blob-num js-line-number" data-line-number="12240"></td>
        <td id="LC12240" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12241" class="blob-num js-line-number" data-line-number="12241"></td>
        <td id="LC12241" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12242" class="blob-num js-line-number" data-line-number="12242"></td>
        <td id="LC12242" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12243" class="blob-num js-line-number" data-line-number="12243"></td>
        <td id="LC12243" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                               toBe(&#39;Nobody is viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12244" class="blob-num js-line-number" data-line-number="12244"></td>
        <td id="LC12244" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12245" class="blob-num js-line-number" data-line-number="12245"></td>
        <td id="LC12245" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                              toBe(&#39;Nobody is viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12246" class="blob-num js-line-number" data-line-number="12246"></td>
        <td id="LC12246" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12247" class="blob-num js-line-number" data-line-number="12247"></td>
        <td id="LC12247" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;2&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12248" class="blob-num js-line-number" data-line-number="12248"></td>
        <td id="LC12248" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12249" class="blob-num js-line-number" data-line-number="12249"></td>
        <td id="LC12249" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                            toBe(&#39;2 people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12250" class="blob-num js-line-number" data-line-number="12250"></td>
        <td id="LC12250" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12251" class="blob-num js-line-number" data-line-number="12251"></td>
        <td id="LC12251" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                              toBe(&#39;Igor and Misko are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12252" class="blob-num js-line-number" data-line-number="12252"></td>
        <td id="LC12252" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12253" class="blob-num js-line-number" data-line-number="12253"></td>
        <td id="LC12253" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;3&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12254" class="blob-num js-line-number" data-line-number="12254"></td>
        <td id="LC12254" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12255" class="blob-num js-line-number" data-line-number="12255"></td>
        <td id="LC12255" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                            toBe(&#39;3 people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12256" class="blob-num js-line-number" data-line-number="12256"></td>
        <td id="LC12256" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12257" class="blob-num js-line-number" data-line-number="12257"></td>
        <td id="LC12257" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                              toBe(&#39;Igor, Misko and one other person are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12258" class="blob-num js-line-number" data-line-number="12258"></td>
        <td id="LC12258" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12259" class="blob-num js-line-number" data-line-number="12259"></td>
        <td id="LC12259" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;4&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12260" class="blob-num js-line-number" data-line-number="12260"></td>
        <td id="LC12260" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:first&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12261" class="blob-num js-line-number" data-line-number="12261"></td>
        <td id="LC12261" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                                            toBe(&#39;4 people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12262" class="blob-num js-line-number" data-line-number="12262"></td>
        <td id="LC12262" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12263" class="blob-num js-line-number" data-line-number="12263"></td>
        <td id="LC12263" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                              toBe(&#39;Igor, Misko and 2 other people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12264" class="blob-num js-line-number" data-line-number="12264"></td>
        <td id="LC12264" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12265" class="blob-num js-line-number" data-line-number="12265"></td>
        <td id="LC12265" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12266" class="blob-num js-line-number" data-line-number="12266"></td>
        <td id="LC12266" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should show data-binded names&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12267" class="blob-num js-line-number" data-line-number="12267"></td>
        <td id="LC12267" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;personCount&#39;).enter(&#39;4&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12268" class="blob-num js-line-number" data-line-number="12268"></td>
        <td id="LC12268" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12269" class="blob-num js-line-number" data-line-number="12269"></td>
        <td id="LC12269" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              toBe(&#39;Igor, Misko and 2 other people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12270" class="blob-num js-line-number" data-line-number="12270"></td>
        <td id="LC12270" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12271" class="blob-num js-line-number" data-line-number="12271"></td>
        <td id="LC12271" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;person1&#39;).enter(&#39;Di&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12272" class="blob-num js-line-number" data-line-number="12272"></td>
        <td id="LC12272" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          using(&#39;.doc-example-live&#39;).input(&#39;person2&#39;).enter(&#39;Vojta&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12273" class="blob-num js-line-number" data-line-number="12273"></td>
        <td id="LC12273" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(element(&#39;.doc-example-live ng-pluralize:last&#39;).text()).</span></td>
      </tr>
      <tr>
        <td id="L12274" class="blob-num js-line-number" data-line-number="12274"></td>
        <td id="LC12274" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              toBe(&#39;Di, Vojta and 2 other people are viewing.&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12275" class="blob-num js-line-number" data-line-number="12275"></td>
        <td id="LC12275" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12276" class="blob-num js-line-number" data-line-number="12276"></td>
        <td id="LC12276" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12277" class="blob-num js-line-number" data-line-number="12277"></td>
        <td id="LC12277" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12278" class="blob-num js-line-number" data-line-number="12278"></td>
        <td id="LC12278" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12279" class="blob-num js-line-number" data-line-number="12279"></td>
        <td id="LC12279" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngPluralizeDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$locale<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$interpolate<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$locale</span>, <span class="pl-smi">$interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L12280" class="blob-num js-line-number" data-line-number="12280"></td>
        <td id="LC12280" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">BRACE</span> <span class="pl-k">=</span> /{}/g;</td>
      </tr>
      <tr>
        <td id="L12281" class="blob-num js-line-number" data-line-number="12281"></td>
        <td id="LC12281" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L12282" class="blob-num js-line-number" data-line-number="12282"></td>
        <td id="LC12282" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>EA<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12283" class="blob-num js-line-number" data-line-number="12283"></td>
        <td id="LC12283" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L12284" class="blob-num js-line-number" data-line-number="12284"></td>
        <td id="LC12284" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> numberExp <span class="pl-k">=</span> attr.count,</td>
      </tr>
      <tr>
        <td id="L12285" class="blob-num js-line-number" data-line-number="12285"></td>
        <td id="LC12285" class="blob-code blob-code-inner js-file-line">          whenExp <span class="pl-k">=</span> element.attr(attr.$attr.when), <span class="pl-c">// this is because we have {{}} in attrs</span></td>
      </tr>
      <tr>
        <td id="L12286" class="blob-num js-line-number" data-line-number="12286"></td>
        <td id="LC12286" class="blob-code blob-code-inner js-file-line">          offset <span class="pl-k">=</span> attr.offset <span class="pl-k">||</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L12287" class="blob-num js-line-number" data-line-number="12287"></td>
        <td id="LC12287" class="blob-code blob-code-inner js-file-line">          whens <span class="pl-k">=</span> scope.$<span class="pl-c1">eval</span>(whenExp),</td>
      </tr>
      <tr>
        <td id="L12288" class="blob-num js-line-number" data-line-number="12288"></td>
        <td id="LC12288" class="blob-code blob-code-inner js-file-line">          whensExpFns <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L12289" class="blob-num js-line-number" data-line-number="12289"></td>
        <td id="LC12289" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12290" class="blob-num js-line-number" data-line-number="12290"></td>
        <td id="LC12290" class="blob-code blob-code-inner js-file-line">      forEach(whens, <span class="pl-k">function</span>(<span class="pl-smi">expression</span>, <span class="pl-smi">key</span>) {</td>
      </tr>
      <tr>
        <td id="L12291" class="blob-num js-line-number" data-line-number="12291"></td>
        <td id="LC12291" class="blob-code blob-code-inner js-file-line">        whensExpFns[key] <span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L12292" class="blob-num js-line-number" data-line-number="12292"></td>
        <td id="LC12292" class="blob-code blob-code-inner js-file-line">          $interpolate(expression.<span class="pl-c1">replace</span>(<span class="pl-c1">BRACE</span>, <span class="pl-s"><span class="pl-pds">&#39;</span>{{<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> numberExp <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>-<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> offset <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span>}}<span class="pl-pds">&#39;</span></span>));</td>
      </tr>
      <tr>
        <td id="L12293" class="blob-num js-line-number" data-line-number="12293"></td>
        <td id="LC12293" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L12294" class="blob-num js-line-number" data-line-number="12294"></td>
        <td id="LC12294" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12295" class="blob-num js-line-number" data-line-number="12295"></td>
        <td id="LC12295" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L12296" class="blob-num js-line-number" data-line-number="12296"></td>
        <td id="LC12296" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> value <span class="pl-k">=</span> <span class="pl-c1">parseFloat</span>(scope.$<span class="pl-c1">eval</span>(numberExp));</td>
      </tr>
      <tr>
        <td id="L12297" class="blob-num js-line-number" data-line-number="12297"></td>
        <td id="LC12297" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12298" class="blob-num js-line-number" data-line-number="12298"></td>
        <td id="LC12298" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span><span class="pl-c1">isNaN</span>(value)) {</td>
      </tr>
      <tr>
        <td id="L12299" class="blob-num js-line-number" data-line-number="12299"></td>
        <td id="LC12299" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">//if explicit number rule such as 1, 2, 3... is defined, just use it. Otherwise,</span></td>
      </tr>
      <tr>
        <td id="L12300" class="blob-num js-line-number" data-line-number="12300"></td>
        <td id="LC12300" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">//check it against pluralization rules in $locale service</span></td>
      </tr>
      <tr>
        <td id="L12301" class="blob-num js-line-number" data-line-number="12301"></td>
        <td id="LC12301" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>whens[value]) value <span class="pl-k">=</span> $locale.pluralCat(value <span class="pl-k">-</span> offset);</td>
      </tr>
      <tr>
        <td id="L12302" class="blob-num js-line-number" data-line-number="12302"></td>
        <td id="LC12302" class="blob-code blob-code-inner js-file-line">           <span class="pl-k">return</span> whensExpFns[value](scope, element, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L12303" class="blob-num js-line-number" data-line-number="12303"></td>
        <td id="LC12303" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L12304" class="blob-num js-line-number" data-line-number="12304"></td>
        <td id="LC12304" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L12305" class="blob-num js-line-number" data-line-number="12305"></td>
        <td id="LC12305" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12306" class="blob-num js-line-number" data-line-number="12306"></td>
        <td id="LC12306" class="blob-code blob-code-inner js-file-line">      }, <span class="pl-k">function</span>(<span class="pl-smi">newVal</span>) {</td>
      </tr>
      <tr>
        <td id="L12307" class="blob-num js-line-number" data-line-number="12307"></td>
        <td id="LC12307" class="blob-code blob-code-inner js-file-line">        element.<span class="pl-c1">text</span>(newVal);</td>
      </tr>
      <tr>
        <td id="L12308" class="blob-num js-line-number" data-line-number="12308"></td>
        <td id="LC12308" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L12309" class="blob-num js-line-number" data-line-number="12309"></td>
        <td id="LC12309" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12310" class="blob-num js-line-number" data-line-number="12310"></td>
        <td id="LC12310" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L12311" class="blob-num js-line-number" data-line-number="12311"></td>
        <td id="LC12311" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L12312" class="blob-num js-line-number" data-line-number="12312"></td>
        <td id="LC12312" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12313" class="blob-num js-line-number" data-line-number="12313"></td>
        <td id="LC12313" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12314" class="blob-num js-line-number" data-line-number="12314"></td>
        <td id="LC12314" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12315" class="blob-num js-line-number" data-line-number="12315"></td>
        <td id="LC12315" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngRepeat</span></td>
      </tr>
      <tr>
        <td id="L12316" class="blob-num js-line-number" data-line-number="12316"></td>
        <td id="LC12316" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12317" class="blob-num js-line-number" data-line-number="12317"></td>
        <td id="LC12317" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12318" class="blob-num js-line-number" data-line-number="12318"></td>
        <td id="LC12318" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngRepeat` directive instantiates a template once per item from a collection. Each template</span></td>
      </tr>
      <tr>
        <td id="L12319" class="blob-num js-line-number" data-line-number="12319"></td>
        <td id="LC12319" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * instance gets its own scope, where the given loop variable is set to the current collection item,</span></td>
      </tr>
      <tr>
        <td id="L12320" class="blob-num js-line-number" data-line-number="12320"></td>
        <td id="LC12320" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * and `$index` is set to the item index or key.</span></td>
      </tr>
      <tr>
        <td id="L12321" class="blob-num js-line-number" data-line-number="12321"></td>
        <td id="LC12321" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12322" class="blob-num js-line-number" data-line-number="12322"></td>
        <td id="LC12322" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Special properties are exposed on the local scope of each template instance, including:</span></td>
      </tr>
      <tr>
        <td id="L12323" class="blob-num js-line-number" data-line-number="12323"></td>
        <td id="LC12323" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12324" class="blob-num js-line-number" data-line-number="12324"></td>
        <td id="LC12324" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `$index` â `{number}` â iterator offset of the repeated element (0..length-1)</span></td>
      </tr>
      <tr>
        <td id="L12325" class="blob-num js-line-number" data-line-number="12325"></td>
        <td id="LC12325" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `$position` â `{string}` â position of the repeated element in the iterator. One of:</span></td>
      </tr>
      <tr>
        <td id="L12326" class="blob-num js-line-number" data-line-number="12326"></td>
        <td id="LC12326" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *        * `&#39;first&#39;`,</span></td>
      </tr>
      <tr>
        <td id="L12327" class="blob-num js-line-number" data-line-number="12327"></td>
        <td id="LC12327" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *        * `&#39;middle&#39;`</span></td>
      </tr>
      <tr>
        <td id="L12328" class="blob-num js-line-number" data-line-number="12328"></td>
        <td id="LC12328" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *        * `&#39;last&#39;`</span></td>
      </tr>
      <tr>
        <td id="L12329" class="blob-num js-line-number" data-line-number="12329"></td>
        <td id="LC12329" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12330" class="blob-num js-line-number" data-line-number="12330"></td>
        <td id="LC12330" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12331" class="blob-num js-line-number" data-line-number="12331"></td>
        <td id="LC12331" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12332" class="blob-num js-line-number" data-line-number="12332"></td>
        <td id="LC12332" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @scope</span></td>
      </tr>
      <tr>
        <td id="L12333" class="blob-num js-line-number" data-line-number="12333"></td>
        <td id="LC12333" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @priority 1000</span></td>
      </tr>
      <tr>
        <td id="L12334" class="blob-num js-line-number" data-line-number="12334"></td>
        <td id="LC12334" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {repeat_expression} ngRepeat The expression indicating how to enumerate a collection. Two</span></td>
      </tr>
      <tr>
        <td id="L12335" class="blob-num js-line-number" data-line-number="12335"></td>
        <td id="LC12335" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   formats are currently supported:</span></td>
      </tr>
      <tr>
        <td id="L12336" class="blob-num js-line-number" data-line-number="12336"></td>
        <td id="LC12336" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12337" class="blob-num js-line-number" data-line-number="12337"></td>
        <td id="LC12337" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `variable in expression` â where variable is the user defined loop variable and `expression`</span></td>
      </tr>
      <tr>
        <td id="L12338" class="blob-num js-line-number" data-line-number="12338"></td>
        <td id="LC12338" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     is a scope expression giving the collection to enumerate.</span></td>
      </tr>
      <tr>
        <td id="L12339" class="blob-num js-line-number" data-line-number="12339"></td>
        <td id="LC12339" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12340" class="blob-num js-line-number" data-line-number="12340"></td>
        <td id="LC12340" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     For example: `track in cd.tracks`.</span></td>
      </tr>
      <tr>
        <td id="L12341" class="blob-num js-line-number" data-line-number="12341"></td>
        <td id="LC12341" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12342" class="blob-num js-line-number" data-line-number="12342"></td>
        <td id="LC12342" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `(key, value) in expression` â where `key` and `value` can be any user defined identifiers,</span></td>
      </tr>
      <tr>
        <td id="L12343" class="blob-num js-line-number" data-line-number="12343"></td>
        <td id="LC12343" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     and `expression` is the scope expression giving the collection to enumerate.</span></td>
      </tr>
      <tr>
        <td id="L12344" class="blob-num js-line-number" data-line-number="12344"></td>
        <td id="LC12344" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12345" class="blob-num js-line-number" data-line-number="12345"></td>
        <td id="LC12345" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     For example: `(name, age) in {&#39;adam&#39;:10, &#39;amalie&#39;:12}`.</span></td>
      </tr>
      <tr>
        <td id="L12346" class="blob-num js-line-number" data-line-number="12346"></td>
        <td id="LC12346" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12347" class="blob-num js-line-number" data-line-number="12347"></td>
        <td id="LC12347" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12348" class="blob-num js-line-number" data-line-number="12348"></td>
        <td id="LC12348" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * This example initializes the scope to a list of names and</span></td>
      </tr>
      <tr>
        <td id="L12349" class="blob-num js-line-number" data-line-number="12349"></td>
        <td id="LC12349" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * then uses `ngRepeat` to display every person:</span></td>
      </tr>
      <tr>
        <td id="L12350" class="blob-num js-line-number" data-line-number="12350"></td>
        <td id="LC12350" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12351" class="blob-num js-line-number" data-line-number="12351"></td>
        <td id="LC12351" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12352" class="blob-num js-line-number" data-line-number="12352"></td>
        <td id="LC12352" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-init=&quot;friends = [{name:&#39;John&#39;, age:25}, {name:&#39;Mary&#39;, age:28}]&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12353" class="blob-num js-line-number" data-line-number="12353"></td>
        <td id="LC12353" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          I have {{friends.length}} friends. They are:</span></td>
      </tr>
      <tr>
        <td id="L12354" class="blob-num js-line-number" data-line-number="12354"></td>
        <td id="LC12354" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L12355" class="blob-num js-line-number" data-line-number="12355"></td>
        <td id="LC12355" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;li ng-repeat=&quot;friend in friends&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12356" class="blob-num js-line-number" data-line-number="12356"></td>
        <td id="LC12356" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              [{{$index + 1}}] {{friend.name}} who is {{friend.age}} years old.</span></td>
      </tr>
      <tr>
        <td id="L12357" class="blob-num js-line-number" data-line-number="12357"></td>
        <td id="LC12357" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L12358" class="blob-num js-line-number" data-line-number="12358"></td>
        <td id="LC12358" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L12359" class="blob-num js-line-number" data-line-number="12359"></td>
        <td id="LC12359" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12360" class="blob-num js-line-number" data-line-number="12360"></td>
        <td id="LC12360" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12361" class="blob-num js-line-number" data-line-number="12361"></td>
        <td id="LC12361" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12362" class="blob-num js-line-number" data-line-number="12362"></td>
        <td id="LC12362" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         it(&#39;should check ng-repeat&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12363" class="blob-num js-line-number" data-line-number="12363"></td>
        <td id="LC12363" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           var r = using(&#39;.doc-example-live&#39;).repeater(&#39;ul li&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12364" class="blob-num js-line-number" data-line-number="12364"></td>
        <td id="LC12364" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(r.count()).toBe(2);</span></td>
      </tr>
      <tr>
        <td id="L12365" class="blob-num js-line-number" data-line-number="12365"></td>
        <td id="LC12365" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(r.row(0)).toEqual([&quot;1&quot;,&quot;John&quot;,&quot;25&quot;]);</span></td>
      </tr>
      <tr>
        <td id="L12366" class="blob-num js-line-number" data-line-number="12366"></td>
        <td id="LC12366" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(r.row(1)).toEqual([&quot;2&quot;,&quot;Mary&quot;,&quot;28&quot;]);</span></td>
      </tr>
      <tr>
        <td id="L12367" class="blob-num js-line-number" data-line-number="12367"></td>
        <td id="LC12367" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         });</span></td>
      </tr>
      <tr>
        <td id="L12368" class="blob-num js-line-number" data-line-number="12368"></td>
        <td id="LC12368" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12369" class="blob-num js-line-number" data-line-number="12369"></td>
        <td id="LC12369" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12370" class="blob-num js-line-number" data-line-number="12370"></td>
        <td id="LC12370" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12371" class="blob-num js-line-number" data-line-number="12371"></td>
        <td id="LC12371" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngRepeatDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L12372" class="blob-num js-line-number" data-line-number="12372"></td>
        <td id="LC12372" class="blob-code blob-code-inner js-file-line">  transclude<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>element<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12373" class="blob-num js-line-number" data-line-number="12373"></td>
        <td id="LC12373" class="blob-code blob-code-inner js-file-line">  priority<span class="pl-k">:</span> <span class="pl-c1">1000</span>,</td>
      </tr>
      <tr>
        <td id="L12374" class="blob-num js-line-number" data-line-number="12374"></td>
        <td id="LC12374" class="blob-code blob-code-inner js-file-line">  terminal<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L12375" class="blob-num js-line-number" data-line-number="12375"></td>
        <td id="LC12375" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">linker</span>) {</td>
      </tr>
      <tr>
        <td id="L12376" class="blob-num js-line-number" data-line-number="12376"></td>
        <td id="LC12376" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">iterStartElement</span>, <span class="pl-smi">attr</span>){</td>
      </tr>
      <tr>
        <td id="L12377" class="blob-num js-line-number" data-line-number="12377"></td>
        <td id="LC12377" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> expression <span class="pl-k">=</span> attr.ngRepeat;</td>
      </tr>
      <tr>
        <td id="L12378" class="blob-num js-line-number" data-line-number="12378"></td>
        <td id="LC12378" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> match <span class="pl-k">=</span> expression.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">.</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">+</span>in<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>),</td>
      </tr>
      <tr>
        <td id="L12379" class="blob-num js-line-number" data-line-number="12379"></td>
        <td id="LC12379" class="blob-code blob-code-inner js-file-line">        lhs, rhs, valueIdent, keyIdent;</td>
      </tr>
      <tr>
        <td id="L12380" class="blob-num js-line-number" data-line-number="12380"></td>
        <td id="LC12380" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span> match) {</td>
      </tr>
      <tr>
        <td id="L12381" class="blob-num js-line-number" data-line-number="12381"></td>
        <td id="LC12381" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>Expected ngRepeat in form of &#39;_item_ in _collection_&#39; but got &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L12382" class="blob-num js-line-number" data-line-number="12382"></td>
        <td id="LC12382" class="blob-code blob-code-inner js-file-line">          expression <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12383" class="blob-num js-line-number" data-line-number="12383"></td>
        <td id="LC12383" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12384" class="blob-num js-line-number" data-line-number="12384"></td>
        <td id="LC12384" class="blob-code blob-code-inner js-file-line">      lhs <span class="pl-k">=</span> match[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L12385" class="blob-num js-line-number" data-line-number="12385"></td>
        <td id="LC12385" class="blob-code blob-code-inner js-file-line">      rhs <span class="pl-k">=</span> match[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L12386" class="blob-num js-line-number" data-line-number="12386"></td>
        <td id="LC12386" class="blob-code blob-code-inner js-file-line">      match <span class="pl-k">=</span> lhs.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(?:(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>]</span><span class="pl-k">+</span>)<span class="pl-k">|</span><span class="pl-cce">\(</span>(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>);</td>
      </tr>
      <tr>
        <td id="L12387" class="blob-num js-line-number" data-line-number="12387"></td>
        <td id="LC12387" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>match) {</td>
      </tr>
      <tr>
        <td id="L12388" class="blob-num js-line-number" data-line-number="12388"></td>
        <td id="LC12388" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">throw</span> Error(<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;item&#39; in &#39;item in collection&#39; should be identifier or (key, value) but got &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L12389" class="blob-num js-line-number" data-line-number="12389"></td>
        <td id="LC12389" class="blob-code blob-code-inner js-file-line">            lhs <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12390" class="blob-num js-line-number" data-line-number="12390"></td>
        <td id="LC12390" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12391" class="blob-num js-line-number" data-line-number="12391"></td>
        <td id="LC12391" class="blob-code blob-code-inner js-file-line">      valueIdent <span class="pl-k">=</span> match[<span class="pl-c1">3</span>] <span class="pl-k">||</span> match[<span class="pl-c1">1</span>];</td>
      </tr>
      <tr>
        <td id="L12392" class="blob-num js-line-number" data-line-number="12392"></td>
        <td id="LC12392" class="blob-code blob-code-inner js-file-line">      keyIdent <span class="pl-k">=</span> match[<span class="pl-c1">2</span>];</td>
      </tr>
      <tr>
        <td id="L12393" class="blob-num js-line-number" data-line-number="12393"></td>
        <td id="LC12393" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12394" class="blob-num js-line-number" data-line-number="12394"></td>
        <td id="LC12394" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// Store a list of elements from previous run. This is a hash where key is the item from the</span></td>
      </tr>
      <tr>
        <td id="L12395" class="blob-num js-line-number" data-line-number="12395"></td>
        <td id="LC12395" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// iterator, and the value is an array of objects with following properties.</span></td>
      </tr>
      <tr>
        <td id="L12396" class="blob-num js-line-number" data-line-number="12396"></td>
        <td id="LC12396" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">//   - scope: bound scope</span></td>
      </tr>
      <tr>
        <td id="L12397" class="blob-num js-line-number" data-line-number="12397"></td>
        <td id="LC12397" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">//   - element: previous element.</span></td>
      </tr>
      <tr>
        <td id="L12398" class="blob-num js-line-number" data-line-number="12398"></td>
        <td id="LC12398" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">//   - index: position</span></td>
      </tr>
      <tr>
        <td id="L12399" class="blob-num js-line-number" data-line-number="12399"></td>
        <td id="LC12399" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// We need an array of these objects since the same object can be returned from the iterator.</span></td>
      </tr>
      <tr>
        <td id="L12400" class="blob-num js-line-number" data-line-number="12400"></td>
        <td id="LC12400" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// We expect this to be a rare case.</span></td>
      </tr>
      <tr>
        <td id="L12401" class="blob-num js-line-number" data-line-number="12401"></td>
        <td id="LC12401" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> lastOrder <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">HashQueueMap</span>();</td>
      </tr>
      <tr>
        <td id="L12402" class="blob-num js-line-number" data-line-number="12402"></td>
        <td id="LC12402" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>){</td>
      </tr>
      <tr>
        <td id="L12403" class="blob-num js-line-number" data-line-number="12403"></td>
        <td id="LC12403" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> index, length,</td>
      </tr>
      <tr>
        <td id="L12404" class="blob-num js-line-number" data-line-number="12404"></td>
        <td id="LC12404" class="blob-code blob-code-inner js-file-line">            collection <span class="pl-k">=</span> scope.$<span class="pl-c1">eval</span>(rhs),</td>
      </tr>
      <tr>
        <td id="L12405" class="blob-num js-line-number" data-line-number="12405"></td>
        <td id="LC12405" class="blob-code blob-code-inner js-file-line">            collectionLength <span class="pl-k">=</span> size(collection, <span class="pl-c1">true</span>),</td>
      </tr>
      <tr>
        <td id="L12406" class="blob-num js-line-number" data-line-number="12406"></td>
        <td id="LC12406" class="blob-code blob-code-inner js-file-line">            childScope,</td>
      </tr>
      <tr>
        <td id="L12407" class="blob-num js-line-number" data-line-number="12407"></td>
        <td id="LC12407" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// Same as lastOrder but it has the current state. It will become the</span></td>
      </tr>
      <tr>
        <td id="L12408" class="blob-num js-line-number" data-line-number="12408"></td>
        <td id="LC12408" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// lastOrder on the next iteration.</span></td>
      </tr>
      <tr>
        <td id="L12409" class="blob-num js-line-number" data-line-number="12409"></td>
        <td id="LC12409" class="blob-code blob-code-inner js-file-line">            nextOrder <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">HashQueueMap</span>(),</td>
      </tr>
      <tr>
        <td id="L12410" class="blob-num js-line-number" data-line-number="12410"></td>
        <td id="LC12410" class="blob-code blob-code-inner js-file-line">            key, value, <span class="pl-c">// key/value of iteration</span></td>
      </tr>
      <tr>
        <td id="L12411" class="blob-num js-line-number" data-line-number="12411"></td>
        <td id="LC12411" class="blob-code blob-code-inner js-file-line">            array, last,       <span class="pl-c">// last object information {scope, element, index}</span></td>
      </tr>
      <tr>
        <td id="L12412" class="blob-num js-line-number" data-line-number="12412"></td>
        <td id="LC12412" class="blob-code blob-code-inner js-file-line">            cursor <span class="pl-k">=</span> iterStartElement;     <span class="pl-c">// current position of the node</span></td>
      </tr>
      <tr>
        <td id="L12413" class="blob-num js-line-number" data-line-number="12413"></td>
        <td id="LC12413" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12414" class="blob-num js-line-number" data-line-number="12414"></td>
        <td id="LC12414" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>isArray(collection)) {</td>
      </tr>
      <tr>
        <td id="L12415" class="blob-num js-line-number" data-line-number="12415"></td>
        <td id="LC12415" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// if object, extract keys, sort them and use to determine order of iteration over obj props</span></td>
      </tr>
      <tr>
        <td id="L12416" class="blob-num js-line-number" data-line-number="12416"></td>
        <td id="LC12416" class="blob-code blob-code-inner js-file-line">          array <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L12417" class="blob-num js-line-number" data-line-number="12417"></td>
        <td id="LC12417" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span>(key <span class="pl-k">in</span> collection) {</td>
      </tr>
      <tr>
        <td id="L12418" class="blob-num js-line-number" data-line-number="12418"></td>
        <td id="LC12418" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (collection.hasOwnProperty(key) <span class="pl-k">&amp;&amp;</span> key.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>) <span class="pl-k">!=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>$<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L12419" class="blob-num js-line-number" data-line-number="12419"></td>
        <td id="LC12419" class="blob-code blob-code-inner js-file-line">              array.<span class="pl-c1">push</span>(key);</td>
      </tr>
      <tr>
        <td id="L12420" class="blob-num js-line-number" data-line-number="12420"></td>
        <td id="LC12420" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L12421" class="blob-num js-line-number" data-line-number="12421"></td>
        <td id="LC12421" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12422" class="blob-num js-line-number" data-line-number="12422"></td>
        <td id="LC12422" class="blob-code blob-code-inner js-file-line">          array.<span class="pl-c1">sort</span>();</td>
      </tr>
      <tr>
        <td id="L12423" class="blob-num js-line-number" data-line-number="12423"></td>
        <td id="LC12423" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L12424" class="blob-num js-line-number" data-line-number="12424"></td>
        <td id="LC12424" class="blob-code blob-code-inner js-file-line">          array <span class="pl-k">=</span> collection <span class="pl-k">||</span> [];</td>
      </tr>
      <tr>
        <td id="L12425" class="blob-num js-line-number" data-line-number="12425"></td>
        <td id="LC12425" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12426" class="blob-num js-line-number" data-line-number="12426"></td>
        <td id="LC12426" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12427" class="blob-num js-line-number" data-line-number="12427"></td>
        <td id="LC12427" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we are not using forEach for perf reasons (trying to avoid #call)</span></td>
      </tr>
      <tr>
        <td id="L12428" class="blob-num js-line-number" data-line-number="12428"></td>
        <td id="LC12428" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (index <span class="pl-k">=</span> <span class="pl-c1">0</span>, length <span class="pl-k">=</span> array.<span class="pl-c1">length</span>; index <span class="pl-k">&lt;</span> length; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L12429" class="blob-num js-line-number" data-line-number="12429"></td>
        <td id="LC12429" class="blob-code blob-code-inner js-file-line">          key <span class="pl-k">=</span> (collection <span class="pl-k">===</span> array) <span class="pl-k">?</span> index <span class="pl-k">:</span> array[index];</td>
      </tr>
      <tr>
        <td id="L12430" class="blob-num js-line-number" data-line-number="12430"></td>
        <td id="LC12430" class="blob-code blob-code-inner js-file-line">          value <span class="pl-k">=</span> collection[key];</td>
      </tr>
      <tr>
        <td id="L12431" class="blob-num js-line-number" data-line-number="12431"></td>
        <td id="LC12431" class="blob-code blob-code-inner js-file-line">          last <span class="pl-k">=</span> lastOrder.<span class="pl-c1">shift</span>(value);</td>
      </tr>
      <tr>
        <td id="L12432" class="blob-num js-line-number" data-line-number="12432"></td>
        <td id="LC12432" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (last) {</td>
      </tr>
      <tr>
        <td id="L12433" class="blob-num js-line-number" data-line-number="12433"></td>
        <td id="LC12433" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// if we have already seen this object, then we need to reuse the</span></td>
      </tr>
      <tr>
        <td id="L12434" class="blob-num js-line-number" data-line-number="12434"></td>
        <td id="LC12434" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// associated scope/element</span></td>
      </tr>
      <tr>
        <td id="L12435" class="blob-num js-line-number" data-line-number="12435"></td>
        <td id="LC12435" class="blob-code blob-code-inner js-file-line">            childScope <span class="pl-k">=</span> last.<span class="pl-c1">scope</span>;</td>
      </tr>
      <tr>
        <td id="L12436" class="blob-num js-line-number" data-line-number="12436"></td>
        <td id="LC12436" class="blob-code blob-code-inner js-file-line">            nextOrder.<span class="pl-c1">push</span>(value, last);</td>
      </tr>
      <tr>
        <td id="L12437" class="blob-num js-line-number" data-line-number="12437"></td>
        <td id="LC12437" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12438" class="blob-num js-line-number" data-line-number="12438"></td>
        <td id="LC12438" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (index <span class="pl-k">===</span> last.<span class="pl-c1">index</span>) {</td>
      </tr>
      <tr>
        <td id="L12439" class="blob-num js-line-number" data-line-number="12439"></td>
        <td id="LC12439" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// do nothing</span></td>
      </tr>
      <tr>
        <td id="L12440" class="blob-num js-line-number" data-line-number="12440"></td>
        <td id="LC12440" class="blob-code blob-code-inner js-file-line">              cursor <span class="pl-k">=</span> last.element;</td>
      </tr>
      <tr>
        <td id="L12441" class="blob-num js-line-number" data-line-number="12441"></td>
        <td id="LC12441" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L12442" class="blob-num js-line-number" data-line-number="12442"></td>
        <td id="LC12442" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// existing item which got moved</span></td>
      </tr>
      <tr>
        <td id="L12443" class="blob-num js-line-number" data-line-number="12443"></td>
        <td id="LC12443" class="blob-code blob-code-inner js-file-line">              last.<span class="pl-c1">index</span> <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L12444" class="blob-num js-line-number" data-line-number="12444"></td>
        <td id="LC12444" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// This may be a noop, if the element is next, but I don&#39;t know of a good way to</span></td>
      </tr>
      <tr>
        <td id="L12445" class="blob-num js-line-number" data-line-number="12445"></td>
        <td id="LC12445" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// figure this out,  since it would require extra DOM access, so let&#39;s just hope that</span></td>
      </tr>
      <tr>
        <td id="L12446" class="blob-num js-line-number" data-line-number="12446"></td>
        <td id="LC12446" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// the browsers realizes that it is noop, and treats it as such.</span></td>
      </tr>
      <tr>
        <td id="L12447" class="blob-num js-line-number" data-line-number="12447"></td>
        <td id="LC12447" class="blob-code blob-code-inner js-file-line">              cursor.after(last.element);</td>
      </tr>
      <tr>
        <td id="L12448" class="blob-num js-line-number" data-line-number="12448"></td>
        <td id="LC12448" class="blob-code blob-code-inner js-file-line">              cursor <span class="pl-k">=</span> last.element;</td>
      </tr>
      <tr>
        <td id="L12449" class="blob-num js-line-number" data-line-number="12449"></td>
        <td id="LC12449" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L12450" class="blob-num js-line-number" data-line-number="12450"></td>
        <td id="LC12450" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L12451" class="blob-num js-line-number" data-line-number="12451"></td>
        <td id="LC12451" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// new item which we don&#39;t know about</span></td>
      </tr>
      <tr>
        <td id="L12452" class="blob-num js-line-number" data-line-number="12452"></td>
        <td id="LC12452" class="blob-code blob-code-inner js-file-line">            childScope <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>();</td>
      </tr>
      <tr>
        <td id="L12453" class="blob-num js-line-number" data-line-number="12453"></td>
        <td id="LC12453" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12454" class="blob-num js-line-number" data-line-number="12454"></td>
        <td id="LC12454" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12455" class="blob-num js-line-number" data-line-number="12455"></td>
        <td id="LC12455" class="blob-code blob-code-inner js-file-line">          childScope[valueIdent] <span class="pl-k">=</span> value;</td>
      </tr>
      <tr>
        <td id="L12456" class="blob-num js-line-number" data-line-number="12456"></td>
        <td id="LC12456" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (keyIdent) childScope[keyIdent] <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L12457" class="blob-num js-line-number" data-line-number="12457"></td>
        <td id="LC12457" class="blob-code blob-code-inner js-file-line">          childScope.$index <span class="pl-k">=</span> index;</td>
      </tr>
      <tr>
        <td id="L12458" class="blob-num js-line-number" data-line-number="12458"></td>
        <td id="LC12458" class="blob-code blob-code-inner js-file-line">          childScope.$position <span class="pl-k">=</span> index <span class="pl-k">===</span> <span class="pl-c1">0</span> <span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L12459" class="blob-num js-line-number" data-line-number="12459"></td>
        <td id="LC12459" class="blob-code blob-code-inner js-file-line">              <span class="pl-s"><span class="pl-pds">&#39;</span>first<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L12460" class="blob-num js-line-number" data-line-number="12460"></td>
        <td id="LC12460" class="blob-code blob-code-inner js-file-line">              (index <span class="pl-k">==</span> collectionLength <span class="pl-k">-</span> <span class="pl-c1">1</span> <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>last<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>middle<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12461" class="blob-num js-line-number" data-line-number="12461"></td>
        <td id="LC12461" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12462" class="blob-num js-line-number" data-line-number="12462"></td>
        <td id="LC12462" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>last) {</td>
      </tr>
      <tr>
        <td id="L12463" class="blob-num js-line-number" data-line-number="12463"></td>
        <td id="LC12463" class="blob-code blob-code-inner js-file-line">            linker(childScope, <span class="pl-k">function</span>(<span class="pl-smi">clone</span>){</td>
      </tr>
      <tr>
        <td id="L12464" class="blob-num js-line-number" data-line-number="12464"></td>
        <td id="LC12464" class="blob-code blob-code-inner js-file-line">              cursor.after(clone);</td>
      </tr>
      <tr>
        <td id="L12465" class="blob-num js-line-number" data-line-number="12465"></td>
        <td id="LC12465" class="blob-code blob-code-inner js-file-line">              last <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L12466" class="blob-num js-line-number" data-line-number="12466"></td>
        <td id="LC12466" class="blob-code blob-code-inner js-file-line">                  scope<span class="pl-k">:</span> childScope,</td>
      </tr>
      <tr>
        <td id="L12467" class="blob-num js-line-number" data-line-number="12467"></td>
        <td id="LC12467" class="blob-code blob-code-inner js-file-line">                  element<span class="pl-k">:</span> (cursor <span class="pl-k">=</span> clone),</td>
      </tr>
      <tr>
        <td id="L12468" class="blob-num js-line-number" data-line-number="12468"></td>
        <td id="LC12468" class="blob-code blob-code-inner js-file-line">                  index<span class="pl-k">:</span> index</td>
      </tr>
      <tr>
        <td id="L12469" class="blob-num js-line-number" data-line-number="12469"></td>
        <td id="LC12469" class="blob-code blob-code-inner js-file-line">                };</td>
      </tr>
      <tr>
        <td id="L12470" class="blob-num js-line-number" data-line-number="12470"></td>
        <td id="LC12470" class="blob-code blob-code-inner js-file-line">              nextOrder.<span class="pl-c1">push</span>(value, last);</td>
      </tr>
      <tr>
        <td id="L12471" class="blob-num js-line-number" data-line-number="12471"></td>
        <td id="LC12471" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L12472" class="blob-num js-line-number" data-line-number="12472"></td>
        <td id="LC12472" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12473" class="blob-num js-line-number" data-line-number="12473"></td>
        <td id="LC12473" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12474" class="blob-num js-line-number" data-line-number="12474"></td>
        <td id="LC12474" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12475" class="blob-num js-line-number" data-line-number="12475"></td>
        <td id="LC12475" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">//shrink children</span></td>
      </tr>
      <tr>
        <td id="L12476" class="blob-num js-line-number" data-line-number="12476"></td>
        <td id="LC12476" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">for</span> (key <span class="pl-k">in</span> lastOrder) {</td>
      </tr>
      <tr>
        <td id="L12477" class="blob-num js-line-number" data-line-number="12477"></td>
        <td id="LC12477" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (lastOrder.hasOwnProperty(key)) {</td>
      </tr>
      <tr>
        <td id="L12478" class="blob-num js-line-number" data-line-number="12478"></td>
        <td id="LC12478" class="blob-code blob-code-inner js-file-line">            array <span class="pl-k">=</span> lastOrder[key];</td>
      </tr>
      <tr>
        <td id="L12479" class="blob-num js-line-number" data-line-number="12479"></td>
        <td id="LC12479" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span>(array.<span class="pl-c1">length</span>) {</td>
      </tr>
      <tr>
        <td id="L12480" class="blob-num js-line-number" data-line-number="12480"></td>
        <td id="LC12480" class="blob-code blob-code-inner js-file-line">              value <span class="pl-k">=</span> array.<span class="pl-c1">pop</span>();</td>
      </tr>
      <tr>
        <td id="L12481" class="blob-num js-line-number" data-line-number="12481"></td>
        <td id="LC12481" class="blob-code blob-code-inner js-file-line">              value.element.remove();</td>
      </tr>
      <tr>
        <td id="L12482" class="blob-num js-line-number" data-line-number="12482"></td>
        <td id="LC12482" class="blob-code blob-code-inner js-file-line">              value.<span class="pl-c1">scope</span>.$destroy();</td>
      </tr>
      <tr>
        <td id="L12483" class="blob-num js-line-number" data-line-number="12483"></td>
        <td id="LC12483" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L12484" class="blob-num js-line-number" data-line-number="12484"></td>
        <td id="LC12484" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12485" class="blob-num js-line-number" data-line-number="12485"></td>
        <td id="LC12485" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12486" class="blob-num js-line-number" data-line-number="12486"></td>
        <td id="LC12486" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12487" class="blob-num js-line-number" data-line-number="12487"></td>
        <td id="LC12487" class="blob-code blob-code-inner js-file-line">        lastOrder <span class="pl-k">=</span> nextOrder;</td>
      </tr>
      <tr>
        <td id="L12488" class="blob-num js-line-number" data-line-number="12488"></td>
        <td id="LC12488" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L12489" class="blob-num js-line-number" data-line-number="12489"></td>
        <td id="LC12489" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L12490" class="blob-num js-line-number" data-line-number="12490"></td>
        <td id="LC12490" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12491" class="blob-num js-line-number" data-line-number="12491"></td>
        <td id="LC12491" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12492" class="blob-num js-line-number" data-line-number="12492"></td>
        <td id="LC12492" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12493" class="blob-num js-line-number" data-line-number="12493"></td>
        <td id="LC12493" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12494" class="blob-num js-line-number" data-line-number="12494"></td>
        <td id="LC12494" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12495" class="blob-num js-line-number" data-line-number="12495"></td>
        <td id="LC12495" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngShow</span></td>
      </tr>
      <tr>
        <td id="L12496" class="blob-num js-line-number" data-line-number="12496"></td>
        <td id="LC12496" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12497" class="blob-num js-line-number" data-line-number="12497"></td>
        <td id="LC12497" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12498" class="blob-num js-line-number" data-line-number="12498"></td>
        <td id="LC12498" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngShow` and `ngHide` directives show or hide a portion of the DOM tree (HTML)</span></td>
      </tr>
      <tr>
        <td id="L12499" class="blob-num js-line-number" data-line-number="12499"></td>
        <td id="LC12499" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * conditionally.</span></td>
      </tr>
      <tr>
        <td id="L12500" class="blob-num js-line-number" data-line-number="12500"></td>
        <td id="LC12500" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12501" class="blob-num js-line-number" data-line-number="12501"></td>
        <td id="LC12501" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12502" class="blob-num js-line-number" data-line-number="12502"></td>
        <td id="LC12502" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngShow If the {@link guide/dev_guide.expressions expression} is truthy</span></td>
      </tr>
      <tr>
        <td id="L12503" class="blob-num js-line-number" data-line-number="12503"></td>
        <td id="LC12503" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     then the element is shown or hidden respectively.</span></td>
      </tr>
      <tr>
        <td id="L12504" class="blob-num js-line-number" data-line-number="12504"></td>
        <td id="LC12504" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12505" class="blob-num js-line-number" data-line-number="12505"></td>
        <td id="LC12505" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12506" class="blob-num js-line-number" data-line-number="12506"></td>
        <td id="LC12506" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12507" class="blob-num js-line-number" data-line-number="12507"></td>
        <td id="LC12507" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12508" class="blob-num js-line-number" data-line-number="12508"></td>
        <td id="LC12508" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Click me: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12509" class="blob-num js-line-number" data-line-number="12509"></td>
        <td id="LC12509" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Show: &lt;span ng-show=&quot;checked&quot;&gt;I show up when your checkbox is checked.&lt;/span&gt; &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12510" class="blob-num js-line-number" data-line-number="12510"></td>
        <td id="LC12510" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Hide: &lt;span ng-hide=&quot;checked&quot;&gt;I hide when your checkbox is checked.&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L12511" class="blob-num js-line-number" data-line-number="12511"></td>
        <td id="LC12511" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12512" class="blob-num js-line-number" data-line-number="12512"></td>
        <td id="LC12512" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12513" class="blob-num js-line-number" data-line-number="12513"></td>
        <td id="LC12513" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-show / ng-hide&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12514" class="blob-num js-line-number" data-line-number="12514"></td>
        <td id="LC12514" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:first:hidden&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12515" class="blob-num js-line-number" data-line-number="12515"></td>
        <td id="LC12515" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:last:visible&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12516" class="blob-num js-line-number" data-line-number="12516"></td>
        <td id="LC12516" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12517" class="blob-num js-line-number" data-line-number="12517"></td>
        <td id="LC12517" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;checked&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L12518" class="blob-num js-line-number" data-line-number="12518"></td>
        <td id="LC12518" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12519" class="blob-num js-line-number" data-line-number="12519"></td>
        <td id="LC12519" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:first:visible&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12520" class="blob-num js-line-number" data-line-number="12520"></td>
        <td id="LC12520" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:last:hidden&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12521" class="blob-num js-line-number" data-line-number="12521"></td>
        <td id="LC12521" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L12522" class="blob-num js-line-number" data-line-number="12522"></td>
        <td id="LC12522" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12523" class="blob-num js-line-number" data-line-number="12523"></td>
        <td id="LC12523" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12524" class="blob-num js-line-number" data-line-number="12524"></td>
        <td id="LC12524" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12525" class="blob-num js-line-number" data-line-number="12525"></td>
        <td id="LC12525" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//TODO(misko): refactor to remove element from the DOM</span></td>
      </tr>
      <tr>
        <td id="L12526" class="blob-num js-line-number" data-line-number="12526"></td>
        <td id="LC12526" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngShowDirective <span class="pl-k">=</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>){</td>
      </tr>
      <tr>
        <td id="L12527" class="blob-num js-line-number" data-line-number="12527"></td>
        <td id="LC12527" class="blob-code blob-code-inner js-file-line">  scope.$<span class="pl-c1">watch</span>(attr.ngShow, <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L12528" class="blob-num js-line-number" data-line-number="12528"></td>
        <td id="LC12528" class="blob-code blob-code-inner js-file-line">    element.css(<span class="pl-s"><span class="pl-pds">&#39;</span>display<span class="pl-pds">&#39;</span></span>, toBoolean(value) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>none<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12529" class="blob-num js-line-number" data-line-number="12529"></td>
        <td id="LC12529" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L12530" class="blob-num js-line-number" data-line-number="12530"></td>
        <td id="LC12530" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12531" class="blob-num js-line-number" data-line-number="12531"></td>
        <td id="LC12531" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12532" class="blob-num js-line-number" data-line-number="12532"></td>
        <td id="LC12532" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12533" class="blob-num js-line-number" data-line-number="12533"></td>
        <td id="LC12533" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12534" class="blob-num js-line-number" data-line-number="12534"></td>
        <td id="LC12534" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12535" class="blob-num js-line-number" data-line-number="12535"></td>
        <td id="LC12535" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngHide</span></td>
      </tr>
      <tr>
        <td id="L12536" class="blob-num js-line-number" data-line-number="12536"></td>
        <td id="LC12536" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12537" class="blob-num js-line-number" data-line-number="12537"></td>
        <td id="LC12537" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12538" class="blob-num js-line-number" data-line-number="12538"></td>
        <td id="LC12538" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngHide` and `ngShow` directives hide or show a portion</span></td>
      </tr>
      <tr>
        <td id="L12539" class="blob-num js-line-number" data-line-number="12539"></td>
        <td id="LC12539" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * of the HTML conditionally.</span></td>
      </tr>
      <tr>
        <td id="L12540" class="blob-num js-line-number" data-line-number="12540"></td>
        <td id="LC12540" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12541" class="blob-num js-line-number" data-line-number="12541"></td>
        <td id="LC12541" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12542" class="blob-num js-line-number" data-line-number="12542"></td>
        <td id="LC12542" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngHide If the {@link guide/dev_guide.expressions expression} truthy then</span></td>
      </tr>
      <tr>
        <td id="L12543" class="blob-num js-line-number" data-line-number="12543"></td>
        <td id="LC12543" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     the element is shown or hidden respectively.</span></td>
      </tr>
      <tr>
        <td id="L12544" class="blob-num js-line-number" data-line-number="12544"></td>
        <td id="LC12544" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12545" class="blob-num js-line-number" data-line-number="12545"></td>
        <td id="LC12545" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12546" class="blob-num js-line-number" data-line-number="12546"></td>
        <td id="LC12546" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12547" class="blob-num js-line-number" data-line-number="12547"></td>
        <td id="LC12547" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12548" class="blob-num js-line-number" data-line-number="12548"></td>
        <td id="LC12548" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Click me: &lt;input type=&quot;checkbox&quot; ng-model=&quot;checked&quot;&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12549" class="blob-num js-line-number" data-line-number="12549"></td>
        <td id="LC12549" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Show: &lt;span ng-show=&quot;checked&quot;&gt;I show up when you checkbox is checked?&lt;/span&gt; &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12550" class="blob-num js-line-number" data-line-number="12550"></td>
        <td id="LC12550" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Hide: &lt;span ng-hide=&quot;checked&quot;&gt;I hide when you checkbox is checked?&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L12551" class="blob-num js-line-number" data-line-number="12551"></td>
        <td id="LC12551" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12552" class="blob-num js-line-number" data-line-number="12552"></td>
        <td id="LC12552" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12553" class="blob-num js-line-number" data-line-number="12553"></td>
        <td id="LC12553" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-show / ng-hide&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12554" class="blob-num js-line-number" data-line-number="12554"></td>
        <td id="LC12554" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:first:hidden&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12555" class="blob-num js-line-number" data-line-number="12555"></td>
        <td id="LC12555" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:last:visible&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12556" class="blob-num js-line-number" data-line-number="12556"></td>
        <td id="LC12556" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12557" class="blob-num js-line-number" data-line-number="12557"></td>
        <td id="LC12557" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         input(&#39;checked&#39;).check();</span></td>
      </tr>
      <tr>
        <td id="L12558" class="blob-num js-line-number" data-line-number="12558"></td>
        <td id="LC12558" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12559" class="blob-num js-line-number" data-line-number="12559"></td>
        <td id="LC12559" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:first:visible&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12560" class="blob-num js-line-number" data-line-number="12560"></td>
        <td id="LC12560" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span:last:hidden&#39;).count()).toEqual(1);</span></td>
      </tr>
      <tr>
        <td id="L12561" class="blob-num js-line-number" data-line-number="12561"></td>
        <td id="LC12561" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L12562" class="blob-num js-line-number" data-line-number="12562"></td>
        <td id="LC12562" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12563" class="blob-num js-line-number" data-line-number="12563"></td>
        <td id="LC12563" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12564" class="blob-num js-line-number" data-line-number="12564"></td>
        <td id="LC12564" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12565" class="blob-num js-line-number" data-line-number="12565"></td>
        <td id="LC12565" class="blob-code blob-code-inner js-file-line"><span class="pl-c">//TODO(misko): refactor to remove element from the DOM</span></td>
      </tr>
      <tr>
        <td id="L12566" class="blob-num js-line-number" data-line-number="12566"></td>
        <td id="LC12566" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngHideDirective <span class="pl-k">=</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>){</td>
      </tr>
      <tr>
        <td id="L12567" class="blob-num js-line-number" data-line-number="12567"></td>
        <td id="LC12567" class="blob-code blob-code-inner js-file-line">  scope.$<span class="pl-c1">watch</span>(attr.ngHide, <span class="pl-k">function</span>(<span class="pl-smi">value</span>){</td>
      </tr>
      <tr>
        <td id="L12568" class="blob-num js-line-number" data-line-number="12568"></td>
        <td id="LC12568" class="blob-code blob-code-inner js-file-line">    element.css(<span class="pl-s"><span class="pl-pds">&#39;</span>display<span class="pl-pds">&#39;</span></span>, toBoolean(value) <span class="pl-k">?</span> <span class="pl-s"><span class="pl-pds">&#39;</span>none<span class="pl-pds">&#39;</span></span> <span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12569" class="blob-num js-line-number" data-line-number="12569"></td>
        <td id="LC12569" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L12570" class="blob-num js-line-number" data-line-number="12570"></td>
        <td id="LC12570" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12571" class="blob-num js-line-number" data-line-number="12571"></td>
        <td id="LC12571" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12572" class="blob-num js-line-number" data-line-number="12572"></td>
        <td id="LC12572" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12573" class="blob-num js-line-number" data-line-number="12573"></td>
        <td id="LC12573" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12574" class="blob-num js-line-number" data-line-number="12574"></td>
        <td id="LC12574" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngStyle</span></td>
      </tr>
      <tr>
        <td id="L12575" class="blob-num js-line-number" data-line-number="12575"></td>
        <td id="LC12575" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12576" class="blob-num js-line-number" data-line-number="12576"></td>
        <td id="LC12576" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12577" class="blob-num js-line-number" data-line-number="12577"></td>
        <td id="LC12577" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * The `ngStyle` directive allows you to set CSS style on an HTML element conditionally.</span></td>
      </tr>
      <tr>
        <td id="L12578" class="blob-num js-line-number" data-line-number="12578"></td>
        <td id="LC12578" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12579" class="blob-num js-line-number" data-line-number="12579"></td>
        <td id="LC12579" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12580" class="blob-num js-line-number" data-line-number="12580"></td>
        <td id="LC12580" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {expression} ngStyle {@link guide/dev_guide.expressions Expression} which evals to an</span></td>
      </tr>
      <tr>
        <td id="L12581" class="blob-num js-line-number" data-line-number="12581"></td>
        <td id="LC12581" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      object whose keys are CSS style names and values are corresponding values for those CSS</span></td>
      </tr>
      <tr>
        <td id="L12582" class="blob-num js-line-number" data-line-number="12582"></td>
        <td id="LC12582" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      keys.</span></td>
      </tr>
      <tr>
        <td id="L12583" class="blob-num js-line-number" data-line-number="12583"></td>
        <td id="LC12583" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12584" class="blob-num js-line-number" data-line-number="12584"></td>
        <td id="LC12584" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12585" class="blob-num js-line-number" data-line-number="12585"></td>
        <td id="LC12585" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12586" class="blob-num js-line-number" data-line-number="12586"></td>
        <td id="LC12586" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12587" class="blob-num js-line-number" data-line-number="12587"></td>
        <td id="LC12587" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input type=&quot;button&quot; value=&quot;set&quot; ng-click=&quot;myStyle={color:&#39;red&#39;}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12588" class="blob-num js-line-number" data-line-number="12588"></td>
        <td id="LC12588" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;input type=&quot;button&quot; value=&quot;clear&quot; ng-click=&quot;myStyle={}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12589" class="blob-num js-line-number" data-line-number="12589"></td>
        <td id="LC12589" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12590" class="blob-num js-line-number" data-line-number="12590"></td>
        <td id="LC12590" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;span ng-style=&quot;myStyle&quot;&gt;Sample Text&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L12591" class="blob-num js-line-number" data-line-number="12591"></td>
        <td id="LC12591" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;pre&gt;myStyle={{myStyle}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12592" class="blob-num js-line-number" data-line-number="12592"></td>
        <td id="LC12592" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12593" class="blob-num js-line-number" data-line-number="12593"></td>
        <td id="LC12593" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12594" class="blob-num js-line-number" data-line-number="12594"></td>
        <td id="LC12594" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       it(&#39;should check ng-style&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12595" class="blob-num js-line-number" data-line-number="12595"></td>
        <td id="LC12595" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(0, 0, 0)&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12596" class="blob-num js-line-number" data-line-number="12596"></td>
        <td id="LC12596" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live :button[value=set]&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L12597" class="blob-num js-line-number" data-line-number="12597"></td>
        <td id="LC12597" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(255, 0, 0)&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12598" class="blob-num js-line-number" data-line-number="12598"></td>
        <td id="LC12598" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         element(&#39;.doc-example-live :button[value=clear]&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L12599" class="blob-num js-line-number" data-line-number="12599"></td>
        <td id="LC12599" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live span&#39;).css(&#39;color&#39;)).toBe(&#39;rgb(0, 0, 0)&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12600" class="blob-num js-line-number" data-line-number="12600"></td>
        <td id="LC12600" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       });</span></td>
      </tr>
      <tr>
        <td id="L12601" class="blob-num js-line-number" data-line-number="12601"></td>
        <td id="LC12601" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12602" class="blob-num js-line-number" data-line-number="12602"></td>
        <td id="LC12602" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12603" class="blob-num js-line-number" data-line-number="12603"></td>
        <td id="LC12603" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12604" class="blob-num js-line-number" data-line-number="12604"></td>
        <td id="LC12604" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngStyleDirective <span class="pl-k">=</span> ngDirective(<span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L12605" class="blob-num js-line-number" data-line-number="12605"></td>
        <td id="LC12605" class="blob-code blob-code-inner js-file-line">  scope.$<span class="pl-c1">watch</span>(attr.ngStyle, <span class="pl-k">function</span>(<span class="pl-smi">newStyles</span>, <span class="pl-smi">oldStyles</span>) {</td>
      </tr>
      <tr>
        <td id="L12606" class="blob-num js-line-number" data-line-number="12606"></td>
        <td id="LC12606" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (oldStyles <span class="pl-k">&amp;&amp;</span> (newStyles <span class="pl-k">!==</span> oldStyles)) {</td>
      </tr>
      <tr>
        <td id="L12607" class="blob-num js-line-number" data-line-number="12607"></td>
        <td id="LC12607" class="blob-code blob-code-inner js-file-line">      forEach(oldStyles, <span class="pl-k">function</span>(<span class="pl-smi">val</span>, <span class="pl-smi">style</span>) { element.css(style, <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);});</td>
      </tr>
      <tr>
        <td id="L12608" class="blob-num js-line-number" data-line-number="12608"></td>
        <td id="LC12608" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12609" class="blob-num js-line-number" data-line-number="12609"></td>
        <td id="LC12609" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (newStyles) element.css(newStyles);</td>
      </tr>
      <tr>
        <td id="L12610" class="blob-num js-line-number" data-line-number="12610"></td>
        <td id="LC12610" class="blob-code blob-code-inner js-file-line">  }, <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L12611" class="blob-num js-line-number" data-line-number="12611"></td>
        <td id="LC12611" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12612" class="blob-num js-line-number" data-line-number="12612"></td>
        <td id="LC12612" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12613" class="blob-num js-line-number" data-line-number="12613"></td>
        <td id="LC12613" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12614" class="blob-num js-line-number" data-line-number="12614"></td>
        <td id="LC12614" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12615" class="blob-num js-line-number" data-line-number="12615"></td>
        <td id="LC12615" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngSwitch</span></td>
      </tr>
      <tr>
        <td id="L12616" class="blob-num js-line-number" data-line-number="12616"></td>
        <td id="LC12616" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict EA</span></td>
      </tr>
      <tr>
        <td id="L12617" class="blob-num js-line-number" data-line-number="12617"></td>
        <td id="LC12617" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12618" class="blob-num js-line-number" data-line-number="12618"></td>
        <td id="LC12618" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12619" class="blob-num js-line-number" data-line-number="12619"></td>
        <td id="LC12619" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Conditionally change the DOM structure.</span></td>
      </tr>
      <tr>
        <td id="L12620" class="blob-num js-line-number" data-line-number="12620"></td>
        <td id="LC12620" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12621" class="blob-num js-line-number" data-line-number="12621"></td>
        <td id="LC12621" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @usageContent</span></td>
      </tr>
      <tr>
        <td id="L12622" class="blob-num js-line-number" data-line-number="12622"></td>
        <td id="LC12622" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * &lt;ANY ng-switch-when=&quot;matchValue1&quot;&gt;...&lt;/ANY&gt;</span></td>
      </tr>
      <tr>
        <td id="L12623" class="blob-num js-line-number" data-line-number="12623"></td>
        <td id="LC12623" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;ANY ng-switch-when=&quot;matchValue2&quot;&gt;...&lt;/ANY&gt;</span></td>
      </tr>
      <tr>
        <td id="L12624" class="blob-num js-line-number" data-line-number="12624"></td>
        <td id="LC12624" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   ...</span></td>
      </tr>
      <tr>
        <td id="L12625" class="blob-num js-line-number" data-line-number="12625"></td>
        <td id="LC12625" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   &lt;ANY ng-switch-default&gt;...&lt;/ANY&gt;</span></td>
      </tr>
      <tr>
        <td id="L12626" class="blob-num js-line-number" data-line-number="12626"></td>
        <td id="LC12626" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12627" class="blob-num js-line-number" data-line-number="12627"></td>
        <td id="LC12627" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @scope</span></td>
      </tr>
      <tr>
        <td id="L12628" class="blob-num js-line-number" data-line-number="12628"></td>
        <td id="LC12628" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {*} ngSwitch|on expression to match against &lt;tt&gt;ng-switch-when&lt;/tt&gt;.</span></td>
      </tr>
      <tr>
        <td id="L12629" class="blob-num js-line-number" data-line-number="12629"></td>
        <td id="LC12629" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @paramDescription</span></td>
      </tr>
      <tr>
        <td id="L12630" class="blob-num js-line-number" data-line-number="12630"></td>
        <td id="LC12630" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * On child elments add:</span></td>
      </tr>
      <tr>
        <td id="L12631" class="blob-num js-line-number" data-line-number="12631"></td>
        <td id="LC12631" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12632" class="blob-num js-line-number" data-line-number="12632"></td>
        <td id="LC12632" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * `ngSwitchWhen`: the case statement to match against. If match then this</span></td>
      </tr>
      <tr>
        <td id="L12633" class="blob-num js-line-number" data-line-number="12633"></td>
        <td id="LC12633" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   case will be displayed.</span></td>
      </tr>
      <tr>
        <td id="L12634" class="blob-num js-line-number" data-line-number="12634"></td>
        <td id="LC12634" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * * `ngSwitchDefault`: the default case when no other casses match.</span></td>
      </tr>
      <tr>
        <td id="L12635" class="blob-num js-line-number" data-line-number="12635"></td>
        <td id="LC12635" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12636" class="blob-num js-line-number" data-line-number="12636"></td>
        <td id="LC12636" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12637" class="blob-num js-line-number" data-line-number="12637"></td>
        <td id="LC12637" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12638" class="blob-num js-line-number" data-line-number="12638"></td>
        <td id="LC12638" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12639" class="blob-num js-line-number" data-line-number="12639"></td>
        <td id="LC12639" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12640" class="blob-num js-line-number" data-line-number="12640"></td>
        <td id="LC12640" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L12641" class="blob-num js-line-number" data-line-number="12641"></td>
        <td id="LC12641" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.items = [&#39;settings&#39;, &#39;home&#39;, &#39;other&#39;];</span></td>
      </tr>
      <tr>
        <td id="L12642" class="blob-num js-line-number" data-line-number="12642"></td>
        <td id="LC12642" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.selection = $scope.items[0];</span></td>
      </tr>
      <tr>
        <td id="L12643" class="blob-num js-line-number" data-line-number="12643"></td>
        <td id="LC12643" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L12644" class="blob-num js-line-number" data-line-number="12644"></td>
        <td id="LC12644" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12645" class="blob-num js-line-number" data-line-number="12645"></td>
        <td id="LC12645" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12646" class="blob-num js-line-number" data-line-number="12646"></td>
        <td id="LC12646" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;select ng-model=&quot;selection&quot; ng-options=&quot;item for item in items&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12647" class="blob-num js-line-number" data-line-number="12647"></td>
        <td id="LC12647" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L12648" class="blob-num js-line-number" data-line-number="12648"></td>
        <td id="LC12648" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;tt&gt;selection={{selection}}&lt;/tt&gt;</span></td>
      </tr>
      <tr>
        <td id="L12649" class="blob-num js-line-number" data-line-number="12649"></td>
        <td id="LC12649" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;hr/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12650" class="blob-num js-line-number" data-line-number="12650"></td>
        <td id="LC12650" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;div ng-switch on=&quot;selection&quot; &gt;</span></td>
      </tr>
      <tr>
        <td id="L12651" class="blob-num js-line-number" data-line-number="12651"></td>
        <td id="LC12651" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;div ng-switch-when=&quot;settings&quot;&gt;Settings Div&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12652" class="blob-num js-line-number" data-line-number="12652"></td>
        <td id="LC12652" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;span ng-switch-when=&quot;home&quot;&gt;Home Span&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L12653" class="blob-num js-line-number" data-line-number="12653"></td>
        <td id="LC12653" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;span ng-switch-default&gt;default&lt;/span&gt;</span></td>
      </tr>
      <tr>
        <td id="L12654" class="blob-num js-line-number" data-line-number="12654"></td>
        <td id="LC12654" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12655" class="blob-num js-line-number" data-line-number="12655"></td>
        <td id="LC12655" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12656" class="blob-num js-line-number" data-line-number="12656"></td>
        <td id="LC12656" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12657" class="blob-num js-line-number" data-line-number="12657"></td>
        <td id="LC12657" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12658" class="blob-num js-line-number" data-line-number="12658"></td>
        <td id="LC12658" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should start in settings&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12659" class="blob-num js-line-number" data-line-number="12659"></td>
        <td id="LC12659" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/Settings Div/);</span></td>
      </tr>
      <tr>
        <td id="L12660" class="blob-num js-line-number" data-line-number="12660"></td>
        <td id="LC12660" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12661" class="blob-num js-line-number" data-line-number="12661"></td>
        <td id="LC12661" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should change to home&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12662" class="blob-num js-line-number" data-line-number="12662"></td>
        <td id="LC12662" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         select(&#39;selection&#39;).option(&#39;home&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12663" class="blob-num js-line-number" data-line-number="12663"></td>
        <td id="LC12663" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/Home Span/);</span></td>
      </tr>
      <tr>
        <td id="L12664" class="blob-num js-line-number" data-line-number="12664"></td>
        <td id="LC12664" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12665" class="blob-num js-line-number" data-line-number="12665"></td>
        <td id="LC12665" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should select deafault&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12666" class="blob-num js-line-number" data-line-number="12666"></td>
        <td id="LC12666" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         select(&#39;selection&#39;).option(&#39;other&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12667" class="blob-num js-line-number" data-line-number="12667"></td>
        <td id="LC12667" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         expect(element(&#39;.doc-example-live [ng-switch]&#39;).text()).toMatch(/default/);</span></td>
      </tr>
      <tr>
        <td id="L12668" class="blob-num js-line-number" data-line-number="12668"></td>
        <td id="LC12668" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12669" class="blob-num js-line-number" data-line-number="12669"></td>
        <td id="LC12669" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12670" class="blob-num js-line-number" data-line-number="12670"></td>
        <td id="LC12670" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12671" class="blob-num js-line-number" data-line-number="12671"></td>
        <td id="LC12671" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12672" class="blob-num js-line-number" data-line-number="12672"></td>
        <td id="LC12672" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">NG_SWITCH</span> <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ng-switch<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L12673" class="blob-num js-line-number" data-line-number="12673"></td>
        <td id="LC12673" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngSwitchDirective <span class="pl-k">=</span> valueFn({</td>
      </tr>
      <tr>
        <td id="L12674" class="blob-num js-line-number" data-line-number="12674"></td>
        <td id="LC12674" class="blob-code blob-code-inner js-file-line">  restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>EA<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12675" class="blob-num js-line-number" data-line-number="12675"></td>
        <td id="LC12675" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L12676" class="blob-num js-line-number" data-line-number="12676"></td>
        <td id="LC12676" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> watchExpr <span class="pl-k">=</span> attr.ngSwitch <span class="pl-k">||</span> attr.on,</td>
      </tr>
      <tr>
        <td id="L12677" class="blob-num js-line-number" data-line-number="12677"></td>
        <td id="LC12677" class="blob-code blob-code-inner js-file-line">        cases <span class="pl-k">=</span> {};</td>
      </tr>
      <tr>
        <td id="L12678" class="blob-num js-line-number" data-line-number="12678"></td>
        <td id="LC12678" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12679" class="blob-num js-line-number" data-line-number="12679"></td>
        <td id="LC12679" class="blob-code blob-code-inner js-file-line">    element.<span class="pl-c1">data</span>(<span class="pl-c1">NG_SWITCH</span>, cases);</td>
      </tr>
      <tr>
        <td id="L12680" class="blob-num js-line-number" data-line-number="12680"></td>
        <td id="LC12680" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>){</td>
      </tr>
      <tr>
        <td id="L12681" class="blob-num js-line-number" data-line-number="12681"></td>
        <td id="LC12681" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> selectedTransclude,</td>
      </tr>
      <tr>
        <td id="L12682" class="blob-num js-line-number" data-line-number="12682"></td>
        <td id="LC12682" class="blob-code blob-code-inner js-file-line">          selectedElement,</td>
      </tr>
      <tr>
        <td id="L12683" class="blob-num js-line-number" data-line-number="12683"></td>
        <td id="LC12683" class="blob-code blob-code-inner js-file-line">          selectedScope;</td>
      </tr>
      <tr>
        <td id="L12684" class="blob-num js-line-number" data-line-number="12684"></td>
        <td id="LC12684" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12685" class="blob-num js-line-number" data-line-number="12685"></td>
        <td id="LC12685" class="blob-code blob-code-inner js-file-line">      scope.$<span class="pl-c1">watch</span>(watchExpr, <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L12686" class="blob-num js-line-number" data-line-number="12686"></td>
        <td id="LC12686" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (selectedElement) {</td>
      </tr>
      <tr>
        <td id="L12687" class="blob-num js-line-number" data-line-number="12687"></td>
        <td id="LC12687" class="blob-code blob-code-inner js-file-line">          selectedScope.$destroy();</td>
      </tr>
      <tr>
        <td id="L12688" class="blob-num js-line-number" data-line-number="12688"></td>
        <td id="LC12688" class="blob-code blob-code-inner js-file-line">          selectedElement.remove();</td>
      </tr>
      <tr>
        <td id="L12689" class="blob-num js-line-number" data-line-number="12689"></td>
        <td id="LC12689" class="blob-code blob-code-inner js-file-line">          selectedElement <span class="pl-k">=</span> selectedScope <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L12690" class="blob-num js-line-number" data-line-number="12690"></td>
        <td id="LC12690" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12691" class="blob-num js-line-number" data-line-number="12691"></td>
        <td id="LC12691" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> ((selectedTransclude <span class="pl-k">=</span> cases[<span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> value] <span class="pl-k">||</span> cases[<span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>])) {</td>
      </tr>
      <tr>
        <td id="L12692" class="blob-num js-line-number" data-line-number="12692"></td>
        <td id="LC12692" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">eval</span>(attr.change);</td>
      </tr>
      <tr>
        <td id="L12693" class="blob-num js-line-number" data-line-number="12693"></td>
        <td id="LC12693" class="blob-code blob-code-inner js-file-line">          selectedScope <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>();</td>
      </tr>
      <tr>
        <td id="L12694" class="blob-num js-line-number" data-line-number="12694"></td>
        <td id="LC12694" class="blob-code blob-code-inner js-file-line">          selectedTransclude(selectedScope, <span class="pl-k">function</span>(<span class="pl-smi">caseElement</span>) {</td>
      </tr>
      <tr>
        <td id="L12695" class="blob-num js-line-number" data-line-number="12695"></td>
        <td id="LC12695" class="blob-code blob-code-inner js-file-line">            selectedElement <span class="pl-k">=</span> caseElement;</td>
      </tr>
      <tr>
        <td id="L12696" class="blob-num js-line-number" data-line-number="12696"></td>
        <td id="LC12696" class="blob-code blob-code-inner js-file-line">            element.append(caseElement);</td>
      </tr>
      <tr>
        <td id="L12697" class="blob-num js-line-number" data-line-number="12697"></td>
        <td id="LC12697" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L12698" class="blob-num js-line-number" data-line-number="12698"></td>
        <td id="LC12698" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12699" class="blob-num js-line-number" data-line-number="12699"></td>
        <td id="LC12699" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L12700" class="blob-num js-line-number" data-line-number="12700"></td>
        <td id="LC12700" class="blob-code blob-code-inner js-file-line">    };</td>
      </tr>
      <tr>
        <td id="L12701" class="blob-num js-line-number" data-line-number="12701"></td>
        <td id="LC12701" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12702" class="blob-num js-line-number" data-line-number="12702"></td>
        <td id="LC12702" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12703" class="blob-num js-line-number" data-line-number="12703"></td>
        <td id="LC12703" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12704" class="blob-num js-line-number" data-line-number="12704"></td>
        <td id="LC12704" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngSwitchWhenDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L12705" class="blob-num js-line-number" data-line-number="12705"></td>
        <td id="LC12705" class="blob-code blob-code-inner js-file-line">  transclude<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>element<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12706" class="blob-num js-line-number" data-line-number="12706"></td>
        <td id="LC12706" class="blob-code blob-code-inner js-file-line">  priority<span class="pl-k">:</span> <span class="pl-c1">500</span>,</td>
      </tr>
      <tr>
        <td id="L12707" class="blob-num js-line-number" data-line-number="12707"></td>
        <td id="LC12707" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attrs</span>, <span class="pl-smi">transclude</span>) {</td>
      </tr>
      <tr>
        <td id="L12708" class="blob-num js-line-number" data-line-number="12708"></td>
        <td id="LC12708" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cases <span class="pl-k">=</span> element.inheritedData(<span class="pl-c1">NG_SWITCH</span>);</td>
      </tr>
      <tr>
        <td id="L12709" class="blob-num js-line-number" data-line-number="12709"></td>
        <td id="LC12709" class="blob-code blob-code-inner js-file-line">    assertArg(cases);</td>
      </tr>
      <tr>
        <td id="L12710" class="blob-num js-line-number" data-line-number="12710"></td>
        <td id="LC12710" class="blob-code blob-code-inner js-file-line">    cases[<span class="pl-s"><span class="pl-pds">&#39;</span>!<span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> attrs.ngSwitchWhen] <span class="pl-k">=</span> transclude;</td>
      </tr>
      <tr>
        <td id="L12711" class="blob-num js-line-number" data-line-number="12711"></td>
        <td id="LC12711" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12712" class="blob-num js-line-number" data-line-number="12712"></td>
        <td id="LC12712" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12713" class="blob-num js-line-number" data-line-number="12713"></td>
        <td id="LC12713" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12714" class="blob-num js-line-number" data-line-number="12714"></td>
        <td id="LC12714" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngSwitchDefaultDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L12715" class="blob-num js-line-number" data-line-number="12715"></td>
        <td id="LC12715" class="blob-code blob-code-inner js-file-line">  transclude<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>element<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12716" class="blob-num js-line-number" data-line-number="12716"></td>
        <td id="LC12716" class="blob-code blob-code-inner js-file-line">  priority<span class="pl-k">:</span> <span class="pl-c1">500</span>,</td>
      </tr>
      <tr>
        <td id="L12717" class="blob-num js-line-number" data-line-number="12717"></td>
        <td id="LC12717" class="blob-code blob-code-inner js-file-line">  <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attrs</span>, <span class="pl-smi">transclude</span>) {</td>
      </tr>
      <tr>
        <td id="L12718" class="blob-num js-line-number" data-line-number="12718"></td>
        <td id="LC12718" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">var</span> cases <span class="pl-k">=</span> element.inheritedData(<span class="pl-c1">NG_SWITCH</span>);</td>
      </tr>
      <tr>
        <td id="L12719" class="blob-num js-line-number" data-line-number="12719"></td>
        <td id="LC12719" class="blob-code blob-code-inner js-file-line">    assertArg(cases);</td>
      </tr>
      <tr>
        <td id="L12720" class="blob-num js-line-number" data-line-number="12720"></td>
        <td id="LC12720" class="blob-code blob-code-inner js-file-line">    cases[<span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> transclude;</td>
      </tr>
      <tr>
        <td id="L12721" class="blob-num js-line-number" data-line-number="12721"></td>
        <td id="LC12721" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L12722" class="blob-num js-line-number" data-line-number="12722"></td>
        <td id="LC12722" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12723" class="blob-num js-line-number" data-line-number="12723"></td>
        <td id="LC12723" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12724" class="blob-num js-line-number" data-line-number="12724"></td>
        <td id="LC12724" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12725" class="blob-num js-line-number" data-line-number="12725"></td>
        <td id="LC12725" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12726" class="blob-num js-line-number" data-line-number="12726"></td>
        <td id="LC12726" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngTransclude</span></td>
      </tr>
      <tr>
        <td id="L12727" class="blob-num js-line-number" data-line-number="12727"></td>
        <td id="LC12727" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12728" class="blob-num js-line-number" data-line-number="12728"></td>
        <td id="LC12728" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12729" class="blob-num js-line-number" data-line-number="12729"></td>
        <td id="LC12729" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Insert the transcluded DOM here.</span></td>
      </tr>
      <tr>
        <td id="L12730" class="blob-num js-line-number" data-line-number="12730"></td>
        <td id="LC12730" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12731" class="blob-num js-line-number" data-line-number="12731"></td>
        <td id="LC12731" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @element ANY</span></td>
      </tr>
      <tr>
        <td id="L12732" class="blob-num js-line-number" data-line-number="12732"></td>
        <td id="LC12732" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12733" class="blob-num js-line-number" data-line-number="12733"></td>
        <td id="LC12733" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12734" class="blob-num js-line-number" data-line-number="12734"></td>
        <td id="LC12734" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;doc:example module=&quot;transclude&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12735" class="blob-num js-line-number" data-line-number="12735"></td>
        <td id="LC12735" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12736" class="blob-num js-line-number" data-line-number="12736"></td>
        <td id="LC12736" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12737" class="blob-num js-line-number" data-line-number="12737"></td>
        <td id="LC12737" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         function Ctrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L12738" class="blob-num js-line-number" data-line-number="12738"></td>
        <td id="LC12738" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.title = &#39;Lorem Ipsum&#39;;</span></td>
      </tr>
      <tr>
        <td id="L12739" class="blob-num js-line-number" data-line-number="12739"></td>
        <td id="LC12739" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           $scope.text = &#39;Neque porro quisquam est qui dolorem ipsum quia dolor...&#39;;</span></td>
      </tr>
      <tr>
        <td id="L12740" class="blob-num js-line-number" data-line-number="12740"></td>
        <td id="LC12740" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         }</span></td>
      </tr>
      <tr>
        <td id="L12741" class="blob-num js-line-number" data-line-number="12741"></td>
        <td id="LC12741" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12742" class="blob-num js-line-number" data-line-number="12742"></td>
        <td id="LC12742" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         angular.module(&#39;transclude&#39;, [])</span></td>
      </tr>
      <tr>
        <td id="L12743" class="blob-num js-line-number" data-line-number="12743"></td>
        <td id="LC12743" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          .directive(&#39;pane&#39;, function(){</span></td>
      </tr>
      <tr>
        <td id="L12744" class="blob-num js-line-number" data-line-number="12744"></td>
        <td id="LC12744" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             return {</span></td>
      </tr>
      <tr>
        <td id="L12745" class="blob-num js-line-number" data-line-number="12745"></td>
        <td id="LC12745" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               restrict: &#39;E&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12746" class="blob-num js-line-number" data-line-number="12746"></td>
        <td id="LC12746" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               transclude: true,</span></td>
      </tr>
      <tr>
        <td id="L12747" class="blob-num js-line-number" data-line-number="12747"></td>
        <td id="LC12747" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               scope: &#39;isolate&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12748" class="blob-num js-line-number" data-line-number="12748"></td>
        <td id="LC12748" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               locals: { title:&#39;bind&#39; },</span></td>
      </tr>
      <tr>
        <td id="L12749" class="blob-num js-line-number" data-line-number="12749"></td>
        <td id="LC12749" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               template: &#39;&lt;div style=&quot;border: 1px solid black;&quot;&gt;&#39; +</span></td>
      </tr>
      <tr>
        <td id="L12750" class="blob-num js-line-number" data-line-number="12750"></td>
        <td id="LC12750" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                           &#39;&lt;div style=&quot;background-color: gray&quot;&gt;{{title}}&lt;/div&gt;&#39; +</span></td>
      </tr>
      <tr>
        <td id="L12751" class="blob-num js-line-number" data-line-number="12751"></td>
        <td id="LC12751" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                           &#39;&lt;div ng-transclude&gt;&lt;/div&gt;&#39; +</span></td>
      </tr>
      <tr>
        <td id="L12752" class="blob-num js-line-number" data-line-number="12752"></td>
        <td id="LC12752" class="blob-code blob-code-inner js-file-line"><span class="pl-c">                         &#39;&lt;/div&gt;&#39;</span></td>
      </tr>
      <tr>
        <td id="L12753" class="blob-num js-line-number" data-line-number="12753"></td>
        <td id="LC12753" class="blob-code blob-code-inner js-file-line"><span class="pl-c">             };</span></td>
      </tr>
      <tr>
        <td id="L12754" class="blob-num js-line-number" data-line-number="12754"></td>
        <td id="LC12754" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         });</span></td>
      </tr>
      <tr>
        <td id="L12755" class="blob-num js-line-number" data-line-number="12755"></td>
        <td id="LC12755" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12756" class="blob-num js-line-number" data-line-number="12756"></td>
        <td id="LC12756" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;div ng-controller=&quot;Ctrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12757" class="blob-num js-line-number" data-line-number="12757"></td>
        <td id="LC12757" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;input ng-model=&quot;title&quot;&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L12758" class="blob-num js-line-number" data-line-number="12758"></td>
        <td id="LC12758" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;textarea ng-model=&quot;text&quot;&gt;&lt;/textarea&gt; &lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12759" class="blob-num js-line-number" data-line-number="12759"></td>
        <td id="LC12759" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         &lt;pane title=&quot;{{title}}&quot;&gt;{{text}}&lt;/pane&gt;</span></td>
      </tr>
      <tr>
        <td id="L12760" class="blob-num js-line-number" data-line-number="12760"></td>
        <td id="LC12760" class="blob-code blob-code-inner js-file-line"><span class="pl-c">       &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12761" class="blob-num js-line-number" data-line-number="12761"></td>
        <td id="LC12761" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12762" class="blob-num js-line-number" data-line-number="12762"></td>
        <td id="LC12762" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12763" class="blob-num js-line-number" data-line-number="12763"></td>
        <td id="LC12763" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should have transcluded&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12764" class="blob-num js-line-number" data-line-number="12764"></td>
        <td id="LC12764" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;title&#39;).enter(&#39;TITLE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12765" class="blob-num js-line-number" data-line-number="12765"></td>
        <td id="LC12765" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          input(&#39;text&#39;).enter(&#39;TEXT&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12766" class="blob-num js-line-number" data-line-number="12766"></td>
        <td id="LC12766" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;title&#39;)).toEqual(&#39;TITLE&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12767" class="blob-num js-line-number" data-line-number="12767"></td>
        <td id="LC12767" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(binding(&#39;text&#39;)).toEqual(&#39;TEXT&#39;);</span></td>
      </tr>
      <tr>
        <td id="L12768" class="blob-num js-line-number" data-line-number="12768"></td>
        <td id="LC12768" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12769" class="blob-num js-line-number" data-line-number="12769"></td>
        <td id="LC12769" class="blob-code blob-code-inner js-file-line"><span class="pl-c">     &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12770" class="blob-num js-line-number" data-line-number="12770"></td>
        <td id="LC12770" class="blob-code blob-code-inner js-file-line"><span class="pl-c">   &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12771" class="blob-num js-line-number" data-line-number="12771"></td>
        <td id="LC12771" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12772" class="blob-num js-line-number" data-line-number="12772"></td>
        <td id="LC12772" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12773" class="blob-num js-line-number" data-line-number="12773"></td>
        <td id="LC12773" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngTranscludeDirective <span class="pl-k">=</span> ngDirective({</td>
      </tr>
      <tr>
        <td id="L12774" class="blob-num js-line-number" data-line-number="12774"></td>
        <td id="LC12774" class="blob-code blob-code-inner js-file-line">  controller<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$transclude<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$element<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$transclude</span>, <span class="pl-smi">$element</span>) {</td>
      </tr>
      <tr>
        <td id="L12775" class="blob-num js-line-number" data-line-number="12775"></td>
        <td id="LC12775" class="blob-code blob-code-inner js-file-line">    $transclude(<span class="pl-k">function</span>(<span class="pl-smi">clone</span>) {</td>
      </tr>
      <tr>
        <td id="L12776" class="blob-num js-line-number" data-line-number="12776"></td>
        <td id="LC12776" class="blob-code blob-code-inner js-file-line">      $element.append(clone);</td>
      </tr>
      <tr>
        <td id="L12777" class="blob-num js-line-number" data-line-number="12777"></td>
        <td id="LC12777" class="blob-code blob-code-inner js-file-line">    });</td>
      </tr>
      <tr>
        <td id="L12778" class="blob-num js-line-number" data-line-number="12778"></td>
        <td id="LC12778" class="blob-code blob-code-inner js-file-line">  }]</td>
      </tr>
      <tr>
        <td id="L12779" class="blob-num js-line-number" data-line-number="12779"></td>
        <td id="LC12779" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L12780" class="blob-num js-line-number" data-line-number="12780"></td>
        <td id="LC12780" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12781" class="blob-num js-line-number" data-line-number="12781"></td>
        <td id="LC12781" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12782" class="blob-num js-line-number" data-line-number="12782"></td>
        <td id="LC12782" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12783" class="blob-num js-line-number" data-line-number="12783"></td>
        <td id="LC12783" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngView</span></td>
      </tr>
      <tr>
        <td id="L12784" class="blob-num js-line-number" data-line-number="12784"></td>
        <td id="LC12784" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict ECA</span></td>
      </tr>
      <tr>
        <td id="L12785" class="blob-num js-line-number" data-line-number="12785"></td>
        <td id="LC12785" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12786" class="blob-num js-line-number" data-line-number="12786"></td>
        <td id="LC12786" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12787" class="blob-num js-line-number" data-line-number="12787"></td>
        <td id="LC12787" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # Overview</span></td>
      </tr>
      <tr>
        <td id="L12788" class="blob-num js-line-number" data-line-number="12788"></td>
        <td id="LC12788" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngView` is a directive that complements the {@link angular.module.ng.$route $route} service by</span></td>
      </tr>
      <tr>
        <td id="L12789" class="blob-num js-line-number" data-line-number="12789"></td>
        <td id="LC12789" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * including the rendered template of the current route into the main layout (`index.html`) file.</span></td>
      </tr>
      <tr>
        <td id="L12790" class="blob-num js-line-number" data-line-number="12790"></td>
        <td id="LC12790" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Every time the current route changes, the included view changes with it according to the</span></td>
      </tr>
      <tr>
        <td id="L12791" class="blob-num js-line-number" data-line-number="12791"></td>
        <td id="LC12791" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * configuration of the `$route` service.</span></td>
      </tr>
      <tr>
        <td id="L12792" class="blob-num js-line-number" data-line-number="12792"></td>
        <td id="LC12792" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12793" class="blob-num js-line-number" data-line-number="12793"></td>
        <td id="LC12793" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @scope</span></td>
      </tr>
      <tr>
        <td id="L12794" class="blob-num js-line-number" data-line-number="12794"></td>
        <td id="LC12794" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12795" class="blob-num js-line-number" data-line-number="12795"></td>
        <td id="LC12795" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example module=&quot;ngView&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12796" class="blob-num js-line-number" data-line-number="12796"></td>
        <td id="LC12796" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12797" class="blob-num js-line-number" data-line-number="12797"></td>
        <td id="LC12797" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script type=&quot;text/ng-template&quot; id=&quot;examples/book.html&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12798" class="blob-num js-line-number" data-line-number="12798"></td>
        <td id="LC12798" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          controller: {{name}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L12799" class="blob-num js-line-number" data-line-number="12799"></td>
        <td id="LC12799" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Book Id: {{params.bookId}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L12800" class="blob-num js-line-number" data-line-number="12800"></td>
        <td id="LC12800" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12801" class="blob-num js-line-number" data-line-number="12801"></td>
        <td id="LC12801" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12802" class="blob-num js-line-number" data-line-number="12802"></td>
        <td id="LC12802" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script type=&quot;text/ng-template&quot; id=&quot;examples/chapter.html&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12803" class="blob-num js-line-number" data-line-number="12803"></td>
        <td id="LC12803" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          controller: {{name}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L12804" class="blob-num js-line-number" data-line-number="12804"></td>
        <td id="LC12804" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Book Id: {{params.bookId}}&lt;br /&gt;</span></td>
      </tr>
      <tr>
        <td id="L12805" class="blob-num js-line-number" data-line-number="12805"></td>
        <td id="LC12805" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Chapter Id: {{params.chapterId}}</span></td>
      </tr>
      <tr>
        <td id="L12806" class="blob-num js-line-number" data-line-number="12806"></td>
        <td id="LC12806" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12807" class="blob-num js-line-number" data-line-number="12807"></td>
        <td id="LC12807" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12808" class="blob-num js-line-number" data-line-number="12808"></td>
        <td id="LC12808" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12809" class="blob-num js-line-number" data-line-number="12809"></td>
        <td id="LC12809" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          angular.module(&#39;ngView&#39;, [], function($routeProvider, $locationProvider) {</span></td>
      </tr>
      <tr>
        <td id="L12810" class="blob-num js-line-number" data-line-number="12810"></td>
        <td id="LC12810" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $routeProvider.when(&#39;/Book/:bookId&#39;, {</span></td>
      </tr>
      <tr>
        <td id="L12811" class="blob-num js-line-number" data-line-number="12811"></td>
        <td id="LC12811" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              template: &#39;examples/book.html&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12812" class="blob-num js-line-number" data-line-number="12812"></td>
        <td id="LC12812" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              controller: BookCntl</span></td>
      </tr>
      <tr>
        <td id="L12813" class="blob-num js-line-number" data-line-number="12813"></td>
        <td id="LC12813" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L12814" class="blob-num js-line-number" data-line-number="12814"></td>
        <td id="LC12814" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $routeProvider.when(&#39;/Book/:bookId/ch/:chapterId&#39;, {</span></td>
      </tr>
      <tr>
        <td id="L12815" class="blob-num js-line-number" data-line-number="12815"></td>
        <td id="LC12815" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              template: &#39;examples/chapter.html&#39;,</span></td>
      </tr>
      <tr>
        <td id="L12816" class="blob-num js-line-number" data-line-number="12816"></td>
        <td id="LC12816" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              controller: ChapterCntl</span></td>
      </tr>
      <tr>
        <td id="L12817" class="blob-num js-line-number" data-line-number="12817"></td>
        <td id="LC12817" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            });</span></td>
      </tr>
      <tr>
        <td id="L12818" class="blob-num js-line-number" data-line-number="12818"></td>
        <td id="LC12818" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12819" class="blob-num js-line-number" data-line-number="12819"></td>
        <td id="LC12819" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            // configure html5 to get links working on jsfiddle</span></td>
      </tr>
      <tr>
        <td id="L12820" class="blob-num js-line-number" data-line-number="12820"></td>
        <td id="LC12820" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $locationProvider.html5Mode(true);</span></td>
      </tr>
      <tr>
        <td id="L12821" class="blob-num js-line-number" data-line-number="12821"></td>
        <td id="LC12821" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          });</span></td>
      </tr>
      <tr>
        <td id="L12822" class="blob-num js-line-number" data-line-number="12822"></td>
        <td id="LC12822" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12823" class="blob-num js-line-number" data-line-number="12823"></td>
        <td id="LC12823" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function MainCntl($scope, $route, $routeParams, $location) {</span></td>
      </tr>
      <tr>
        <td id="L12824" class="blob-num js-line-number" data-line-number="12824"></td>
        <td id="LC12824" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.$route = $route;</span></td>
      </tr>
      <tr>
        <td id="L12825" class="blob-num js-line-number" data-line-number="12825"></td>
        <td id="LC12825" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.$location = $location;</span></td>
      </tr>
      <tr>
        <td id="L12826" class="blob-num js-line-number" data-line-number="12826"></td>
        <td id="LC12826" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.$routeParams = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L12827" class="blob-num js-line-number" data-line-number="12827"></td>
        <td id="LC12827" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L12828" class="blob-num js-line-number" data-line-number="12828"></td>
        <td id="LC12828" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12829" class="blob-num js-line-number" data-line-number="12829"></td>
        <td id="LC12829" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function BookCntl($scope, $routeParams) {</span></td>
      </tr>
      <tr>
        <td id="L12830" class="blob-num js-line-number" data-line-number="12830"></td>
        <td id="LC12830" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.name = &quot;BookCntl&quot;;</span></td>
      </tr>
      <tr>
        <td id="L12831" class="blob-num js-line-number" data-line-number="12831"></td>
        <td id="LC12831" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.params = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L12832" class="blob-num js-line-number" data-line-number="12832"></td>
        <td id="LC12832" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L12833" class="blob-num js-line-number" data-line-number="12833"></td>
        <td id="LC12833" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12834" class="blob-num js-line-number" data-line-number="12834"></td>
        <td id="LC12834" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          function ChapterCntl($scope, $routeParams) {</span></td>
      </tr>
      <tr>
        <td id="L12835" class="blob-num js-line-number" data-line-number="12835"></td>
        <td id="LC12835" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.name = &quot;ChapterCntl&quot;;</span></td>
      </tr>
      <tr>
        <td id="L12836" class="blob-num js-line-number" data-line-number="12836"></td>
        <td id="LC12836" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            $scope.params = $routeParams;</span></td>
      </tr>
      <tr>
        <td id="L12837" class="blob-num js-line-number" data-line-number="12837"></td>
        <td id="LC12837" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          }</span></td>
      </tr>
      <tr>
        <td id="L12838" class="blob-num js-line-number" data-line-number="12838"></td>
        <td id="LC12838" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12839" class="blob-num js-line-number" data-line-number="12839"></td>
        <td id="LC12839" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12840" class="blob-num js-line-number" data-line-number="12840"></td>
        <td id="LC12840" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-controller=&quot;MainCntl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12841" class="blob-num js-line-number" data-line-number="12841"></td>
        <td id="LC12841" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Choose:</span></td>
      </tr>
      <tr>
        <td id="L12842" class="blob-num js-line-number" data-line-number="12842"></td>
        <td id="LC12842" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;a href=&quot;Book/Moby&quot;&gt;Moby&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L12843" class="blob-num js-line-number" data-line-number="12843"></td>
        <td id="LC12843" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;a href=&quot;Book/Moby/ch/1&quot;&gt;Moby: Ch1&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L12844" class="blob-num js-line-number" data-line-number="12844"></td>
        <td id="LC12844" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;a href=&quot;Book/Gatsby&quot;&gt;Gatsby&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L12845" class="blob-num js-line-number" data-line-number="12845"></td>
        <td id="LC12845" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;a href=&quot;Book/Gatsby/ch/4?key=value&quot;&gt;Gatsby: Ch4&lt;/a&gt; |</span></td>
      </tr>
      <tr>
        <td id="L12846" class="blob-num js-line-number" data-line-number="12846"></td>
        <td id="LC12846" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;a href=&quot;Book/Scarlet&quot;&gt;Scarlet Letter&lt;/a&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L12847" class="blob-num js-line-number" data-line-number="12847"></td>
        <td id="LC12847" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12848" class="blob-num js-line-number" data-line-number="12848"></td>
        <td id="LC12848" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;div ng-view&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12849" class="blob-num js-line-number" data-line-number="12849"></td>
        <td id="LC12849" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;hr /&gt;</span></td>
      </tr>
      <tr>
        <td id="L12850" class="blob-num js-line-number" data-line-number="12850"></td>
        <td id="LC12850" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12851" class="blob-num js-line-number" data-line-number="12851"></td>
        <td id="LC12851" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;pre&gt;$location.path() = {{$location.path()}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12852" class="blob-num js-line-number" data-line-number="12852"></td>
        <td id="LC12852" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;pre&gt;$route.current.template = {{$route.current.template}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12853" class="blob-num js-line-number" data-line-number="12853"></td>
        <td id="LC12853" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;pre&gt;$route.current.params = {{$route.current.params}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12854" class="blob-num js-line-number" data-line-number="12854"></td>
        <td id="LC12854" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;pre&gt;$route.current.scope.name = {{$route.current.scope.name}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12855" class="blob-num js-line-number" data-line-number="12855"></td>
        <td id="LC12855" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;pre&gt;$routeParams = {{$routeParams}}&lt;/pre&gt;</span></td>
      </tr>
      <tr>
        <td id="L12856" class="blob-num js-line-number" data-line-number="12856"></td>
        <td id="LC12856" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12857" class="blob-num js-line-number" data-line-number="12857"></td>
        <td id="LC12857" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12858" class="blob-num js-line-number" data-line-number="12858"></td>
        <td id="LC12858" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12859" class="blob-num js-line-number" data-line-number="12859"></td>
        <td id="LC12859" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        it(&#39;should load and compile correct template&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12860" class="blob-num js-line-number" data-line-number="12860"></td>
        <td id="LC12860" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;a:contains(&quot;Moby: Ch1&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L12861" class="blob-num js-line-number" data-line-number="12861"></td>
        <td id="LC12861" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          var content = element(&#39;.doc-example-live [ng-view]&#39;).text();</span></td>
      </tr>
      <tr>
        <td id="L12862" class="blob-num js-line-number" data-line-number="12862"></td>
        <td id="LC12862" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(content).toMatch(/controller\: ChapterCntl/);</span></td>
      </tr>
      <tr>
        <td id="L12863" class="blob-num js-line-number" data-line-number="12863"></td>
        <td id="LC12863" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(content).toMatch(/Book Id\: Moby/);</span></td>
      </tr>
      <tr>
        <td id="L12864" class="blob-num js-line-number" data-line-number="12864"></td>
        <td id="LC12864" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(content).toMatch(/Chapter Id\: 1/);</span></td>
      </tr>
      <tr>
        <td id="L12865" class="blob-num js-line-number" data-line-number="12865"></td>
        <td id="LC12865" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12866" class="blob-num js-line-number" data-line-number="12866"></td>
        <td id="LC12866" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          element(&#39;a:contains(&quot;Scarlet&quot;)&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L12867" class="blob-num js-line-number" data-line-number="12867"></td>
        <td id="LC12867" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          content = element(&#39;.doc-example-live [ng-view]&#39;).text();</span></td>
      </tr>
      <tr>
        <td id="L12868" class="blob-num js-line-number" data-line-number="12868"></td>
        <td id="LC12868" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(content).toMatch(/controller\: BookCntl/);</span></td>
      </tr>
      <tr>
        <td id="L12869" class="blob-num js-line-number" data-line-number="12869"></td>
        <td id="LC12869" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          expect(content).toMatch(/Book Id\: Scarlet/);</span></td>
      </tr>
      <tr>
        <td id="L12870" class="blob-num js-line-number" data-line-number="12870"></td>
        <td id="LC12870" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        });</span></td>
      </tr>
      <tr>
        <td id="L12871" class="blob-num js-line-number" data-line-number="12871"></td>
        <td id="LC12871" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12872" class="blob-num js-line-number" data-line-number="12872"></td>
        <td id="LC12872" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12873" class="blob-num js-line-number" data-line-number="12873"></td>
        <td id="LC12873" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12874" class="blob-num js-line-number" data-line-number="12874"></td>
        <td id="LC12874" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12875" class="blob-num js-line-number" data-line-number="12875"></td>
        <td id="LC12875" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12876" class="blob-num js-line-number" data-line-number="12876"></td>
        <td id="LC12876" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12877" class="blob-num js-line-number" data-line-number="12877"></td>
        <td id="LC12877" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc event</span></td>
      </tr>
      <tr>
        <td id="L12878" class="blob-num js-line-number" data-line-number="12878"></td>
        <td id="LC12878" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.ngView#$viewContentLoaded</span></td>
      </tr>
      <tr>
        <td id="L12879" class="blob-num js-line-number" data-line-number="12879"></td>
        <td id="LC12879" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @eventOf angular.module.ng.$compileProvider.directive.ngView</span></td>
      </tr>
      <tr>
        <td id="L12880" class="blob-num js-line-number" data-line-number="12880"></td>
        <td id="LC12880" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @eventType emit on the current ngView scope</span></td>
      </tr>
      <tr>
        <td id="L12881" class="blob-num js-line-number" data-line-number="12881"></td>
        <td id="LC12881" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12882" class="blob-num js-line-number" data-line-number="12882"></td>
        <td id="LC12882" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Emitted every time the ngView content is reloaded.</span></td>
      </tr>
      <tr>
        <td id="L12883" class="blob-num js-line-number" data-line-number="12883"></td>
        <td id="LC12883" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12884" class="blob-num js-line-number" data-line-number="12884"></td>
        <td id="LC12884" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngViewDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$http<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$templateCache<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$route<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$anchorScroll<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$compile<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12885" class="blob-num js-line-number" data-line-number="12885"></td>
        <td id="LC12885" class="blob-code blob-code-inner js-file-line">                       <span class="pl-s"><span class="pl-pds">&#39;</span>$controller<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12886" class="blob-num js-line-number" data-line-number="12886"></td>
        <td id="LC12886" class="blob-code blob-code-inner js-file-line">               <span class="pl-k">function</span>(<span class="pl-smi">$http</span>,   <span class="pl-smi">$templateCache</span>,   <span class="pl-smi">$route</span>,   <span class="pl-smi">$anchorScroll</span>,   <span class="pl-smi">$compile</span>,</td>
      </tr>
      <tr>
        <td id="L12887" class="blob-num js-line-number" data-line-number="12887"></td>
        <td id="LC12887" class="blob-code blob-code-inner js-file-line">                        <span class="pl-smi">$controller</span>) {</td>
      </tr>
      <tr>
        <td id="L12888" class="blob-num js-line-number" data-line-number="12888"></td>
        <td id="LC12888" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L12889" class="blob-num js-line-number" data-line-number="12889"></td>
        <td id="LC12889" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>ECA<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12890" class="blob-num js-line-number" data-line-number="12890"></td>
        <td id="LC12890" class="blob-code blob-code-inner js-file-line">    terminal<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L12891" class="blob-num js-line-number" data-line-number="12891"></td>
        <td id="LC12891" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L12892" class="blob-num js-line-number" data-line-number="12892"></td>
        <td id="LC12892" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> changeCounter <span class="pl-k">=</span> <span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L12893" class="blob-num js-line-number" data-line-number="12893"></td>
        <td id="LC12893" class="blob-code blob-code-inner js-file-line">          lastScope,</td>
      </tr>
      <tr>
        <td id="L12894" class="blob-num js-line-number" data-line-number="12894"></td>
        <td id="LC12894" class="blob-code blob-code-inner js-file-line">          onloadExp <span class="pl-k">=</span> attr.onload <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L12895" class="blob-num js-line-number" data-line-number="12895"></td>
        <td id="LC12895" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12896" class="blob-num js-line-number" data-line-number="12896"></td>
        <td id="LC12896" class="blob-code blob-code-inner js-file-line">      scope.$on(<span class="pl-s"><span class="pl-pds">&#39;</span>$afterRouteChange<span class="pl-pds">&#39;</span></span>, update);</td>
      </tr>
      <tr>
        <td id="L12897" class="blob-num js-line-number" data-line-number="12897"></td>
        <td id="LC12897" class="blob-code blob-code-inner js-file-line">      update();</td>
      </tr>
      <tr>
        <td id="L12898" class="blob-num js-line-number" data-line-number="12898"></td>
        <td id="LC12898" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12899" class="blob-num js-line-number" data-line-number="12899"></td>
        <td id="LC12899" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12900" class="blob-num js-line-number" data-line-number="12900"></td>
        <td id="LC12900" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">destroyLastScope</span>() {</td>
      </tr>
      <tr>
        <td id="L12901" class="blob-num js-line-number" data-line-number="12901"></td>
        <td id="LC12901" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (lastScope) {</td>
      </tr>
      <tr>
        <td id="L12902" class="blob-num js-line-number" data-line-number="12902"></td>
        <td id="LC12902" class="blob-code blob-code-inner js-file-line">          lastScope.$destroy();</td>
      </tr>
      <tr>
        <td id="L12903" class="blob-num js-line-number" data-line-number="12903"></td>
        <td id="LC12903" class="blob-code blob-code-inner js-file-line">          lastScope <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L12904" class="blob-num js-line-number" data-line-number="12904"></td>
        <td id="LC12904" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12905" class="blob-num js-line-number" data-line-number="12905"></td>
        <td id="LC12905" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12906" class="blob-num js-line-number" data-line-number="12906"></td>
        <td id="LC12906" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12907" class="blob-num js-line-number" data-line-number="12907"></td>
        <td id="LC12907" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">update</span>() {</td>
      </tr>
      <tr>
        <td id="L12908" class="blob-num js-line-number" data-line-number="12908"></td>
        <td id="LC12908" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> template <span class="pl-k">=</span> $route.<span class="pl-c1">current</span> <span class="pl-k">&amp;&amp;</span> $route.<span class="pl-c1">current</span>.template,</td>
      </tr>
      <tr>
        <td id="L12909" class="blob-num js-line-number" data-line-number="12909"></td>
        <td id="LC12909" class="blob-code blob-code-inner js-file-line">            thisChangeId <span class="pl-k">=</span> <span class="pl-k">++</span>changeCounter;</td>
      </tr>
      <tr>
        <td id="L12910" class="blob-num js-line-number" data-line-number="12910"></td>
        <td id="LC12910" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12911" class="blob-num js-line-number" data-line-number="12911"></td>
        <td id="LC12911" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">clearContent</span>() {</td>
      </tr>
      <tr>
        <td id="L12912" class="blob-num js-line-number" data-line-number="12912"></td>
        <td id="LC12912" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// ignore callback if another route change occured since</span></td>
      </tr>
      <tr>
        <td id="L12913" class="blob-num js-line-number" data-line-number="12913"></td>
        <td id="LC12913" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (thisChangeId <span class="pl-k">===</span> changeCounter) {</td>
      </tr>
      <tr>
        <td id="L12914" class="blob-num js-line-number" data-line-number="12914"></td>
        <td id="LC12914" class="blob-code blob-code-inner js-file-line">            element.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12915" class="blob-num js-line-number" data-line-number="12915"></td>
        <td id="LC12915" class="blob-code blob-code-inner js-file-line">            destroyLastScope();</td>
      </tr>
      <tr>
        <td id="L12916" class="blob-num js-line-number" data-line-number="12916"></td>
        <td id="LC12916" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L12917" class="blob-num js-line-number" data-line-number="12917"></td>
        <td id="LC12917" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12918" class="blob-num js-line-number" data-line-number="12918"></td>
        <td id="LC12918" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12919" class="blob-num js-line-number" data-line-number="12919"></td>
        <td id="LC12919" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (template) {</td>
      </tr>
      <tr>
        <td id="L12920" class="blob-num js-line-number" data-line-number="12920"></td>
        <td id="LC12920" class="blob-code blob-code-inner js-file-line">          $http.get(template, {cache<span class="pl-k">:</span> $templateCache}).success(<span class="pl-k">function</span>(<span class="pl-smi">response</span>) {</td>
      </tr>
      <tr>
        <td id="L12921" class="blob-num js-line-number" data-line-number="12921"></td>
        <td id="LC12921" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// ignore callback if another route change occured since</span></td>
      </tr>
      <tr>
        <td id="L12922" class="blob-num js-line-number" data-line-number="12922"></td>
        <td id="LC12922" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (thisChangeId <span class="pl-k">===</span> changeCounter) {</td>
      </tr>
      <tr>
        <td id="L12923" class="blob-num js-line-number" data-line-number="12923"></td>
        <td id="LC12923" class="blob-code blob-code-inner js-file-line">              element.html(response);</td>
      </tr>
      <tr>
        <td id="L12924" class="blob-num js-line-number" data-line-number="12924"></td>
        <td id="LC12924" class="blob-code blob-code-inner js-file-line">              destroyLastScope();</td>
      </tr>
      <tr>
        <td id="L12925" class="blob-num js-line-number" data-line-number="12925"></td>
        <td id="LC12925" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12926" class="blob-num js-line-number" data-line-number="12926"></td>
        <td id="LC12926" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">var</span> link <span class="pl-k">=</span> $<span class="pl-c1">compile</span>(element.contents()),</td>
      </tr>
      <tr>
        <td id="L12927" class="blob-num js-line-number" data-line-number="12927"></td>
        <td id="LC12927" class="blob-code blob-code-inner js-file-line">                  current <span class="pl-k">=</span> $route.<span class="pl-c1">current</span>,</td>
      </tr>
      <tr>
        <td id="L12928" class="blob-num js-line-number" data-line-number="12928"></td>
        <td id="LC12928" class="blob-code blob-code-inner js-file-line">                  controller;</td>
      </tr>
      <tr>
        <td id="L12929" class="blob-num js-line-number" data-line-number="12929"></td>
        <td id="LC12929" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12930" class="blob-num js-line-number" data-line-number="12930"></td>
        <td id="LC12930" class="blob-code blob-code-inner js-file-line">              lastScope <span class="pl-k">=</span> current.<span class="pl-c1">scope</span> <span class="pl-k">=</span> scope.$<span class="pl-k">new</span>();</td>
      </tr>
      <tr>
        <td id="L12931" class="blob-num js-line-number" data-line-number="12931"></td>
        <td id="LC12931" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (current.controller) {</td>
      </tr>
      <tr>
        <td id="L12932" class="blob-num js-line-number" data-line-number="12932"></td>
        <td id="LC12932" class="blob-code blob-code-inner js-file-line">                controller <span class="pl-k">=</span> $controller(current.controller, {$scope<span class="pl-k">:</span> lastScope});</td>
      </tr>
      <tr>
        <td id="L12933" class="blob-num js-line-number" data-line-number="12933"></td>
        <td id="LC12933" class="blob-code blob-code-inner js-file-line">                element.contents().<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>$ngControllerController<span class="pl-pds">&#39;</span></span>, controller);</td>
      </tr>
      <tr>
        <td id="L12934" class="blob-num js-line-number" data-line-number="12934"></td>
        <td id="LC12934" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L12935" class="blob-num js-line-number" data-line-number="12935"></td>
        <td id="LC12935" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12936" class="blob-num js-line-number" data-line-number="12936"></td>
        <td id="LC12936" class="blob-code blob-code-inner js-file-line">              <span class="pl-c1">link</span>(lastScope);</td>
      </tr>
      <tr>
        <td id="L12937" class="blob-num js-line-number" data-line-number="12937"></td>
        <td id="LC12937" class="blob-code blob-code-inner js-file-line">              lastScope.$emit(<span class="pl-s"><span class="pl-pds">&#39;</span>$viewContentLoaded<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L12938" class="blob-num js-line-number" data-line-number="12938"></td>
        <td id="LC12938" class="blob-code blob-code-inner js-file-line">              lastScope.$<span class="pl-c1">eval</span>(onloadExp);</td>
      </tr>
      <tr>
        <td id="L12939" class="blob-num js-line-number" data-line-number="12939"></td>
        <td id="LC12939" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12940" class="blob-num js-line-number" data-line-number="12940"></td>
        <td id="LC12940" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// $anchorScroll might listen on event...</span></td>
      </tr>
      <tr>
        <td id="L12941" class="blob-num js-line-number" data-line-number="12941"></td>
        <td id="LC12941" class="blob-code blob-code-inner js-file-line">              $anchorScroll();</td>
      </tr>
      <tr>
        <td id="L12942" class="blob-num js-line-number" data-line-number="12942"></td>
        <td id="LC12942" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L12943" class="blob-num js-line-number" data-line-number="12943"></td>
        <td id="LC12943" class="blob-code blob-code-inner js-file-line">          })<span class="pl-c1">.error</span>(clearContent);</td>
      </tr>
      <tr>
        <td id="L12944" class="blob-num js-line-number" data-line-number="12944"></td>
        <td id="LC12944" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L12945" class="blob-num js-line-number" data-line-number="12945"></td>
        <td id="LC12945" class="blob-code blob-code-inner js-file-line">          clearContent();</td>
      </tr>
      <tr>
        <td id="L12946" class="blob-num js-line-number" data-line-number="12946"></td>
        <td id="LC12946" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L12947" class="blob-num js-line-number" data-line-number="12947"></td>
        <td id="LC12947" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12948" class="blob-num js-line-number" data-line-number="12948"></td>
        <td id="LC12948" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12949" class="blob-num js-line-number" data-line-number="12949"></td>
        <td id="LC12949" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L12950" class="blob-num js-line-number" data-line-number="12950"></td>
        <td id="LC12950" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L12951" class="blob-num js-line-number" data-line-number="12951"></td>
        <td id="LC12951" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12952" class="blob-num js-line-number" data-line-number="12952"></td>
        <td id="LC12952" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12953" class="blob-num js-line-number" data-line-number="12953"></td>
        <td id="LC12953" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12954" class="blob-num js-line-number" data-line-number="12954"></td>
        <td id="LC12954" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.script</span></td>
      </tr>
      <tr>
        <td id="L12955" class="blob-num js-line-number" data-line-number="12955"></td>
        <td id="LC12955" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12956" class="blob-num js-line-number" data-line-number="12956"></td>
        <td id="LC12956" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L12957" class="blob-num js-line-number" data-line-number="12957"></td>
        <td id="LC12957" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Load content of a script tag, with type `text/ng-template`, into `$templateCache`, so that the</span></td>
      </tr>
      <tr>
        <td id="L12958" class="blob-num js-line-number" data-line-number="12958"></td>
        <td id="LC12958" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * template can be used by `ngInclude`, `ngView` or directive templates.</span></td>
      </tr>
      <tr>
        <td id="L12959" class="blob-num js-line-number" data-line-number="12959"></td>
        <td id="LC12959" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12960" class="blob-num js-line-number" data-line-number="12960"></td>
        <td id="LC12960" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict E</span></td>
      </tr>
      <tr>
        <td id="L12961" class="blob-num js-line-number" data-line-number="12961"></td>
        <td id="LC12961" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {&#39;text/ng-template&#39;} type must be set to `&#39;text/ng-template&#39;`</span></td>
      </tr>
      <tr>
        <td id="L12962" class="blob-num js-line-number" data-line-number="12962"></td>
        <td id="LC12962" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L12963" class="blob-num js-line-number" data-line-number="12963"></td>
        <td id="LC12963" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L12964" class="blob-num js-line-number" data-line-number="12964"></td>
        <td id="LC12964" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12965" class="blob-num js-line-number" data-line-number="12965"></td>
        <td id="LC12965" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12966" class="blob-num js-line-number" data-line-number="12966"></td>
        <td id="LC12966" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;script type=&quot;text/ng-template&quot; id=&quot;/tpl.html&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L12967" class="blob-num js-line-number" data-line-number="12967"></td>
        <td id="LC12967" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        Content of the template.</span></td>
      </tr>
      <tr>
        <td id="L12968" class="blob-num js-line-number" data-line-number="12968"></td>
        <td id="LC12968" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L12969" class="blob-num js-line-number" data-line-number="12969"></td>
        <td id="LC12969" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L12970" class="blob-num js-line-number" data-line-number="12970"></td>
        <td id="LC12970" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;a ng-click=&quot;currentTpl=&#39;/tpl.html&#39;&quot; id=&quot;tpl-link&quot;&gt;Load inlined template&lt;/a&gt;</span></td>
      </tr>
      <tr>
        <td id="L12971" class="blob-num js-line-number" data-line-number="12971"></td>
        <td id="LC12971" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;div id=&quot;tpl-content&quot; ng-include src=&quot;currentTpl&quot;&gt;&lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L12972" class="blob-num js-line-number" data-line-number="12972"></td>
        <td id="LC12972" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L12973" class="blob-num js-line-number" data-line-number="12973"></td>
        <td id="LC12973" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12974" class="blob-num js-line-number" data-line-number="12974"></td>
        <td id="LC12974" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      it(&#39;should load template defined inside script tag&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L12975" class="blob-num js-line-number" data-line-number="12975"></td>
        <td id="LC12975" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        element(&#39;#tpl-link&#39;).click();</span></td>
      </tr>
      <tr>
        <td id="L12976" class="blob-num js-line-number" data-line-number="12976"></td>
        <td id="LC12976" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        expect(element(&#39;#tpl-content&#39;).text()).toMatch(/Content of the template/);</span></td>
      </tr>
      <tr>
        <td id="L12977" class="blob-num js-line-number" data-line-number="12977"></td>
        <td id="LC12977" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      });</span></td>
      </tr>
      <tr>
        <td id="L12978" class="blob-num js-line-number" data-line-number="12978"></td>
        <td id="LC12978" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L12979" class="blob-num js-line-number" data-line-number="12979"></td>
        <td id="LC12979" class="blob-code blob-code-inner js-file-line"><span class="pl-c">  &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L12980" class="blob-num js-line-number" data-line-number="12980"></td>
        <td id="LC12980" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L12981" class="blob-num js-line-number" data-line-number="12981"></td>
        <td id="LC12981" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> scriptDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$templateCache<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$templateCache</span>) {</td>
      </tr>
      <tr>
        <td id="L12982" class="blob-num js-line-number" data-line-number="12982"></td>
        <td id="LC12982" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L12983" class="blob-num js-line-number" data-line-number="12983"></td>
        <td id="LC12983" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12984" class="blob-num js-line-number" data-line-number="12984"></td>
        <td id="LC12984" class="blob-code blob-code-inner js-file-line">    terminal<span class="pl-k">:</span> <span class="pl-c1">true</span>,</td>
      </tr>
      <tr>
        <td id="L12985" class="blob-num js-line-number" data-line-number="12985"></td>
        <td id="LC12985" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L12986" class="blob-num js-line-number" data-line-number="12986"></td>
        <td id="LC12986" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (attr.<span class="pl-c1">type</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>text/ng-template<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L12987" class="blob-num js-line-number" data-line-number="12987"></td>
        <td id="LC12987" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> templateUrl <span class="pl-k">=</span> attr.<span class="pl-c1">id</span>,</td>
      </tr>
      <tr>
        <td id="L12988" class="blob-num js-line-number" data-line-number="12988"></td>
        <td id="LC12988" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// IE is not consistent, in scripts we have to read .text but in other nodes we have to read .textContent</span></td>
      </tr>
      <tr>
        <td id="L12989" class="blob-num js-line-number" data-line-number="12989"></td>
        <td id="LC12989" class="blob-code blob-code-inner js-file-line">            text <span class="pl-k">=</span> element[<span class="pl-c1">0</span>].<span class="pl-c1">text</span>;</td>
      </tr>
      <tr>
        <td id="L12990" class="blob-num js-line-number" data-line-number="12990"></td>
        <td id="LC12990" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12991" class="blob-num js-line-number" data-line-number="12991"></td>
        <td id="LC12991" class="blob-code blob-code-inner js-file-line">        $templateCache.put(templateUrl, text);</td>
      </tr>
      <tr>
        <td id="L12992" class="blob-num js-line-number" data-line-number="12992"></td>
        <td id="LC12992" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L12993" class="blob-num js-line-number" data-line-number="12993"></td>
        <td id="LC12993" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L12994" class="blob-num js-line-number" data-line-number="12994"></td>
        <td id="LC12994" class="blob-code blob-code-inner js-file-line">  };</td>
      </tr>
      <tr>
        <td id="L12995" class="blob-num js-line-number" data-line-number="12995"></td>
        <td id="LC12995" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L12996" class="blob-num js-line-number" data-line-number="12996"></td>
        <td id="LC12996" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L12997" class="blob-num js-line-number" data-line-number="12997"></td>
        <td id="LC12997" class="blob-code blob-code-inner js-file-line"><span class="pl-c">/**</span></td>
      </tr>
      <tr>
        <td id="L12998" class="blob-num js-line-number" data-line-number="12998"></td>
        <td id="LC12998" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @ngdoc directive</span></td>
      </tr>
      <tr>
        <td id="L12999" class="blob-num js-line-number" data-line-number="12999"></td>
        <td id="LC12999" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@name</span> angular.module.ng.$compileProvider.directive.select</span></td>
      </tr>
      <tr>
        <td id="L13000" class="blob-num js-line-number" data-line-number="13000"></td>
        <td id="LC13000" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * @restrict E</span></td>
      </tr>
      <tr>
        <td id="L13001" class="blob-num js-line-number" data-line-number="13001"></td>
        <td id="LC13001" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13002" class="blob-num js-line-number" data-line-number="13002"></td>
        <td id="LC13002" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@description</span></span></td>
      </tr>
      <tr>
        <td id="L13003" class="blob-num js-line-number" data-line-number="13003"></td>
        <td id="LC13003" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * HTML `SELECT` element with angular data-binding.</span></td>
      </tr>
      <tr>
        <td id="L13004" class="blob-num js-line-number" data-line-number="13004"></td>
        <td id="LC13004" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13005" class="blob-num js-line-number" data-line-number="13005"></td>
        <td id="LC13005" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * # `ngOptions`</span></td>
      </tr>
      <tr>
        <td id="L13006" class="blob-num js-line-number" data-line-number="13006"></td>
        <td id="LC13006" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13007" class="blob-num js-line-number" data-line-number="13007"></td>
        <td id="LC13007" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Optionally `ngOptions` attribute can be used to dynamically generate a list of `&lt;option&gt;`</span></td>
      </tr>
      <tr>
        <td id="L13008" class="blob-num js-line-number" data-line-number="13008"></td>
        <td id="LC13008" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * elements for a `&lt;select&gt;` element using an array or an object obtained by evaluating the</span></td>
      </tr>
      <tr>
        <td id="L13009" class="blob-num js-line-number" data-line-number="13009"></td>
        <td id="LC13009" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `ngOptions` expression.</span></td>
      </tr>
      <tr>
        <td id="L13010" class="blob-num js-line-number" data-line-number="13010"></td>
        <td id="LC13010" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *ËË</span></td>
      </tr>
      <tr>
        <td id="L13011" class="blob-num js-line-number" data-line-number="13011"></td>
        <td id="LC13011" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * When an item in the select menu is select, the value of array element or object property</span></td>
      </tr>
      <tr>
        <td id="L13012" class="blob-num js-line-number" data-line-number="13012"></td>
        <td id="LC13012" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * represented by the selected option will be bound to the model identified by the `ngModel`</span></td>
      </tr>
      <tr>
        <td id="L13013" class="blob-num js-line-number" data-line-number="13013"></td>
        <td id="LC13013" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * directive of the parent select element.</span></td>
      </tr>
      <tr>
        <td id="L13014" class="blob-num js-line-number" data-line-number="13014"></td>
        <td id="LC13014" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13015" class="blob-num js-line-number" data-line-number="13015"></td>
        <td id="LC13015" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Optionally, a single hard-coded `&lt;option&gt;` element, with the value set to an empty string, can</span></td>
      </tr>
      <tr>
        <td id="L13016" class="blob-num js-line-number" data-line-number="13016"></td>
        <td id="LC13016" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * be nested into the `&lt;select&gt;` element. This element will then represent `null` or &quot;not selected&quot;</span></td>
      </tr>
      <tr>
        <td id="L13017" class="blob-num js-line-number" data-line-number="13017"></td>
        <td id="LC13017" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * option. See example below for demonstration.</span></td>
      </tr>
      <tr>
        <td id="L13018" class="blob-num js-line-number" data-line-number="13018"></td>
        <td id="LC13018" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13019" class="blob-num js-line-number" data-line-number="13019"></td>
        <td id="LC13019" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Note: `ngOptions` provides iterator facility for `&lt;option&gt;` element which should be used instead</span></td>
      </tr>
      <tr>
        <td id="L13020" class="blob-num js-line-number" data-line-number="13020"></td>
        <td id="LC13020" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * of {@link angular.module.ng.$compileProvider.directive.ngRepeat ngRepeat} when you want the</span></td>
      </tr>
      <tr>
        <td id="L13021" class="blob-num js-line-number" data-line-number="13021"></td>
        <td id="LC13021" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * `select` model to be bound to a non-string value. This is because an option element can currently</span></td>
      </tr>
      <tr>
        <td id="L13022" class="blob-num js-line-number" data-line-number="13022"></td>
        <td id="LC13022" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * be bound to string values only.</span></td>
      </tr>
      <tr>
        <td id="L13023" class="blob-num js-line-number" data-line-number="13023"></td>
        <td id="LC13023" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13024" class="blob-num js-line-number" data-line-number="13024"></td>
        <td id="LC13024" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string} name assignable expression to data-bind to.</span></td>
      </tr>
      <tr>
        <td id="L13025" class="blob-num js-line-number" data-line-number="13025"></td>
        <td id="LC13025" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {string=} required The control is considered valid only if value is entered.</span></td>
      </tr>
      <tr>
        <td id="L13026" class="blob-num js-line-number" data-line-number="13026"></td>
        <td id="LC13026" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@param</span> {comprehension_expression=} ngOptions in one of the following forms:</span></td>
      </tr>
      <tr>
        <td id="L13027" class="blob-num js-line-number" data-line-number="13027"></td>
        <td id="LC13027" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13028" class="blob-num js-line-number" data-line-number="13028"></td>
        <td id="LC13028" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * for array data sources:</span></td>
      </tr>
      <tr>
        <td id="L13029" class="blob-num js-line-number" data-line-number="13029"></td>
        <td id="LC13029" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `label` **`for`** `value` **`in`** `array`</span></td>
      </tr>
      <tr>
        <td id="L13030" class="blob-num js-line-number" data-line-number="13030"></td>
        <td id="LC13030" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `select` **`as`** `label` **`for`** `value` **`in`** `array`</span></td>
      </tr>
      <tr>
        <td id="L13031" class="blob-num js-line-number" data-line-number="13031"></td>
        <td id="LC13031" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `label`  **`group by`** `group` **`for`** `value` **`in`** `array`</span></td>
      </tr>
      <tr>
        <td id="L13032" class="blob-num js-line-number" data-line-number="13032"></td>
        <td id="LC13032" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `select` **`as`** `label` **`group by`** `group` **`for`** `value` **`in`** `array`</span></td>
      </tr>
      <tr>
        <td id="L13033" class="blob-num js-line-number" data-line-number="13033"></td>
        <td id="LC13033" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * for object data sources:</span></td>
      </tr>
      <tr>
        <td id="L13034" class="blob-num js-line-number" data-line-number="13034"></td>
        <td id="LC13034" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`</span></td>
      </tr>
      <tr>
        <td id="L13035" class="blob-num js-line-number" data-line-number="13035"></td>
        <td id="LC13035" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`</span></td>
      </tr>
      <tr>
        <td id="L13036" class="blob-num js-line-number" data-line-number="13036"></td>
        <td id="LC13036" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`</span></td>
      </tr>
      <tr>
        <td id="L13037" class="blob-num js-line-number" data-line-number="13037"></td>
        <td id="LC13037" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     * `select` **`as`** `label` **`group by`** `group`</span></td>
      </tr>
      <tr>
        <td id="L13038" class="blob-num js-line-number" data-line-number="13038"></td>
        <td id="LC13038" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *         **`for` `(`**`key`**`,`** `value`**`) in`** `object`</span></td>
      </tr>
      <tr>
        <td id="L13039" class="blob-num js-line-number" data-line-number="13039"></td>
        <td id="LC13039" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13040" class="blob-num js-line-number" data-line-number="13040"></td>
        <td id="LC13040" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * Where:</span></td>
      </tr>
      <tr>
        <td id="L13041" class="blob-num js-line-number" data-line-number="13041"></td>
        <td id="LC13041" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13042" class="blob-num js-line-number" data-line-number="13042"></td>
        <td id="LC13042" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `array` / `object`: an expression which evaluates to an array / object to iterate over.</span></td>
      </tr>
      <tr>
        <td id="L13043" class="blob-num js-line-number" data-line-number="13043"></td>
        <td id="LC13043" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `value`: local variable which will refer to each item in the `array` or each property value</span></td>
      </tr>
      <tr>
        <td id="L13044" class="blob-num js-line-number" data-line-number="13044"></td>
        <td id="LC13044" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      of `object` during iteration.</span></td>
      </tr>
      <tr>
        <td id="L13045" class="blob-num js-line-number" data-line-number="13045"></td>
        <td id="LC13045" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `key`: local variable which will refer to a property name in `object` during iteration.</span></td>
      </tr>
      <tr>
        <td id="L13046" class="blob-num js-line-number" data-line-number="13046"></td>
        <td id="LC13046" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `label`: The result of this expression will be the label for `&lt;option&gt;` element. The</span></td>
      </tr>
      <tr>
        <td id="L13047" class="blob-num js-line-number" data-line-number="13047"></td>
        <td id="LC13047" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *     `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).</span></td>
      </tr>
      <tr>
        <td id="L13048" class="blob-num js-line-number" data-line-number="13048"></td>
        <td id="LC13048" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `select`: The result of this expression will be bound to the model of the parent `&lt;select&gt;`</span></td>
      </tr>
      <tr>
        <td id="L13049" class="blob-num js-line-number" data-line-number="13049"></td>
        <td id="LC13049" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      element. If not specified, `select` expression will default to `value`.</span></td>
      </tr>
      <tr>
        <td id="L13050" class="blob-num js-line-number" data-line-number="13050"></td>
        <td id="LC13050" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *   * `group`: The result of this expression will be used to group options using the `&lt;optgroup&gt;`</span></td>
      </tr>
      <tr>
        <td id="L13051" class="blob-num js-line-number" data-line-number="13051"></td>
        <td id="LC13051" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *      DOM element.</span></td>
      </tr>
      <tr>
        <td id="L13052" class="blob-num js-line-number" data-line-number="13052"></td>
        <td id="LC13052" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> *</span></td>
      </tr>
      <tr>
        <td id="L13053" class="blob-num js-line-number" data-line-number="13053"></td>
        <td id="LC13053" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> * <span class="pl-k">@example</span></span></td>
      </tr>
      <tr>
        <td id="L13054" class="blob-num js-line-number" data-line-number="13054"></td>
        <td id="LC13054" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L13055" class="blob-num js-line-number" data-line-number="13055"></td>
        <td id="LC13055" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L13056" class="blob-num js-line-number" data-line-number="13056"></td>
        <td id="LC13056" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;script&gt;</span></td>
      </tr>
      <tr>
        <td id="L13057" class="blob-num js-line-number" data-line-number="13057"></td>
        <td id="LC13057" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        function MyCntrl($scope) {</span></td>
      </tr>
      <tr>
        <td id="L13058" class="blob-num js-line-number" data-line-number="13058"></td>
        <td id="LC13058" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.colors = [</span></td>
      </tr>
      <tr>
        <td id="L13059" class="blob-num js-line-number" data-line-number="13059"></td>
        <td id="LC13059" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {name:&#39;black&#39;, shade:&#39;dark&#39;},</span></td>
      </tr>
      <tr>
        <td id="L13060" class="blob-num js-line-number" data-line-number="13060"></td>
        <td id="LC13060" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {name:&#39;white&#39;, shade:&#39;light&#39;},</span></td>
      </tr>
      <tr>
        <td id="L13061" class="blob-num js-line-number" data-line-number="13061"></td>
        <td id="LC13061" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {name:&#39;red&#39;, shade:&#39;dark&#39;},</span></td>
      </tr>
      <tr>
        <td id="L13062" class="blob-num js-line-number" data-line-number="13062"></td>
        <td id="LC13062" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {name:&#39;blue&#39;, shade:&#39;dark&#39;},</span></td>
      </tr>
      <tr>
        <td id="L13063" class="blob-num js-line-number" data-line-number="13063"></td>
        <td id="LC13063" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            {name:&#39;yellow&#39;, shade:&#39;light&#39;}</span></td>
      </tr>
      <tr>
        <td id="L13064" class="blob-num js-line-number" data-line-number="13064"></td>
        <td id="LC13064" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          ];</span></td>
      </tr>
      <tr>
        <td id="L13065" class="blob-num js-line-number" data-line-number="13065"></td>
        <td id="LC13065" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          $scope.color = $scope.colors[2]; // red</span></td>
      </tr>
      <tr>
        <td id="L13066" class="blob-num js-line-number" data-line-number="13066"></td>
        <td id="LC13066" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        }</span></td>
      </tr>
      <tr>
        <td id="L13067" class="blob-num js-line-number" data-line-number="13067"></td>
        <td id="LC13067" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/script&gt;</span></td>
      </tr>
      <tr>
        <td id="L13068" class="blob-num js-line-number" data-line-number="13068"></td>
        <td id="LC13068" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;div ng-controller=&quot;MyCntrl&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13069" class="blob-num js-line-number" data-line-number="13069"></td>
        <td id="LC13069" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L13070" class="blob-num js-line-number" data-line-number="13070"></td>
        <td id="LC13070" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;li ng-repeat=&quot;color in colors&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13071" class="blob-num js-line-number" data-line-number="13071"></td>
        <td id="LC13071" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              Name: &lt;input ng-model=&quot;color.name&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13072" class="blob-num js-line-number" data-line-number="13072"></td>
        <td id="LC13072" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              [&lt;a href ng-click=&quot;colors.$remove(color)&quot;&gt;X&lt;/a&gt;]</span></td>
      </tr>
      <tr>
        <td id="L13073" class="blob-num js-line-number" data-line-number="13073"></td>
        <td id="LC13073" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L13074" class="blob-num js-line-number" data-line-number="13074"></td>
        <td id="LC13074" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;li&gt;</span></td>
      </tr>
      <tr>
        <td id="L13075" class="blob-num js-line-number" data-line-number="13075"></td>
        <td id="LC13075" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              [&lt;a href ng-click=&quot;colors.push({})&quot;&gt;add&lt;/a&gt;]</span></td>
      </tr>
      <tr>
        <td id="L13076" class="blob-num js-line-number" data-line-number="13076"></td>
        <td id="LC13076" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/li&gt;</span></td>
      </tr>
      <tr>
        <td id="L13077" class="blob-num js-line-number" data-line-number="13077"></td>
        <td id="LC13077" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/ul&gt;</span></td>
      </tr>
      <tr>
        <td id="L13078" class="blob-num js-line-number" data-line-number="13078"></td>
        <td id="LC13078" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;hr/&gt;</span></td>
      </tr>
      <tr>
        <td id="L13079" class="blob-num js-line-number" data-line-number="13079"></td>
        <td id="LC13079" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Color (null not allowed):</span></td>
      </tr>
      <tr>
        <td id="L13080" class="blob-num js-line-number" data-line-number="13080"></td>
        <td id="LC13080" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name for c in colors&quot;&gt;&lt;/select&gt;&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L13081" class="blob-num js-line-number" data-line-number="13081"></td>
        <td id="LC13081" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L13082" class="blob-num js-line-number" data-line-number="13082"></td>
        <td id="LC13082" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Color (null allowed):</span></td>
      </tr>
      <tr>
        <td id="L13083" class="blob-num js-line-number" data-line-number="13083"></td>
        <td id="LC13083" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;span  class=&quot;nullable&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13084" class="blob-num js-line-number" data-line-number="13084"></td>
        <td id="LC13084" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name for c in colors&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13085" class="blob-num js-line-number" data-line-number="13085"></td>
        <td id="LC13085" class="blob-code blob-code-inner js-file-line"><span class="pl-c">              &lt;option value=&quot;&quot;&gt;-- chose color --&lt;/option&gt;</span></td>
      </tr>
      <tr>
        <td id="L13086" class="blob-num js-line-number" data-line-number="13086"></td>
        <td id="LC13086" class="blob-code blob-code-inner js-file-line"><span class="pl-c">            &lt;/select&gt;</span></td>
      </tr>
      <tr>
        <td id="L13087" class="blob-num js-line-number" data-line-number="13087"></td>
        <td id="LC13087" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/span&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L13088" class="blob-num js-line-number" data-line-number="13088"></td>
        <td id="LC13088" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L13089" class="blob-num js-line-number" data-line-number="13089"></td>
        <td id="LC13089" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Color grouped by shade:</span></td>
      </tr>
      <tr>
        <td id="L13090" class="blob-num js-line-number" data-line-number="13090"></td>
        <td id="LC13090" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;select ng-model=&quot;color&quot; ng-options=&quot;c.name group by c.shade for c in colors&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13091" class="blob-num js-line-number" data-line-number="13091"></td>
        <td id="LC13091" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/select&gt;&lt;br/&gt;</span></td>
      </tr>
      <tr>
        <td id="L13092" class="blob-num js-line-number" data-line-number="13092"></td>
        <td id="LC13092" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L13093" class="blob-num js-line-number" data-line-number="13093"></td>
        <td id="LC13093" class="blob-code blob-code-inner js-file-line"><span class="pl-c"></span></td>
      </tr>
      <tr>
        <td id="L13094" class="blob-num js-line-number" data-line-number="13094"></td>
        <td id="LC13094" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Select &lt;a href ng-click=&quot;color={name:&#39;not in list&#39;}&quot;&gt;bogus&lt;/a&gt;.&lt;br&gt;</span></td>
      </tr>
      <tr>
        <td id="L13095" class="blob-num js-line-number" data-line-number="13095"></td>
        <td id="LC13095" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;hr/&gt;</span></td>
      </tr>
      <tr>
        <td id="L13096" class="blob-num js-line-number" data-line-number="13096"></td>
        <td id="LC13096" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          Currently selected: {{ {selected_color:color}  }}</span></td>
      </tr>
      <tr>
        <td id="L13097" class="blob-num js-line-number" data-line-number="13097"></td>
        <td id="LC13097" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;div style=&quot;border:solid 1px black; height:20px&quot;</span></td>
      </tr>
      <tr>
        <td id="L13098" class="blob-num js-line-number" data-line-number="13098"></td>
        <td id="LC13098" class="blob-code blob-code-inner js-file-line"><span class="pl-c">               ng-style=&quot;{&#39;background-color&#39;:color.name}&quot;&gt;</span></td>
      </tr>
      <tr>
        <td id="L13099" class="blob-num js-line-number" data-line-number="13099"></td>
        <td id="LC13099" class="blob-code blob-code-inner js-file-line"><span class="pl-c">          &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L13100" class="blob-num js-line-number" data-line-number="13100"></td>
        <td id="LC13100" class="blob-code blob-code-inner js-file-line"><span class="pl-c">        &lt;/div&gt;</span></td>
      </tr>
      <tr>
        <td id="L13101" class="blob-num js-line-number" data-line-number="13101"></td>
        <td id="LC13101" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:source&gt;</span></td>
      </tr>
      <tr>
        <td id="L13102" class="blob-num js-line-number" data-line-number="13102"></td>
        <td id="LC13102" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L13103" class="blob-num js-line-number" data-line-number="13103"></td>
        <td id="LC13103" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         it(&#39;should check ng-options&#39;, function() {</span></td>
      </tr>
      <tr>
        <td id="L13104" class="blob-num js-line-number" data-line-number="13104"></td>
        <td id="LC13104" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;red&#39;);</span></td>
      </tr>
      <tr>
        <td id="L13105" class="blob-num js-line-number" data-line-number="13105"></td>
        <td id="LC13105" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           select(&#39;color&#39;).option(&#39;0&#39;);</span></td>
      </tr>
      <tr>
        <td id="L13106" class="blob-num js-line-number" data-line-number="13106"></td>
        <td id="LC13106" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;black&#39;);</span></td>
      </tr>
      <tr>
        <td id="L13107" class="blob-num js-line-number" data-line-number="13107"></td>
        <td id="LC13107" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           using(&#39;.nullable&#39;).select(&#39;color&#39;).option(&#39;&#39;);</span></td>
      </tr>
      <tr>
        <td id="L13108" class="blob-num js-line-number" data-line-number="13108"></td>
        <td id="LC13108" class="blob-code blob-code-inner js-file-line"><span class="pl-c">           expect(binding(&#39;{selected_color:color}&#39;)).toMatch(&#39;null&#39;);</span></td>
      </tr>
      <tr>
        <td id="L13109" class="blob-num js-line-number" data-line-number="13109"></td>
        <td id="LC13109" class="blob-code blob-code-inner js-file-line"><span class="pl-c">         });</span></td>
      </tr>
      <tr>
        <td id="L13110" class="blob-num js-line-number" data-line-number="13110"></td>
        <td id="LC13110" class="blob-code blob-code-inner js-file-line"><span class="pl-c">      &lt;/doc:scenario&gt;</span></td>
      </tr>
      <tr>
        <td id="L13111" class="blob-num js-line-number" data-line-number="13111"></td>
        <td id="LC13111" class="blob-code blob-code-inner js-file-line"><span class="pl-c">    &lt;/doc:example&gt;</span></td>
      </tr>
      <tr>
        <td id="L13112" class="blob-num js-line-number" data-line-number="13112"></td>
        <td id="LC13112" class="blob-code blob-code-inner js-file-line"><span class="pl-c"> */</span></td>
      </tr>
      <tr>
        <td id="L13113" class="blob-num js-line-number" data-line-number="13113"></td>
        <td id="LC13113" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13114" class="blob-num js-line-number" data-line-number="13114"></td>
        <td id="LC13114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> ngOptionsDirective <span class="pl-k">=</span> valueFn({ terminal<span class="pl-k">:</span> <span class="pl-c1">true</span> });</td>
      </tr>
      <tr>
        <td id="L13115" class="blob-num js-line-number" data-line-number="13115"></td>
        <td id="LC13115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> selectDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$compile<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$parse<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$compile</span>,   <span class="pl-smi">$parse</span>) {</td>
      </tr>
      <tr>
        <td id="L13116" class="blob-num js-line-number" data-line-number="13116"></td>
        <td id="LC13116" class="blob-code blob-code-inner js-file-line">                         <span class="pl-c">//00001111100000000000222200000000000000000000003333000000000000044444444444444444000000000555555555555555550000000666666666666666660000000000000007777</span></td>
      </tr>
      <tr>
        <td id="L13117" class="blob-num js-line-number" data-line-number="13117"></td>
        <td id="LC13117" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">var</span> <span class="pl-c1">NG_OPTIONS_REGEXP</span> <span class="pl-k">=</span><span class="pl-sr"> <span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>)(?:<span class="pl-c1">\s</span><span class="pl-k">+</span>as<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">.</span><span class="pl-k">*?</span>))<span class="pl-k">?</span>(?:<span class="pl-c1">\s</span><span class="pl-k">+</span>group<span class="pl-c1">\s</span><span class="pl-k">+</span>by<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>))<span class="pl-k">?</span><span class="pl-c1">\s</span><span class="pl-k">+</span>for<span class="pl-c1">\s</span><span class="pl-k">+</span>(?:(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>][<span class="pl-cce">\$</span><span class="pl-c1">\w\d</span>]</span><span class="pl-k">*</span>)<span class="pl-k">|</span>(?:<span class="pl-cce">\(</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>][<span class="pl-cce">\$</span><span class="pl-c1">\w\d</span>]</span><span class="pl-k">*</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>,<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[<span class="pl-cce">\$</span><span class="pl-c1">\w</span>][<span class="pl-cce">\$</span><span class="pl-c1">\w\d</span>]</span><span class="pl-k">*</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\)</span>))<span class="pl-c1">\s</span><span class="pl-k">+</span>in<span class="pl-c1">\s</span><span class="pl-k">+</span>(<span class="pl-c1">.</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L13118" class="blob-num js-line-number" data-line-number="13118"></td>
        <td id="LC13118" class="blob-code blob-code-inner js-file-line">      nullModelCtrl <span class="pl-k">=</span> {$setViewValue<span class="pl-k">:</span> noop};</td>
      </tr>
      <tr>
        <td id="L13119" class="blob-num js-line-number" data-line-number="13119"></td>
        <td id="LC13119" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13120" class="blob-num js-line-number" data-line-number="13120"></td>
        <td id="LC13120" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L13121" class="blob-num js-line-number" data-line-number="13121"></td>
        <td id="LC13121" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L13122" class="blob-num js-line-number" data-line-number="13122"></td>
        <td id="LC13122" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>select<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>?ngModel<span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L13123" class="blob-num js-line-number" data-line-number="13123"></td>
        <td id="LC13123" class="blob-code blob-code-inner js-file-line">    controller<span class="pl-k">:</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$element<span class="pl-pds">&#39;</span></span>, <span class="pl-s"><span class="pl-pds">&#39;</span>$scope<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$element</span>, <span class="pl-smi">$scope</span>) {</td>
      </tr>
      <tr>
        <td id="L13124" class="blob-num js-line-number" data-line-number="13124"></td>
        <td id="LC13124" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> self <span class="pl-k">=</span> <span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L13125" class="blob-num js-line-number" data-line-number="13125"></td>
        <td id="LC13125" class="blob-code blob-code-inner js-file-line">          optionsMap <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L13126" class="blob-num js-line-number" data-line-number="13126"></td>
        <td id="LC13126" class="blob-code blob-code-inner js-file-line">          ngModelCtrl <span class="pl-k">=</span> nullModelCtrl,</td>
      </tr>
      <tr>
        <td id="L13127" class="blob-num js-line-number" data-line-number="13127"></td>
        <td id="LC13127" class="blob-code blob-code-inner js-file-line">          nullOption,</td>
      </tr>
      <tr>
        <td id="L13128" class="blob-num js-line-number" data-line-number="13128"></td>
        <td id="LC13128" class="blob-code blob-code-inner js-file-line">          unknownOption;</td>
      </tr>
      <tr>
        <td id="L13129" class="blob-num js-line-number" data-line-number="13129"></td>
        <td id="LC13129" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13130" class="blob-num js-line-number" data-line-number="13130"></td>
        <td id="LC13130" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">self</span>.<span class="pl-en">init</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">ngModelCtrl_</span>, <span class="pl-smi">nullOption_</span>, <span class="pl-smi">unknownOption_</span>) {</td>
      </tr>
      <tr>
        <td id="L13131" class="blob-num js-line-number" data-line-number="13131"></td>
        <td id="LC13131" class="blob-code blob-code-inner js-file-line">        ngModelCtrl <span class="pl-k">=</span> ngModelCtrl_;</td>
      </tr>
      <tr>
        <td id="L13132" class="blob-num js-line-number" data-line-number="13132"></td>
        <td id="LC13132" class="blob-code blob-code-inner js-file-line">        nullOption <span class="pl-k">=</span> nullOption_;</td>
      </tr>
      <tr>
        <td id="L13133" class="blob-num js-line-number" data-line-number="13133"></td>
        <td id="LC13133" class="blob-code blob-code-inner js-file-line">        unknownOption <span class="pl-k">=</span> unknownOption_;</td>
      </tr>
      <tr>
        <td id="L13134" class="blob-num js-line-number" data-line-number="13134"></td>
        <td id="LC13134" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13135" class="blob-num js-line-number" data-line-number="13135"></td>
        <td id="LC13135" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13136" class="blob-num js-line-number" data-line-number="13136"></td>
        <td id="LC13136" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13137" class="blob-num js-line-number" data-line-number="13137"></td>
        <td id="LC13137" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">self</span>.<span class="pl-en">addOption</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L13138" class="blob-num js-line-number" data-line-number="13138"></td>
        <td id="LC13138" class="blob-code blob-code-inner js-file-line">        optionsMap[value] <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L13139" class="blob-num js-line-number" data-line-number="13139"></td>
        <td id="LC13139" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13140" class="blob-num js-line-number" data-line-number="13140"></td>
        <td id="LC13140" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (ngModelCtrl.$viewValue <span class="pl-k">==</span> value) {</td>
      </tr>
      <tr>
        <td id="L13141" class="blob-num js-line-number" data-line-number="13141"></td>
        <td id="LC13141" class="blob-code blob-code-inner js-file-line">          $element.val(value);</td>
      </tr>
      <tr>
        <td id="L13142" class="blob-num js-line-number" data-line-number="13142"></td>
        <td id="LC13142" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (unknownOption.<span class="pl-c1">parent</span>()) unknownOption.remove();</td>
      </tr>
      <tr>
        <td id="L13143" class="blob-num js-line-number" data-line-number="13143"></td>
        <td id="LC13143" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13144" class="blob-num js-line-number" data-line-number="13144"></td>
        <td id="LC13144" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L13145" class="blob-num js-line-number" data-line-number="13145"></td>
        <td id="LC13145" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13146" class="blob-num js-line-number" data-line-number="13146"></td>
        <td id="LC13146" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13147" class="blob-num js-line-number" data-line-number="13147"></td>
        <td id="LC13147" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">self</span>.<span class="pl-en">removeOption</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L13148" class="blob-num js-line-number" data-line-number="13148"></td>
        <td id="LC13148" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-v">this</span>.hasOption(value)) {</td>
      </tr>
      <tr>
        <td id="L13149" class="blob-num js-line-number" data-line-number="13149"></td>
        <td id="LC13149" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">delete</span> optionsMap[value];</td>
      </tr>
      <tr>
        <td id="L13150" class="blob-num js-line-number" data-line-number="13150"></td>
        <td id="LC13150" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (ngModelCtrl.$viewValue <span class="pl-k">==</span> value) {</td>
      </tr>
      <tr>
        <td id="L13151" class="blob-num js-line-number" data-line-number="13151"></td>
        <td id="LC13151" class="blob-code blob-code-inner js-file-line">            <span class="pl-v">this</span>.renderUnknownOption(value);</td>
      </tr>
      <tr>
        <td id="L13152" class="blob-num js-line-number" data-line-number="13152"></td>
        <td id="LC13152" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13153" class="blob-num js-line-number" data-line-number="13153"></td>
        <td id="LC13153" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13154" class="blob-num js-line-number" data-line-number="13154"></td>
        <td id="LC13154" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L13155" class="blob-num js-line-number" data-line-number="13155"></td>
        <td id="LC13155" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13156" class="blob-num js-line-number" data-line-number="13156"></td>
        <td id="LC13156" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13157" class="blob-num js-line-number" data-line-number="13157"></td>
        <td id="LC13157" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">self</span>.<span class="pl-en">renderUnknownOption</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">val</span>) {</td>
      </tr>
      <tr>
        <td id="L13158" class="blob-num js-line-number" data-line-number="13158"></td>
        <td id="LC13158" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> unknownVal <span class="pl-k">=</span> <span class="pl-s"><span class="pl-pds">&#39;</span>? <span class="pl-pds">&#39;</span></span> <span class="pl-k">+</span> hashKey(val) <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&#39;</span> ?<span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L13159" class="blob-num js-line-number" data-line-number="13159"></td>
        <td id="LC13159" class="blob-code blob-code-inner js-file-line">        unknownOption.val(unknownVal);</td>
      </tr>
      <tr>
        <td id="L13160" class="blob-num js-line-number" data-line-number="13160"></td>
        <td id="LC13160" class="blob-code blob-code-inner js-file-line">        $element.prepend(unknownOption);</td>
      </tr>
      <tr>
        <td id="L13161" class="blob-num js-line-number" data-line-number="13161"></td>
        <td id="LC13161" class="blob-code blob-code-inner js-file-line">        $element.val(unknownVal);</td>
      </tr>
      <tr>
        <td id="L13162" class="blob-num js-line-number" data-line-number="13162"></td>
        <td id="LC13162" class="blob-code blob-code-inner js-file-line">        unknownOption.prop(<span class="pl-s"><span class="pl-pds">&#39;</span>selected<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>); <span class="pl-c">// needed for IE</span></td>
      </tr>
      <tr>
        <td id="L13163" class="blob-num js-line-number" data-line-number="13163"></td>
        <td id="LC13163" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13164" class="blob-num js-line-number" data-line-number="13164"></td>
        <td id="LC13164" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13165" class="blob-num js-line-number" data-line-number="13165"></td>
        <td id="LC13165" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13166" class="blob-num js-line-number" data-line-number="13166"></td>
        <td id="LC13166" class="blob-code blob-code-inner js-file-line">      <span class="pl-c1">self</span>.<span class="pl-en">hasOption</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L13167" class="blob-num js-line-number" data-line-number="13167"></td>
        <td id="LC13167" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">return</span> optionsMap.hasOwnProperty(value);</td>
      </tr>
      <tr>
        <td id="L13168" class="blob-num js-line-number" data-line-number="13168"></td>
        <td id="LC13168" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13169" class="blob-num js-line-number" data-line-number="13169"></td>
        <td id="LC13169" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13170" class="blob-num js-line-number" data-line-number="13170"></td>
        <td id="LC13170" class="blob-code blob-code-inner js-file-line">      $scope.$on(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13171" class="blob-num js-line-number" data-line-number="13171"></td>
        <td id="LC13171" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// disable unknown option so that we don&#39;t do work when the whole select is being destroyed</span></td>
      </tr>
      <tr>
        <td id="L13172" class="blob-num js-line-number" data-line-number="13172"></td>
        <td id="LC13172" class="blob-code blob-code-inner js-file-line">        self.renderUnknownOption <span class="pl-k">=</span> noop;</td>
      </tr>
      <tr>
        <td id="L13173" class="blob-num js-line-number" data-line-number="13173"></td>
        <td id="LC13173" class="blob-code blob-code-inner js-file-line">      });</td>
      </tr>
      <tr>
        <td id="L13174" class="blob-num js-line-number" data-line-number="13174"></td>
        <td id="LC13174" class="blob-code blob-code-inner js-file-line">    }],</td>
      </tr>
      <tr>
        <td id="L13175" class="blob-num js-line-number" data-line-number="13175"></td>
        <td id="LC13175" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13176" class="blob-num js-line-number" data-line-number="13176"></td>
        <td id="LC13176" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">link</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">ctrls</span>) {</td>
      </tr>
      <tr>
        <td id="L13177" class="blob-num js-line-number" data-line-number="13177"></td>
        <td id="LC13177" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// if ngModel is not defined, we don&#39;t need to do anything</span></td>
      </tr>
      <tr>
        <td id="L13178" class="blob-num js-line-number" data-line-number="13178"></td>
        <td id="LC13178" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (<span class="pl-k">!</span>ctrls[<span class="pl-c1">1</span>]) <span class="pl-k">return</span>;</td>
      </tr>
      <tr>
        <td id="L13179" class="blob-num js-line-number" data-line-number="13179"></td>
        <td id="LC13179" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13180" class="blob-num js-line-number" data-line-number="13180"></td>
        <td id="LC13180" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">var</span> selectCtrl <span class="pl-k">=</span> ctrls[<span class="pl-c1">0</span>],</td>
      </tr>
      <tr>
        <td id="L13181" class="blob-num js-line-number" data-line-number="13181"></td>
        <td id="LC13181" class="blob-code blob-code-inner js-file-line">          ngModelCtrl <span class="pl-k">=</span> ctrls[<span class="pl-c1">1</span>],</td>
      </tr>
      <tr>
        <td id="L13182" class="blob-num js-line-number" data-line-number="13182"></td>
        <td id="LC13182" class="blob-code blob-code-inner js-file-line">          multiple <span class="pl-k">=</span> attr.<span class="pl-c1">multiple</span>,</td>
      </tr>
      <tr>
        <td id="L13183" class="blob-num js-line-number" data-line-number="13183"></td>
        <td id="LC13183" class="blob-code blob-code-inner js-file-line">          optionsExp <span class="pl-k">=</span> attr.ngOptions,</td>
      </tr>
      <tr>
        <td id="L13184" class="blob-num js-line-number" data-line-number="13184"></td>
        <td id="LC13184" class="blob-code blob-code-inner js-file-line">          nullOption <span class="pl-k">=</span> <span class="pl-c1">false</span>, <span class="pl-c">// if false, user will not be able to select it (used by ngOptions)</span></td>
      </tr>
      <tr>
        <td id="L13185" class="blob-num js-line-number" data-line-number="13185"></td>
        <td id="LC13185" class="blob-code blob-code-inner js-file-line">          emptyOption,</td>
      </tr>
      <tr>
        <td id="L13186" class="blob-num js-line-number" data-line-number="13186"></td>
        <td id="LC13186" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// we can&#39;t just jqLite(&#39;&lt;option&gt;&#39;) since jqLite is not smart enough</span></td>
      </tr>
      <tr>
        <td id="L13187" class="blob-num js-line-number" data-line-number="13187"></td>
        <td id="LC13187" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// to create it in &lt;select&gt; and IE barfs otherwise.</span></td>
      </tr>
      <tr>
        <td id="L13188" class="blob-num js-line-number" data-line-number="13188"></td>
        <td id="LC13188" class="blob-code blob-code-inner js-file-line">          optionTemplate <span class="pl-k">=</span> jqLite(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>option<span class="pl-pds">&#39;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L13189" class="blob-num js-line-number" data-line-number="13189"></td>
        <td id="LC13189" class="blob-code blob-code-inner js-file-line">          optGroupTemplate <span class="pl-k">=</span>jqLite(<span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>optgroup<span class="pl-pds">&#39;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L13190" class="blob-num js-line-number" data-line-number="13190"></td>
        <td id="LC13190" class="blob-code blob-code-inner js-file-line">          unknownOption <span class="pl-k">=</span> optionTemplate.clone();</td>
      </tr>
      <tr>
        <td id="L13191" class="blob-num js-line-number" data-line-number="13191"></td>
        <td id="LC13191" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13192" class="blob-num js-line-number" data-line-number="13192"></td>
        <td id="LC13192" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// find &quot;null&quot; option</span></td>
      </tr>
      <tr>
        <td id="L13193" class="blob-num js-line-number" data-line-number="13193"></td>
        <td id="LC13193" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">for</span>(<span class="pl-k">var</span> i <span class="pl-k">=</span> <span class="pl-c1">0</span>, children <span class="pl-k">=</span> element.children(), ii <span class="pl-k">=</span> children.<span class="pl-c1">length</span>; i <span class="pl-k">&lt;</span> ii; i<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13194" class="blob-num js-line-number" data-line-number="13194"></td>
        <td id="LC13194" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (children[i].<span class="pl-c1">value</span> <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L13195" class="blob-num js-line-number" data-line-number="13195"></td>
        <td id="LC13195" class="blob-code blob-code-inner js-file-line">          emptyOption <span class="pl-k">=</span> nullOption <span class="pl-k">=</span> children.eq(i);</td>
      </tr>
      <tr>
        <td id="L13196" class="blob-num js-line-number" data-line-number="13196"></td>
        <td id="LC13196" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L13197" class="blob-num js-line-number" data-line-number="13197"></td>
        <td id="LC13197" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13198" class="blob-num js-line-number" data-line-number="13198"></td>
        <td id="LC13198" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13199" class="blob-num js-line-number" data-line-number="13199"></td>
        <td id="LC13199" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13200" class="blob-num js-line-number" data-line-number="13200"></td>
        <td id="LC13200" class="blob-code blob-code-inner js-file-line">      selectCtrl.init(ngModelCtrl, nullOption, unknownOption);</td>
      </tr>
      <tr>
        <td id="L13201" class="blob-num js-line-number" data-line-number="13201"></td>
        <td id="LC13201" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13202" class="blob-num js-line-number" data-line-number="13202"></td>
        <td id="LC13202" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// required validator</span></td>
      </tr>
      <tr>
        <td id="L13203" class="blob-num js-line-number" data-line-number="13203"></td>
        <td id="LC13203" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (multiple <span class="pl-k">&amp;&amp;</span> (attr.required <span class="pl-k">||</span> attr.ngRequired)) {</td>
      </tr>
      <tr>
        <td id="L13204" class="blob-num js-line-number" data-line-number="13204"></td>
        <td id="LC13204" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> <span class="pl-en">requiredValidator</span> <span class="pl-k">=</span> <span class="pl-k">function</span>(<span class="pl-smi">value</span>) {</td>
      </tr>
      <tr>
        <td id="L13205" class="blob-num js-line-number" data-line-number="13205"></td>
        <td id="LC13205" class="blob-code blob-code-inner js-file-line">          ngModelCtrl.$setValidity(<span class="pl-s"><span class="pl-pds">&#39;</span>required<span class="pl-pds">&#39;</span></span>, <span class="pl-k">!</span>attr.required <span class="pl-k">||</span> (value <span class="pl-k">&amp;&amp;</span> value.<span class="pl-c1">length</span>));</td>
      </tr>
      <tr>
        <td id="L13206" class="blob-num js-line-number" data-line-number="13206"></td>
        <td id="LC13206" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">return</span> value;</td>
      </tr>
      <tr>
        <td id="L13207" class="blob-num js-line-number" data-line-number="13207"></td>
        <td id="LC13207" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L13208" class="blob-num js-line-number" data-line-number="13208"></td>
        <td id="LC13208" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13209" class="blob-num js-line-number" data-line-number="13209"></td>
        <td id="LC13209" class="blob-code blob-code-inner js-file-line">        ngModelCtrl.$parsers.<span class="pl-c1">push</span>(requiredValidator);</td>
      </tr>
      <tr>
        <td id="L13210" class="blob-num js-line-number" data-line-number="13210"></td>
        <td id="LC13210" class="blob-code blob-code-inner js-file-line">        ngModelCtrl.$formatters.<span class="pl-c1">unshift</span>(requiredValidator);</td>
      </tr>
      <tr>
        <td id="L13211" class="blob-num js-line-number" data-line-number="13211"></td>
        <td id="LC13211" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13212" class="blob-num js-line-number" data-line-number="13212"></td>
        <td id="LC13212" class="blob-code blob-code-inner js-file-line">        attr.$observe(<span class="pl-s"><span class="pl-pds">&#39;</span>required<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13213" class="blob-num js-line-number" data-line-number="13213"></td>
        <td id="LC13213" class="blob-code blob-code-inner js-file-line">          requiredValidator(ngModelCtrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L13214" class="blob-num js-line-number" data-line-number="13214"></td>
        <td id="LC13214" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13215" class="blob-num js-line-number" data-line-number="13215"></td>
        <td id="LC13215" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13216" class="blob-num js-line-number" data-line-number="13216"></td>
        <td id="LC13216" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13217" class="blob-num js-line-number" data-line-number="13217"></td>
        <td id="LC13217" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (optionsExp) Options(scope, element, ngModelCtrl);</td>
      </tr>
      <tr>
        <td id="L13218" class="blob-num js-line-number" data-line-number="13218"></td>
        <td id="LC13218" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> <span class="pl-k">if</span> (multiple) Multiple(scope, element, ngModelCtrl);</td>
      </tr>
      <tr>
        <td id="L13219" class="blob-num js-line-number" data-line-number="13219"></td>
        <td id="LC13219" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">else</span> Single(scope, element, ngModelCtrl, selectCtrl);</td>
      </tr>
      <tr>
        <td id="L13220" class="blob-num js-line-number" data-line-number="13220"></td>
        <td id="LC13220" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13221" class="blob-num js-line-number" data-line-number="13221"></td>
        <td id="LC13221" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13222" class="blob-num js-line-number" data-line-number="13222"></td>
        <td id="LC13222" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">////////////////////////////</span></td>
      </tr>
      <tr>
        <td id="L13223" class="blob-num js-line-number" data-line-number="13223"></td>
        <td id="LC13223" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13224" class="blob-num js-line-number" data-line-number="13224"></td>
        <td id="LC13224" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13225" class="blob-num js-line-number" data-line-number="13225"></td>
        <td id="LC13225" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13226" class="blob-num js-line-number" data-line-number="13226"></td>
        <td id="LC13226" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">Single</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">selectElement</span>, <span class="pl-smi">ngModelCtrl</span>, <span class="pl-smi">selectCtrl</span>) {</td>
      </tr>
      <tr>
        <td id="L13227" class="blob-num js-line-number" data-line-number="13227"></td>
        <td id="LC13227" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">ngModelCtrl</span>.<span class="pl-en">$render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13228" class="blob-num js-line-number" data-line-number="13228"></td>
        <td id="LC13228" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> viewValue <span class="pl-k">=</span> ngModelCtrl.$viewValue;</td>
      </tr>
      <tr>
        <td id="L13229" class="blob-num js-line-number" data-line-number="13229"></td>
        <td id="LC13229" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13230" class="blob-num js-line-number" data-line-number="13230"></td>
        <td id="LC13230" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (selectCtrl.hasOption(viewValue)) {</td>
      </tr>
      <tr>
        <td id="L13231" class="blob-num js-line-number" data-line-number="13231"></td>
        <td id="LC13231" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (unknownOption.<span class="pl-c1">parent</span>()) unknownOption.remove();</td>
      </tr>
      <tr>
        <td id="L13232" class="blob-num js-line-number" data-line-number="13232"></td>
        <td id="LC13232" class="blob-code blob-code-inner js-file-line">            selectElement.val(viewValue);</td>
      </tr>
      <tr>
        <td id="L13233" class="blob-num js-line-number" data-line-number="13233"></td>
        <td id="LC13233" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (viewValue <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>) emptyOption.prop(<span class="pl-s"><span class="pl-pds">&#39;</span>selected<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">true</span>); <span class="pl-c">// to make IE9 happy</span></td>
      </tr>
      <tr>
        <td id="L13234" class="blob-num js-line-number" data-line-number="13234"></td>
        <td id="LC13234" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13235" class="blob-num js-line-number" data-line-number="13235"></td>
        <td id="LC13235" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (isUndefined(viewValue) <span class="pl-k">&amp;&amp;</span> emptyOption) {</td>
      </tr>
      <tr>
        <td id="L13236" class="blob-num js-line-number" data-line-number="13236"></td>
        <td id="LC13236" class="blob-code blob-code-inner js-file-line">              selectElement.val(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L13237" class="blob-num js-line-number" data-line-number="13237"></td>
        <td id="LC13237" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13238" class="blob-num js-line-number" data-line-number="13238"></td>
        <td id="LC13238" class="blob-code blob-code-inner js-file-line">              selectCtrl.renderUnknownOption(viewValue);</td>
      </tr>
      <tr>
        <td id="L13239" class="blob-num js-line-number" data-line-number="13239"></td>
        <td id="LC13239" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13240" class="blob-num js-line-number" data-line-number="13240"></td>
        <td id="LC13240" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13241" class="blob-num js-line-number" data-line-number="13241"></td>
        <td id="LC13241" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L13242" class="blob-num js-line-number" data-line-number="13242"></td>
        <td id="LC13242" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13243" class="blob-num js-line-number" data-line-number="13243"></td>
        <td id="LC13243" class="blob-code blob-code-inner js-file-line">        selectElement.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>change<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13244" class="blob-num js-line-number" data-line-number="13244"></td>
        <td id="LC13244" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13245" class="blob-num js-line-number" data-line-number="13245"></td>
        <td id="LC13245" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (unknownOption.<span class="pl-c1">parent</span>()) unknownOption.remove();</td>
      </tr>
      <tr>
        <td id="L13246" class="blob-num js-line-number" data-line-number="13246"></td>
        <td id="LC13246" class="blob-code blob-code-inner js-file-line">            ngModelCtrl.$setViewValue(selectElement.val());</td>
      </tr>
      <tr>
        <td id="L13247" class="blob-num js-line-number" data-line-number="13247"></td>
        <td id="LC13247" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L13248" class="blob-num js-line-number" data-line-number="13248"></td>
        <td id="LC13248" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13249" class="blob-num js-line-number" data-line-number="13249"></td>
        <td id="LC13249" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13250" class="blob-num js-line-number" data-line-number="13250"></td>
        <td id="LC13250" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13251" class="blob-num js-line-number" data-line-number="13251"></td>
        <td id="LC13251" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">Multiple</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">selectElement</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L13252" class="blob-num js-line-number" data-line-number="13252"></td>
        <td id="LC13252" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> lastView;</td>
      </tr>
      <tr>
        <td id="L13253" class="blob-num js-line-number" data-line-number="13253"></td>
        <td id="LC13253" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">ctrl</span>.<span class="pl-en">$render</span> <span class="pl-k">=</span> <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13254" class="blob-num js-line-number" data-line-number="13254"></td>
        <td id="LC13254" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> items <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">HashMap</span>(ctrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L13255" class="blob-num js-line-number" data-line-number="13255"></td>
        <td id="LC13255" class="blob-code blob-code-inner js-file-line">          forEach(selectElement.children(), <span class="pl-k">function</span>(<span class="pl-smi">option</span>) {</td>
      </tr>
      <tr>
        <td id="L13256" class="blob-num js-line-number" data-line-number="13256"></td>
        <td id="LC13256" class="blob-code blob-code-inner js-file-line">            option.<span class="pl-c1">selected</span> <span class="pl-k">=</span> isDefined(items.get(option.<span class="pl-c1">value</span>));</td>
      </tr>
      <tr>
        <td id="L13257" class="blob-num js-line-number" data-line-number="13257"></td>
        <td id="LC13257" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L13258" class="blob-num js-line-number" data-line-number="13258"></td>
        <td id="LC13258" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L13259" class="blob-num js-line-number" data-line-number="13259"></td>
        <td id="LC13259" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13260" class="blob-num js-line-number" data-line-number="13260"></td>
        <td id="LC13260" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we have to do it on each watch since ngModel watches reference, but</span></td>
      </tr>
      <tr>
        <td id="L13261" class="blob-num js-line-number" data-line-number="13261"></td>
        <td id="LC13261" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// we need to work of an array, so we need to see if anything was inserted/removed</span></td>
      </tr>
      <tr>
        <td id="L13262" class="blob-num js-line-number" data-line-number="13262"></td>
        <td id="LC13262" class="blob-code blob-code-inner js-file-line">        scope.$<span class="pl-c1">watch</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13263" class="blob-num js-line-number" data-line-number="13263"></td>
        <td id="LC13263" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>equals(lastView, ctrl.$viewValue)) {</td>
      </tr>
      <tr>
        <td id="L13264" class="blob-num js-line-number" data-line-number="13264"></td>
        <td id="LC13264" class="blob-code blob-code-inner js-file-line">            lastView <span class="pl-k">=</span> copy(ctrl.$viewValue);</td>
      </tr>
      <tr>
        <td id="L13265" class="blob-num js-line-number" data-line-number="13265"></td>
        <td id="LC13265" class="blob-code blob-code-inner js-file-line">            ctrl.$render();</td>
      </tr>
      <tr>
        <td id="L13266" class="blob-num js-line-number" data-line-number="13266"></td>
        <td id="LC13266" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13267" class="blob-num js-line-number" data-line-number="13267"></td>
        <td id="LC13267" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13268" class="blob-num js-line-number" data-line-number="13268"></td>
        <td id="LC13268" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13269" class="blob-num js-line-number" data-line-number="13269"></td>
        <td id="LC13269" class="blob-code blob-code-inner js-file-line">        selectElement.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>change<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13270" class="blob-num js-line-number" data-line-number="13270"></td>
        <td id="LC13270" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13271" class="blob-num js-line-number" data-line-number="13271"></td>
        <td id="LC13271" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> array <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L13272" class="blob-num js-line-number" data-line-number="13272"></td>
        <td id="LC13272" class="blob-code blob-code-inner js-file-line">            forEach(selectElement.children(), <span class="pl-k">function</span>(<span class="pl-smi">option</span>) {</td>
      </tr>
      <tr>
        <td id="L13273" class="blob-num js-line-number" data-line-number="13273"></td>
        <td id="LC13273" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (option.<span class="pl-c1">selected</span>) {</td>
      </tr>
      <tr>
        <td id="L13274" class="blob-num js-line-number" data-line-number="13274"></td>
        <td id="LC13274" class="blob-code blob-code-inner js-file-line">                array.<span class="pl-c1">push</span>(option.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L13275" class="blob-num js-line-number" data-line-number="13275"></td>
        <td id="LC13275" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L13276" class="blob-num js-line-number" data-line-number="13276"></td>
        <td id="LC13276" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L13277" class="blob-num js-line-number" data-line-number="13277"></td>
        <td id="LC13277" class="blob-code blob-code-inner js-file-line">            ctrl.$setViewValue(array);</td>
      </tr>
      <tr>
        <td id="L13278" class="blob-num js-line-number" data-line-number="13278"></td>
        <td id="LC13278" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L13279" class="blob-num js-line-number" data-line-number="13279"></td>
        <td id="LC13279" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13280" class="blob-num js-line-number" data-line-number="13280"></td>
        <td id="LC13280" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13281" class="blob-num js-line-number" data-line-number="13281"></td>
        <td id="LC13281" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13282" class="blob-num js-line-number" data-line-number="13282"></td>
        <td id="LC13282" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">function</span> <span class="pl-en">Options</span>(<span class="pl-smi">scope</span>, <span class="pl-smi">selectElement</span>, <span class="pl-smi">ctrl</span>) {</td>
      </tr>
      <tr>
        <td id="L13283" class="blob-num js-line-number" data-line-number="13283"></td>
        <td id="LC13283" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> match;</td>
      </tr>
      <tr>
        <td id="L13284" class="blob-num js-line-number" data-line-number="13284"></td>
        <td id="LC13284" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13285" class="blob-num js-line-number" data-line-number="13285"></td>
        <td id="LC13285" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span> (match <span class="pl-k">=</span> optionsExp.<span class="pl-c1">match</span>(<span class="pl-c1">NG_OPTIONS_REGEXP</span>))) {</td>
      </tr>
      <tr>
        <td id="L13286" class="blob-num js-line-number" data-line-number="13286"></td>
        <td id="LC13286" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">throw</span> Error(</td>
      </tr>
      <tr>
        <td id="L13287" class="blob-num js-line-number" data-line-number="13287"></td>
        <td id="LC13287" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&quot;</span>Expected ngOptions in form of &#39;_select_ (as _label_)? for (_key_,)?_value_ in _collection_&#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L13288" class="blob-num js-line-number" data-line-number="13288"></td>
        <td id="LC13288" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&quot;</span> but got &#39;<span class="pl-pds">&quot;</span></span> <span class="pl-k">+</span> optionsExp <span class="pl-k">+</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L13289" class="blob-num js-line-number" data-line-number="13289"></td>
        <td id="LC13289" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13290" class="blob-num js-line-number" data-line-number="13290"></td>
        <td id="LC13290" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13291" class="blob-num js-line-number" data-line-number="13291"></td>
        <td id="LC13291" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> displayFn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(match[<span class="pl-c1">2</span>] <span class="pl-k">||</span> match[<span class="pl-c1">1</span>]),</td>
      </tr>
      <tr>
        <td id="L13292" class="blob-num js-line-number" data-line-number="13292"></td>
        <td id="LC13292" class="blob-code blob-code-inner js-file-line">            valueName <span class="pl-k">=</span> match[<span class="pl-c1">4</span>] <span class="pl-k">||</span> match[<span class="pl-c1">6</span>],</td>
      </tr>
      <tr>
        <td id="L13293" class="blob-num js-line-number" data-line-number="13293"></td>
        <td id="LC13293" class="blob-code blob-code-inner js-file-line">            keyName <span class="pl-k">=</span> match[<span class="pl-c1">5</span>],</td>
      </tr>
      <tr>
        <td id="L13294" class="blob-num js-line-number" data-line-number="13294"></td>
        <td id="LC13294" class="blob-code blob-code-inner js-file-line">            groupByFn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(match[<span class="pl-c1">3</span>] <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>),</td>
      </tr>
      <tr>
        <td id="L13295" class="blob-num js-line-number" data-line-number="13295"></td>
        <td id="LC13295" class="blob-code blob-code-inner js-file-line">            valueFn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(match[<span class="pl-c1">2</span>] <span class="pl-k">?</span> match[<span class="pl-c1">1</span>] <span class="pl-k">:</span> valueName),</td>
      </tr>
      <tr>
        <td id="L13296" class="blob-num js-line-number" data-line-number="13296"></td>
        <td id="LC13296" class="blob-code blob-code-inner js-file-line">            valuesFn <span class="pl-k">=</span> $<span class="pl-c1">parse</span>(match[<span class="pl-c1">7</span>]),</td>
      </tr>
      <tr>
        <td id="L13297" class="blob-num js-line-number" data-line-number="13297"></td>
        <td id="LC13297" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// This is an array of array of existing option groups in DOM. We try to reuse these if possible</span></td>
      </tr>
      <tr>
        <td id="L13298" class="blob-num js-line-number" data-line-number="13298"></td>
        <td id="LC13298" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// optionGroupsCache[0] is the options with no option group</span></td>
      </tr>
      <tr>
        <td id="L13299" class="blob-num js-line-number" data-line-number="13299"></td>
        <td id="LC13299" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// optionGroupsCache[?][0] is the parent: either the SELECT or OPTGROUP element</span></td>
      </tr>
      <tr>
        <td id="L13300" class="blob-num js-line-number" data-line-number="13300"></td>
        <td id="LC13300" class="blob-code blob-code-inner js-file-line">            optionGroupsCache <span class="pl-k">=</span> [[{element<span class="pl-k">:</span> selectElement, label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>}]];</td>
      </tr>
      <tr>
        <td id="L13301" class="blob-num js-line-number" data-line-number="13301"></td>
        <td id="LC13301" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13302" class="blob-num js-line-number" data-line-number="13302"></td>
        <td id="LC13302" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (nullOption) {</td>
      </tr>
      <tr>
        <td id="L13303" class="blob-num js-line-number" data-line-number="13303"></td>
        <td id="LC13303" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// compile the element since there might be bindings in it</span></td>
      </tr>
      <tr>
        <td id="L13304" class="blob-num js-line-number" data-line-number="13304"></td>
        <td id="LC13304" class="blob-code blob-code-inner js-file-line">          $<span class="pl-c1">compile</span>(nullOption)(scope);</td>
      </tr>
      <tr>
        <td id="L13305" class="blob-num js-line-number" data-line-number="13305"></td>
        <td id="LC13305" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13306" class="blob-num js-line-number" data-line-number="13306"></td>
        <td id="LC13306" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// remove the class, which is added automatically because we recompile the element and it</span></td>
      </tr>
      <tr>
        <td id="L13307" class="blob-num js-line-number" data-line-number="13307"></td>
        <td id="LC13307" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// becomes the compilation root</span></td>
      </tr>
      <tr>
        <td id="L13308" class="blob-num js-line-number" data-line-number="13308"></td>
        <td id="LC13308" class="blob-code blob-code-inner js-file-line">          nullOption.removeClass(<span class="pl-s"><span class="pl-pds">&#39;</span>ng-scope<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L13309" class="blob-num js-line-number" data-line-number="13309"></td>
        <td id="LC13309" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13310" class="blob-num js-line-number" data-line-number="13310"></td>
        <td id="LC13310" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// we need to remove it before calling selectElement.html(&#39;&#39;) because otherwise IE will</span></td>
      </tr>
      <tr>
        <td id="L13311" class="blob-num js-line-number" data-line-number="13311"></td>
        <td id="LC13311" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// remove the label from the element. wtf?</span></td>
      </tr>
      <tr>
        <td id="L13312" class="blob-num js-line-number" data-line-number="13312"></td>
        <td id="LC13312" class="blob-code blob-code-inner js-file-line">          nullOption.remove();</td>
      </tr>
      <tr>
        <td id="L13313" class="blob-num js-line-number" data-line-number="13313"></td>
        <td id="LC13313" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13314" class="blob-num js-line-number" data-line-number="13314"></td>
        <td id="LC13314" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13315" class="blob-num js-line-number" data-line-number="13315"></td>
        <td id="LC13315" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// clear contents, we&#39;ll add what&#39;s needed based on the model</span></td>
      </tr>
      <tr>
        <td id="L13316" class="blob-num js-line-number" data-line-number="13316"></td>
        <td id="LC13316" class="blob-code blob-code-inner js-file-line">        selectElement.html(<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>);</td>
      </tr>
      <tr>
        <td id="L13317" class="blob-num js-line-number" data-line-number="13317"></td>
        <td id="LC13317" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13318" class="blob-num js-line-number" data-line-number="13318"></td>
        <td id="LC13318" class="blob-code blob-code-inner js-file-line">        selectElement.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>change<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13319" class="blob-num js-line-number" data-line-number="13319"></td>
        <td id="LC13319" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">apply</span>(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13320" class="blob-num js-line-number" data-line-number="13320"></td>
        <td id="LC13320" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">var</span> optionGroup,</td>
      </tr>
      <tr>
        <td id="L13321" class="blob-num js-line-number" data-line-number="13321"></td>
        <td id="LC13321" class="blob-code blob-code-inner js-file-line">                collection <span class="pl-k">=</span> valuesFn(scope) <span class="pl-k">||</span> [],</td>
      </tr>
      <tr>
        <td id="L13322" class="blob-num js-line-number" data-line-number="13322"></td>
        <td id="LC13322" class="blob-code blob-code-inner js-file-line">                locals <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L13323" class="blob-num js-line-number" data-line-number="13323"></td>
        <td id="LC13323" class="blob-code blob-code-inner js-file-line">                key, value, optionElement, index, groupIndex, length, groupLength;</td>
      </tr>
      <tr>
        <td id="L13324" class="blob-num js-line-number" data-line-number="13324"></td>
        <td id="LC13324" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13325" class="blob-num js-line-number" data-line-number="13325"></td>
        <td id="LC13325" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (multiple) {</td>
      </tr>
      <tr>
        <td id="L13326" class="blob-num js-line-number" data-line-number="13326"></td>
        <td id="LC13326" class="blob-code blob-code-inner js-file-line">              value <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L13327" class="blob-num js-line-number" data-line-number="13327"></td>
        <td id="LC13327" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">for</span> (groupIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>, groupLength <span class="pl-k">=</span> optionGroupsCache.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L13328" class="blob-num js-line-number" data-line-number="13328"></td>
        <td id="LC13328" class="blob-code blob-code-inner js-file-line">                   groupIndex <span class="pl-k">&lt;</span> groupLength;</td>
      </tr>
      <tr>
        <td id="L13329" class="blob-num js-line-number" data-line-number="13329"></td>
        <td id="LC13329" class="blob-code blob-code-inner js-file-line">                   groupIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13330" class="blob-num js-line-number" data-line-number="13330"></td>
        <td id="LC13330" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// list of options for that group. (first item has the parent)</span></td>
      </tr>
      <tr>
        <td id="L13331" class="blob-num js-line-number" data-line-number="13331"></td>
        <td id="LC13331" class="blob-code blob-code-inner js-file-line">                optionGroup <span class="pl-k">=</span> optionGroupsCache[groupIndex];</td>
      </tr>
      <tr>
        <td id="L13332" class="blob-num js-line-number" data-line-number="13332"></td>
        <td id="LC13332" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13333" class="blob-num js-line-number" data-line-number="13333"></td>
        <td id="LC13333" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">for</span>(index <span class="pl-k">=</span> <span class="pl-c1">1</span>, length <span class="pl-k">=</span> optionGroup.<span class="pl-c1">length</span>; index <span class="pl-k">&lt;</span> length; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13334" class="blob-num js-line-number" data-line-number="13334"></td>
        <td id="LC13334" class="blob-code blob-code-inner js-file-line">                  <span class="pl-k">if</span> ((optionElement <span class="pl-k">=</span> optionGroup[index].element)[<span class="pl-c1">0</span>].<span class="pl-c1">selected</span>) {</td>
      </tr>
      <tr>
        <td id="L13335" class="blob-num js-line-number" data-line-number="13335"></td>
        <td id="LC13335" class="blob-code blob-code-inner js-file-line">                    key <span class="pl-k">=</span> optionElement.val();</td>
      </tr>
      <tr>
        <td id="L13336" class="blob-num js-line-number" data-line-number="13336"></td>
        <td id="LC13336" class="blob-code blob-code-inner js-file-line">                    <span class="pl-k">if</span> (keyName) locals[keyName] <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L13337" class="blob-num js-line-number" data-line-number="13337"></td>
        <td id="LC13337" class="blob-code blob-code-inner js-file-line">                    locals[valueName] <span class="pl-k">=</span> collection[key];</td>
      </tr>
      <tr>
        <td id="L13338" class="blob-num js-line-number" data-line-number="13338"></td>
        <td id="LC13338" class="blob-code blob-code-inner js-file-line">                    value.<span class="pl-c1">push</span>(valueFn(scope, locals));</td>
      </tr>
      <tr>
        <td id="L13339" class="blob-num js-line-number" data-line-number="13339"></td>
        <td id="LC13339" class="blob-code blob-code-inner js-file-line">                  }</td>
      </tr>
      <tr>
        <td id="L13340" class="blob-num js-line-number" data-line-number="13340"></td>
        <td id="LC13340" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13341" class="blob-num js-line-number" data-line-number="13341"></td>
        <td id="LC13341" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L13342" class="blob-num js-line-number" data-line-number="13342"></td>
        <td id="LC13342" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13343" class="blob-num js-line-number" data-line-number="13343"></td>
        <td id="LC13343" class="blob-code blob-code-inner js-file-line">              key <span class="pl-k">=</span> selectElement.val();</td>
      </tr>
      <tr>
        <td id="L13344" class="blob-num js-line-number" data-line-number="13344"></td>
        <td id="LC13344" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>) {</td>
      </tr>
      <tr>
        <td id="L13345" class="blob-num js-line-number" data-line-number="13345"></td>
        <td id="LC13345" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L13346" class="blob-num js-line-number" data-line-number="13346"></td>
        <td id="LC13346" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">else</span> <span class="pl-k">if</span> (key <span class="pl-k">==</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>){</td>
      </tr>
      <tr>
        <td id="L13347" class="blob-num js-line-number" data-line-number="13347"></td>
        <td id="LC13347" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L13348" class="blob-num js-line-number" data-line-number="13348"></td>
        <td id="LC13348" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13349" class="blob-num js-line-number" data-line-number="13349"></td>
        <td id="LC13349" class="blob-code blob-code-inner js-file-line">                locals[valueName] <span class="pl-k">=</span> collection[key];</td>
      </tr>
      <tr>
        <td id="L13350" class="blob-num js-line-number" data-line-number="13350"></td>
        <td id="LC13350" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (keyName) locals[keyName] <span class="pl-k">=</span> key;</td>
      </tr>
      <tr>
        <td id="L13351" class="blob-num js-line-number" data-line-number="13351"></td>
        <td id="LC13351" class="blob-code blob-code-inner js-file-line">                value <span class="pl-k">=</span> valueFn(scope, locals);</td>
      </tr>
      <tr>
        <td id="L13352" class="blob-num js-line-number" data-line-number="13352"></td>
        <td id="LC13352" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L13353" class="blob-num js-line-number" data-line-number="13353"></td>
        <td id="LC13353" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13354" class="blob-num js-line-number" data-line-number="13354"></td>
        <td id="LC13354" class="blob-code blob-code-inner js-file-line">            ctrl.$setViewValue(value);</td>
      </tr>
      <tr>
        <td id="L13355" class="blob-num js-line-number" data-line-number="13355"></td>
        <td id="LC13355" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L13356" class="blob-num js-line-number" data-line-number="13356"></td>
        <td id="LC13356" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13357" class="blob-num js-line-number" data-line-number="13357"></td>
        <td id="LC13357" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13358" class="blob-num js-line-number" data-line-number="13358"></td>
        <td id="LC13358" class="blob-code blob-code-inner js-file-line">        ctrl.$render <span class="pl-k">=</span> render;</td>
      </tr>
      <tr>
        <td id="L13359" class="blob-num js-line-number" data-line-number="13359"></td>
        <td id="LC13359" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13360" class="blob-num js-line-number" data-line-number="13360"></td>
        <td id="LC13360" class="blob-code blob-code-inner js-file-line">        <span class="pl-c">// TODO(vojta): can&#39;t we optimize this ?</span></td>
      </tr>
      <tr>
        <td id="L13361" class="blob-num js-line-number" data-line-number="13361"></td>
        <td id="LC13361" class="blob-code blob-code-inner js-file-line">        scope.$<span class="pl-c1">watch</span>(render);</td>
      </tr>
      <tr>
        <td id="L13362" class="blob-num js-line-number" data-line-number="13362"></td>
        <td id="LC13362" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13363" class="blob-num js-line-number" data-line-number="13363"></td>
        <td id="LC13363" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">function</span> <span class="pl-en">render</span>() {</td>
      </tr>
      <tr>
        <td id="L13364" class="blob-num js-line-number" data-line-number="13364"></td>
        <td id="LC13364" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">var</span> optionGroups <span class="pl-k">=</span> {<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span><span class="pl-k">:</span>[]}, <span class="pl-c">// Temporary location for the option groups before we render them</span></td>
      </tr>
      <tr>
        <td id="L13365" class="blob-num js-line-number" data-line-number="13365"></td>
        <td id="LC13365" class="blob-code blob-code-inner js-file-line">              optionGroupNames <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>],</td>
      </tr>
      <tr>
        <td id="L13366" class="blob-num js-line-number" data-line-number="13366"></td>
        <td id="LC13366" class="blob-code blob-code-inner js-file-line">              optionGroupName,</td>
      </tr>
      <tr>
        <td id="L13367" class="blob-num js-line-number" data-line-number="13367"></td>
        <td id="LC13367" class="blob-code blob-code-inner js-file-line">              optionGroup,</td>
      </tr>
      <tr>
        <td id="L13368" class="blob-num js-line-number" data-line-number="13368"></td>
        <td id="LC13368" class="blob-code blob-code-inner js-file-line">              option,</td>
      </tr>
      <tr>
        <td id="L13369" class="blob-num js-line-number" data-line-number="13369"></td>
        <td id="LC13369" class="blob-code blob-code-inner js-file-line">              existingParent, existingOptions, existingOption,</td>
      </tr>
      <tr>
        <td id="L13370" class="blob-num js-line-number" data-line-number="13370"></td>
        <td id="LC13370" class="blob-code blob-code-inner js-file-line">              modelValue <span class="pl-k">=</span> ctrl.$modelValue,</td>
      </tr>
      <tr>
        <td id="L13371" class="blob-num js-line-number" data-line-number="13371"></td>
        <td id="LC13371" class="blob-code blob-code-inner js-file-line">              values <span class="pl-k">=</span> valuesFn(scope) <span class="pl-k">||</span> [],</td>
      </tr>
      <tr>
        <td id="L13372" class="blob-num js-line-number" data-line-number="13372"></td>
        <td id="LC13372" class="blob-code blob-code-inner js-file-line">              keys <span class="pl-k">=</span> keyName <span class="pl-k">?</span> sortedKeys(values) <span class="pl-k">:</span> values,</td>
      </tr>
      <tr>
        <td id="L13373" class="blob-num js-line-number" data-line-number="13373"></td>
        <td id="LC13373" class="blob-code blob-code-inner js-file-line">              groupLength, length,</td>
      </tr>
      <tr>
        <td id="L13374" class="blob-num js-line-number" data-line-number="13374"></td>
        <td id="LC13374" class="blob-code blob-code-inner js-file-line">              groupIndex, index,</td>
      </tr>
      <tr>
        <td id="L13375" class="blob-num js-line-number" data-line-number="13375"></td>
        <td id="LC13375" class="blob-code blob-code-inner js-file-line">              locals <span class="pl-k">=</span> {},</td>
      </tr>
      <tr>
        <td id="L13376" class="blob-num js-line-number" data-line-number="13376"></td>
        <td id="LC13376" class="blob-code blob-code-inner js-file-line">              selected,</td>
      </tr>
      <tr>
        <td id="L13377" class="blob-num js-line-number" data-line-number="13377"></td>
        <td id="LC13377" class="blob-code blob-code-inner js-file-line">              selectedSet <span class="pl-k">=</span> <span class="pl-c1">false</span>, <span class="pl-c">// nothing is selected yet</span></td>
      </tr>
      <tr>
        <td id="L13378" class="blob-num js-line-number" data-line-number="13378"></td>
        <td id="LC13378" class="blob-code blob-code-inner js-file-line">              lastElement,</td>
      </tr>
      <tr>
        <td id="L13379" class="blob-num js-line-number" data-line-number="13379"></td>
        <td id="LC13379" class="blob-code blob-code-inner js-file-line">              element;</td>
      </tr>
      <tr>
        <td id="L13380" class="blob-num js-line-number" data-line-number="13380"></td>
        <td id="LC13380" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13381" class="blob-num js-line-number" data-line-number="13381"></td>
        <td id="LC13381" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (multiple) {</td>
      </tr>
      <tr>
        <td id="L13382" class="blob-num js-line-number" data-line-number="13382"></td>
        <td id="LC13382" class="blob-code blob-code-inner js-file-line">            selectedSet <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">HashMap</span>(modelValue);</td>
      </tr>
      <tr>
        <td id="L13383" class="blob-num js-line-number" data-line-number="13383"></td>
        <td id="LC13383" class="blob-code blob-code-inner js-file-line">          } <span class="pl-k">else</span> <span class="pl-k">if</span> (modelValue <span class="pl-k">===</span> <span class="pl-c1">null</span> <span class="pl-k">||</span> nullOption) {</td>
      </tr>
      <tr>
        <td id="L13384" class="blob-num js-line-number" data-line-number="13384"></td>
        <td id="LC13384" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// if we are not multiselect, and we are null then we have to add the nullOption</span></td>
      </tr>
      <tr>
        <td id="L13385" class="blob-num js-line-number" data-line-number="13385"></td>
        <td id="LC13385" class="blob-code blob-code-inner js-file-line">            optionGroups[<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>].<span class="pl-c1">push</span>({selected<span class="pl-k">:</span>modelValue <span class="pl-k">===</span> <span class="pl-c1">null</span>, id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>});</td>
      </tr>
      <tr>
        <td id="L13386" class="blob-num js-line-number" data-line-number="13386"></td>
        <td id="LC13386" class="blob-code blob-code-inner js-file-line">            selectedSet <span class="pl-k">=</span> <span class="pl-c1">true</span>;</td>
      </tr>
      <tr>
        <td id="L13387" class="blob-num js-line-number" data-line-number="13387"></td>
        <td id="LC13387" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13388" class="blob-num js-line-number" data-line-number="13388"></td>
        <td id="LC13388" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13389" class="blob-num js-line-number" data-line-number="13389"></td>
        <td id="LC13389" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// We now build up the list of options we need (we merge later)</span></td>
      </tr>
      <tr>
        <td id="L13390" class="blob-num js-line-number" data-line-number="13390"></td>
        <td id="LC13390" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (index <span class="pl-k">=</span> <span class="pl-c1">0</span>; length <span class="pl-k">=</span> keys.<span class="pl-c1">length</span>, index <span class="pl-k">&lt;</span> length; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13391" class="blob-num js-line-number" data-line-number="13391"></td>
        <td id="LC13391" class="blob-code blob-code-inner js-file-line">               locals[valueName] <span class="pl-k">=</span> values[keyName <span class="pl-k">?</span> locals[keyName]<span class="pl-k">=</span>keys[index]<span class="pl-k">:</span>index];</td>
      </tr>
      <tr>
        <td id="L13392" class="blob-num js-line-number" data-line-number="13392"></td>
        <td id="LC13392" class="blob-code blob-code-inner js-file-line">               optionGroupName <span class="pl-k">=</span> groupByFn(scope, locals) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>;</td>
      </tr>
      <tr>
        <td id="L13393" class="blob-num js-line-number" data-line-number="13393"></td>
        <td id="LC13393" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (<span class="pl-k">!</span>(optionGroup <span class="pl-k">=</span> optionGroups[optionGroupName])) {</td>
      </tr>
      <tr>
        <td id="L13394" class="blob-num js-line-number" data-line-number="13394"></td>
        <td id="LC13394" class="blob-code blob-code-inner js-file-line">              optionGroup <span class="pl-k">=</span> optionGroups[optionGroupName] <span class="pl-k">=</span> [];</td>
      </tr>
      <tr>
        <td id="L13395" class="blob-num js-line-number" data-line-number="13395"></td>
        <td id="LC13395" class="blob-code blob-code-inner js-file-line">              optionGroupNames.<span class="pl-c1">push</span>(optionGroupName);</td>
      </tr>
      <tr>
        <td id="L13396" class="blob-num js-line-number" data-line-number="13396"></td>
        <td id="LC13396" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13397" class="blob-num js-line-number" data-line-number="13397"></td>
        <td id="LC13397" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (multiple) {</td>
      </tr>
      <tr>
        <td id="L13398" class="blob-num js-line-number" data-line-number="13398"></td>
        <td id="LC13398" class="blob-code blob-code-inner js-file-line">              selected <span class="pl-k">=</span> selectedSet.remove(valueFn(scope, locals)) <span class="pl-k">!=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L13399" class="blob-num js-line-number" data-line-number="13399"></td>
        <td id="LC13399" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13400" class="blob-num js-line-number" data-line-number="13400"></td>
        <td id="LC13400" class="blob-code blob-code-inner js-file-line">              selected <span class="pl-k">=</span> modelValue <span class="pl-k">===</span> valueFn(scope, locals);</td>
      </tr>
      <tr>
        <td id="L13401" class="blob-num js-line-number" data-line-number="13401"></td>
        <td id="LC13401" class="blob-code blob-code-inner js-file-line">              selectedSet <span class="pl-k">=</span> selectedSet <span class="pl-k">||</span> selected; <span class="pl-c">// see if at least one item is selected</span></td>
      </tr>
      <tr>
        <td id="L13402" class="blob-num js-line-number" data-line-number="13402"></td>
        <td id="LC13402" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13403" class="blob-num js-line-number" data-line-number="13403"></td>
        <td id="LC13403" class="blob-code blob-code-inner js-file-line">            optionGroup.<span class="pl-c1">push</span>({</td>
      </tr>
      <tr>
        <td id="L13404" class="blob-num js-line-number" data-line-number="13404"></td>
        <td id="LC13404" class="blob-code blob-code-inner js-file-line">              id<span class="pl-k">:</span> keyName <span class="pl-k">?</span> keys[index] <span class="pl-k">:</span> index,   <span class="pl-c">// either the index into array or key from object</span></td>
      </tr>
      <tr>
        <td id="L13405" class="blob-num js-line-number" data-line-number="13405"></td>
        <td id="LC13405" class="blob-code blob-code-inner js-file-line">              label<span class="pl-k">:</span> displayFn(scope, locals) <span class="pl-k">||</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, <span class="pl-c">// what will be seen by the user</span></td>
      </tr>
      <tr>
        <td id="L13406" class="blob-num js-line-number" data-line-number="13406"></td>
        <td id="LC13406" class="blob-code blob-code-inner js-file-line">              selected<span class="pl-k">:</span> selected                   <span class="pl-c">// determine if we should be selected</span></td>
      </tr>
      <tr>
        <td id="L13407" class="blob-num js-line-number" data-line-number="13407"></td>
        <td id="LC13407" class="blob-code blob-code-inner js-file-line">            });</td>
      </tr>
      <tr>
        <td id="L13408" class="blob-num js-line-number" data-line-number="13408"></td>
        <td id="LC13408" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13409" class="blob-num js-line-number" data-line-number="13409"></td>
        <td id="LC13409" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">if</span> (<span class="pl-k">!</span>multiple <span class="pl-k">&amp;&amp;</span> <span class="pl-k">!</span>selectedSet) {</td>
      </tr>
      <tr>
        <td id="L13410" class="blob-num js-line-number" data-line-number="13410"></td>
        <td id="LC13410" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// nothing was selected, we have to insert the undefined item</span></td>
      </tr>
      <tr>
        <td id="L13411" class="blob-num js-line-number" data-line-number="13411"></td>
        <td id="LC13411" class="blob-code blob-code-inner js-file-line">            optionGroups[<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>].<span class="pl-c1">unshift</span>({id<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>?<span class="pl-pds">&#39;</span></span>, label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span>, selected<span class="pl-k">:</span><span class="pl-c1">true</span>});</td>
      </tr>
      <tr>
        <td id="L13412" class="blob-num js-line-number" data-line-number="13412"></td>
        <td id="LC13412" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13413" class="blob-num js-line-number" data-line-number="13413"></td>
        <td id="LC13413" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13414" class="blob-num js-line-number" data-line-number="13414"></td>
        <td id="LC13414" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// Now we need to update the list of DOM nodes to match the optionGroups we computed above</span></td>
      </tr>
      <tr>
        <td id="L13415" class="blob-num js-line-number" data-line-number="13415"></td>
        <td id="LC13415" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">for</span> (groupIndex <span class="pl-k">=</span> <span class="pl-c1">0</span>, groupLength <span class="pl-k">=</span> optionGroupNames.<span class="pl-c1">length</span>;</td>
      </tr>
      <tr>
        <td id="L13416" class="blob-num js-line-number" data-line-number="13416"></td>
        <td id="LC13416" class="blob-code blob-code-inner js-file-line">               groupIndex <span class="pl-k">&lt;</span> groupLength;</td>
      </tr>
      <tr>
        <td id="L13417" class="blob-num js-line-number" data-line-number="13417"></td>
        <td id="LC13417" class="blob-code blob-code-inner js-file-line">               groupIndex<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13418" class="blob-num js-line-number" data-line-number="13418"></td>
        <td id="LC13418" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// current option group name or &#39;&#39; if no group</span></td>
      </tr>
      <tr>
        <td id="L13419" class="blob-num js-line-number" data-line-number="13419"></td>
        <td id="LC13419" class="blob-code blob-code-inner js-file-line">            optionGroupName <span class="pl-k">=</span> optionGroupNames[groupIndex];</td>
      </tr>
      <tr>
        <td id="L13420" class="blob-num js-line-number" data-line-number="13420"></td>
        <td id="LC13420" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13421" class="blob-num js-line-number" data-line-number="13421"></td>
        <td id="LC13421" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// list of options for that group. (first item has the parent)</span></td>
      </tr>
      <tr>
        <td id="L13422" class="blob-num js-line-number" data-line-number="13422"></td>
        <td id="LC13422" class="blob-code blob-code-inner js-file-line">            optionGroup <span class="pl-k">=</span> optionGroups[optionGroupName];</td>
      </tr>
      <tr>
        <td id="L13423" class="blob-num js-line-number" data-line-number="13423"></td>
        <td id="LC13423" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13424" class="blob-num js-line-number" data-line-number="13424"></td>
        <td id="LC13424" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (optionGroupsCache.<span class="pl-c1">length</span> <span class="pl-k">&lt;=</span> groupIndex) {</td>
      </tr>
      <tr>
        <td id="L13425" class="blob-num js-line-number" data-line-number="13425"></td>
        <td id="LC13425" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// we need to grow the optionGroups</span></td>
      </tr>
      <tr>
        <td id="L13426" class="blob-num js-line-number" data-line-number="13426"></td>
        <td id="LC13426" class="blob-code blob-code-inner js-file-line">              existingParent <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L13427" class="blob-num js-line-number" data-line-number="13427"></td>
        <td id="LC13427" class="blob-code blob-code-inner js-file-line">                element<span class="pl-k">:</span> optGroupTemplate.clone().attr(<span class="pl-s"><span class="pl-pds">&#39;</span>label<span class="pl-pds">&#39;</span></span>, optionGroupName),</td>
      </tr>
      <tr>
        <td id="L13428" class="blob-num js-line-number" data-line-number="13428"></td>
        <td id="LC13428" class="blob-code blob-code-inner js-file-line">                label<span class="pl-k">:</span> optionGroup.<span class="pl-c1">label</span></td>
      </tr>
      <tr>
        <td id="L13429" class="blob-num js-line-number" data-line-number="13429"></td>
        <td id="LC13429" class="blob-code blob-code-inner js-file-line">              };</td>
      </tr>
      <tr>
        <td id="L13430" class="blob-num js-line-number" data-line-number="13430"></td>
        <td id="LC13430" class="blob-code blob-code-inner js-file-line">              existingOptions <span class="pl-k">=</span> [existingParent];</td>
      </tr>
      <tr>
        <td id="L13431" class="blob-num js-line-number" data-line-number="13431"></td>
        <td id="LC13431" class="blob-code blob-code-inner js-file-line">              optionGroupsCache.<span class="pl-c1">push</span>(existingOptions);</td>
      </tr>
      <tr>
        <td id="L13432" class="blob-num js-line-number" data-line-number="13432"></td>
        <td id="LC13432" class="blob-code blob-code-inner js-file-line">              selectElement.append(existingParent.element);</td>
      </tr>
      <tr>
        <td id="L13433" class="blob-num js-line-number" data-line-number="13433"></td>
        <td id="LC13433" class="blob-code blob-code-inner js-file-line">            } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13434" class="blob-num js-line-number" data-line-number="13434"></td>
        <td id="LC13434" class="blob-code blob-code-inner js-file-line">              existingOptions <span class="pl-k">=</span> optionGroupsCache[groupIndex];</td>
      </tr>
      <tr>
        <td id="L13435" class="blob-num js-line-number" data-line-number="13435"></td>
        <td id="LC13435" class="blob-code blob-code-inner js-file-line">              existingParent <span class="pl-k">=</span> existingOptions[<span class="pl-c1">0</span>];  <span class="pl-c">// either SELECT (no group) or OPTGROUP element</span></td>
      </tr>
      <tr>
        <td id="L13436" class="blob-num js-line-number" data-line-number="13436"></td>
        <td id="LC13436" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13437" class="blob-num js-line-number" data-line-number="13437"></td>
        <td id="LC13437" class="blob-code blob-code-inner js-file-line">              <span class="pl-c">// update the OPTGROUP label if not the same.</span></td>
      </tr>
      <tr>
        <td id="L13438" class="blob-num js-line-number" data-line-number="13438"></td>
        <td id="LC13438" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> (existingParent.<span class="pl-c1">label</span> <span class="pl-k">!=</span> optionGroupName) {</td>
      </tr>
      <tr>
        <td id="L13439" class="blob-num js-line-number" data-line-number="13439"></td>
        <td id="LC13439" class="blob-code blob-code-inner js-file-line">                existingParent.element.attr(<span class="pl-s"><span class="pl-pds">&#39;</span>label<span class="pl-pds">&#39;</span></span>, existingParent.<span class="pl-c1">label</span> <span class="pl-k">=</span> optionGroupName);</td>
      </tr>
      <tr>
        <td id="L13440" class="blob-num js-line-number" data-line-number="13440"></td>
        <td id="LC13440" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L13441" class="blob-num js-line-number" data-line-number="13441"></td>
        <td id="LC13441" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13442" class="blob-num js-line-number" data-line-number="13442"></td>
        <td id="LC13442" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13443" class="blob-num js-line-number" data-line-number="13443"></td>
        <td id="LC13443" class="blob-code blob-code-inner js-file-line">            lastElement <span class="pl-k">=</span> <span class="pl-c1">null</span>;  <span class="pl-c">// start at the beginning</span></td>
      </tr>
      <tr>
        <td id="L13444" class="blob-num js-line-number" data-line-number="13444"></td>
        <td id="LC13444" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">for</span>(index <span class="pl-k">=</span> <span class="pl-c1">0</span>, length <span class="pl-k">=</span> optionGroup.<span class="pl-c1">length</span>; index <span class="pl-k">&lt;</span> length; index<span class="pl-k">++</span>) {</td>
      </tr>
      <tr>
        <td id="L13445" class="blob-num js-line-number" data-line-number="13445"></td>
        <td id="LC13445" class="blob-code blob-code-inner js-file-line">              option <span class="pl-k">=</span> optionGroup[index];</td>
      </tr>
      <tr>
        <td id="L13446" class="blob-num js-line-number" data-line-number="13446"></td>
        <td id="LC13446" class="blob-code blob-code-inner js-file-line">              <span class="pl-k">if</span> ((existingOption <span class="pl-k">=</span> existingOptions[index<span class="pl-k">+</span><span class="pl-c1">1</span>])) {</td>
      </tr>
      <tr>
        <td id="L13447" class="blob-num js-line-number" data-line-number="13447"></td>
        <td id="LC13447" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// reuse elements</span></td>
      </tr>
      <tr>
        <td id="L13448" class="blob-num js-line-number" data-line-number="13448"></td>
        <td id="LC13448" class="blob-code blob-code-inner js-file-line">                lastElement <span class="pl-k">=</span> existingOption.element;</td>
      </tr>
      <tr>
        <td id="L13449" class="blob-num js-line-number" data-line-number="13449"></td>
        <td id="LC13449" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (existingOption.<span class="pl-c1">label</span> <span class="pl-k">!==</span> option.<span class="pl-c1">label</span>) {</td>
      </tr>
      <tr>
        <td id="L13450" class="blob-num js-line-number" data-line-number="13450"></td>
        <td id="LC13450" class="blob-code blob-code-inner js-file-line">                  lastElement.<span class="pl-c1">text</span>(existingOption.<span class="pl-c1">label</span> <span class="pl-k">=</span> option.<span class="pl-c1">label</span>);</td>
      </tr>
      <tr>
        <td id="L13451" class="blob-num js-line-number" data-line-number="13451"></td>
        <td id="LC13451" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13452" class="blob-num js-line-number" data-line-number="13452"></td>
        <td id="LC13452" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (existingOption.<span class="pl-c1">id</span> <span class="pl-k">!==</span> option.<span class="pl-c1">id</span>) {</td>
      </tr>
      <tr>
        <td id="L13453" class="blob-num js-line-number" data-line-number="13453"></td>
        <td id="LC13453" class="blob-code blob-code-inner js-file-line">                  lastElement.val(existingOption.<span class="pl-c1">id</span> <span class="pl-k">=</span> option.<span class="pl-c1">id</span>);</td>
      </tr>
      <tr>
        <td id="L13454" class="blob-num js-line-number" data-line-number="13454"></td>
        <td id="LC13454" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13455" class="blob-num js-line-number" data-line-number="13455"></td>
        <td id="LC13455" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (existingOption.element.<span class="pl-c1">selected</span> <span class="pl-k">!==</span> option.<span class="pl-c1">selected</span>) {</td>
      </tr>
      <tr>
        <td id="L13456" class="blob-num js-line-number" data-line-number="13456"></td>
        <td id="LC13456" class="blob-code blob-code-inner js-file-line">                  lastElement.prop(<span class="pl-s"><span class="pl-pds">&#39;</span>selected<span class="pl-pds">&#39;</span></span>, (existingOption.<span class="pl-c1">selected</span> <span class="pl-k">=</span> option.<span class="pl-c1">selected</span>));</td>
      </tr>
      <tr>
        <td id="L13457" class="blob-num js-line-number" data-line-number="13457"></td>
        <td id="LC13457" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13458" class="blob-num js-line-number" data-line-number="13458"></td>
        <td id="LC13458" class="blob-code blob-code-inner js-file-line">              } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13459" class="blob-num js-line-number" data-line-number="13459"></td>
        <td id="LC13459" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// grow elements</span></td>
      </tr>
      <tr>
        <td id="L13460" class="blob-num js-line-number" data-line-number="13460"></td>
        <td id="LC13460" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13461" class="blob-num js-line-number" data-line-number="13461"></td>
        <td id="LC13461" class="blob-code blob-code-inner js-file-line">                <span class="pl-c">// if it&#39;s a null option</span></td>
      </tr>
      <tr>
        <td id="L13462" class="blob-num js-line-number" data-line-number="13462"></td>
        <td id="LC13462" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (option.<span class="pl-c1">id</span> <span class="pl-k">===</span> <span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-pds">&#39;</span></span> <span class="pl-k">&amp;&amp;</span> nullOption) {</td>
      </tr>
      <tr>
        <td id="L13463" class="blob-num js-line-number" data-line-number="13463"></td>
        <td id="LC13463" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// put back the pre-compiled element</span></td>
      </tr>
      <tr>
        <td id="L13464" class="blob-num js-line-number" data-line-number="13464"></td>
        <td id="LC13464" class="blob-code blob-code-inner js-file-line">                  element <span class="pl-k">=</span> nullOption;</td>
      </tr>
      <tr>
        <td id="L13465" class="blob-num js-line-number" data-line-number="13465"></td>
        <td id="LC13465" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13466" class="blob-num js-line-number" data-line-number="13466"></td>
        <td id="LC13466" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// jQuery(v1.4.2) Bug: We should be able to chain the method calls, but</span></td>
      </tr>
      <tr>
        <td id="L13467" class="blob-num js-line-number" data-line-number="13467"></td>
        <td id="LC13467" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// in this version of jQuery on some browser the .text() returns a string</span></td>
      </tr>
      <tr>
        <td id="L13468" class="blob-num js-line-number" data-line-number="13468"></td>
        <td id="LC13468" class="blob-code blob-code-inner js-file-line">                  <span class="pl-c">// rather then the element.</span></td>
      </tr>
      <tr>
        <td id="L13469" class="blob-num js-line-number" data-line-number="13469"></td>
        <td id="LC13469" class="blob-code blob-code-inner js-file-line">                  (element <span class="pl-k">=</span> optionTemplate.clone())</td>
      </tr>
      <tr>
        <td id="L13470" class="blob-num js-line-number" data-line-number="13470"></td>
        <td id="LC13470" class="blob-code blob-code-inner js-file-line">                      .val(option.<span class="pl-c1">id</span>)</td>
      </tr>
      <tr>
        <td id="L13471" class="blob-num js-line-number" data-line-number="13471"></td>
        <td id="LC13471" class="blob-code blob-code-inner js-file-line">                      .attr(<span class="pl-s"><span class="pl-pds">&#39;</span>selected<span class="pl-pds">&#39;</span></span>, option.<span class="pl-c1">selected</span>)</td>
      </tr>
      <tr>
        <td id="L13472" class="blob-num js-line-number" data-line-number="13472"></td>
        <td id="LC13472" class="blob-code blob-code-inner js-file-line">                      .<span class="pl-c1">text</span>(option.<span class="pl-c1">label</span>);</td>
      </tr>
      <tr>
        <td id="L13473" class="blob-num js-line-number" data-line-number="13473"></td>
        <td id="LC13473" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13474" class="blob-num js-line-number" data-line-number="13474"></td>
        <td id="LC13474" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13475" class="blob-num js-line-number" data-line-number="13475"></td>
        <td id="LC13475" class="blob-code blob-code-inner js-file-line">                existingOptions.<span class="pl-c1">push</span>(existingOption <span class="pl-k">=</span> {</td>
      </tr>
      <tr>
        <td id="L13476" class="blob-num js-line-number" data-line-number="13476"></td>
        <td id="LC13476" class="blob-code blob-code-inner js-file-line">                    element<span class="pl-k">:</span> element,</td>
      </tr>
      <tr>
        <td id="L13477" class="blob-num js-line-number" data-line-number="13477"></td>
        <td id="LC13477" class="blob-code blob-code-inner js-file-line">                    label<span class="pl-k">:</span> option.<span class="pl-c1">label</span>,</td>
      </tr>
      <tr>
        <td id="L13478" class="blob-num js-line-number" data-line-number="13478"></td>
        <td id="LC13478" class="blob-code blob-code-inner js-file-line">                    id<span class="pl-k">:</span> option.<span class="pl-c1">id</span>,</td>
      </tr>
      <tr>
        <td id="L13479" class="blob-num js-line-number" data-line-number="13479"></td>
        <td id="LC13479" class="blob-code blob-code-inner js-file-line">                    selected<span class="pl-k">:</span> option.<span class="pl-c1">selected</span></td>
      </tr>
      <tr>
        <td id="L13480" class="blob-num js-line-number" data-line-number="13480"></td>
        <td id="LC13480" class="blob-code blob-code-inner js-file-line">                });</td>
      </tr>
      <tr>
        <td id="L13481" class="blob-num js-line-number" data-line-number="13481"></td>
        <td id="LC13481" class="blob-code blob-code-inner js-file-line">                <span class="pl-k">if</span> (lastElement) {</td>
      </tr>
      <tr>
        <td id="L13482" class="blob-num js-line-number" data-line-number="13482"></td>
        <td id="LC13482" class="blob-code blob-code-inner js-file-line">                  lastElement.after(element);</td>
      </tr>
      <tr>
        <td id="L13483" class="blob-num js-line-number" data-line-number="13483"></td>
        <td id="LC13483" class="blob-code blob-code-inner js-file-line">                } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13484" class="blob-num js-line-number" data-line-number="13484"></td>
        <td id="LC13484" class="blob-code blob-code-inner js-file-line">                  existingParent.element.append(element);</td>
      </tr>
      <tr>
        <td id="L13485" class="blob-num js-line-number" data-line-number="13485"></td>
        <td id="LC13485" class="blob-code blob-code-inner js-file-line">                }</td>
      </tr>
      <tr>
        <td id="L13486" class="blob-num js-line-number" data-line-number="13486"></td>
        <td id="LC13486" class="blob-code blob-code-inner js-file-line">                lastElement <span class="pl-k">=</span> element;</td>
      </tr>
      <tr>
        <td id="L13487" class="blob-num js-line-number" data-line-number="13487"></td>
        <td id="LC13487" class="blob-code blob-code-inner js-file-line">              }</td>
      </tr>
      <tr>
        <td id="L13488" class="blob-num js-line-number" data-line-number="13488"></td>
        <td id="LC13488" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13489" class="blob-num js-line-number" data-line-number="13489"></td>
        <td id="LC13489" class="blob-code blob-code-inner js-file-line">            <span class="pl-c">// remove any excessive OPTIONs in a group</span></td>
      </tr>
      <tr>
        <td id="L13490" class="blob-num js-line-number" data-line-number="13490"></td>
        <td id="LC13490" class="blob-code blob-code-inner js-file-line">            index<span class="pl-k">++</span>; <span class="pl-c">// increment since the existingOptions[0] is parent element not OPTION</span></td>
      </tr>
      <tr>
        <td id="L13491" class="blob-num js-line-number" data-line-number="13491"></td>
        <td id="LC13491" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">while</span>(existingOptions.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> index) {</td>
      </tr>
      <tr>
        <td id="L13492" class="blob-num js-line-number" data-line-number="13492"></td>
        <td id="LC13492" class="blob-code blob-code-inner js-file-line">              existingOptions.<span class="pl-c1">pop</span>().element.remove();</td>
      </tr>
      <tr>
        <td id="L13493" class="blob-num js-line-number" data-line-number="13493"></td>
        <td id="LC13493" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L13494" class="blob-num js-line-number" data-line-number="13494"></td>
        <td id="LC13494" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13495" class="blob-num js-line-number" data-line-number="13495"></td>
        <td id="LC13495" class="blob-code blob-code-inner js-file-line">          <span class="pl-c">// remove any excessive OPTGROUPs from select</span></td>
      </tr>
      <tr>
        <td id="L13496" class="blob-num js-line-number" data-line-number="13496"></td>
        <td id="LC13496" class="blob-code blob-code-inner js-file-line">          <span class="pl-k">while</span>(optionGroupsCache.<span class="pl-c1">length</span> <span class="pl-k">&gt;</span> groupIndex) {</td>
      </tr>
      <tr>
        <td id="L13497" class="blob-num js-line-number" data-line-number="13497"></td>
        <td id="LC13497" class="blob-code blob-code-inner js-file-line">            optionGroupsCache.<span class="pl-c1">pop</span>()[<span class="pl-c1">0</span>].element.remove();</td>
      </tr>
      <tr>
        <td id="L13498" class="blob-num js-line-number" data-line-number="13498"></td>
        <td id="LC13498" class="blob-code blob-code-inner js-file-line">          }</td>
      </tr>
      <tr>
        <td id="L13499" class="blob-num js-line-number" data-line-number="13499"></td>
        <td id="LC13499" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13500" class="blob-num js-line-number" data-line-number="13500"></td>
        <td id="LC13500" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13501" class="blob-num js-line-number" data-line-number="13501"></td>
        <td id="LC13501" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L13502" class="blob-num js-line-number" data-line-number="13502"></td>
        <td id="LC13502" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L13503" class="blob-num js-line-number" data-line-number="13503"></td>
        <td id="LC13503" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L13504" class="blob-num js-line-number" data-line-number="13504"></td>
        <td id="LC13504" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13505" class="blob-num js-line-number" data-line-number="13505"></td>
        <td id="LC13505" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> optionDirective <span class="pl-k">=</span> [<span class="pl-s"><span class="pl-pds">&#39;</span>$interpolate<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>(<span class="pl-smi">$interpolate</span>) {</td>
      </tr>
      <tr>
        <td id="L13506" class="blob-num js-line-number" data-line-number="13506"></td>
        <td id="LC13506" class="blob-code blob-code-inner js-file-line">  <span class="pl-k">return</span> {</td>
      </tr>
      <tr>
        <td id="L13507" class="blob-num js-line-number" data-line-number="13507"></td>
        <td id="LC13507" class="blob-code blob-code-inner js-file-line">    restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L13508" class="blob-num js-line-number" data-line-number="13508"></td>
        <td id="LC13508" class="blob-code blob-code-inner js-file-line">    priority<span class="pl-k">:</span> <span class="pl-c1">100</span>,</td>
      </tr>
      <tr>
        <td id="L13509" class="blob-num js-line-number" data-line-number="13509"></td>
        <td id="LC13509" class="blob-code blob-code-inner js-file-line">    require<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>^select<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L13510" class="blob-num js-line-number" data-line-number="13510"></td>
        <td id="LC13510" class="blob-code blob-code-inner js-file-line">    <span class="pl-en">compile</span><span class="pl-k">:</span> <span class="pl-k">function</span>(<span class="pl-smi">element</span>, <span class="pl-smi">attr</span>) {</td>
      </tr>
      <tr>
        <td id="L13511" class="blob-num js-line-number" data-line-number="13511"></td>
        <td id="LC13511" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">if</span> (isUndefined(attr.<span class="pl-c1">value</span>)) {</td>
      </tr>
      <tr>
        <td id="L13512" class="blob-num js-line-number" data-line-number="13512"></td>
        <td id="LC13512" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> interpolateFn <span class="pl-k">=</span> $interpolate(element.<span class="pl-c1">text</span>(), <span class="pl-c1">true</span>);</td>
      </tr>
      <tr>
        <td id="L13513" class="blob-num js-line-number" data-line-number="13513"></td>
        <td id="LC13513" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (<span class="pl-k">!</span>interpolateFn) {</td>
      </tr>
      <tr>
        <td id="L13514" class="blob-num js-line-number" data-line-number="13514"></td>
        <td id="LC13514" class="blob-code blob-code-inner js-file-line">          attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>, element.<span class="pl-c1">text</span>());</td>
      </tr>
      <tr>
        <td id="L13515" class="blob-num js-line-number" data-line-number="13515"></td>
        <td id="LC13515" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13516" class="blob-num js-line-number" data-line-number="13516"></td>
        <td id="LC13516" class="blob-code blob-code-inner js-file-line">      }</td>
      </tr>
      <tr>
        <td id="L13517" class="blob-num js-line-number" data-line-number="13517"></td>
        <td id="LC13517" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13518" class="blob-num js-line-number" data-line-number="13518"></td>
        <td id="LC13518" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// For some reason Opera defaults to true and if not overridden this messes up the repeater.</span></td>
      </tr>
      <tr>
        <td id="L13519" class="blob-num js-line-number" data-line-number="13519"></td>
        <td id="LC13519" class="blob-code blob-code-inner js-file-line">      <span class="pl-c">// We don&#39;t want the view to drive the initialization of the model anyway.</span></td>
      </tr>
      <tr>
        <td id="L13520" class="blob-num js-line-number" data-line-number="13520"></td>
        <td id="LC13520" class="blob-code blob-code-inner js-file-line">      element.prop(<span class="pl-s"><span class="pl-pds">&#39;</span>selected<span class="pl-pds">&#39;</span></span>, <span class="pl-c1">false</span>);</td>
      </tr>
      <tr>
        <td id="L13521" class="blob-num js-line-number" data-line-number="13521"></td>
        <td id="LC13521" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13522" class="blob-num js-line-number" data-line-number="13522"></td>
        <td id="LC13522" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> <span class="pl-k">function</span> (<span class="pl-smi">scope</span>, <span class="pl-smi">element</span>, <span class="pl-smi">attr</span>, <span class="pl-smi">selectCtrl</span>) {</td>
      </tr>
      <tr>
        <td id="L13523" class="blob-num js-line-number" data-line-number="13523"></td>
        <td id="LC13523" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">if</span> (interpolateFn) {</td>
      </tr>
      <tr>
        <td id="L13524" class="blob-num js-line-number" data-line-number="13524"></td>
        <td id="LC13524" class="blob-code blob-code-inner js-file-line">          scope.$<span class="pl-c1">watch</span>(interpolateFn, <span class="pl-k">function</span>(<span class="pl-smi">newVal</span>, <span class="pl-smi">oldVal</span>) {</td>
      </tr>
      <tr>
        <td id="L13525" class="blob-num js-line-number" data-line-number="13525"></td>
        <td id="LC13525" class="blob-code blob-code-inner js-file-line">            attr.$set(<span class="pl-s"><span class="pl-pds">&#39;</span>value<span class="pl-pds">&#39;</span></span>, newVal);</td>
      </tr>
      <tr>
        <td id="L13526" class="blob-num js-line-number" data-line-number="13526"></td>
        <td id="LC13526" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (newVal <span class="pl-k">!==</span> oldVal) selectCtrl.removeOption(oldVal);</td>
      </tr>
      <tr>
        <td id="L13527" class="blob-num js-line-number" data-line-number="13527"></td>
        <td id="LC13527" class="blob-code blob-code-inner js-file-line">            selectCtrl.addOption(newVal);</td>
      </tr>
      <tr>
        <td id="L13528" class="blob-num js-line-number" data-line-number="13528"></td>
        <td id="LC13528" class="blob-code blob-code-inner js-file-line">          });</td>
      </tr>
      <tr>
        <td id="L13529" class="blob-num js-line-number" data-line-number="13529"></td>
        <td id="LC13529" class="blob-code blob-code-inner js-file-line">        } <span class="pl-k">else</span> {</td>
      </tr>
      <tr>
        <td id="L13530" class="blob-num js-line-number" data-line-number="13530"></td>
        <td id="LC13530" class="blob-code blob-code-inner js-file-line">          selectCtrl.addOption(attr.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L13531" class="blob-num js-line-number" data-line-number="13531"></td>
        <td id="LC13531" class="blob-code blob-code-inner js-file-line">        }</td>
      </tr>
      <tr>
        <td id="L13532" class="blob-num js-line-number" data-line-number="13532"></td>
        <td id="LC13532" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13533" class="blob-num js-line-number" data-line-number="13533"></td>
        <td id="LC13533" class="blob-code blob-code-inner js-file-line">        element.bind(<span class="pl-s"><span class="pl-pds">&#39;</span>$destroy<span class="pl-pds">&#39;</span></span>, <span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13534" class="blob-num js-line-number" data-line-number="13534"></td>
        <td id="LC13534" class="blob-code blob-code-inner js-file-line">          selectCtrl.removeOption(attr.<span class="pl-c1">value</span>);</td>
      </tr>
      <tr>
        <td id="L13535" class="blob-num js-line-number" data-line-number="13535"></td>
        <td id="LC13535" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L13536" class="blob-num js-line-number" data-line-number="13536"></td>
        <td id="LC13536" class="blob-code blob-code-inner js-file-line">      };</td>
      </tr>
      <tr>
        <td id="L13537" class="blob-num js-line-number" data-line-number="13537"></td>
        <td id="LC13537" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L13538" class="blob-num js-line-number" data-line-number="13538"></td>
        <td id="LC13538" class="blob-code blob-code-inner js-file-line">  }</td>
      </tr>
      <tr>
        <td id="L13539" class="blob-num js-line-number" data-line-number="13539"></td>
        <td id="LC13539" class="blob-code blob-code-inner js-file-line">}];</td>
      </tr>
      <tr>
        <td id="L13540" class="blob-num js-line-number" data-line-number="13540"></td>
        <td id="LC13540" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13541" class="blob-num js-line-number" data-line-number="13541"></td>
        <td id="LC13541" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> styleDirective <span class="pl-k">=</span> valueFn({</td>
      </tr>
      <tr>
        <td id="L13542" class="blob-num js-line-number" data-line-number="13542"></td>
        <td id="LC13542" class="blob-code blob-code-inner js-file-line">  restrict<span class="pl-k">:</span> <span class="pl-s"><span class="pl-pds">&#39;</span>E<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L13543" class="blob-num js-line-number" data-line-number="13543"></td>
        <td id="LC13543" class="blob-code blob-code-inner js-file-line">  terminal<span class="pl-k">:</span> <span class="pl-c1">true</span></td>
      </tr>
      <tr>
        <td id="L13544" class="blob-num js-line-number" data-line-number="13544"></td>
        <td id="LC13544" class="blob-code blob-code-inner js-file-line">});</td>
      </tr>
      <tr>
        <td id="L13545" class="blob-num js-line-number" data-line-number="13545"></td>
        <td id="LC13545" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//try to bind to jquery now so that one can write angular.element().read()</span></td>
      </tr>
      <tr>
        <td id="L13546" class="blob-num js-line-number" data-line-number="13546"></td>
        <td id="LC13546" class="blob-code blob-code-inner js-file-line">  <span class="pl-c">//but we will rebind on bootstrap again.</span></td>
      </tr>
      <tr>
        <td id="L13547" class="blob-num js-line-number" data-line-number="13547"></td>
        <td id="LC13547" class="blob-code blob-code-inner js-file-line">  bindJQuery();</td>
      </tr>
      <tr>
        <td id="L13548" class="blob-num js-line-number" data-line-number="13548"></td>
        <td id="LC13548" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13549" class="blob-num js-line-number" data-line-number="13549"></td>
        <td id="LC13549" class="blob-code blob-code-inner js-file-line">  publishExternalAPI(angular);</td>
      </tr>
      <tr>
        <td id="L13550" class="blob-num js-line-number" data-line-number="13550"></td>
        <td id="LC13550" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13551" class="blob-num js-line-number" data-line-number="13551"></td>
        <td id="LC13551" class="blob-code blob-code-inner js-file-line">  jqLite(<span class="pl-c1">document</span>).ready(<span class="pl-k">function</span>() {</td>
      </tr>
      <tr>
        <td id="L13552" class="blob-num js-line-number" data-line-number="13552"></td>
        <td id="LC13552" class="blob-code blob-code-inner js-file-line">    angularInit(<span class="pl-c1">document</span>, bootstrap);</td>
      </tr>
      <tr>
        <td id="L13553" class="blob-num js-line-number" data-line-number="13553"></td>
        <td id="LC13553" class="blob-code blob-code-inner js-file-line">  });</td>
      </tr>
      <tr>
        <td id="L13554" class="blob-num js-line-number" data-line-number="13554"></td>
        <td id="LC13554" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13555" class="blob-num js-line-number" data-line-number="13555"></td>
        <td id="LC13555" class="blob-code blob-code-inner js-file-line">})(<span class="pl-c1">window</span>, <span class="pl-c1">document</span>);</td>
      </tr>
      <tr>
        <td id="L13556" class="blob-num js-line-number" data-line-number="13556"></td>
        <td id="LC13556" class="blob-code blob-code-inner js-file-line">angular.element(<span class="pl-c1">document</span>).<span class="pl-c1">find</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>head<span class="pl-pds">&#39;</span></span>).append(<span class="pl-s"><span class="pl-pds">&#39;</span>&lt;style type=&quot;text/css&quot;&gt;@charset &quot;UTF-8&quot;;[ng<span class="pl-cce">\\</span>:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak{display:none;}ng<span class="pl-cce">\\</span>:form{display:block;}&lt;/style&gt;<span class="pl-pds">&#39;</span></span>);</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.38214s from github-fe127-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
    </ul>
  </div>
</div>


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    
    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-3241a40a58a82e21daef3dd3cdca01bde189158793c1b6f9193fff2b5293cd1d.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github/index-d3ef45e52a74e2511c31a0051d5dfd10b60b12a8b8a738ead962c35e11dbcc1f.js"></script>
      
      
  </body>
</html>

